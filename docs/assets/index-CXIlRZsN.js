(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function t(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerPolicy&&(o.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?o.credentials="include":r.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=t(r);fetch(r.href,o)}})();/**
* @vue/shared v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function makeMap(n){const e=Object.create(null);for(const t of n.split(","))e[t]=1;return t=>t in e}const EMPTY_OBJ={},EMPTY_ARR=[],NOOP=()=>{},NO=()=>!1,isOn=n=>n.charCodeAt(0)===111&&n.charCodeAt(1)===110&&(n.charCodeAt(2)>122||n.charCodeAt(2)<97),isModelListener=n=>n.startsWith("onUpdate:"),extend=Object.assign,remove=(n,e)=>{const t=n.indexOf(e);t>-1&&n.splice(t,1)},hasOwnProperty$1=Object.prototype.hasOwnProperty,hasOwn=(n,e)=>hasOwnProperty$1.call(n,e),isArray=Array.isArray,isMap=n=>toTypeString(n)==="[object Map]",isSet=n=>toTypeString(n)==="[object Set]",isFunction$1=n=>typeof n=="function",isString$1=n=>typeof n=="string",isSymbol=n=>typeof n=="symbol",isObject=n=>n!==null&&typeof n=="object",isPromise$1=n=>(isObject(n)||isFunction$1(n))&&isFunction$1(n.then)&&isFunction$1(n.catch),objectToString=Object.prototype.toString,toTypeString=n=>objectToString.call(n),toRawType=n=>toTypeString(n).slice(8,-1),isPlainObject=n=>toTypeString(n)==="[object Object]",isIntegerKey=n=>isString$1(n)&&n!=="NaN"&&n[0]!=="-"&&""+parseInt(n,10)===n,isReservedProp=makeMap(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),cacheStringFunction=n=>{const e=Object.create(null);return t=>e[t]||(e[t]=n(t))},camelizeRE=/-(\w)/g,camelize=cacheStringFunction(n=>n.replace(camelizeRE,(e,t)=>t?t.toUpperCase():"")),hyphenateRE=/\B([A-Z])/g,hyphenate=cacheStringFunction(n=>n.replace(hyphenateRE,"-$1").toLowerCase()),capitalize=cacheStringFunction(n=>n.charAt(0).toUpperCase()+n.slice(1)),toHandlerKey=cacheStringFunction(n=>n?`on${capitalize(n)}`:""),hasChanged=(n,e)=>!Object.is(n,e),invokeArrayFns=(n,...e)=>{for(let t=0;t<n.length;t++)n[t](...e)},def=(n,e,t,s=!1)=>{Object.defineProperty(n,e,{configurable:!0,enumerable:!1,writable:s,value:t})},looseToNumber=n=>{const e=parseFloat(n);return isNaN(e)?n:e};let _globalThis;const getGlobalThis=()=>_globalThis||(_globalThis=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function normalizeStyle(n){if(isArray(n)){const e={};for(let t=0;t<n.length;t++){const s=n[t],r=isString$1(s)?parseStringStyle(s):normalizeStyle(s);if(r)for(const o in r)e[o]=r[o]}return e}else if(isString$1(n)||isObject(n))return n}const listDelimiterRE=/;(?![^(]*\))/g,propertyDelimiterRE=/:([^]+)/,styleCommentRE=/\/\*[^]*?\*\//g;function parseStringStyle(n){const e={};return n.replace(styleCommentRE,"").split(listDelimiterRE).forEach(t=>{if(t){const s=t.split(propertyDelimiterRE);s.length>1&&(e[s[0].trim()]=s[1].trim())}}),e}function normalizeClass(n){let e="";if(isString$1(n))e=n;else if(isArray(n))for(let t=0;t<n.length;t++){const s=normalizeClass(n[t]);s&&(e+=s+" ")}else if(isObject(n))for(const t in n)n[t]&&(e+=t+" ");return e.trim()}const specialBooleanAttrs="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",isSpecialBooleanAttr=makeMap(specialBooleanAttrs);function includeBooleanAttr(n){return!!n||n===""}const isRef$1=n=>!!(n&&n.__v_isRef===!0),toDisplayString=n=>isString$1(n)?n:n==null?"":isArray(n)||isObject(n)&&(n.toString===objectToString||!isFunction$1(n.toString))?isRef$1(n)?toDisplayString(n.value):JSON.stringify(n,replacer,2):String(n),replacer=(n,e)=>isRef$1(e)?replacer(n,e.value):isMap(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((t,[s,r],o)=>(t[stringifySymbol(s,o)+" =>"]=r,t),{})}:isSet(e)?{[`Set(${e.size})`]:[...e.values()].map(t=>stringifySymbol(t))}:isSymbol(e)?stringifySymbol(e):isObject(e)&&!isArray(e)&&!isPlainObject(e)?String(e):e,stringifySymbol=(n,e="")=>{var t;return isSymbol(n)?`Symbol(${(t=n.description)!=null?t:e})`:n};/**
* @vue/reactivity v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let activeEffectScope;class EffectScope{constructor(e=!1){this.detached=e,this._active=!0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=activeEffectScope,!e&&activeEffectScope&&(this.index=(activeEffectScope.scopes||(activeEffectScope.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].pause();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].resume();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].resume()}}run(e){if(this._active){const t=activeEffectScope;try{return activeEffectScope=this,e()}finally{activeEffectScope=t}}}on(){activeEffectScope=this}off(){activeEffectScope=this.parent}stop(e){if(this._active){this._active=!1;let t,s;for(t=0,s=this.effects.length;t<s;t++)this.effects[t].stop();for(this.effects.length=0,t=0,s=this.cleanups.length;t<s;t++)this.cleanups[t]();if(this.cleanups.length=0,this.scopes){for(t=0,s=this.scopes.length;t<s;t++)this.scopes[t].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!e){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0}}}function getCurrentScope(){return activeEffectScope}let activeSub;const pausedQueueEffects=new WeakSet;class ReactiveEffect{constructor(e){this.fn=e,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,activeEffectScope&&activeEffectScope.active&&activeEffectScope.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,pausedQueueEffects.has(this)&&(pausedQueueEffects.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||batch(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,cleanupEffect(this),prepareDeps(this);const e=activeSub,t=shouldTrack;activeSub=this,shouldTrack=!0;try{return this.fn()}finally{cleanupDeps(this),activeSub=e,shouldTrack=t,this.flags&=-3}}stop(){if(this.flags&1){for(let e=this.deps;e;e=e.nextDep)removeSub(e);this.deps=this.depsTail=void 0,cleanupEffect(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?pausedQueueEffects.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){isDirty(this)&&this.run()}get dirty(){return isDirty(this)}}let batchDepth=0,batchedSub,batchedComputed;function batch(n,e=!1){if(n.flags|=8,e){n.next=batchedComputed,batchedComputed=n;return}n.next=batchedSub,batchedSub=n}function startBatch(){batchDepth++}function endBatch(){if(--batchDepth>0)return;if(batchedComputed){let e=batchedComputed;for(batchedComputed=void 0;e;){const t=e.next;e.next=void 0,e.flags&=-9,e=t}}let n;for(;batchedSub;){let e=batchedSub;for(batchedSub=void 0;e;){const t=e.next;if(e.next=void 0,e.flags&=-9,e.flags&1)try{e.trigger()}catch(s){n||(n=s)}e=t}}if(n)throw n}function prepareDeps(n){for(let e=n.deps;e;e=e.nextDep)e.version=-1,e.prevActiveLink=e.dep.activeLink,e.dep.activeLink=e}function cleanupDeps(n){let e,t=n.depsTail,s=t;for(;s;){const r=s.prevDep;s.version===-1?(s===t&&(t=r),removeSub(s),removeDep(s)):e=s,s.dep.activeLink=s.prevActiveLink,s.prevActiveLink=void 0,s=r}n.deps=e,n.depsTail=t}function isDirty(n){for(let e=n.deps;e;e=e.nextDep)if(e.dep.version!==e.version||e.dep.computed&&(refreshComputed(e.dep.computed)||e.dep.version!==e.version))return!0;return!!n._dirty}function refreshComputed(n){if(n.flags&4&&!(n.flags&16)||(n.flags&=-17,n.globalVersion===globalVersion))return;n.globalVersion=globalVersion;const e=n.dep;if(n.flags|=2,e.version>0&&!n.isSSR&&n.deps&&!isDirty(n)){n.flags&=-3;return}const t=activeSub,s=shouldTrack;activeSub=n,shouldTrack=!0;try{prepareDeps(n);const r=n.fn(n._value);(e.version===0||hasChanged(r,n._value))&&(n._value=r,e.version++)}catch(r){throw e.version++,r}finally{activeSub=t,shouldTrack=s,cleanupDeps(n),n.flags&=-3}}function removeSub(n,e=!1){const{dep:t,prevSub:s,nextSub:r}=n;if(s&&(s.nextSub=r,n.prevSub=void 0),r&&(r.prevSub=s,n.nextSub=void 0),t.subs===n&&(t.subs=s,!s&&t.computed)){t.computed.flags&=-5;for(let o=t.computed.deps;o;o=o.nextDep)removeSub(o,!0)}!e&&!--t.sc&&t.map&&t.map.delete(t.key)}function removeDep(n){const{prevDep:e,nextDep:t}=n;e&&(e.nextDep=t,n.prevDep=void 0),t&&(t.prevDep=e,n.nextDep=void 0)}let shouldTrack=!0;const trackStack=[];function pauseTracking(){trackStack.push(shouldTrack),shouldTrack=!1}function resetTracking(){const n=trackStack.pop();shouldTrack=n===void 0?!0:n}function cleanupEffect(n){const{cleanup:e}=n;if(n.cleanup=void 0,e){const t=activeSub;activeSub=void 0;try{e()}finally{activeSub=t}}}let globalVersion=0;class Link{constructor(e,t){this.sub=e,this.dep=t,this.version=t.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class Dep{constructor(e){this.computed=e,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0}track(e){if(!activeSub||!shouldTrack||activeSub===this.computed)return;let t=this.activeLink;if(t===void 0||t.sub!==activeSub)t=this.activeLink=new Link(activeSub,this),activeSub.deps?(t.prevDep=activeSub.depsTail,activeSub.depsTail.nextDep=t,activeSub.depsTail=t):activeSub.deps=activeSub.depsTail=t,addSub(t);else if(t.version===-1&&(t.version=this.version,t.nextDep)){const s=t.nextDep;s.prevDep=t.prevDep,t.prevDep&&(t.prevDep.nextDep=s),t.prevDep=activeSub.depsTail,t.nextDep=void 0,activeSub.depsTail.nextDep=t,activeSub.depsTail=t,activeSub.deps===t&&(activeSub.deps=s)}return t}trigger(e){this.version++,globalVersion++,this.notify(e)}notify(e){startBatch();try{for(let t=this.subs;t;t=t.prevSub)t.sub.notify()&&t.sub.dep.notify()}finally{endBatch()}}}function addSub(n){if(n.dep.sc++,n.sub.flags&4){const e=n.dep.computed;if(e&&!n.dep.subs){e.flags|=20;for(let s=e.deps;s;s=s.nextDep)addSub(s)}const t=n.dep.subs;t!==n&&(n.prevSub=t,t&&(t.nextSub=n)),n.dep.subs=n}}const targetMap=new WeakMap,ITERATE_KEY=Symbol(""),MAP_KEY_ITERATE_KEY=Symbol(""),ARRAY_ITERATE_KEY=Symbol("");function track(n,e,t){if(shouldTrack&&activeSub){let s=targetMap.get(n);s||targetMap.set(n,s=new Map);let r=s.get(t);r||(s.set(t,r=new Dep),r.map=s,r.key=t),r.track()}}function trigger(n,e,t,s,r,o){const i=targetMap.get(n);if(!i){globalVersion++;return}const c=a=>{a&&a.trigger()};if(startBatch(),e==="clear")i.forEach(c);else{const a=isArray(n),l=a&&isIntegerKey(t);if(a&&t==="length"){const d=Number(s);i.forEach((f,y)=>{(y==="length"||y===ARRAY_ITERATE_KEY||!isSymbol(y)&&y>=d)&&c(f)})}else switch((t!==void 0||i.has(void 0))&&c(i.get(t)),l&&c(i.get(ARRAY_ITERATE_KEY)),e){case"add":a?l&&c(i.get("length")):(c(i.get(ITERATE_KEY)),isMap(n)&&c(i.get(MAP_KEY_ITERATE_KEY)));break;case"delete":a||(c(i.get(ITERATE_KEY)),isMap(n)&&c(i.get(MAP_KEY_ITERATE_KEY)));break;case"set":isMap(n)&&c(i.get(ITERATE_KEY));break}}endBatch()}function reactiveReadArray(n){const e=toRaw(n);return e===n?e:(track(e,"iterate",ARRAY_ITERATE_KEY),isShallow(n)?e:e.map(toReactive))}function shallowReadArray(n){return track(n=toRaw(n),"iterate",ARRAY_ITERATE_KEY),n}const arrayInstrumentations={__proto__:null,[Symbol.iterator](){return iterator(this,Symbol.iterator,toReactive)},concat(...n){return reactiveReadArray(this).concat(...n.map(e=>isArray(e)?reactiveReadArray(e):e))},entries(){return iterator(this,"entries",n=>(n[1]=toReactive(n[1]),n))},every(n,e){return apply(this,"every",n,e,void 0,arguments)},filter(n,e){return apply(this,"filter",n,e,t=>t.map(toReactive),arguments)},find(n,e){return apply(this,"find",n,e,toReactive,arguments)},findIndex(n,e){return apply(this,"findIndex",n,e,void 0,arguments)},findLast(n,e){return apply(this,"findLast",n,e,toReactive,arguments)},findLastIndex(n,e){return apply(this,"findLastIndex",n,e,void 0,arguments)},forEach(n,e){return apply(this,"forEach",n,e,void 0,arguments)},includes(...n){return searchProxy(this,"includes",n)},indexOf(...n){return searchProxy(this,"indexOf",n)},join(n){return reactiveReadArray(this).join(n)},lastIndexOf(...n){return searchProxy(this,"lastIndexOf",n)},map(n,e){return apply(this,"map",n,e,void 0,arguments)},pop(){return noTracking(this,"pop")},push(...n){return noTracking(this,"push",n)},reduce(n,...e){return reduce$1(this,"reduce",n,e)},reduceRight(n,...e){return reduce$1(this,"reduceRight",n,e)},shift(){return noTracking(this,"shift")},some(n,e){return apply(this,"some",n,e,void 0,arguments)},splice(...n){return noTracking(this,"splice",n)},toReversed(){return reactiveReadArray(this).toReversed()},toSorted(n){return reactiveReadArray(this).toSorted(n)},toSpliced(...n){return reactiveReadArray(this).toSpliced(...n)},unshift(...n){return noTracking(this,"unshift",n)},values(){return iterator(this,"values",toReactive)}};function iterator(n,e,t){const s=shallowReadArray(n),r=s[e]();return s!==n&&!isShallow(n)&&(r._next=r.next,r.next=()=>{const o=r._next();return o.value&&(o.value=t(o.value)),o}),r}const arrayProto=Array.prototype;function apply(n,e,t,s,r,o){const i=shallowReadArray(n),c=i!==n&&!isShallow(n),a=i[e];if(a!==arrayProto[e]){const f=a.apply(n,o);return c?toReactive(f):f}let l=t;i!==n&&(c?l=function(f,y){return t.call(this,toReactive(f),y,n)}:t.length>2&&(l=function(f,y){return t.call(this,f,y,n)}));const d=a.call(i,l,s);return c&&r?r(d):d}function reduce$1(n,e,t,s){const r=shallowReadArray(n);let o=t;return r!==n&&(isShallow(n)?t.length>3&&(o=function(i,c,a){return t.call(this,i,c,a,n)}):o=function(i,c,a){return t.call(this,i,toReactive(c),a,n)}),r[e](o,...s)}function searchProxy(n,e,t){const s=toRaw(n);track(s,"iterate",ARRAY_ITERATE_KEY);const r=s[e](...t);return(r===-1||r===!1)&&isProxy(t[0])?(t[0]=toRaw(t[0]),s[e](...t)):r}function noTracking(n,e,t=[]){pauseTracking(),startBatch();const s=toRaw(n)[e].apply(n,t);return endBatch(),resetTracking(),s}const isNonTrackableKeys=makeMap("__proto__,__v_isRef,__isVue"),builtInSymbols=new Set(Object.getOwnPropertyNames(Symbol).filter(n=>n!=="arguments"&&n!=="caller").map(n=>Symbol[n]).filter(isSymbol));function hasOwnProperty(n){isSymbol(n)||(n=String(n));const e=toRaw(this);return track(e,"has",n),e.hasOwnProperty(n)}class BaseReactiveHandler{constructor(e=!1,t=!1){this._isReadonly=e,this._isShallow=t}get(e,t,s){if(t==="__v_skip")return e.__v_skip;const r=this._isReadonly,o=this._isShallow;if(t==="__v_isReactive")return!r;if(t==="__v_isReadonly")return r;if(t==="__v_isShallow")return o;if(t==="__v_raw")return s===(r?o?shallowReadonlyMap:readonlyMap:o?shallowReactiveMap:reactiveMap).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(s)?e:void 0;const i=isArray(e);if(!r){let a;if(i&&(a=arrayInstrumentations[t]))return a;if(t==="hasOwnProperty")return hasOwnProperty}const c=Reflect.get(e,t,isRef(e)?e:s);return(isSymbol(t)?builtInSymbols.has(t):isNonTrackableKeys(t))||(r||track(e,"get",t),o)?c:isRef(c)?i&&isIntegerKey(t)?c:c.value:isObject(c)?r?readonly(c):reactive(c):c}}class MutableReactiveHandler extends BaseReactiveHandler{constructor(e=!1){super(!1,e)}set(e,t,s,r){let o=e[t];if(!this._isShallow){const a=isReadonly(o);if(!isShallow(s)&&!isReadonly(s)&&(o=toRaw(o),s=toRaw(s)),!isArray(e)&&isRef(o)&&!isRef(s))return a?!1:(o.value=s,!0)}const i=isArray(e)&&isIntegerKey(t)?Number(t)<e.length:hasOwn(e,t),c=Reflect.set(e,t,s,isRef(e)?e:r);return e===toRaw(r)&&(i?hasChanged(s,o)&&trigger(e,"set",t,s):trigger(e,"add",t,s)),c}deleteProperty(e,t){const s=hasOwn(e,t);e[t];const r=Reflect.deleteProperty(e,t);return r&&s&&trigger(e,"delete",t,void 0),r}has(e,t){const s=Reflect.has(e,t);return(!isSymbol(t)||!builtInSymbols.has(t))&&track(e,"has",t),s}ownKeys(e){return track(e,"iterate",isArray(e)?"length":ITERATE_KEY),Reflect.ownKeys(e)}}class ReadonlyReactiveHandler extends BaseReactiveHandler{constructor(e=!1){super(!0,e)}set(e,t){return!0}deleteProperty(e,t){return!0}}const mutableHandlers=new MutableReactiveHandler,readonlyHandlers=new ReadonlyReactiveHandler,shallowReactiveHandlers=new MutableReactiveHandler(!0),shallowReadonlyHandlers=new ReadonlyReactiveHandler(!0),toShallow=n=>n,getProto=n=>Reflect.getPrototypeOf(n);function createIterableMethod(n,e,t){return function(...s){const r=this.__v_raw,o=toRaw(r),i=isMap(o),c=n==="entries"||n===Symbol.iterator&&i,a=n==="keys"&&i,l=r[n](...s),d=t?toShallow:e?toReadonly:toReactive;return!e&&track(o,"iterate",a?MAP_KEY_ITERATE_KEY:ITERATE_KEY),{next(){const{value:f,done:y}=l.next();return y?{value:f,done:y}:{value:c?[d(f[0]),d(f[1])]:d(f),done:y}},[Symbol.iterator](){return this}}}}function createReadonlyMethod(n){return function(...e){return n==="delete"?!1:n==="clear"?void 0:this}}function createInstrumentations(n,e){const t={get(r){const o=this.__v_raw,i=toRaw(o),c=toRaw(r);n||(hasChanged(r,c)&&track(i,"get",r),track(i,"get",c));const{has:a}=getProto(i),l=e?toShallow:n?toReadonly:toReactive;if(a.call(i,r))return l(o.get(r));if(a.call(i,c))return l(o.get(c));o!==i&&o.get(r)},get size(){const r=this.__v_raw;return!n&&track(toRaw(r),"iterate",ITERATE_KEY),Reflect.get(r,"size",r)},has(r){const o=this.__v_raw,i=toRaw(o),c=toRaw(r);return n||(hasChanged(r,c)&&track(i,"has",r),track(i,"has",c)),r===c?o.has(r):o.has(r)||o.has(c)},forEach(r,o){const i=this,c=i.__v_raw,a=toRaw(c),l=e?toShallow:n?toReadonly:toReactive;return!n&&track(a,"iterate",ITERATE_KEY),c.forEach((d,f)=>r.call(o,l(d),l(f),i))}};return extend(t,n?{add:createReadonlyMethod("add"),set:createReadonlyMethod("set"),delete:createReadonlyMethod("delete"),clear:createReadonlyMethod("clear")}:{add(r){!e&&!isShallow(r)&&!isReadonly(r)&&(r=toRaw(r));const o=toRaw(this);return getProto(o).has.call(o,r)||(o.add(r),trigger(o,"add",r,r)),this},set(r,o){!e&&!isShallow(o)&&!isReadonly(o)&&(o=toRaw(o));const i=toRaw(this),{has:c,get:a}=getProto(i);let l=c.call(i,r);l||(r=toRaw(r),l=c.call(i,r));const d=a.call(i,r);return i.set(r,o),l?hasChanged(o,d)&&trigger(i,"set",r,o):trigger(i,"add",r,o),this},delete(r){const o=toRaw(this),{has:i,get:c}=getProto(o);let a=i.call(o,r);a||(r=toRaw(r),a=i.call(o,r)),c&&c.call(o,r);const l=o.delete(r);return a&&trigger(o,"delete",r,void 0),l},clear(){const r=toRaw(this),o=r.size!==0,i=r.clear();return o&&trigger(r,"clear",void 0,void 0),i}}),["keys","values","entries",Symbol.iterator].forEach(r=>{t[r]=createIterableMethod(r,n,e)}),t}function createInstrumentationGetter(n,e){const t=createInstrumentations(n,e);return(s,r,o)=>r==="__v_isReactive"?!n:r==="__v_isReadonly"?n:r==="__v_raw"?s:Reflect.get(hasOwn(t,r)&&r in s?t:s,r,o)}const mutableCollectionHandlers={get:createInstrumentationGetter(!1,!1)},shallowCollectionHandlers={get:createInstrumentationGetter(!1,!0)},readonlyCollectionHandlers={get:createInstrumentationGetter(!0,!1)},shallowReadonlyCollectionHandlers={get:createInstrumentationGetter(!0,!0)},reactiveMap=new WeakMap,shallowReactiveMap=new WeakMap,readonlyMap=new WeakMap,shallowReadonlyMap=new WeakMap;function targetTypeMap(n){switch(n){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function getTargetType(n){return n.__v_skip||!Object.isExtensible(n)?0:targetTypeMap(toRawType(n))}function reactive(n){return isReadonly(n)?n:createReactiveObject(n,!1,mutableHandlers,mutableCollectionHandlers,reactiveMap)}function shallowReactive(n){return createReactiveObject(n,!1,shallowReactiveHandlers,shallowCollectionHandlers,shallowReactiveMap)}function readonly(n){return createReactiveObject(n,!0,readonlyHandlers,readonlyCollectionHandlers,readonlyMap)}function shallowReadonly(n){return createReactiveObject(n,!0,shallowReadonlyHandlers,shallowReadonlyCollectionHandlers,shallowReadonlyMap)}function createReactiveObject(n,e,t,s,r){if(!isObject(n)||n.__v_raw&&!(e&&n.__v_isReactive))return n;const o=r.get(n);if(o)return o;const i=getTargetType(n);if(i===0)return n;const c=new Proxy(n,i===2?s:t);return r.set(n,c),c}function isReactive(n){return isReadonly(n)?isReactive(n.__v_raw):!!(n&&n.__v_isReactive)}function isReadonly(n){return!!(n&&n.__v_isReadonly)}function isShallow(n){return!!(n&&n.__v_isShallow)}function isProxy(n){return n?!!n.__v_raw:!1}function toRaw(n){const e=n&&n.__v_raw;return e?toRaw(e):n}function markRaw(n){return!hasOwn(n,"__v_skip")&&Object.isExtensible(n)&&def(n,"__v_skip",!0),n}const toReactive=n=>isObject(n)?reactive(n):n,toReadonly=n=>isObject(n)?readonly(n):n;function isRef(n){return n?n.__v_isRef===!0:!1}function ref(n){return createRef(n,!1)}function createRef(n,e){return isRef(n)?n:new RefImpl(n,e)}class RefImpl{constructor(e,t){this.dep=new Dep,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=t?e:toRaw(e),this._value=t?e:toReactive(e),this.__v_isShallow=t}get value(){return this.dep.track(),this._value}set value(e){const t=this._rawValue,s=this.__v_isShallow||isShallow(e)||isReadonly(e);e=s?e:toRaw(e),hasChanged(e,t)&&(this._rawValue=e,this._value=s?e:toReactive(e),this.dep.trigger())}}function unref(n){return isRef(n)?n.value:n}const shallowUnwrapHandlers={get:(n,e,t)=>e==="__v_raw"?n:unref(Reflect.get(n,e,t)),set:(n,e,t,s)=>{const r=n[e];return isRef(r)&&!isRef(t)?(r.value=t,!0):Reflect.set(n,e,t,s)}};function proxyRefs(n){return isReactive(n)?n:new Proxy(n,shallowUnwrapHandlers)}class ComputedRefImpl{constructor(e,t,s){this.fn=e,this.setter=t,this._value=void 0,this.dep=new Dep(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=globalVersion-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!t,this.isSSR=s}notify(){if(this.flags|=16,!(this.flags&8)&&activeSub!==this)return batch(this,!0),!0}get value(){const e=this.dep.track();return refreshComputed(this),e&&(e.version=this.dep.version),this._value}set value(e){this.setter&&this.setter(e)}}function computed$1(n,e,t=!1){let s,r;return isFunction$1(n)?s=n:(s=n.get,r=n.set),new ComputedRefImpl(s,r,t)}const INITIAL_WATCHER_VALUE={},cleanupMap=new WeakMap;let activeWatcher;function onWatcherCleanup(n,e=!1,t=activeWatcher){if(t){let s=cleanupMap.get(t);s||cleanupMap.set(t,s=[]),s.push(n)}}function watch$1(n,e,t=EMPTY_OBJ){const{immediate:s,deep:r,once:o,scheduler:i,augmentJob:c,call:a}=t,l=A=>r?A:isShallow(A)||r===!1||r===0?traverse(A,1):traverse(A);let d,f,y,m,h=!1,g=!1;if(isRef(n)?(f=()=>n.value,h=isShallow(n)):isReactive(n)?(f=()=>l(n),h=!0):isArray(n)?(g=!0,h=n.some(A=>isReactive(A)||isShallow(A)),f=()=>n.map(A=>{if(isRef(A))return A.value;if(isReactive(A))return l(A);if(isFunction$1(A))return a?a(A,2):A()})):isFunction$1(n)?e?f=a?()=>a(n,2):n:f=()=>{if(y){pauseTracking();try{y()}finally{resetTracking()}}const A=activeWatcher;activeWatcher=d;try{return a?a(n,3,[m]):n(m)}finally{activeWatcher=A}}:f=NOOP,e&&r){const A=f,T=r===!0?1/0:r;f=()=>traverse(A(),T)}const x=getCurrentScope(),w=()=>{d.stop(),x&&x.active&&remove(x.effects,d)};if(o&&e){const A=e;e=(...T)=>{A(...T),w()}}let I=g?new Array(n.length).fill(INITIAL_WATCHER_VALUE):INITIAL_WATCHER_VALUE;const N=A=>{if(!(!(d.flags&1)||!d.dirty&&!A))if(e){const T=d.run();if(r||h||(g?T.some((P,O)=>hasChanged(P,I[O])):hasChanged(T,I))){y&&y();const P=activeWatcher;activeWatcher=d;try{const O=[T,I===INITIAL_WATCHER_VALUE?void 0:g&&I[0]===INITIAL_WATCHER_VALUE?[]:I,m];a?a(e,3,O):e(...O),I=T}finally{activeWatcher=P}}}else d.run()};return c&&c(N),d=new ReactiveEffect(f),d.scheduler=i?()=>i(N,!1):N,m=A=>onWatcherCleanup(A,!1,d),y=d.onStop=()=>{const A=cleanupMap.get(d);if(A){if(a)a(A,4);else for(const T of A)T();cleanupMap.delete(d)}},e?s?N(!0):I=d.run():i?i(N.bind(null,!0),!0):d.run(),w.pause=d.pause.bind(d),w.resume=d.resume.bind(d),w.stop=w,w}function traverse(n,e=1/0,t){if(e<=0||!isObject(n)||n.__v_skip||(t=t||new Set,t.has(n)))return n;if(t.add(n),e--,isRef(n))traverse(n.value,e,t);else if(isArray(n))for(let s=0;s<n.length;s++)traverse(n[s],e,t);else if(isSet(n)||isMap(n))n.forEach(s=>{traverse(s,e,t)});else if(isPlainObject(n)){for(const s in n)traverse(n[s],e,t);for(const s of Object.getOwnPropertySymbols(n))Object.prototype.propertyIsEnumerable.call(n,s)&&traverse(n[s],e,t)}return n}/**
* @vue/runtime-core v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const stack$1=[];let isWarning=!1;function warn$1(n,...e){if(isWarning)return;isWarning=!0,pauseTracking();const t=stack$1.length?stack$1[stack$1.length-1].component:null,s=t&&t.appContext.config.warnHandler,r=getComponentTrace();if(s)callWithErrorHandling(s,t,11,[n+e.map(o=>{var i,c;return(c=(i=o.toString)==null?void 0:i.call(o))!=null?c:JSON.stringify(o)}).join(""),t&&t.proxy,r.map(({vnode:o})=>`at <${formatComponentName(t,o.type)}>`).join(`
`),r]);else{const o=[`[Vue warn]: ${n}`,...e];r.length&&o.push(`
`,...formatTrace(r)),console.warn(...o)}resetTracking(),isWarning=!1}function getComponentTrace(){let n=stack$1[stack$1.length-1];if(!n)return[];const e=[];for(;n;){const t=e[0];t&&t.vnode===n?t.recurseCount++:e.push({vnode:n,recurseCount:0});const s=n.component&&n.component.parent;n=s&&s.vnode}return e}function formatTrace(n){const e=[];return n.forEach((t,s)=>{e.push(...s===0?[]:[`
`],...formatTraceEntry(t))}),e}function formatTraceEntry({vnode:n,recurseCount:e}){const t=e>0?`... (${e} recursive calls)`:"",s=n.component?n.component.parent==null:!1,r=` at <${formatComponentName(n.component,n.type,s)}`,o=">"+t;return n.props?[r,...formatProps(n.props),o]:[r+o]}function formatProps(n){const e=[],t=Object.keys(n);return t.slice(0,3).forEach(s=>{e.push(...formatProp(s,n[s]))}),t.length>3&&e.push(" ..."),e}function formatProp(n,e,t){return isString$1(e)?(e=JSON.stringify(e),t?e:[`${n}=${e}`]):typeof e=="number"||typeof e=="boolean"||e==null?t?e:[`${n}=${e}`]:isRef(e)?(e=formatProp(n,toRaw(e.value),!0),t?e:[`${n}=Ref<`,e,">"]):isFunction$1(e)?[`${n}=fn${e.name?`<${e.name}>`:""}`]:(e=toRaw(e),t?e:[`${n}=`,e])}function callWithErrorHandling(n,e,t,s){try{return s?n(...s):n()}catch(r){handleError(r,e,t)}}function callWithAsyncErrorHandling(n,e,t,s){if(isFunction$1(n)){const r=callWithErrorHandling(n,e,t,s);return r&&isPromise$1(r)&&r.catch(o=>{handleError(o,e,t)}),r}if(isArray(n)){const r=[];for(let o=0;o<n.length;o++)r.push(callWithAsyncErrorHandling(n[o],e,t,s));return r}}function handleError(n,e,t,s=!0){const r=e?e.vnode:null,{errorHandler:o,throwUnhandledErrorInProduction:i}=e&&e.appContext.config||EMPTY_OBJ;if(e){let c=e.parent;const a=e.proxy,l=`https://vuejs.org/error-reference/#runtime-${t}`;for(;c;){const d=c.ec;if(d){for(let f=0;f<d.length;f++)if(d[f](n,a,l)===!1)return}c=c.parent}if(o){pauseTracking(),callWithErrorHandling(o,null,10,[n,a,l]),resetTracking();return}}logError(n,t,r,s,i)}function logError(n,e,t,s=!0,r=!1){if(r)throw n;console.error(n)}const queue=[];let flushIndex=-1;const pendingPostFlushCbs=[];let activePostFlushCbs=null,postFlushIndex=0;const resolvedPromise=Promise.resolve();let currentFlushPromise=null;function nextTick(n){const e=currentFlushPromise||resolvedPromise;return n?e.then(this?n.bind(this):n):e}function findInsertionIndex(n){let e=flushIndex+1,t=queue.length;for(;e<t;){const s=e+t>>>1,r=queue[s],o=getId(r);o<n||o===n&&r.flags&2?e=s+1:t=s}return e}function queueJob(n){if(!(n.flags&1)){const e=getId(n),t=queue[queue.length-1];!t||!(n.flags&2)&&e>=getId(t)?queue.push(n):queue.splice(findInsertionIndex(e),0,n),n.flags|=1,queueFlush()}}function queueFlush(){currentFlushPromise||(currentFlushPromise=resolvedPromise.then(flushJobs))}function queuePostFlushCb(n){isArray(n)?pendingPostFlushCbs.push(...n):activePostFlushCbs&&n.id===-1?activePostFlushCbs.splice(postFlushIndex+1,0,n):n.flags&1||(pendingPostFlushCbs.push(n),n.flags|=1),queueFlush()}function flushPreFlushCbs(n,e,t=flushIndex+1){for(;t<queue.length;t++){const s=queue[t];if(s&&s.flags&2){if(n&&s.id!==n.uid)continue;queue.splice(t,1),t--,s.flags&4&&(s.flags&=-2),s(),s.flags&4||(s.flags&=-2)}}}function flushPostFlushCbs(n){if(pendingPostFlushCbs.length){const e=[...new Set(pendingPostFlushCbs)].sort((t,s)=>getId(t)-getId(s));if(pendingPostFlushCbs.length=0,activePostFlushCbs){activePostFlushCbs.push(...e);return}for(activePostFlushCbs=e,postFlushIndex=0;postFlushIndex<activePostFlushCbs.length;postFlushIndex++){const t=activePostFlushCbs[postFlushIndex];t.flags&4&&(t.flags&=-2),t.flags&8||t(),t.flags&=-2}activePostFlushCbs=null,postFlushIndex=0}}const getId=n=>n.id==null?n.flags&2?-1:1/0:n.id;function flushJobs(n){try{for(flushIndex=0;flushIndex<queue.length;flushIndex++){const e=queue[flushIndex];e&&!(e.flags&8)&&(e.flags&4&&(e.flags&=-2),callWithErrorHandling(e,e.i,e.i?15:14),e.flags&4||(e.flags&=-2))}}finally{for(;flushIndex<queue.length;flushIndex++){const e=queue[flushIndex];e&&(e.flags&=-2)}flushIndex=-1,queue.length=0,flushPostFlushCbs(),currentFlushPromise=null,(queue.length||pendingPostFlushCbs.length)&&flushJobs()}}let currentRenderingInstance=null,currentScopeId=null;function setCurrentRenderingInstance(n){const e=currentRenderingInstance;return currentRenderingInstance=n,currentScopeId=n&&n.type.__scopeId||null,e}function withCtx(n,e=currentRenderingInstance,t){if(!e||n._n)return n;const s=(...r)=>{s._d&&setBlockTracking(-1);const o=setCurrentRenderingInstance(e);let i;try{i=n(...r)}finally{setCurrentRenderingInstance(o),s._d&&setBlockTracking(1)}return i};return s._n=!0,s._c=!0,s._d=!0,s}function invokeDirectiveHook(n,e,t,s){const r=n.dirs,o=e&&e.dirs;for(let i=0;i<r.length;i++){const c=r[i];o&&(c.oldValue=o[i].value);let a=c.dir[s];a&&(pauseTracking(),callWithAsyncErrorHandling(a,t,8,[n.el,c,n,e]),resetTracking())}}const TeleportEndKey=Symbol("_vte"),isTeleport=n=>n.__isTeleport;function setTransitionHooks(n,e){n.shapeFlag&6&&n.component?(n.transition=e,setTransitionHooks(n.component.subTree,e)):n.shapeFlag&128?(n.ssContent.transition=e.clone(n.ssContent),n.ssFallback.transition=e.clone(n.ssFallback)):n.transition=e}/*! #__NO_SIDE_EFFECTS__ */function defineComponent(n,e){return isFunction$1(n)?extend({name:n.name},e,{setup:n}):n}function markAsyncBoundary(n){n.ids=[n.ids[0]+n.ids[2]+++"-",0,0]}function setRef(n,e,t,s,r=!1){if(isArray(n)){n.forEach((h,g)=>setRef(h,e&&(isArray(e)?e[g]:e),t,s,r));return}if(isAsyncWrapper(s)&&!r){s.shapeFlag&512&&s.type.__asyncResolved&&s.component.subTree.component&&setRef(n,e,t,s.component.subTree);return}const o=s.shapeFlag&4?getComponentPublicInstance(s.component):s.el,i=r?null:o,{i:c,r:a}=n,l=e&&e.r,d=c.refs===EMPTY_OBJ?c.refs={}:c.refs,f=c.setupState,y=toRaw(f),m=f===EMPTY_OBJ?()=>!1:h=>hasOwn(y,h);if(l!=null&&l!==a&&(isString$1(l)?(d[l]=null,m(l)&&(f[l]=null)):isRef(l)&&(l.value=null)),isFunction$1(a))callWithErrorHandling(a,c,12,[i,d]);else{const h=isString$1(a),g=isRef(a);if(h||g){const x=()=>{if(n.f){const w=h?m(a)?f[a]:d[a]:a.value;r?isArray(w)&&remove(w,o):isArray(w)?w.includes(o)||w.push(o):h?(d[a]=[o],m(a)&&(f[a]=d[a])):(a.value=[o],n.k&&(d[n.k]=a.value))}else h?(d[a]=i,m(a)&&(f[a]=i)):g&&(a.value=i,n.k&&(d[n.k]=i))};i?(x.id=-1,queuePostRenderEffect(x,t)):x()}}}getGlobalThis().requestIdleCallback;getGlobalThis().cancelIdleCallback;const isAsyncWrapper=n=>!!n.type.__asyncLoader,isKeepAlive=n=>n.type.__isKeepAlive;function onActivated(n,e){registerKeepAliveHook(n,"a",e)}function onDeactivated(n,e){registerKeepAliveHook(n,"da",e)}function registerKeepAliveHook(n,e,t=currentInstance){const s=n.__wdc||(n.__wdc=()=>{let r=t;for(;r;){if(r.isDeactivated)return;r=r.parent}return n()});if(injectHook(e,s,t),t){let r=t.parent;for(;r&&r.parent;)isKeepAlive(r.parent.vnode)&&injectToKeepAliveRoot(s,e,t,r),r=r.parent}}function injectToKeepAliveRoot(n,e,t,s){const r=injectHook(e,n,s,!0);onUnmounted(()=>{remove(s[e],r)},t)}function injectHook(n,e,t=currentInstance,s=!1){if(t){const r=t[n]||(t[n]=[]),o=e.__weh||(e.__weh=(...i)=>{pauseTracking();const c=setCurrentInstance(t),a=callWithAsyncErrorHandling(e,t,n,i);return c(),resetTracking(),a});return s?r.unshift(o):r.push(o),o}}const createHook=n=>(e,t=currentInstance)=>{(!isInSSRComponentSetup||n==="sp")&&injectHook(n,(...s)=>e(...s),t)},onBeforeMount=createHook("bm"),onMounted=createHook("m"),onBeforeUpdate=createHook("bu"),onUpdated=createHook("u"),onBeforeUnmount=createHook("bum"),onUnmounted=createHook("um"),onServerPrefetch=createHook("sp"),onRenderTriggered=createHook("rtg"),onRenderTracked=createHook("rtc");function onErrorCaptured(n,e=currentInstance){injectHook("ec",n,e)}const NULL_DYNAMIC_COMPONENT=Symbol.for("v-ndc"),getPublicInstance=n=>n?isStatefulComponent(n)?getComponentPublicInstance(n):getPublicInstance(n.parent):null,publicPropertiesMap=extend(Object.create(null),{$:n=>n,$el:n=>n.vnode.el,$data:n=>n.data,$props:n=>n.props,$attrs:n=>n.attrs,$slots:n=>n.slots,$refs:n=>n.refs,$parent:n=>getPublicInstance(n.parent),$root:n=>getPublicInstance(n.root),$host:n=>n.ce,$emit:n=>n.emit,$options:n=>resolveMergedOptions(n),$forceUpdate:n=>n.f||(n.f=()=>{queueJob(n.update)}),$nextTick:n=>n.n||(n.n=nextTick.bind(n.proxy)),$watch:n=>instanceWatch.bind(n)}),hasSetupBinding=(n,e)=>n!==EMPTY_OBJ&&!n.__isScriptSetup&&hasOwn(n,e),PublicInstanceProxyHandlers={get({_:n},e){if(e==="__v_skip")return!0;const{ctx:t,setupState:s,data:r,props:o,accessCache:i,type:c,appContext:a}=n;let l;if(e[0]!=="$"){const m=i[e];if(m!==void 0)switch(m){case 1:return s[e];case 2:return r[e];case 4:return t[e];case 3:return o[e]}else{if(hasSetupBinding(s,e))return i[e]=1,s[e];if(r!==EMPTY_OBJ&&hasOwn(r,e))return i[e]=2,r[e];if((l=n.propsOptions[0])&&hasOwn(l,e))return i[e]=3,o[e];if(t!==EMPTY_OBJ&&hasOwn(t,e))return i[e]=4,t[e];shouldCacheAccess&&(i[e]=0)}}const d=publicPropertiesMap[e];let f,y;if(d)return e==="$attrs"&&track(n.attrs,"get",""),d(n);if((f=c.__cssModules)&&(f=f[e]))return f;if(t!==EMPTY_OBJ&&hasOwn(t,e))return i[e]=4,t[e];if(y=a.config.globalProperties,hasOwn(y,e))return y[e]},set({_:n},e,t){const{data:s,setupState:r,ctx:o}=n;return hasSetupBinding(r,e)?(r[e]=t,!0):s!==EMPTY_OBJ&&hasOwn(s,e)?(s[e]=t,!0):hasOwn(n.props,e)||e[0]==="$"&&e.slice(1)in n?!1:(o[e]=t,!0)},has({_:{data:n,setupState:e,accessCache:t,ctx:s,appContext:r,propsOptions:o}},i){let c;return!!t[i]||n!==EMPTY_OBJ&&hasOwn(n,i)||hasSetupBinding(e,i)||(c=o[0])&&hasOwn(c,i)||hasOwn(s,i)||hasOwn(publicPropertiesMap,i)||hasOwn(r.config.globalProperties,i)},defineProperty(n,e,t){return t.get!=null?n._.accessCache[e]=0:hasOwn(t,"value")&&this.set(n,e,t.value,null),Reflect.defineProperty(n,e,t)}};function normalizePropsOrEmits(n){return isArray(n)?n.reduce((e,t)=>(e[t]=null,e),{}):n}let shouldCacheAccess=!0;function applyOptions(n){const e=resolveMergedOptions(n),t=n.proxy,s=n.ctx;shouldCacheAccess=!1,e.beforeCreate&&callHook(e.beforeCreate,n,"bc");const{data:r,computed:o,methods:i,watch:c,provide:a,inject:l,created:d,beforeMount:f,mounted:y,beforeUpdate:m,updated:h,activated:g,deactivated:x,beforeDestroy:w,beforeUnmount:I,destroyed:N,unmounted:A,render:T,renderTracked:P,renderTriggered:O,errorCaptured:F,serverPrefetch:G,expose:U,inheritAttrs:Q,components:ne,directives:J,filters:oe}=e;if(l&&resolveInjections(l,s,null),i)for(const te in i){const ce=i[te];isFunction$1(ce)&&(s[te]=ce.bind(t))}if(r){const te=r.call(t,t);isObject(te)&&(n.data=reactive(te))}if(shouldCacheAccess=!0,o)for(const te in o){const ce=o[te],ue=isFunction$1(ce)?ce.bind(t,t):isFunction$1(ce.get)?ce.get.bind(t,t):NOOP,Te=!isFunction$1(ce)&&isFunction$1(ce.set)?ce.set.bind(t):NOOP,Ce=computed({get:ue,set:Te});Object.defineProperty(s,te,{enumerable:!0,configurable:!0,get:()=>Ce.value,set:Ne=>Ce.value=Ne})}if(c)for(const te in c)createWatcher(c[te],s,t,te);if(a){const te=isFunction$1(a)?a.call(t):a;Reflect.ownKeys(te).forEach(ce=>{provide(ce,te[ce])})}d&&callHook(d,n,"c");function ge(te,ce){isArray(ce)?ce.forEach(ue=>te(ue.bind(t))):ce&&te(ce.bind(t))}if(ge(onBeforeMount,f),ge(onMounted,y),ge(onBeforeUpdate,m),ge(onUpdated,h),ge(onActivated,g),ge(onDeactivated,x),ge(onErrorCaptured,F),ge(onRenderTracked,P),ge(onRenderTriggered,O),ge(onBeforeUnmount,I),ge(onUnmounted,A),ge(onServerPrefetch,G),isArray(U))if(U.length){const te=n.exposed||(n.exposed={});U.forEach(ce=>{Object.defineProperty(te,ce,{get:()=>t[ce],set:ue=>t[ce]=ue})})}else n.exposed||(n.exposed={});T&&n.render===NOOP&&(n.render=T),Q!=null&&(n.inheritAttrs=Q),ne&&(n.components=ne),J&&(n.directives=J),G&&markAsyncBoundary(n)}function resolveInjections(n,e,t=NOOP){isArray(n)&&(n=normalizeInject(n));for(const s in n){const r=n[s];let o;isObject(r)?"default"in r?o=inject(r.from||s,r.default,!0):o=inject(r.from||s):o=inject(r),isRef(o)?Object.defineProperty(e,s,{enumerable:!0,configurable:!0,get:()=>o.value,set:i=>o.value=i}):e[s]=o}}function callHook(n,e,t){callWithAsyncErrorHandling(isArray(n)?n.map(s=>s.bind(e.proxy)):n.bind(e.proxy),e,t)}function createWatcher(n,e,t,s){let r=s.includes(".")?createPathGetter(t,s):()=>t[s];if(isString$1(n)){const o=e[n];isFunction$1(o)&&watch(r,o)}else if(isFunction$1(n))watch(r,n.bind(t));else if(isObject(n))if(isArray(n))n.forEach(o=>createWatcher(o,e,t,s));else{const o=isFunction$1(n.handler)?n.handler.bind(t):e[n.handler];isFunction$1(o)&&watch(r,o,n)}}function resolveMergedOptions(n){const e=n.type,{mixins:t,extends:s}=e,{mixins:r,optionsCache:o,config:{optionMergeStrategies:i}}=n.appContext,c=o.get(e);let a;return c?a=c:!r.length&&!t&&!s?a=e:(a={},r.length&&r.forEach(l=>mergeOptions(a,l,i,!0)),mergeOptions(a,e,i)),isObject(e)&&o.set(e,a),a}function mergeOptions(n,e,t,s=!1){const{mixins:r,extends:o}=e;o&&mergeOptions(n,o,t,!0),r&&r.forEach(i=>mergeOptions(n,i,t,!0));for(const i in e)if(!(s&&i==="expose")){const c=internalOptionMergeStrats[i]||t&&t[i];n[i]=c?c(n[i],e[i]):e[i]}return n}const internalOptionMergeStrats={data:mergeDataFn,props:mergeEmitsOrPropsOptions,emits:mergeEmitsOrPropsOptions,methods:mergeObjectOptions,computed:mergeObjectOptions,beforeCreate:mergeAsArray,created:mergeAsArray,beforeMount:mergeAsArray,mounted:mergeAsArray,beforeUpdate:mergeAsArray,updated:mergeAsArray,beforeDestroy:mergeAsArray,beforeUnmount:mergeAsArray,destroyed:mergeAsArray,unmounted:mergeAsArray,activated:mergeAsArray,deactivated:mergeAsArray,errorCaptured:mergeAsArray,serverPrefetch:mergeAsArray,components:mergeObjectOptions,directives:mergeObjectOptions,watch:mergeWatchOptions,provide:mergeDataFn,inject:mergeInject};function mergeDataFn(n,e){return e?n?function(){return extend(isFunction$1(n)?n.call(this,this):n,isFunction$1(e)?e.call(this,this):e)}:e:n}function mergeInject(n,e){return mergeObjectOptions(normalizeInject(n),normalizeInject(e))}function normalizeInject(n){if(isArray(n)){const e={};for(let t=0;t<n.length;t++)e[n[t]]=n[t];return e}return n}function mergeAsArray(n,e){return n?[...new Set([].concat(n,e))]:e}function mergeObjectOptions(n,e){return n?extend(Object.create(null),n,e):e}function mergeEmitsOrPropsOptions(n,e){return n?isArray(n)&&isArray(e)?[...new Set([...n,...e])]:extend(Object.create(null),normalizePropsOrEmits(n),normalizePropsOrEmits(e??{})):e}function mergeWatchOptions(n,e){if(!n)return e;if(!e)return n;const t=extend(Object.create(null),n);for(const s in e)t[s]=mergeAsArray(n[s],e[s]);return t}function createAppContext(){return{app:null,config:{isNativeTag:NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let uid$1=0;function createAppAPI(n,e){return function(s,r=null){isFunction$1(s)||(s=extend({},s)),r!=null&&!isObject(r)&&(r=null);const o=createAppContext(),i=new WeakSet,c=[];let a=!1;const l=o.app={_uid:uid$1++,_component:s,_props:r,_container:null,_context:o,_instance:null,version:version$8,get config(){return o.config},set config(d){},use(d,...f){return i.has(d)||(d&&isFunction$1(d.install)?(i.add(d),d.install(l,...f)):isFunction$1(d)&&(i.add(d),d(l,...f))),l},mixin(d){return o.mixins.includes(d)||o.mixins.push(d),l},component(d,f){return f?(o.components[d]=f,l):o.components[d]},directive(d,f){return f?(o.directives[d]=f,l):o.directives[d]},mount(d,f,y){if(!a){const m=l._ceVNode||createVNode(s,r);return m.appContext=o,y===!0?y="svg":y===!1&&(y=void 0),n(m,d,y),a=!0,l._container=d,d.__vue_app__=l,getComponentPublicInstance(m.component)}},onUnmount(d){c.push(d)},unmount(){a&&(callWithAsyncErrorHandling(c,l._instance,16),n(null,l._container),delete l._container.__vue_app__)},provide(d,f){return o.provides[d]=f,l},runWithContext(d){const f=currentApp;currentApp=l;try{return d()}finally{currentApp=f}}};return l}}let currentApp=null;function provide(n,e){if(currentInstance){let t=currentInstance.provides;const s=currentInstance.parent&&currentInstance.parent.provides;s===t&&(t=currentInstance.provides=Object.create(s)),t[n]=e}}function inject(n,e,t=!1){const s=currentInstance||currentRenderingInstance;if(s||currentApp){const r=currentApp?currentApp._context.provides:s?s.parent==null?s.vnode.appContext&&s.vnode.appContext.provides:s.parent.provides:void 0;if(r&&n in r)return r[n];if(arguments.length>1)return t&&isFunction$1(e)?e.call(s&&s.proxy):e}}const internalObjectProto={},createInternalObject=()=>Object.create(internalObjectProto),isInternalObject=n=>Object.getPrototypeOf(n)===internalObjectProto;function initProps(n,e,t,s=!1){const r={},o=createInternalObject();n.propsDefaults=Object.create(null),setFullProps(n,e,r,o);for(const i in n.propsOptions[0])i in r||(r[i]=void 0);t?n.props=s?r:shallowReactive(r):n.type.props?n.props=r:n.props=o,n.attrs=o}function updateProps(n,e,t,s){const{props:r,attrs:o,vnode:{patchFlag:i}}=n,c=toRaw(r),[a]=n.propsOptions;let l=!1;if((s||i>0)&&!(i&16)){if(i&8){const d=n.vnode.dynamicProps;for(let f=0;f<d.length;f++){let y=d[f];if(isEmitListener(n.emitsOptions,y))continue;const m=e[y];if(a)if(hasOwn(o,y))m!==o[y]&&(o[y]=m,l=!0);else{const h=camelize(y);r[h]=resolvePropValue(a,c,h,m,n,!1)}else m!==o[y]&&(o[y]=m,l=!0)}}}else{setFullProps(n,e,r,o)&&(l=!0);let d;for(const f in c)(!e||!hasOwn(e,f)&&((d=hyphenate(f))===f||!hasOwn(e,d)))&&(a?t&&(t[f]!==void 0||t[d]!==void 0)&&(r[f]=resolvePropValue(a,c,f,void 0,n,!0)):delete r[f]);if(o!==c)for(const f in o)(!e||!hasOwn(e,f))&&(delete o[f],l=!0)}l&&trigger(n.attrs,"set","")}function setFullProps(n,e,t,s){const[r,o]=n.propsOptions;let i=!1,c;if(e)for(let a in e){if(isReservedProp(a))continue;const l=e[a];let d;r&&hasOwn(r,d=camelize(a))?!o||!o.includes(d)?t[d]=l:(c||(c={}))[d]=l:isEmitListener(n.emitsOptions,a)||(!(a in s)||l!==s[a])&&(s[a]=l,i=!0)}if(o){const a=toRaw(t),l=c||EMPTY_OBJ;for(let d=0;d<o.length;d++){const f=o[d];t[f]=resolvePropValue(r,a,f,l[f],n,!hasOwn(l,f))}}return i}function resolvePropValue(n,e,t,s,r,o){const i=n[t];if(i!=null){const c=hasOwn(i,"default");if(c&&s===void 0){const a=i.default;if(i.type!==Function&&!i.skipFactory&&isFunction$1(a)){const{propsDefaults:l}=r;if(t in l)s=l[t];else{const d=setCurrentInstance(r);s=l[t]=a.call(null,e),d()}}else s=a;r.ce&&r.ce._setProp(t,s)}i[0]&&(o&&!c?s=!1:i[1]&&(s===""||s===hyphenate(t))&&(s=!0))}return s}const mixinPropsCache=new WeakMap;function normalizePropsOptions(n,e,t=!1){const s=t?mixinPropsCache:e.propsCache,r=s.get(n);if(r)return r;const o=n.props,i={},c=[];let a=!1;if(!isFunction$1(n)){const d=f=>{a=!0;const[y,m]=normalizePropsOptions(f,e,!0);extend(i,y),m&&c.push(...m)};!t&&e.mixins.length&&e.mixins.forEach(d),n.extends&&d(n.extends),n.mixins&&n.mixins.forEach(d)}if(!o&&!a)return isObject(n)&&s.set(n,EMPTY_ARR),EMPTY_ARR;if(isArray(o))for(let d=0;d<o.length;d++){const f=camelize(o[d]);validatePropName(f)&&(i[f]=EMPTY_OBJ)}else if(o)for(const d in o){const f=camelize(d);if(validatePropName(f)){const y=o[d],m=i[f]=isArray(y)||isFunction$1(y)?{type:y}:extend({},y),h=m.type;let g=!1,x=!0;if(isArray(h))for(let w=0;w<h.length;++w){const I=h[w],N=isFunction$1(I)&&I.name;if(N==="Boolean"){g=!0;break}else N==="String"&&(x=!1)}else g=isFunction$1(h)&&h.name==="Boolean";m[0]=g,m[1]=x,(g||hasOwn(m,"default"))&&c.push(f)}}const l=[i,c];return isObject(n)&&s.set(n,l),l}function validatePropName(n){return n[0]!=="$"&&!isReservedProp(n)}const isInternalKey=n=>n[0]==="_"||n==="$stable",normalizeSlotValue=n=>isArray(n)?n.map(normalizeVNode):[normalizeVNode(n)],normalizeSlot=(n,e,t)=>{if(e._n)return e;const s=withCtx((...r)=>normalizeSlotValue(e(...r)),t);return s._c=!1,s},normalizeObjectSlots=(n,e,t)=>{const s=n._ctx;for(const r in n){if(isInternalKey(r))continue;const o=n[r];if(isFunction$1(o))e[r]=normalizeSlot(r,o,s);else if(o!=null){const i=normalizeSlotValue(o);e[r]=()=>i}}},normalizeVNodeSlots=(n,e)=>{const t=normalizeSlotValue(e);n.slots.default=()=>t},assignSlots=(n,e,t)=>{for(const s in e)(t||s!=="_")&&(n[s]=e[s])},initSlots=(n,e,t)=>{const s=n.slots=createInternalObject();if(n.vnode.shapeFlag&32){const r=e._;r?(assignSlots(s,e,t),t&&def(s,"_",r,!0)):normalizeObjectSlots(e,s)}else e&&normalizeVNodeSlots(n,e)},updateSlots=(n,e,t)=>{const{vnode:s,slots:r}=n;let o=!0,i=EMPTY_OBJ;if(s.shapeFlag&32){const c=e._;c?t&&c===1?o=!1:assignSlots(r,e,t):(o=!e.$stable,normalizeObjectSlots(e,r)),i=e}else e&&(normalizeVNodeSlots(n,e),i={default:1});if(o)for(const c in r)!isInternalKey(c)&&i[c]==null&&delete r[c]},queuePostRenderEffect=queueEffectWithSuspense;function createRenderer(n){return baseCreateRenderer(n)}function baseCreateRenderer(n,e){const t=getGlobalThis();t.__VUE__=!0;const{insert:s,remove:r,patchProp:o,createElement:i,createText:c,createComment:a,setText:l,setElementText:d,parentNode:f,nextSibling:y,setScopeId:m=NOOP,insertStaticContent:h}=n,g=(j,ee,ye,Oe=null,ze=null,Xe=null,ot=void 0,st=null,pt=!!ee.dynamicChildren)=>{if(j===ee)return;j&&!isSameVNodeType(j,ee)&&(Oe=pe(j),Ne(j,ze,Xe,!0),j=null),ee.patchFlag===-2&&(pt=!1,ee.dynamicChildren=null);const{type:gt,ref:ht,shapeFlag:Tt}=ee;switch(gt){case Text:x(j,ee,ye,Oe);break;case Comment:w(j,ee,ye,Oe);break;case Static:j==null&&I(ee,ye,Oe,ot);break;case Fragment:ne(j,ee,ye,Oe,ze,Xe,ot,st,pt);break;default:Tt&1?T(j,ee,ye,Oe,ze,Xe,ot,st,pt):Tt&6?J(j,ee,ye,Oe,ze,Xe,ot,st,pt):(Tt&64||Tt&128)&&gt.process(j,ee,ye,Oe,ze,Xe,ot,st,pt,H)}ht!=null&&ze&&setRef(ht,j&&j.ref,Xe,ee||j,!ee)},x=(j,ee,ye,Oe)=>{if(j==null)s(ee.el=c(ee.children),ye,Oe);else{const ze=ee.el=j.el;ee.children!==j.children&&l(ze,ee.children)}},w=(j,ee,ye,Oe)=>{j==null?s(ee.el=a(ee.children||""),ye,Oe):ee.el=j.el},I=(j,ee,ye,Oe)=>{[j.el,j.anchor]=h(j.children,ee,ye,Oe,j.el,j.anchor)},N=({el:j,anchor:ee},ye,Oe)=>{let ze;for(;j&&j!==ee;)ze=y(j),s(j,ye,Oe),j=ze;s(ee,ye,Oe)},A=({el:j,anchor:ee})=>{let ye;for(;j&&j!==ee;)ye=y(j),r(j),j=ye;r(ee)},T=(j,ee,ye,Oe,ze,Xe,ot,st,pt)=>{ee.type==="svg"?ot="svg":ee.type==="math"&&(ot="mathml"),j==null?P(ee,ye,Oe,ze,Xe,ot,st,pt):G(j,ee,ze,Xe,ot,st,pt)},P=(j,ee,ye,Oe,ze,Xe,ot,st)=>{let pt,gt;const{props:ht,shapeFlag:Tt,transition:xt,dirs:Pt}=j;if(pt=j.el=i(j.type,Xe,ht&&ht.is,ht),Tt&8?d(pt,j.children):Tt&16&&F(j.children,pt,null,Oe,ze,resolveChildrenNamespace(j,Xe),ot,st),Pt&&invokeDirectiveHook(j,null,Oe,"created"),O(pt,j,j.scopeId,ot,Oe),ht){for(const ln in ht)ln!=="value"&&!isReservedProp(ln)&&o(pt,ln,null,ht[ln],Xe,Oe);"value"in ht&&o(pt,"value",null,ht.value,Xe),(gt=ht.onVnodeBeforeMount)&&invokeVNodeHook(gt,Oe,j)}Pt&&invokeDirectiveHook(j,null,Oe,"beforeMount");const tn=needTransition(ze,xt);tn&&xt.beforeEnter(pt),s(pt,ee,ye),((gt=ht&&ht.onVnodeMounted)||tn||Pt)&&queuePostRenderEffect(()=>{gt&&invokeVNodeHook(gt,Oe,j),tn&&xt.enter(pt),Pt&&invokeDirectiveHook(j,null,Oe,"mounted")},ze)},O=(j,ee,ye,Oe,ze)=>{if(ye&&m(j,ye),Oe)for(let Xe=0;Xe<Oe.length;Xe++)m(j,Oe[Xe]);if(ze){let Xe=ze.subTree;if(ee===Xe||isSuspense(Xe.type)&&(Xe.ssContent===ee||Xe.ssFallback===ee)){const ot=ze.vnode;O(j,ot,ot.scopeId,ot.slotScopeIds,ze.parent)}}},F=(j,ee,ye,Oe,ze,Xe,ot,st,pt=0)=>{for(let gt=pt;gt<j.length;gt++){const ht=j[gt]=st?cloneIfMounted(j[gt]):normalizeVNode(j[gt]);g(null,ht,ee,ye,Oe,ze,Xe,ot,st)}},G=(j,ee,ye,Oe,ze,Xe,ot)=>{const st=ee.el=j.el;let{patchFlag:pt,dynamicChildren:gt,dirs:ht}=ee;pt|=j.patchFlag&16;const Tt=j.props||EMPTY_OBJ,xt=ee.props||EMPTY_OBJ;let Pt;if(ye&&toggleRecurse(ye,!1),(Pt=xt.onVnodeBeforeUpdate)&&invokeVNodeHook(Pt,ye,ee,j),ht&&invokeDirectiveHook(ee,j,ye,"beforeUpdate"),ye&&toggleRecurse(ye,!0),(Tt.innerHTML&&xt.innerHTML==null||Tt.textContent&&xt.textContent==null)&&d(st,""),gt?U(j.dynamicChildren,gt,st,ye,Oe,resolveChildrenNamespace(ee,ze),Xe):ot||ce(j,ee,st,null,ye,Oe,resolveChildrenNamespace(ee,ze),Xe,!1),pt>0){if(pt&16)Q(st,Tt,xt,ye,ze);else if(pt&2&&Tt.class!==xt.class&&o(st,"class",null,xt.class,ze),pt&4&&o(st,"style",Tt.style,xt.style,ze),pt&8){const tn=ee.dynamicProps;for(let ln=0;ln<tn.length;ln++){const on=tn[ln],An=Tt[on],zn=xt[on];(zn!==An||on==="value")&&o(st,on,An,zn,ze,ye)}}pt&1&&j.children!==ee.children&&d(st,ee.children)}else!ot&&gt==null&&Q(st,Tt,xt,ye,ze);((Pt=xt.onVnodeUpdated)||ht)&&queuePostRenderEffect(()=>{Pt&&invokeVNodeHook(Pt,ye,ee,j),ht&&invokeDirectiveHook(ee,j,ye,"updated")},Oe)},U=(j,ee,ye,Oe,ze,Xe,ot)=>{for(let st=0;st<ee.length;st++){const pt=j[st],gt=ee[st],ht=pt.el&&(pt.type===Fragment||!isSameVNodeType(pt,gt)||pt.shapeFlag&70)?f(pt.el):ye;g(pt,gt,ht,null,Oe,ze,Xe,ot,!0)}},Q=(j,ee,ye,Oe,ze)=>{if(ee!==ye){if(ee!==EMPTY_OBJ)for(const Xe in ee)!isReservedProp(Xe)&&!(Xe in ye)&&o(j,Xe,ee[Xe],null,ze,Oe);for(const Xe in ye){if(isReservedProp(Xe))continue;const ot=ye[Xe],st=ee[Xe];ot!==st&&Xe!=="value"&&o(j,Xe,st,ot,ze,Oe)}"value"in ye&&o(j,"value",ee.value,ye.value,ze)}},ne=(j,ee,ye,Oe,ze,Xe,ot,st,pt)=>{const gt=ee.el=j?j.el:c(""),ht=ee.anchor=j?j.anchor:c("");let{patchFlag:Tt,dynamicChildren:xt,slotScopeIds:Pt}=ee;Pt&&(st=st?st.concat(Pt):Pt),j==null?(s(gt,ye,Oe),s(ht,ye,Oe),F(ee.children||[],ye,ht,ze,Xe,ot,st,pt)):Tt>0&&Tt&64&&xt&&j.dynamicChildren?(U(j.dynamicChildren,xt,ye,ze,Xe,ot,st),(ee.key!=null||ze&&ee===ze.subTree)&&traverseStaticChildren(j,ee,!0)):ce(j,ee,ye,ht,ze,Xe,ot,st,pt)},J=(j,ee,ye,Oe,ze,Xe,ot,st,pt)=>{ee.slotScopeIds=st,j==null?ee.shapeFlag&512?ze.ctx.activate(ee,ye,Oe,ot,pt):oe(ee,ye,Oe,ze,Xe,ot,pt):le(j,ee,pt)},oe=(j,ee,ye,Oe,ze,Xe,ot)=>{const st=j.component=createComponentInstance(j,Oe,ze);if(isKeepAlive(j)&&(st.ctx.renderer=H),setupComponent(st,!1,ot),st.asyncDep){if(ze&&ze.registerDep(st,ge,ot),!j.el){const pt=st.subTree=createVNode(Comment);w(null,pt,ee,ye)}}else ge(st,j,ee,ye,ze,Xe,ot)},le=(j,ee,ye)=>{const Oe=ee.component=j.component;if(shouldUpdateComponent(j,ee,ye))if(Oe.asyncDep&&!Oe.asyncResolved){te(Oe,ee,ye);return}else Oe.next=ee,Oe.update();else ee.el=j.el,Oe.vnode=ee},ge=(j,ee,ye,Oe,ze,Xe,ot)=>{const st=()=>{if(j.isMounted){let{next:Tt,bu:xt,u:Pt,parent:tn,vnode:ln}=j;{const Qn=locateNonHydratedAsyncRoot(j);if(Qn){Tt&&(Tt.el=ln.el,te(j,Tt,ot)),Qn.asyncDep.then(()=>{j.isUnmounted||st()});return}}let on=Tt,An;toggleRecurse(j,!1),Tt?(Tt.el=ln.el,te(j,Tt,ot)):Tt=ln,xt&&invokeArrayFns(xt),(An=Tt.props&&Tt.props.onVnodeBeforeUpdate)&&invokeVNodeHook(An,tn,Tt,ln),toggleRecurse(j,!0);const zn=renderComponentRoot(j),Kn=j.subTree;j.subTree=zn,g(Kn,zn,f(Kn.el),pe(Kn),j,ze,Xe),Tt.el=zn.el,on===null&&updateHOCHostEl(j,zn.el),Pt&&queuePostRenderEffect(Pt,ze),(An=Tt.props&&Tt.props.onVnodeUpdated)&&queuePostRenderEffect(()=>invokeVNodeHook(An,tn,Tt,ln),ze)}else{let Tt;const{el:xt,props:Pt}=ee,{bm:tn,m:ln,parent:on,root:An,type:zn}=j,Kn=isAsyncWrapper(ee);toggleRecurse(j,!1),tn&&invokeArrayFns(tn),!Kn&&(Tt=Pt&&Pt.onVnodeBeforeMount)&&invokeVNodeHook(Tt,on,ee),toggleRecurse(j,!0);{An.ce&&An.ce._injectChildStyle(zn);const Qn=j.subTree=renderComponentRoot(j);g(null,Qn,ye,Oe,j,ze,Xe),ee.el=Qn.el}if(ln&&queuePostRenderEffect(ln,ze),!Kn&&(Tt=Pt&&Pt.onVnodeMounted)){const Qn=ee;queuePostRenderEffect(()=>invokeVNodeHook(Tt,on,Qn),ze)}(ee.shapeFlag&256||on&&isAsyncWrapper(on.vnode)&&on.vnode.shapeFlag&256)&&j.a&&queuePostRenderEffect(j.a,ze),j.isMounted=!0,ee=ye=Oe=null}};j.scope.on();const pt=j.effect=new ReactiveEffect(st);j.scope.off();const gt=j.update=pt.run.bind(pt),ht=j.job=pt.runIfDirty.bind(pt);ht.i=j,ht.id=j.uid,pt.scheduler=()=>queueJob(ht),toggleRecurse(j,!0),gt()},te=(j,ee,ye)=>{ee.component=j;const Oe=j.vnode.props;j.vnode=ee,j.next=null,updateProps(j,ee.props,Oe,ye),updateSlots(j,ee.children,ye),pauseTracking(),flushPreFlushCbs(j),resetTracking()},ce=(j,ee,ye,Oe,ze,Xe,ot,st,pt=!1)=>{const gt=j&&j.children,ht=j?j.shapeFlag:0,Tt=ee.children,{patchFlag:xt,shapeFlag:Pt}=ee;if(xt>0){if(xt&128){Te(gt,Tt,ye,Oe,ze,Xe,ot,st,pt);return}else if(xt&256){ue(gt,Tt,ye,Oe,ze,Xe,ot,st,pt);return}}Pt&8?(ht&16&&Le(gt,ze,Xe),Tt!==gt&&d(ye,Tt)):ht&16?Pt&16?Te(gt,Tt,ye,Oe,ze,Xe,ot,st,pt):Le(gt,ze,Xe,!0):(ht&8&&d(ye,""),Pt&16&&F(Tt,ye,Oe,ze,Xe,ot,st,pt))},ue=(j,ee,ye,Oe,ze,Xe,ot,st,pt)=>{j=j||EMPTY_ARR,ee=ee||EMPTY_ARR;const gt=j.length,ht=ee.length,Tt=Math.min(gt,ht);let xt;for(xt=0;xt<Tt;xt++){const Pt=ee[xt]=pt?cloneIfMounted(ee[xt]):normalizeVNode(ee[xt]);g(j[xt],Pt,ye,null,ze,Xe,ot,st,pt)}gt>ht?Le(j,ze,Xe,!0,!1,Tt):F(ee,ye,Oe,ze,Xe,ot,st,pt,Tt)},Te=(j,ee,ye,Oe,ze,Xe,ot,st,pt)=>{let gt=0;const ht=ee.length;let Tt=j.length-1,xt=ht-1;for(;gt<=Tt&&gt<=xt;){const Pt=j[gt],tn=ee[gt]=pt?cloneIfMounted(ee[gt]):normalizeVNode(ee[gt]);if(isSameVNodeType(Pt,tn))g(Pt,tn,ye,null,ze,Xe,ot,st,pt);else break;gt++}for(;gt<=Tt&&gt<=xt;){const Pt=j[Tt],tn=ee[xt]=pt?cloneIfMounted(ee[xt]):normalizeVNode(ee[xt]);if(isSameVNodeType(Pt,tn))g(Pt,tn,ye,null,ze,Xe,ot,st,pt);else break;Tt--,xt--}if(gt>Tt){if(gt<=xt){const Pt=xt+1,tn=Pt<ht?ee[Pt].el:Oe;for(;gt<=xt;)g(null,ee[gt]=pt?cloneIfMounted(ee[gt]):normalizeVNode(ee[gt]),ye,tn,ze,Xe,ot,st,pt),gt++}}else if(gt>xt)for(;gt<=Tt;)Ne(j[gt],ze,Xe,!0),gt++;else{const Pt=gt,tn=gt,ln=new Map;for(gt=tn;gt<=xt;gt++){const Bn=ee[gt]=pt?cloneIfMounted(ee[gt]):normalizeVNode(ee[gt]);Bn.key!=null&&ln.set(Bn.key,gt)}let on,An=0;const zn=xt-tn+1;let Kn=!1,Qn=0;const $s=new Array(zn);for(gt=0;gt<zn;gt++)$s[gt]=0;for(gt=Pt;gt<=Tt;gt++){const Bn=j[gt];if(An>=zn){Ne(Bn,ze,Xe,!0);continue}let Rn;if(Bn.key!=null)Rn=ln.get(Bn.key);else for(on=tn;on<=xt;on++)if($s[on-tn]===0&&isSameVNodeType(Bn,ee[on])){Rn=on;break}Rn===void 0?Ne(Bn,ze,Xe,!0):($s[Rn-tn]=gt+1,Rn>=Qn?Qn=Rn:Kn=!0,g(Bn,ee[Rn],ye,null,ze,Xe,ot,st,pt),An++)}const Ps=Kn?getSequence($s):EMPTY_ARR;for(on=Ps.length-1,gt=zn-1;gt>=0;gt--){const Bn=tn+gt,Rn=ee[Bn],gr=Bn+1<ht?ee[Bn+1].el:Oe;$s[gt]===0?g(null,Rn,ye,gr,ze,Xe,ot,st,pt):Kn&&(on<0||gt!==Ps[on]?Ce(Rn,ye,gr,2):on--)}}},Ce=(j,ee,ye,Oe,ze=null)=>{const{el:Xe,type:ot,transition:st,children:pt,shapeFlag:gt}=j;if(gt&6){Ce(j.component.subTree,ee,ye,Oe);return}if(gt&128){j.suspense.move(ee,ye,Oe);return}if(gt&64){ot.move(j,ee,ye,H);return}if(ot===Fragment){s(Xe,ee,ye);for(let Tt=0;Tt<pt.length;Tt++)Ce(pt[Tt],ee,ye,Oe);s(j.anchor,ee,ye);return}if(ot===Static){N(j,ee,ye);return}if(Oe!==2&&gt&1&&st)if(Oe===0)st.beforeEnter(Xe),s(Xe,ee,ye),queuePostRenderEffect(()=>st.enter(Xe),ze);else{const{leave:Tt,delayLeave:xt,afterLeave:Pt}=st,tn=()=>s(Xe,ee,ye),ln=()=>{Tt(Xe,()=>{tn(),Pt&&Pt()})};xt?xt(Xe,tn,ln):ln()}else s(Xe,ee,ye)},Ne=(j,ee,ye,Oe=!1,ze=!1)=>{const{type:Xe,props:ot,ref:st,children:pt,dynamicChildren:gt,shapeFlag:ht,patchFlag:Tt,dirs:xt,cacheIndex:Pt}=j;if(Tt===-2&&(ze=!1),st!=null&&setRef(st,null,ye,j,!0),Pt!=null&&(ee.renderCache[Pt]=void 0),ht&256){ee.ctx.deactivate(j);return}const tn=ht&1&&xt,ln=!isAsyncWrapper(j);let on;if(ln&&(on=ot&&ot.onVnodeBeforeUnmount)&&invokeVNodeHook(on,ee,j),ht&6)we(j.component,ye,Oe);else{if(ht&128){j.suspense.unmount(ye,Oe);return}tn&&invokeDirectiveHook(j,null,ee,"beforeUnmount"),ht&64?j.type.remove(j,ee,ye,H,Oe):gt&&!gt.hasOnce&&(Xe!==Fragment||Tt>0&&Tt&64)?Le(gt,ee,ye,!1,!0):(Xe===Fragment&&Tt&384||!ze&&ht&16)&&Le(pt,ee,ye),Oe&&Re(j)}(ln&&(on=ot&&ot.onVnodeUnmounted)||tn)&&queuePostRenderEffect(()=>{on&&invokeVNodeHook(on,ee,j),tn&&invokeDirectiveHook(j,null,ee,"unmounted")},ye)},Re=j=>{const{type:ee,el:ye,anchor:Oe,transition:ze}=j;if(ee===Fragment){Ae(ye,Oe);return}if(ee===Static){A(j);return}const Xe=()=>{r(ye),ze&&!ze.persisted&&ze.afterLeave&&ze.afterLeave()};if(j.shapeFlag&1&&ze&&!ze.persisted){const{leave:ot,delayLeave:st}=ze,pt=()=>ot(ye,Xe);st?st(j.el,Xe,pt):pt()}else Xe()},Ae=(j,ee)=>{let ye;for(;j!==ee;)ye=y(j),r(j),j=ye;r(ee)},we=(j,ee,ye)=>{const{bum:Oe,scope:ze,job:Xe,subTree:ot,um:st,m:pt,a:gt}=j;invalidateMount(pt),invalidateMount(gt),Oe&&invokeArrayFns(Oe),ze.stop(),Xe&&(Xe.flags|=8,Ne(ot,j,ee,ye)),st&&queuePostRenderEffect(st,ee),queuePostRenderEffect(()=>{j.isUnmounted=!0},ee),ee&&ee.pendingBranch&&!ee.isUnmounted&&j.asyncDep&&!j.asyncResolved&&j.suspenseId===ee.pendingId&&(ee.deps--,ee.deps===0&&ee.resolve())},Le=(j,ee,ye,Oe=!1,ze=!1,Xe=0)=>{for(let ot=Xe;ot<j.length;ot++)Ne(j[ot],ee,ye,Oe,ze)},pe=j=>{if(j.shapeFlag&6)return pe(j.component.subTree);if(j.shapeFlag&128)return j.suspense.next();const ee=y(j.anchor||j.el),ye=ee&&ee[TeleportEndKey];return ye?y(ye):ee};let B=!1;const D=(j,ee,ye)=>{j==null?ee._vnode&&Ne(ee._vnode,null,null,!0):g(ee._vnode||null,j,ee,null,null,null,ye),ee._vnode=j,B||(B=!0,flushPreFlushCbs(),flushPostFlushCbs(),B=!1)},H={p:g,um:Ne,m:Ce,r:Re,mt:oe,mc:F,pc:ce,pbc:U,n:pe,o:n};return{render:D,hydrate:void 0,createApp:createAppAPI(D)}}function resolveChildrenNamespace({type:n,props:e},t){return t==="svg"&&n==="foreignObject"||t==="mathml"&&n==="annotation-xml"&&e&&e.encoding&&e.encoding.includes("html")?void 0:t}function toggleRecurse({effect:n,job:e},t){t?(n.flags|=32,e.flags|=4):(n.flags&=-33,e.flags&=-5)}function needTransition(n,e){return(!n||n&&!n.pendingBranch)&&e&&!e.persisted}function traverseStaticChildren(n,e,t=!1){const s=n.children,r=e.children;if(isArray(s)&&isArray(r))for(let o=0;o<s.length;o++){const i=s[o];let c=r[o];c.shapeFlag&1&&!c.dynamicChildren&&((c.patchFlag<=0||c.patchFlag===32)&&(c=r[o]=cloneIfMounted(r[o]),c.el=i.el),!t&&c.patchFlag!==-2&&traverseStaticChildren(i,c)),c.type===Text&&(c.el=i.el)}}function getSequence(n){const e=n.slice(),t=[0];let s,r,o,i,c;const a=n.length;for(s=0;s<a;s++){const l=n[s];if(l!==0){if(r=t[t.length-1],n[r]<l){e[s]=r,t.push(s);continue}for(o=0,i=t.length-1;o<i;)c=o+i>>1,n[t[c]]<l?o=c+1:i=c;l<n[t[o]]&&(o>0&&(e[s]=t[o-1]),t[o]=s)}}for(o=t.length,i=t[o-1];o-- >0;)t[o]=i,i=e[i];return t}function locateNonHydratedAsyncRoot(n){const e=n.subTree.component;if(e)return e.asyncDep&&!e.asyncResolved?e:locateNonHydratedAsyncRoot(e)}function invalidateMount(n){if(n)for(let e=0;e<n.length;e++)n[e].flags|=8}const ssrContextKey=Symbol.for("v-scx"),useSSRContext=()=>inject(ssrContextKey);function watch(n,e,t){return doWatch(n,e,t)}function doWatch(n,e,t=EMPTY_OBJ){const{immediate:s,deep:r,flush:o,once:i}=t,c=extend({},t),a=e&&s||!e&&o!=="post";let l;if(isInSSRComponentSetup){if(o==="sync"){const m=useSSRContext();l=m.__watcherHandles||(m.__watcherHandles=[])}else if(!a){const m=()=>{};return m.stop=NOOP,m.resume=NOOP,m.pause=NOOP,m}}const d=currentInstance;c.call=(m,h,g)=>callWithAsyncErrorHandling(m,d,h,g);let f=!1;o==="post"?c.scheduler=m=>{queuePostRenderEffect(m,d&&d.suspense)}:o!=="sync"&&(f=!0,c.scheduler=(m,h)=>{h?m():queueJob(m)}),c.augmentJob=m=>{e&&(m.flags|=4),f&&(m.flags|=2,d&&(m.id=d.uid,m.i=d))};const y=watch$1(n,e,c);return isInSSRComponentSetup&&(l?l.push(y):a&&y()),y}function instanceWatch(n,e,t){const s=this.proxy,r=isString$1(n)?n.includes(".")?createPathGetter(s,n):()=>s[n]:n.bind(s,s);let o;isFunction$1(e)?o=e:(o=e.handler,t=e);const i=setCurrentInstance(this),c=doWatch(r,o.bind(s),t);return i(),c}function createPathGetter(n,e){const t=e.split(".");return()=>{let s=n;for(let r=0;r<t.length&&s;r++)s=s[t[r]];return s}}const getModelModifiers=(n,e)=>e==="modelValue"||e==="model-value"?n.modelModifiers:n[`${e}Modifiers`]||n[`${camelize(e)}Modifiers`]||n[`${hyphenate(e)}Modifiers`];function emit(n,e,...t){if(n.isUnmounted)return;const s=n.vnode.props||EMPTY_OBJ;let r=t;const o=e.startsWith("update:"),i=o&&getModelModifiers(s,e.slice(7));i&&(i.trim&&(r=t.map(d=>isString$1(d)?d.trim():d)),i.number&&(r=t.map(looseToNumber)));let c,a=s[c=toHandlerKey(e)]||s[c=toHandlerKey(camelize(e))];!a&&o&&(a=s[c=toHandlerKey(hyphenate(e))]),a&&callWithAsyncErrorHandling(a,n,6,r);const l=s[c+"Once"];if(l){if(!n.emitted)n.emitted={};else if(n.emitted[c])return;n.emitted[c]=!0,callWithAsyncErrorHandling(l,n,6,r)}}function normalizeEmitsOptions(n,e,t=!1){const s=e.emitsCache,r=s.get(n);if(r!==void 0)return r;const o=n.emits;let i={},c=!1;if(!isFunction$1(n)){const a=l=>{const d=normalizeEmitsOptions(l,e,!0);d&&(c=!0,extend(i,d))};!t&&e.mixins.length&&e.mixins.forEach(a),n.extends&&a(n.extends),n.mixins&&n.mixins.forEach(a)}return!o&&!c?(isObject(n)&&s.set(n,null),null):(isArray(o)?o.forEach(a=>i[a]=null):extend(i,o),isObject(n)&&s.set(n,i),i)}function isEmitListener(n,e){return!n||!isOn(e)?!1:(e=e.slice(2).replace(/Once$/,""),hasOwn(n,e[0].toLowerCase()+e.slice(1))||hasOwn(n,hyphenate(e))||hasOwn(n,e))}function markAttrsAccessed(){}function renderComponentRoot(n){const{type:e,vnode:t,proxy:s,withProxy:r,propsOptions:[o],slots:i,attrs:c,emit:a,render:l,renderCache:d,props:f,data:y,setupState:m,ctx:h,inheritAttrs:g}=n,x=setCurrentRenderingInstance(n);let w,I;try{if(t.shapeFlag&4){const A=r||s,T=A;w=normalizeVNode(l.call(T,A,d,f,m,y,h)),I=c}else{const A=e;w=normalizeVNode(A.length>1?A(f,{attrs:c,slots:i,emit:a}):A(f,null)),I=e.props?c:getFunctionalFallthrough(c)}}catch(A){blockStack.length=0,handleError(A,n,1),w=createVNode(Comment)}let N=w;if(I&&g!==!1){const A=Object.keys(I),{shapeFlag:T}=N;A.length&&T&7&&(o&&A.some(isModelListener)&&(I=filterModelListeners(I,o)),N=cloneVNode(N,I,!1,!0))}return t.dirs&&(N=cloneVNode(N,null,!1,!0),N.dirs=N.dirs?N.dirs.concat(t.dirs):t.dirs),t.transition&&setTransitionHooks(N,t.transition),w=N,setCurrentRenderingInstance(x),w}const getFunctionalFallthrough=n=>{let e;for(const t in n)(t==="class"||t==="style"||isOn(t))&&((e||(e={}))[t]=n[t]);return e},filterModelListeners=(n,e)=>{const t={};for(const s in n)(!isModelListener(s)||!(s.slice(9)in e))&&(t[s]=n[s]);return t};function shouldUpdateComponent(n,e,t){const{props:s,children:r,component:o}=n,{props:i,children:c,patchFlag:a}=e,l=o.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&a>=0){if(a&1024)return!0;if(a&16)return s?hasPropsChanged(s,i,l):!!i;if(a&8){const d=e.dynamicProps;for(let f=0;f<d.length;f++){const y=d[f];if(i[y]!==s[y]&&!isEmitListener(l,y))return!0}}}else return(r||c)&&(!c||!c.$stable)?!0:s===i?!1:s?i?hasPropsChanged(s,i,l):!0:!!i;return!1}function hasPropsChanged(n,e,t){const s=Object.keys(e);if(s.length!==Object.keys(n).length)return!0;for(let r=0;r<s.length;r++){const o=s[r];if(e[o]!==n[o]&&!isEmitListener(t,o))return!0}return!1}function updateHOCHostEl({vnode:n,parent:e},t){for(;e;){const s=e.subTree;if(s.suspense&&s.suspense.activeBranch===n&&(s.el=n.el),s===n)(n=e.vnode).el=t,e=e.parent;else break}}const isSuspense=n=>n.__isSuspense;function queueEffectWithSuspense(n,e){e&&e.pendingBranch?isArray(n)?e.effects.push(...n):e.effects.push(n):queuePostFlushCb(n)}const Fragment=Symbol.for("v-fgt"),Text=Symbol.for("v-txt"),Comment=Symbol.for("v-cmt"),Static=Symbol.for("v-stc"),blockStack=[];let currentBlock=null;function openBlock(n=!1){blockStack.push(currentBlock=n?null:[])}function closeBlock(){blockStack.pop(),currentBlock=blockStack[blockStack.length-1]||null}let isBlockTreeEnabled=1;function setBlockTracking(n,e=!1){isBlockTreeEnabled+=n,n<0&&currentBlock&&e&&(currentBlock.hasOnce=!0)}function setupBlock(n){return n.dynamicChildren=isBlockTreeEnabled>0?currentBlock||EMPTY_ARR:null,closeBlock(),isBlockTreeEnabled>0&&currentBlock&&currentBlock.push(n),n}function createElementBlock(n,e,t,s,r,o){return setupBlock(createBaseVNode(n,e,t,s,r,o,!0))}function isVNode(n){return n?n.__v_isVNode===!0:!1}function isSameVNodeType(n,e){return n.type===e.type&&n.key===e.key}const normalizeKey=({key:n})=>n??null,normalizeRef=({ref:n,ref_key:e,ref_for:t})=>(typeof n=="number"&&(n=""+n),n!=null?isString$1(n)||isRef(n)||isFunction$1(n)?{i:currentRenderingInstance,r:n,k:e,f:!!t}:n:null);function createBaseVNode(n,e=null,t=null,s=0,r=null,o=n===Fragment?0:1,i=!1,c=!1){const a={__v_isVNode:!0,__v_skip:!0,type:n,props:e,key:e&&normalizeKey(e),ref:e&&normalizeRef(e),scopeId:currentScopeId,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:o,patchFlag:s,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:currentRenderingInstance};return c?(normalizeChildren(a,t),o&128&&n.normalize(a)):t&&(a.shapeFlag|=isString$1(t)?8:16),isBlockTreeEnabled>0&&!i&&currentBlock&&(a.patchFlag>0||o&6)&&a.patchFlag!==32&&currentBlock.push(a),a}const createVNode=_createVNode;function _createVNode(n,e=null,t=null,s=0,r=null,o=!1){if((!n||n===NULL_DYNAMIC_COMPONENT)&&(n=Comment),isVNode(n)){const c=cloneVNode(n,e,!0);return t&&normalizeChildren(c,t),isBlockTreeEnabled>0&&!o&&currentBlock&&(c.shapeFlag&6?currentBlock[currentBlock.indexOf(n)]=c:currentBlock.push(c)),c.patchFlag=-2,c}if(isClassComponent(n)&&(n=n.__vccOpts),e){e=guardReactiveProps(e);let{class:c,style:a}=e;c&&!isString$1(c)&&(e.class=normalizeClass(c)),isObject(a)&&(isProxy(a)&&!isArray(a)&&(a=extend({},a)),e.style=normalizeStyle(a))}const i=isString$1(n)?1:isSuspense(n)?128:isTeleport(n)?64:isObject(n)?4:isFunction$1(n)?2:0;return createBaseVNode(n,e,t,s,r,i,o,!0)}function guardReactiveProps(n){return n?isProxy(n)||isInternalObject(n)?extend({},n):n:null}function cloneVNode(n,e,t=!1,s=!1){const{props:r,ref:o,patchFlag:i,children:c,transition:a}=n,l=e?mergeProps(r||{},e):r,d={__v_isVNode:!0,__v_skip:!0,type:n.type,props:l,key:l&&normalizeKey(l),ref:e&&e.ref?t&&o?isArray(o)?o.concat(normalizeRef(e)):[o,normalizeRef(e)]:normalizeRef(e):o,scopeId:n.scopeId,slotScopeIds:n.slotScopeIds,children:c,target:n.target,targetStart:n.targetStart,targetAnchor:n.targetAnchor,staticCount:n.staticCount,shapeFlag:n.shapeFlag,patchFlag:e&&n.type!==Fragment?i===-1?16:i|16:i,dynamicProps:n.dynamicProps,dynamicChildren:n.dynamicChildren,appContext:n.appContext,dirs:n.dirs,transition:a,component:n.component,suspense:n.suspense,ssContent:n.ssContent&&cloneVNode(n.ssContent),ssFallback:n.ssFallback&&cloneVNode(n.ssFallback),el:n.el,anchor:n.anchor,ctx:n.ctx,ce:n.ce};return a&&s&&setTransitionHooks(d,a.clone(d)),d}function createTextVNode(n=" ",e=0){return createVNode(Text,null,n,e)}function normalizeVNode(n){return n==null||typeof n=="boolean"?createVNode(Comment):isArray(n)?createVNode(Fragment,null,n.slice()):isVNode(n)?cloneIfMounted(n):createVNode(Text,null,String(n))}function cloneIfMounted(n){return n.el===null&&n.patchFlag!==-1||n.memo?n:cloneVNode(n)}function normalizeChildren(n,e){let t=0;const{shapeFlag:s}=n;if(e==null)e=null;else if(isArray(e))t=16;else if(typeof e=="object")if(s&65){const r=e.default;r&&(r._c&&(r._d=!1),normalizeChildren(n,r()),r._c&&(r._d=!0));return}else{t=32;const r=e._;!r&&!isInternalObject(e)?e._ctx=currentRenderingInstance:r===3&&currentRenderingInstance&&(currentRenderingInstance.slots._===1?e._=1:(e._=2,n.patchFlag|=1024))}else isFunction$1(e)?(e={default:e,_ctx:currentRenderingInstance},t=32):(e=String(e),s&64?(t=16,e=[createTextVNode(e)]):t=8);n.children=e,n.shapeFlag|=t}function mergeProps(...n){const e={};for(let t=0;t<n.length;t++){const s=n[t];for(const r in s)if(r==="class")e.class!==s.class&&(e.class=normalizeClass([e.class,s.class]));else if(r==="style")e.style=normalizeStyle([e.style,s.style]);else if(isOn(r)){const o=e[r],i=s[r];i&&o!==i&&!(isArray(o)&&o.includes(i))&&(e[r]=o?[].concat(o,i):i)}else r!==""&&(e[r]=s[r])}return e}function invokeVNodeHook(n,e,t,s=null){callWithAsyncErrorHandling(n,e,7,[t,s])}const emptyAppContext=createAppContext();let uid=0;function createComponentInstance(n,e,t){const s=n.type,r=(e?e.appContext:n.appContext)||emptyAppContext,o={uid:uid++,vnode:n,type:s,parent:e,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(r.provides),ids:e?e.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:normalizePropsOptions(s,r),emitsOptions:normalizeEmitsOptions(s,r),emit:null,emitted:null,propsDefaults:EMPTY_OBJ,inheritAttrs:s.inheritAttrs,ctx:EMPTY_OBJ,data:EMPTY_OBJ,props:EMPTY_OBJ,attrs:EMPTY_OBJ,slots:EMPTY_OBJ,refs:EMPTY_OBJ,setupState:EMPTY_OBJ,setupContext:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return o.ctx={_:o},o.root=e?e.root:o,o.emit=emit.bind(null,o),n.ce&&n.ce(o),o}let currentInstance=null,internalSetCurrentInstance,setInSSRSetupState;{const n=getGlobalThis(),e=(t,s)=>{let r;return(r=n[t])||(r=n[t]=[]),r.push(s),o=>{r.length>1?r.forEach(i=>i(o)):r[0](o)}};internalSetCurrentInstance=e("__VUE_INSTANCE_SETTERS__",t=>currentInstance=t),setInSSRSetupState=e("__VUE_SSR_SETTERS__",t=>isInSSRComponentSetup=t)}const setCurrentInstance=n=>{const e=currentInstance;return internalSetCurrentInstance(n),n.scope.on(),()=>{n.scope.off(),internalSetCurrentInstance(e)}},unsetCurrentInstance=()=>{currentInstance&&currentInstance.scope.off(),internalSetCurrentInstance(null)};function isStatefulComponent(n){return n.vnode.shapeFlag&4}let isInSSRComponentSetup=!1;function setupComponent(n,e=!1,t=!1){e&&setInSSRSetupState(e);const{props:s,children:r}=n.vnode,o=isStatefulComponent(n);initProps(n,s,o,e),initSlots(n,r,t);const i=o?setupStatefulComponent(n,e):void 0;return e&&setInSSRSetupState(!1),i}function setupStatefulComponent(n,e){const t=n.type;n.accessCache=Object.create(null),n.proxy=new Proxy(n.ctx,PublicInstanceProxyHandlers);const{setup:s}=t;if(s){pauseTracking();const r=n.setupContext=s.length>1?createSetupContext(n):null,o=setCurrentInstance(n),i=callWithErrorHandling(s,n,0,[n.props,r]),c=isPromise$1(i);if(resetTracking(),o(),(c||n.sp)&&!isAsyncWrapper(n)&&markAsyncBoundary(n),c){if(i.then(unsetCurrentInstance,unsetCurrentInstance),e)return i.then(a=>{handleSetupResult(n,a)}).catch(a=>{handleError(a,n,0)});n.asyncDep=i}else handleSetupResult(n,i)}else finishComponentSetup(n)}function handleSetupResult(n,e,t){isFunction$1(e)?n.type.__ssrInlineRender?n.ssrRender=e:n.render=e:isObject(e)&&(n.setupState=proxyRefs(e)),finishComponentSetup(n)}function finishComponentSetup(n,e,t){const s=n.type;n.render||(n.render=s.render||NOOP);{const r=setCurrentInstance(n);pauseTracking();try{applyOptions(n)}finally{resetTracking(),r()}}}const attrsProxyHandlers={get(n,e){return track(n,"get",""),n[e]}};function createSetupContext(n){const e=t=>{n.exposed=t||{}};return{attrs:new Proxy(n.attrs,attrsProxyHandlers),slots:n.slots,emit:n.emit,expose:e}}function getComponentPublicInstance(n){return n.exposed?n.exposeProxy||(n.exposeProxy=new Proxy(proxyRefs(markRaw(n.exposed)),{get(e,t){if(t in e)return e[t];if(t in publicPropertiesMap)return publicPropertiesMap[t](n)},has(e,t){return t in e||t in publicPropertiesMap}})):n.proxy}const classifyRE=/(?:^|[-_])(\w)/g,classify=n=>n.replace(classifyRE,e=>e.toUpperCase()).replace(/[-_]/g,"");function getComponentName(n,e=!0){return isFunction$1(n)?n.displayName||n.name:n.name||e&&n.__name}function formatComponentName(n,e,t=!1){let s=getComponentName(e);if(!s&&e.__file){const r=e.__file.match(/([^/\\]+)\.\w+$/);r&&(s=r[1])}if(!s&&n&&n.parent){const r=o=>{for(const i in o)if(o[i]===e)return i};s=r(n.components||n.parent.type.components)||r(n.appContext.components)}return s?classify(s):t?"App":"Anonymous"}function isClassComponent(n){return isFunction$1(n)&&"__vccOpts"in n}const computed=(n,e)=>computed$1(n,e,isInSSRComponentSetup),version$8="3.5.13";/**
* @vue/runtime-dom v3.5.13
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let policy;const tt=typeof window<"u"&&window.trustedTypes;if(tt)try{policy=tt.createPolicy("vue",{createHTML:n=>n})}catch{}const unsafeToTrustedHTML=policy?n=>policy.createHTML(n):n=>n,svgNS="http://www.w3.org/2000/svg",mathmlNS="http://www.w3.org/1998/Math/MathML",doc=typeof document<"u"?document:null,templateContainer=doc&&doc.createElement("template"),nodeOps={insert:(n,e,t)=>{e.insertBefore(n,t||null)},remove:n=>{const e=n.parentNode;e&&e.removeChild(n)},createElement:(n,e,t,s)=>{const r=e==="svg"?doc.createElementNS(svgNS,n):e==="mathml"?doc.createElementNS(mathmlNS,n):t?doc.createElement(n,{is:t}):doc.createElement(n);return n==="select"&&s&&s.multiple!=null&&r.setAttribute("multiple",s.multiple),r},createText:n=>doc.createTextNode(n),createComment:n=>doc.createComment(n),setText:(n,e)=>{n.nodeValue=e},setElementText:(n,e)=>{n.textContent=e},parentNode:n=>n.parentNode,nextSibling:n=>n.nextSibling,querySelector:n=>doc.querySelector(n),setScopeId(n,e){n.setAttribute(e,"")},insertStaticContent(n,e,t,s,r,o){const i=t?t.previousSibling:e.lastChild;if(r&&(r===o||r.nextSibling))for(;e.insertBefore(r.cloneNode(!0),t),!(r===o||!(r=r.nextSibling)););else{templateContainer.innerHTML=unsafeToTrustedHTML(s==="svg"?`<svg>${n}</svg>`:s==="mathml"?`<math>${n}</math>`:n);const c=templateContainer.content;if(s==="svg"||s==="mathml"){const a=c.firstChild;for(;a.firstChild;)c.appendChild(a.firstChild);c.removeChild(a)}e.insertBefore(c,t)}return[i?i.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}},vtcKey=Symbol("_vtc");function patchClass(n,e,t){const s=n[vtcKey];s&&(e=(e?[e,...s]:[...s]).join(" ")),e==null?n.removeAttribute("class"):t?n.setAttribute("class",e):n.className=e}const vShowOriginalDisplay=Symbol("_vod"),vShowHidden=Symbol("_vsh"),CSS_VAR_TEXT=Symbol(""),displayRE=/(^|;)\s*display\s*:/;function patchStyle(n,e,t){const s=n.style,r=isString$1(t);let o=!1;if(t&&!r){if(e)if(isString$1(e))for(const i of e.split(";")){const c=i.slice(0,i.indexOf(":")).trim();t[c]==null&&setStyle(s,c,"")}else for(const i in e)t[i]==null&&setStyle(s,i,"");for(const i in t)i==="display"&&(o=!0),setStyle(s,i,t[i])}else if(r){if(e!==t){const i=s[CSS_VAR_TEXT];i&&(t+=";"+i),s.cssText=t,o=displayRE.test(t)}}else e&&n.removeAttribute("style");vShowOriginalDisplay in n&&(n[vShowOriginalDisplay]=o?s.display:"",n[vShowHidden]&&(s.display="none"))}const importantRE=/\s*!important$/;function setStyle(n,e,t){if(isArray(t))t.forEach(s=>setStyle(n,e,s));else if(t==null&&(t=""),e.startsWith("--"))n.setProperty(e,t);else{const s=autoPrefix(n,e);importantRE.test(t)?n.setProperty(hyphenate(s),t.replace(importantRE,""),"important"):n[s]=t}}const prefixes=["Webkit","Moz","ms"],prefixCache={};function autoPrefix(n,e){const t=prefixCache[e];if(t)return t;let s=camelize(e);if(s!=="filter"&&s in n)return prefixCache[e]=s;s=capitalize(s);for(let r=0;r<prefixes.length;r++){const o=prefixes[r]+s;if(o in n)return prefixCache[e]=o}return e}const xlinkNS="http://www.w3.org/1999/xlink";function patchAttr(n,e,t,s,r,o=isSpecialBooleanAttr(e)){s&&e.startsWith("xlink:")?t==null?n.removeAttributeNS(xlinkNS,e.slice(6,e.length)):n.setAttributeNS(xlinkNS,e,t):t==null||o&&!includeBooleanAttr(t)?n.removeAttribute(e):n.setAttribute(e,o?"":isSymbol(t)?String(t):t)}function patchDOMProp(n,e,t,s,r){if(e==="innerHTML"||e==="textContent"){t!=null&&(n[e]=e==="innerHTML"?unsafeToTrustedHTML(t):t);return}const o=n.tagName;if(e==="value"&&o!=="PROGRESS"&&!o.includes("-")){const c=o==="OPTION"?n.getAttribute("value")||"":n.value,a=t==null?n.type==="checkbox"?"on":"":String(t);(c!==a||!("_value"in n))&&(n.value=a),t==null&&n.removeAttribute(e),n._value=t;return}let i=!1;if(t===""||t==null){const c=typeof n[e];c==="boolean"?t=includeBooleanAttr(t):t==null&&c==="string"?(t="",i=!0):c==="number"&&(t=0,i=!0)}try{n[e]=t}catch{}i&&n.removeAttribute(r||e)}function addEventListener(n,e,t,s){n.addEventListener(e,t,s)}function removeEventListener(n,e,t,s){n.removeEventListener(e,t,s)}const veiKey=Symbol("_vei");function patchEvent(n,e,t,s,r=null){const o=n[veiKey]||(n[veiKey]={}),i=o[e];if(s&&i)i.value=s;else{const[c,a]=parseName(e);if(s){const l=o[e]=createInvoker(s,r);addEventListener(n,c,l,a)}else i&&(removeEventListener(n,c,i,a),o[e]=void 0)}}const optionsModifierRE=/(?:Once|Passive|Capture)$/;function parseName(n){let e;if(optionsModifierRE.test(n)){e={};let s;for(;s=n.match(optionsModifierRE);)n=n.slice(0,n.length-s[0].length),e[s[0].toLowerCase()]=!0}return[n[2]===":"?n.slice(3):hyphenate(n.slice(2)),e]}let cachedNow=0;const p$1=Promise.resolve(),getNow=()=>cachedNow||(p$1.then(()=>cachedNow=0),cachedNow=Date.now());function createInvoker(n,e){const t=s=>{if(!s._vts)s._vts=Date.now();else if(s._vts<=t.attached)return;callWithAsyncErrorHandling(patchStopImmediatePropagation(s,t.value),e,5,[s])};return t.value=n,t.attached=getNow(),t}function patchStopImmediatePropagation(n,e){if(isArray(e)){const t=n.stopImmediatePropagation;return n.stopImmediatePropagation=()=>{t.call(n),n._stopped=!0},e.map(s=>r=>!r._stopped&&s&&s(r))}else return e}const isNativeOn=n=>n.charCodeAt(0)===111&&n.charCodeAt(1)===110&&n.charCodeAt(2)>96&&n.charCodeAt(2)<123,patchProp=(n,e,t,s,r,o)=>{const i=r==="svg";e==="class"?patchClass(n,s,i):e==="style"?patchStyle(n,t,s):isOn(e)?isModelListener(e)||patchEvent(n,e,t,s,o):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):shouldSetAsProp(n,e,s,i))?(patchDOMProp(n,e,s),!n.tagName.includes("-")&&(e==="value"||e==="checked"||e==="selected")&&patchAttr(n,e,s,i,o,e!=="value")):n._isVueCE&&(/[A-Z]/.test(e)||!isString$1(s))?patchDOMProp(n,camelize(e),s,o,e):(e==="true-value"?n._trueValue=s:e==="false-value"&&(n._falseValue=s),patchAttr(n,e,s,i))};function shouldSetAsProp(n,e,t,s){if(s)return!!(e==="innerHTML"||e==="textContent"||e in n&&isNativeOn(e)&&isFunction$1(t));if(e==="spellcheck"||e==="draggable"||e==="translate"||e==="form"||e==="list"&&n.tagName==="INPUT"||e==="type"&&n.tagName==="TEXTAREA")return!1;if(e==="width"||e==="height"){const r=n.tagName;if(r==="IMG"||r==="VIDEO"||r==="CANVAS"||r==="SOURCE")return!1}return isNativeOn(e)&&isString$1(t)?!1:e in n}const rendererOptions=extend({patchProp},nodeOps);let renderer;function ensureRenderer(){return renderer||(renderer=createRenderer(rendererOptions))}const createApp=(...n)=>{const e=ensureRenderer().createApp(...n),{mount:t}=e;return e.mount=s=>{const r=normalizeContainer(s);if(!r)return;const o=e._component;!isFunction$1(o)&&!o.render&&!o.template&&(o.template=r.innerHTML),r.nodeType===1&&(r.textContent="");const i=t(r,!1,resolveRootNamespace(r));return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),i},e};function resolveRootNamespace(n){if(n instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&n instanceof MathMLElement)return"mathml"}function normalizeContainer(n){return isString$1(n)?document.querySelector(n):n}const _imports_0="/logo.svg",TWINKLE_TWINKLE={notes:[{pitch:60,startTime:0,endTime:.5},{pitch:60,startTime:.5,endTime:1},{pitch:67,startTime:1,endTime:1.5},{pitch:67,startTime:1.5,endTime:2},{pitch:69,startTime:2,endTime:2.5},{pitch:69,startTime:2.5,endTime:3},{pitch:67,startTime:3,endTime:4},{pitch:65,startTime:4,endTime:4.5},{pitch:65,startTime:4.5,endTime:5},{pitch:64,startTime:5,endTime:5.5},{pitch:64,startTime:5.5,endTime:6},{pitch:62,startTime:6,endTime:6.5},{pitch:62,startTime:6.5,endTime:7},{pitch:60,startTime:7,endTime:8}],totalTime:8},DRUMS={notes:[{pitch:36,quantizedStartStep:0,quantizedEndStep:1,isDrum:!0},{pitch:38,quantizedStartStep:0,quantizedEndStep:1,isDrum:!0},{pitch:42,quantizedStartStep:0,quantizedEndStep:1,isDrum:!0},{pitch:46,quantizedStartStep:0,quantizedEndStep:1,isDrum:!0},{pitch:42,quantizedStartStep:2,quantizedEndStep:3,isDrum:!0},{pitch:42,quantizedStartStep:3,quantizedEndStep:4,isDrum:!0},{pitch:42,quantizedStartStep:4,quantizedEndStep:5,isDrum:!0},{pitch:50,quantizedStartStep:4,quantizedEndStep:5,isDrum:!0},{pitch:36,quantizedStartStep:6,quantizedEndStep:7,isDrum:!0},{pitch:38,quantizedStartStep:6,quantizedEndStep:7,isDrum:!0},{pitch:42,quantizedStartStep:6,quantizedEndStep:7,isDrum:!0},{pitch:45,quantizedStartStep:6,quantizedEndStep:7,isDrum:!0},{pitch:36,quantizedStartStep:8,quantizedEndStep:9,isDrum:!0},{pitch:42,quantizedStartStep:8,quantizedEndStep:9,isDrum:!0},{pitch:46,quantizedStartStep:8,quantizedEndStep:9,isDrum:!0},{pitch:42,quantizedStartStep:10,quantizedEndStep:11,isDrum:!0},{pitch:48,quantizedStartStep:10,quantizedEndStep:11,isDrum:!0},{pitch:50,quantizedStartStep:10,quantizedEndStep:11,isDrum:!0}],quantizationInfo:{stepsPerQuarter:4},tempos:[{time:0,qpm:120}],totalQuantizedSteps:11};function getAugmentedNamespace(n){if(Object.prototype.hasOwnProperty.call(n,"__esModule"))return n;var e=n.default;if(typeof e=="function"){var t=function s(){return this instanceof s?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}),t}var es6={exports:{}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EPSILON_FLOAT32$1=1e-7,EPSILON_FLOAT16$1=1e-4;class DataStorage{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class KernelBackend{decComplexRef(e){}time(e){return notYetImplemented("time")}read(e){return notYetImplemented("read")}readSync(e){return notYetImplemented("readSync")}numDataIds(){return notYetImplemented("numDataIds")}disposeData(e){return notYetImplemented("disposeData")}write(e,t,s){return notYetImplemented("write")}move(e,t,s,r){return notYetImplemented("move")}memory(){return notYetImplemented("memory")}floatPrecision(){return notYetImplemented("floatPrecision")}epsilon(){return this.floatPrecision()===32?EPSILON_FLOAT32$1:EPSILON_FLOAT16$1}batchMatMul(e,t,s,r){return notYetImplemented("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:s,transposeB:r,bias:o,activation:i,preluActivationWeights:c}){return notYetImplemented("fusedBatchMatMul")}slice(e,t,s){return notYetImplemented("slice")}stridedSlice(e,t,s,r){return notYetImplemented("stridedSlice")}unstack(e,t){return notYetImplemented("unstack")}reverse(e,t){return notYetImplemented("reverse")}concat(e,t){return notYetImplemented("concat")}neg(e){return notYetImplemented("neg")}add(e,t){return notYetImplemented("add")}addN(e){return notYetImplemented("addN")}subtract(e,t){return notYetImplemented("subtract")}multiply(e,t){return notYetImplemented("multiply")}realDivide(e,t){return notYetImplemented("realDivide")}floorDiv(e,t){return notYetImplemented("floorDiv")}sum(e,t){return notYetImplemented("sum")}prod(e,t){return notYetImplemented("prod")}unsortedSegmentSum(e,t,s){return notYetImplemented("unsortedSegmentSum")}argMin(e,t){return notYetImplemented("argMin")}argMax(e,t){return notYetImplemented("argMax")}equal(e,t){return notYetImplemented("equal")}notEqual(e,t){return notYetImplemented("notEqual")}less(e,t){return notYetImplemented("less")}lessEqual(e,t){return notYetImplemented("lessEqual")}greater(e,t){return notYetImplemented("greater")}greaterEqual(e,t){return notYetImplemented("greaterEqual")}logicalNot(e){return notYetImplemented("logicalNot")}logicalAnd(e,t){return notYetImplemented("logicalAnd")}logicalOr(e,t){return notYetImplemented("logicalOr")}where(e){return notYetImplemented("where")}select(e,t,s){return notYetImplemented("select")}topk(e,t,s){return notYetImplemented("topk")}min(e,t){return notYetImplemented("min")}minimum(e,t){return notYetImplemented("minimum")}mod(e,t){return notYetImplemented("mod")}max(e,t){return notYetImplemented("max")}maximum(e,t){return notYetImplemented("maximum")}all(e,t){return notYetImplemented("all")}any(e,t){return notYetImplemented("any")}squaredDifference(e,t){return notYetImplemented("squaredDifference")}ceil(e){return notYetImplemented("ceil")}floor(e){return notYetImplemented("floor")}round(e){return notYetImplemented("round")}sign(e){return notYetImplemented("sign")}isNaN(e){return notYetImplemented("isNaN")}isInf(e){return notYetImplemented("isInf")}isFinite(e){return notYetImplemented("isFinite")}pow(e,t){return notYetImplemented("pow")}exp(e){return notYetImplemented("exp")}expm1(e){return notYetImplemented("expm1")}softmax(e,t){return notYetImplemented("softmax")}log(e){return notYetImplemented("log")}log1p(e){return notYetImplemented("log1p")}sqrt(e){return notYetImplemented("sqrt")}rsqrt(e){return notYetImplemented("rsqrt")}square(e){return notYetImplemented("square")}reciprocal(e){return notYetImplemented("reciprocal")}relu(e){return notYetImplemented("relu")}relu6(e){return notYetImplemented("relu6")}prelu(e,t){return notYetImplemented("prelu")}elu(e){return notYetImplemented("elu")}eluDer(e,t){return notYetImplemented("eluDer")}selu(e){return notYetImplemented("selu")}int(e){return notYetImplemented("int")}clip(e,t,s){return notYetImplemented("clip")}abs(e){return notYetImplemented("abs")}complexAbs(e){return notYetImplemented("complexAbs")}sigmoid(e){return notYetImplemented("sigmoid")}softplus(e){return notYetImplemented("softplus")}sin(e){return notYetImplemented("sin")}cos(e){return notYetImplemented("cos")}tan(e){return notYetImplemented("tan")}asin(e){return notYetImplemented("asin")}acos(e){return notYetImplemented("acos")}atan(e){return notYetImplemented("atan")}atan2(e,t){return notYetImplemented("atan2")}sinh(e){return notYetImplemented("sinh")}cosh(e){return notYetImplemented("cosh")}tanh(e){return notYetImplemented("tanh")}asinh(e){return notYetImplemented("asinh")}acosh(e){return notYetImplemented("acosh")}atanh(e){return notYetImplemented("atanh")}erf(e){return notYetImplemented("erf")}step(e,t){return notYetImplemented("step")}fusedConv2d({input:e,filter:t,convInfo:s,bias:r,activation:o,preluActivationWeights:i}){return notYetImplemented("fusedConv2d")}conv2d(e,t,s){return notYetImplemented("conv2d")}conv2dDerInput(e,t,s){return notYetImplemented("conv2dDerInput")}conv2dDerFilter(e,t,s){return notYetImplemented("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:s,bias:r,activation:o,preluActivationWeights:i}){return notYetImplemented("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,s){return notYetImplemented("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,s){return notYetImplemented("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,s){return notYetImplemented("depthwiseConv2DDerFilter")}conv3d(e,t,s){return notYetImplemented("conv3d")}conv3dDerInput(e,t,s){return notYetImplemented("conv3dDerInput")}conv3dDerFilter(e,t,s){return notYetImplemented("conv3dDerFilter")}maxPool(e,t){return notYetImplemented("maxPool")}maxPoolBackprop(e,t,s,r){return notYetImplemented("maxPoolBackprop")}avgPool(e,t){return notYetImplemented("avgPool")}avgPoolBackprop(e,t,s){return notYetImplemented("avgPoolBackprop")}avgPool3d(e,t){return notYetImplemented("avgPool3d")}avgPool3dBackprop(e,t,s){return notYetImplemented("avgPool3dBackprop")}maxPool3d(e,t){return notYetImplemented("maxPool3d")}maxPool3dBackprop(e,t,s,r){return notYetImplemented("maxPool3dBackprop")}reshape(e,t){return notYetImplemented("reshape")}cast(e,t){return notYetImplemented("cast")}tile(e,t){return notYetImplemented("tile")}pad(e,t,s){return notYetImplemented("pad")}transpose(e,t){return notYetImplemented("transpose")}gather(e,t,s,r=0){return notYetImplemented("gather")}gatherND(e,t){return notYetImplemented("gatherND")}scatterND(e,t,s){return notYetImplemented("scatterND")}batchToSpaceND(e,t,s){return notYetImplemented("batchToSpaceND")}spaceToBatchND(e,t,s){return notYetImplemented("spaceToBatchND")}resizeBilinear(e,t,s,r,o){return notYetImplemented("resizeBilinear")}resizeBilinearBackprop(e,t,s){return notYetImplemented("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,s,r,o){return notYetImplemented("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,s){return notYetImplemented("resizeNearestNeighborBackprop")}batchNorm(e,t,s,r,o,i){return notYetImplemented("batchNorm")}localResponseNormalization4D(e,t,s,r,o){return notYetImplemented("localResponseNormalization4D")}LRNGrad(e,t,s,r,o,i,c){return notYetImplemented("LRNGrad")}multinomial(e,t,s,r){return notYetImplemented("multinomial")}oneHot(e,t,s,r){return notYetImplemented("oneHot")}cumsum(e,t,s,r){return notYetImplemented("cumsum")}nonMaxSuppression(e,t,s,r,o){return notYetImplemented("nonMaxSuppression")}fft(e){return notYetImplemented("fft")}ifft(e){return notYetImplemented("ifft")}complex(e,t){return notYetImplemented("complex")}real(e){return notYetImplemented("real")}imag(e){return notYetImplemented("imag")}cropAndResize(e,t,s,r,o,i){return notYetImplemented("cropAndResize")}depthToSpace(e,t,s){return notYetImplemented("depthToSpace")}split(e,t,s){return notYetImplemented("split")}sparseToDense(e,t,s,r){return notYetImplemented("sparseToDense")}diag(e){return notYetImplemented("diag")}fill(e,t,s){return notYetImplemented("fill")}onesLike(e){return notYetImplemented("onesLike")}zerosLike(e){return notYetImplemented("zerosLike")}linspace(e,t,s){return notYetImplemented("linspace")}dispose(){return notYetImplemented("dispose")}}function notYetImplemented(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function shuffle(n){let e=n.length,t=0,s=0;for(;e>0;)s=Math.random()*e|0,e--,t=n[e],n[e]=n[s],n[s]=t}function clamp(n,e,t){return Math.max(n,Math.min(e,t))}function nearestLargerEven(n){return n%2===0?n:n+1}function sum$3(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function randUniform(n,e){const t=Math.random();return e*t+(1-t)*n}function distSquared(n,e){let t=0;for(let s=0;s<n.length;s++){const r=Number(n[s])-Number(e[s]);t+=r*r}return t}function assert$1(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function assertShapesMatch(n,e,t=""){assert$1(arraysEqual(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function assertNonNull(n){assert$1(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function flatten$2(n,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(n)||isTypedArray(n)&&!t)for(let s=0;s<n.length;++s)flatten$2(n[s],e,t);else e.push(n);return e}function sizeFromShape(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function isScalarShape(n){return n.length===0}function arraysEqual(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function isInt(n){return n%1===0}function tanh$3(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const e=Math.exp(2*n);return(e-1)/(e+1)}}function sizeToSquarishShape(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function createShuffledIndices(n){const e=new Uint32Array(n);for(let t=0;t<n;++t)e[t]=t;return shuffle(e),e}function rightPad(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function repeatedTry(n,e=s=>0,t){return new Promise((s,r)=>{let o=0;const i=()=>{if(n()){s();return}o++;const c=e(o);if(t!=null&&o>=t){r();return}setTimeout(i,c)};i()})}function inferFromImplicitShape(n,e){let t=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}function parseAxisParam(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),assert$1(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),assert$1(n.every(s=>isInt(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function squeezeShape(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||r?null:parseAxisParam(e,n).sort();let i=0;for(let c=0;c<n.length;++c){if(o!=null){if(o[i]===c&&n[c]!==1)throw new Error(`Can't squeeze axis ${c} since its dim '${n[c]}' is not 1`);(o[i]==null||o[i]>c)&&n[c]===1&&(t.push(n[c]),s.push(c)),o[i]<=c&&i++}n[c]!==1&&(t.push(n[c]),s.push(c))}return{newShape:t,keptDims:s}}function getTypedArrayFromDType(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${n}`);return t}function getArrayFromDType(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function checkConversionForErrors(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function isValidDtype(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function hasEncodingLoss(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function isTypedArray(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array}function bytesPerElement(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function bytesFromStringArray(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function isString(n){return typeof n=="string"||n instanceof String}function isBoolean(n){return typeof n=="boolean"}function isNumber(n){return typeof n=="number"}function inferDtype(n){return Array.isArray(n)?inferDtype(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array?"int32":isNumber(n)?"float32":isString(n)?"string":isBoolean(n)?"bool":"float32"}function isFunction(n){return!!(n&&n.constructor&&n.call&&n.apply)}function nearestDivisor(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function computeStrides(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function createNestedArray(n,e,t){const s=new Array;if(e.length===1){const r=e[0];for(let o=0;o<r;o++)s[o]=t[n+o]}else{const r=e[0],o=e.slice(1),i=o.reduce((c,a)=>c*a);for(let c=0;c<r;c++)s[c]=createNestedArray(n+c*i,o,t)}return s}function toNestedArray(n,e){if(n.length===0)return e[0];const t=n.reduce((s,r)=>s*r);if(t===0)return[];if(t!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}.`);return createNestedArray(0,n,e)}function makeOnesTypedArray(n,e){const t=makeZerosTypedArray(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function makeZerosTypedArray(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function makeZerosNestedTypedArray(n,e){const t=n.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return toNestedArray(n,new Float32Array(t));if(e==="int32")return toNestedArray(n,new Int32Array(t));if(e==="bool")return toNestedArray(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function assertNonNegativeIntegerDimensions(n){n.forEach(e=>{assert$1(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function locToIndex(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}function indexToLoc(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}function isPromise(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TENSORFLOWJS_FLAGS_PREFIX="tfjsflags";class Environment{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(isPromise(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=getQueryParams(this.global.location.search);TENSORFLOWJS_FLAGS_PREFIX in e&&e[TENSORFLOWJS_FLAGS_PREFIX].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=parseValue(r,o)})}}function getQueryParams(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(decodeParam(e,s[0],s[1]),s.join("="))),e}function decodeParam(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function parseValue(n,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${n}.`)}function env(){return ENV$2}let ENV$2=null;function setEnvironmentGlobal(n){ENV$2=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let globalNameSpace;function getGlobalNamespace(){if(globalNameSpace==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");globalNameSpace=n}return globalNameSpace}function getGlobalMap(){const n=getGlobalNamespace();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function getGlobal(n,e){const t=getGlobalMap();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const Abs="Abs",Acos="Acos",Acosh="Acosh",Add$1="Add",AddN="AddN",All="All",Any="Any",ArgMax="ArgMax",ArgMin="ArgMin",Asin="Asin",Asinh="Asinh",Atan="Atan",Atanh="Atanh",Atan2="Atan2",AvgPool="AvgPool",AvgPoolGrad="AvgPoolGrad",AvgPool3D="AvgPool3D",AvgPool3DGrad="AvgPool3DGrad",BatchMatMul="BatchMatMul",BatchToSpaceND="BatchToSpaceND",Bincount="Bincount",BroadcastTo="BroadcastTo",Cast="Cast",Ceil="Ceil",ClipByValue="ClipByValue",Complex="Complex",ComplexAbs="ComplexAbs",Concat="Concat",Conv2D$1="Conv2D",Conv2DBackpropFilter="Conv2DBackpropFilter",Conv2DBackpropInput="Conv2DBackpropInput",Conv3D$1="Conv3D",Conv3DBackpropFilterV2="Conv3DBackpropFilterV2",Conv3DBackpropInputV2="Conv3DBackpropInputV2",Cos="Cos",Cosh="Cosh",Cumsum="Cumsum",CropAndResize="CropAndResize",DenseBincount="DenseBincount",DepthToSpace="DepthToSpace",DepthwiseConv2dNative="DepthwiseConv2dNative",DepthwiseConv2dNativeBackpropFilter="DepthwiseConv2dNativeBackpropFilter",DepthwiseConv2dNativeBackpropInput="DepthwiseConv2dNativeBackpropInput",Diag="Diag",Dilation2D="Dilation2D",Dilation2DBackpropInput="Dilation2DBackpropInput",Dilation2DBackpropFilter="Dilation2DBackpropFilter",RealDiv="RealDiv",Elu$1="Elu",EluGrad="EluGrad",Erf="Erf",Equal="Equal",Exp="Exp",ExpandDims="ExpandDims",Expm1="Expm1",FFT="FFT",Fill="Fill",FlipLeftRight="FlipLeftRight",Floor="Floor",FloorDiv="FloorDiv",FusedBatchNorm="FusedBatchNorm",GatherV2="GatherV2",GatherNd="GatherNd",Greater="Greater",GreaterEqual="GreaterEqual",Identity$1="Identity",IFFT="IFFT",Imag="Imag",IsFinite="IsFinite",IsInf="IsInf",IsNan="IsNan",LeakyRelu="LeakyRelu",Less="Less",LessEqual="LessEqual",LinSpace="LinSpace",Log="Log",Log1p="Log1p",LogicalAnd="LogicalAnd",LogicalNot="LogicalNot",LogicalOr="LogicalOr",LogSoftmax$1="LogSoftmax",LRN="LRN",LRNGrad="LRNGrad",Max="Max",Maximum$1="Maximum",MaxPool="MaxPool",MaxPoolGrad="MaxPoolGrad",MaxPool3D="MaxPool3D",MaxPool3DGrad="MaxPool3DGrad",MaxPoolWithArgmax="MaxPoolWithArgmax",Mean="Mean",Min="Min",Minimum$1="Minimum",MirrorPad="MirrorPad",Mod="Mod",Multinomial="Multinomial",Multiply$1="Multiply",Neg="Neg",NotEqual="NotEqual",NonMaxSuppressionV3="NonMaxSuppressionV3",NonMaxSuppressionV4="NonMaxSuppressionV4",NonMaxSuppressionV5="NonMaxSuppressionV5",OnesLike="OnesLike",OneHot="OneHot",Pack="Pack",PadV2="PadV2",Pool="Pool",Pow="Pow",Prelu="Prelu",Prod="Prod",Range="Range",Real="Real",Reciprocal="Reciprocal",Relu$1="Relu",Reshape$1="Reshape",ResizeNearestNeighbor="ResizeNearestNeighbor",ResizeNearestNeighborGrad="ResizeNearestNeighborGrad",ResizeBilinear="ResizeBilinear",ResizeBilinearGrad="ResizeBilinearGrad",Relu6$1="Relu6",Reverse="Reverse",Round="Round",Rsqrt="Rsqrt",ScatterNd="ScatterNd",Select="Select",Selu$1="Selu",Slice="Slice",Sin="Sin",Sinh="Sinh",Sign="Sign",Sigmoid$1="Sigmoid",Softplus$1="Softplus",Sqrt="Sqrt",Sum="Sum",SpaceToBatchND="SpaceToBatchND",SplitV="SplitV",Softmax$2="Softmax",SquaredDifference="SquaredDifference",Square="Square",Sub="Sub",SparseToDense="SparseToDense",StridedSlice="StridedSlice",Tan="Tan",Tanh$1="Tanh",Tile="Tile",TopK="TopK",Transpose="Transpose",Unique="Unique",Unpack="Unpack",UnsortedSegmentSum="UnsortedSegmentSum",ZerosLike="ZerosLike",Step="Step",FromPixels="FromPixels",RotateWithOffset="RotateWithOffset",_FusedMatMul="_FusedMatMul",FusedConv2D="FusedConv2D",FusedDepthwiseConv2D="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernelRegistry=getGlobal("kernelRegistry",()=>new Map),gradRegistry=getGlobal("gradRegistry",()=>new Map);function getKernel(n,e){const t=makeKey(n,e);return kernelRegistry.get(t)}function getGradient(n){return gradRegistry.get(n)}function getKernelsForBackend(n){const e=kernelRegistry.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[o,i]=r,[c]=o.split("_");c===n&&t.push(i)}return t}function registerKernel(n){const{kernelName:e,backendName:t}=n,s=makeKey(e,t);kernelRegistry.has(s)&&console.warn(`The kernel '${e}' for backend '${t}' is already registered`),kernelRegistry.set(s,n)}function registerGradient(n){const{kernelName:e}=n;gradRegistry.has(e)&&env().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),gradRegistry.set(e,n)}function unregisterKernel(n,e){const t=makeKey(n,e);if(!kernelRegistry.has(t))throw new Error(`The kernel '${n}' for backend '${e}' is not registered`);kernelRegistry.delete(t)}function unregisterGradient(n){if(!gradRegistry.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);gradRegistry.delete(n)}function copyRegisteredKernels(n,e){getKernelsForBackend(n).forEach(s=>{const r=Object.assign({},s,{backendName:e});registerKernel(r)})}function makeKey(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createScalarValue(n,e){return e==="string"?encodeString(n):toTypedArray([n],e)}function noConversionNeeded(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function toTypedArray(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=flatten$2(n)),env().getBool("DEBUG")&&checkConversionForErrors(n,e),noConversionNeeded(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function now(){return env().platform.now()}function fetch$1(n,e){return env().platform.fetch(n,e)}function encodeString(n,e="utf-8"){return e=e||"utf-8",env().platform.encode(n,e)}function decodeString(n,e="utf-8"){return e=e||"utf-8",env().platform.decode(n,e)}const util=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual,assert:assert$1,assertNonNegativeIntegerDimensions,assertNonNull,assertShapesMatch,bytesFromStringArray,bytesPerElement,checkConversionForErrors,clamp,computeStrides,createScalarValue,createShuffledIndices,decodeString,distSquared,encodeString,fetch:fetch$1,flatten:flatten$2,getArrayFromDType,getTypedArrayFromDType,hasEncodingLoss,indexToLoc,inferDtype,inferFromImplicitShape,isBoolean,isFunction,isInt,isNumber,isPromise,isScalarShape,isString,isTypedArray,isValidDtype,locToIndex,makeOnesTypedArray,makeZerosNestedTypedArray,makeZerosTypedArray,nearestDivisor,nearestLargerEven,now,parseAxisParam,randUniform,repeatedTry,rightPad,shuffle,sizeFromShape,sizeToSquarishShape,squeezeShape,sum:sum$3,tanh:tanh$3,toNestedArray,toTypedArray},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Profiler{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new Logger)}profileKernel(e,t,s){let r;const o=()=>{r=s()},i=this.backendTimer.time(o);if(env().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const l=r[a];l.data().then(d=>{checkComputationForErrors(d,l.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then(a=>a.kernelMs),extraInfo:i.then(a=>a.getExtraProfileInfo!=null?a.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:o,extraInfo:i}=e;s.forEach(c=>{Promise.all([c.data(),r,i]).then(a=>{this.logger.logKernelProfile(t,c,a[0],a[1],o,a[2])})})}}function checkComputationForErrors(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${t}'`),!0}return!1}class Logger{logKernelProfile(e,t,s,r,o,i){const c=typeof r=="number"?rightPad(`${r}ms`,9):r.error,a=rightPad(e,25),l=t.rank,d=t.size,f=rightPad(t.shape.toString(),14);let y="";for(const m in o){const h=o[m];if(h!=null){const g=h.shape||t.shape,x=g.length;y+=`${m}: ${x}D ${x>0?g:""} `}}console.log(`%c${a}	%c${c}	%c${l}D ${f}	%c${d}	%c${y}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getFilteredNodesXToY(n,e,t){const s={},r={};for(let a=0;a<e.length;a++)s[e[a].id]=!0;for(let a=0;a<n.length;a++){const l=n[a],d=l.inputs;for(const f in d){const y=d[f];let m=!1;for(let h=0;h<e.length;h++)if(s[y.id]){l.outputs.forEach(g=>s[g.id]=!0),m=!0,r[l.id]=!0;break}if(m)break}}const o={};o[t.id]=!0;const i={};for(let a=n.length-1;a>=0;a--){const l=n[a],d=l.inputs;for(let f=0;f<l.outputs.length;f++)if(o[l.outputs[f].id]){for(const y in d)o[d[y].id]=!0,i[l.id]=!0;break}}const c=[];for(let a=0;a<n.length;a++){const l=n[a];if(r[l.id]&&i[l.id]){const d={};for(const y in l.inputs){const m=l.inputs[y];s[m.id]&&(d[y]=m)}const f=Object.assign({},l);f.inputs=d,f.outputs=l.outputs,c.push(f)}}return c}function backpropagateGradients(n,e,t,s){for(let r=e.length-1;r>=0;r--){const o=e[r],i=[];if(o.outputs.forEach(a=>{const l=n[a.id];l!=null?i.push(l):i.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const c=o.gradient(i);for(const a in o.inputs){if(!(a in c))throw new Error(`Cannot backprop through input ${a}. Available gradients found: ${Object.keys(c)}.`);const l=t(()=>c[a]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${a} must have 'float32' dtype, but has '${l.dtype}'`);const d=o.inputs[a];if(!arraysEqual(l.shape,d.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${a}' has shape '${l.shape}', which does not match the shape of the input '${d.shape}'`);if(n[d.id]==null)n[d.id]=l;else{const f=n[d.id];n[d.id]=s(f,l),f.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FORMAT_LIMIT_NUM_VALS=20,FORMAT_NUM_FIRST_LAST_VALS=3,FORMAT_NUM_SIG_DIGITS=7;function tensorToString(n,e,t,s){const r=computeStrides(e),o=computeMaxSizePerColumn(n,e,t,r),i=e.length,c=subTensorToString(n,e,t,r,o),a=["Tensor"];return s&&(a.push(`  dtype: ${t}`),a.push(`  rank: ${i}`),a.push(`  shape: [${e}]`),a.push("  values:")),a.push(c.map(l=>"    "+l).join(`
`)),a.join(`
`)}function computeMaxSizePerColumn(n,e,t,s){const r=sizeFromShape(e),o=s[s.length-1],i=new Array(o).fill(0),c=e.length,a=t==="complex64"?createComplexTuples(n):n;if(c>1)for(let l=0;l<r/o;l++){const d=l*o;for(let f=0;f<o;f++)i[f]=Math.max(i[f],valToString(a[d+f],0,t).length)}return i}function valToString(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(FORMAT_NUM_SIG_DIGITS))} + ${parseFloat(n[1].toFixed(FORMAT_NUM_SIG_DIGITS))}j`:isString(n)?s=`'${n}'`:t==="bool"?s=boolNumToString(n):s=parseFloat(n.toFixed(FORMAT_NUM_SIG_DIGITS)).toString(),rightPad(s,e)}function boolNumToString(n){return n===0?"false":"true"}function subTensorToString(n,e,t,s,r,o=!0){const i=t==="complex64"?2:1,c=e[0],a=e.length;if(a===0){if(t==="complex64"){const g=createComplexTuples(n);return[valToString(g[0],0,t)]}return t==="bool"?[boolNumToString(n[0])]:[n[0].toString()]}if(a===1){if(c>FORMAT_LIMIT_NUM_VALS){const x=FORMAT_NUM_FIRST_LAST_VALS*i;let w=Array.from(n.slice(0,x)),I=Array.from(n.slice((c-FORMAT_NUM_FIRST_LAST_VALS)*i,c*i));return t==="complex64"&&(w=createComplexTuples(w),I=createComplexTuples(I)),["["+w.map((N,A)=>valToString(N,r[A],t)).join(", ")+", ..., "+I.map((N,A)=>valToString(N,r[c-FORMAT_NUM_FIRST_LAST_VALS+A],t)).join(", ")+"]"]}return["["+(t==="complex64"?createComplexTuples(n):Array.from(n)).map((x,w)=>valToString(x,r[w],t)).join(", ")+"]"]}const l=e.slice(1),d=s.slice(1),f=s[0]*i,y=[];if(c>FORMAT_LIMIT_NUM_VALS){for(let g=0;g<FORMAT_NUM_FIRST_LAST_VALS;g++){const x=g*f,w=x+f;y.push(...subTensorToString(n.slice(x,w),l,t,d,r,!1))}y.push("...");for(let g=c-FORMAT_NUM_FIRST_LAST_VALS;g<c;g++){const x=g*f,w=x+f;y.push(...subTensorToString(n.slice(x,w),l,t,d,r,g===c-1))}}else for(let g=0;g<c;g++){const x=g*f,w=x+f;y.push(...subTensorToString(n.slice(x,w),l,t,d,r,g===c-1))}const m=a===2?",":"";y[0]="["+y[0]+m;for(let g=1;g<y.length-1;g++)y[g]=" "+y[g]+m;let h=`,
`;for(let g=2;g<a;g++)h+=`
`;return y[y.length-1]=" "+y[y.length-1]+"]"+(o?"":h),y}function createComplexTuples(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TensorBuffer{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=sizeFromShape(e),s!=null){const r=s.length;assert$1(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||getArrayFromDType(t,this.size),this.strides=computeStrides(e)}set(e,...t){t.length===0&&(t=[0]),assert$1(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return trackerFn().makeTensor(this.values,this.shape,this.dtype)}}let trackerFn=null,opHandler$1=null;function setTensorTracker(n){trackerFn=n}function setOpHandler(n){opHandler$1=n}class Tensor{constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=sizeFromShape(e),this.strides=computeStrides(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return opHandler$1.buffer(this.shape,this.dtype,e)}bufferSync(){return opHandler$1.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return toNestedArray(this.shape,e)}arraySync(){return toNestedArray(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=trackerFn().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>decodeString(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=trackerFn().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>decodeString(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await trackerFn().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(trackerFn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return opHandler$1.print(this,e)}clone(){return this.throwIfDisposed(),opHandler$1.clone(this)}toString(e=!1){const t=this.dataSync();return tensorToString(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),opHandler$1.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),trackerFn().makeVariable(this,e,t,s)}}Object.defineProperty(Tensor,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});class Variable extends Tensor{constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!arraysEqual(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);trackerFn().disposeTensor(this),this.dataId=e.dataId,trackerFn().incRef(this,null)}dispose(){trackerFn().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Variable,Symbol.hasInstance,{value:n=>n instanceof Tensor&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Rank;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Rank||(Rank={}));var UpcastInt32AndMap;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(UpcastInt32AndMap||(UpcastInt32AndMap={}));var UpcastBoolAndMap;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(UpcastBoolAndMap||(UpcastBoolAndMap={}));var UpcastFloat32AndMap;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(UpcastFloat32AndMap||(UpcastFloat32AndMap={}));var UpcastComplex64AndMap;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(UpcastComplex64AndMap||(UpcastComplex64AndMap={}));const upcastTypeMap={float32:UpcastFloat32AndMap,int32:UpcastInt32AndMap,bool:UpcastBoolAndMap,complex64:UpcastComplex64AndMap};function upcastType(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return upcastTypeMap[n][e]}function sumOutType(n){return upcastType(n,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function makeTypesMatch(n,e){if(n.dtype===e.dtype)return[n,e];const t=upcastType(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function assertTypesMatch(n,e){assert$1(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function isTensorInList(n,e){return e.some(t=>t.id===n.id)}function getTensorsInContainer(n){const e=[];return walkTensorContainer(n,e,new Set),e}function walkTensorContainer(n,e,t){if(n==null)return;if(n instanceof Tensor){e.push(n);return}if(!isIterable$1(n))return;const s=n;for(const r in s){const o=s[r];t.has(o)||(t.add(o),walkTensorContainer(o,e,t))}}function isIterable$1(n){return Array.isArray(n)||typeof n=="object"}const tensor_util=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch,getTensorsInContainer,isTensorInList,makeTypesMatch},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EngineState{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Engine{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new EngineState}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Profiler(this.backendInstance),!0}setupRegisteredKernels(){getKernelsForBackend(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){getKernelsForBackend(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof KernelBackend)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(i=>r<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(i.stack||i.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return console.warn(`Initialization of backend ${e} failed`),console.warn(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,o=this.readSync(t);r.disposeData(t),s.backend=e,e.move(t,o,s.shape,s.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return Engine.nextTensorId++}nextVariableId(){return Engine.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),s={x:e},r=i=>({x:()=>{const c="float32",a={x:i},l={dtype:c};return ENGINE.runKernelFunc(d=>d.cast(i,c),a,null,Cast,l)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,o,{}),t}runKernel(e,t,s,r,o){return this.runKernelFunc(null,t,null,e,s,r,o)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let o=0;s.forEach(a=>{o+=a.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],c=r-t-o-i;if(c>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${c} data ids) after running '${e}'`)}runKernelFunc(e,t,s,r,o,i,c){let a,l=[];const d=this.isTapeOn();r==null&&(r=this.state.activeScope!=null?this.state.activeScope.name:"");const f=this.state.numBytes,y=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let m;this.backendName==null&&this.backend;const h=getKernel(r,this.backendName);let g;if(h!=null)m=()=>{const w=this.backend.numDataIds();g=h.kernelFunc({inputs:t,attrs:o,backend:this.backend});const I=Array.isArray(g)?g:[g];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,w,I);const N=I.map(A=>{if(A.rank!=null)return A;const{dataId:T,shape:P,dtype:O}=A;return this.makeTensorFromDataId(T,P,O)});if(d){let A=this.getTensorsForGradient(r,t,N);if(A==null){c==null&&(c=[]);const T=N.filter((P,O)=>c[O]);A=(i||[]).slice().concat(T)}l=this.saveTensorsForBackwardMode(A)}return N};else{if(e==null)throw new Error(`Error running ${r}: Neither modular kernel nor forward func passed`);const w=I=>{d&&(l=I.map(N=>this.keep(this.clone(N))))};m=()=>{const I=this.backend.numDataIds();g=this.tidy(()=>e(this.backend,w));const N=Array.isArray(g)?g:[g];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,I,N),N}}let x;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?a=m():(x=this.profiler.profileKernel(r,t,()=>m()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(x),a=x.outputs)}),d&&this.addTapeNode(r,t,a,s,l,o),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-f,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-y,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map(w=>t[w]!=null?t[w].shape:null),outputShapes:a.map(w=>w.shape),kernelTimeMs:x.timeMs,extraInfo:x.extraInfo}),Array.isArray(g)?a:a[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=getGradient(e);if(r!=null){const o=r.inputsToSave||[],i=r.outputsToSave||[];let c;r.saveAllInputs?(assert$1(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),c=Object.keys(t).map(l=>t[l])):c=o.map(l=>t[l]);const a=s.filter((l,d)=>i[d]);return c.concat(a)}return null}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=e;s==="string"&&isString(e[0])&&(o=e.map(a=>encodeString(a)));const i=r.write(o,t,s),c=new Tensor(t,s,i,this.nextTensorId());if(this.incRef(c,r),s==="string"){const a=this.state.tensorInfo.get(i),l=bytesFromStringArray(o);this.state.numBytes+=l-a.bytes,a.bytes=l}return c}makeTensorFromDataId(e,t,s,r){s=s||"float32";const o=new Tensor(t,s,e,this.nextTensorId());return this.incRef(o,r),o}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const o=new Variable(e,t,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}incRef(e,t){const s=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++,s===0){this.state.numDataBuffers++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*bytesPerElement(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r,refCount:0}),this.state.numBytes+=r}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof Variable||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,e.dtype==="string"&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?(e.dtype!=="complex64"&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):(t.backend.decComplexRef(e.dataId),this.state.tensorInfo.get(e.dataId).refCount--)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,o,i){const c={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:o},a=getGradient(e);a!=null&&(r=a.gradFunc),r!=null&&(c.gradient=l=>(l=l.map((d,f)=>{if(d==null){const y=s[f],m=makeZerosTypedArray(y.size,y.dtype);return this.makeTensor(m,y.shape,y.dtype)}return d}),r(l.length>1?l:l[0],o,i))),this.state.activeTape.push(c)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=getTensorsInContainer(e),s=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const i=this.state.activeScope.track[o];!i.kept&&!s.has(i.id)&&i.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(e,t,s,r=!1){if(assert$1(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));assert$1(o instanceof Tensor,()=>"The result y returned by f() must be a tensor.");const i=getFilteredNodesXToY(this.state.activeTape,t,o);if(!r&&i.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const c={};c[o.id]=s??ones$2(o.shape),backpropagateGradients(c,i,l=>this.tidy(l),add$3);const a=t.map(l=>c[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(const d of l.saved)d.dispose()}),this.state.activeTape=null),{value:o,grads:a}})}customGrad(e){return assert$1(isFunction(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{assert$1(t.every(o=>o instanceof Tensor),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};return t.forEach((o,i)=>{r[i]=o}),this.runKernelFunc((o,i)=>(s=e(...t,i),assert$1(s.value instanceof Tensor,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),assert$1(isFunction(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),r,(o,i)=>{const c=s.gradFunc(o,i),a=Array.isArray(c)?c:[c];assert$1(a.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),assert$1(a.every(d=>d instanceof Tensor),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const l={};return a.forEach((d,f)=>{l[f]=()=>d}),l})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=now(),s=await this.backend.time(e);return s.wallMs=now()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new EngineState;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Engine.nextTensorId=0;Engine.nextVariableId=0;function ones$2(n){const e=makeOnesTypedArray(sizeFromShape(n),"float32");return ENGINE.makeTensor(e,n,"float32")}function getOrMakeEngine(){const n=getGlobalNamespace();if(n._tfengine==null){const e=new Environment(n);n._tfengine=new Engine(e)}return setEnvironmentGlobal(n._tfengine.ENV),setTensorTracker(()=>n._tfengine),n._tfengine}const ENGINE=getOrMakeEngine();function add$3(n,e){const t={a:n,b:e};return ENGINE.runKernel(Add$1,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _isNavigatorDefined(){return typeof navigator<"u"&&navigator!=null}function isMobile(){if(_isNavigatorDefined()){const n=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(n)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(n.substr(0,4))}return!1}function isBrowser(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}const device_util=Object.freeze(Object.defineProperty({__proto__:null,isBrowser,isMobile},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ENV$1=env();ENV$1.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});ENV$1.registerFlag("IS_BROWSER",()=>isBrowser());ENV$1.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");ENV$1.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));ENV$1.registerFlag("PROD",()=>!1);ENV$1.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ENV$1.getBool("DEBUG"));ENV$1.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);ENV$1.registerFlag("IS_TEST",()=>!1);ENV$1.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function inferShape(n,e){let t=n;if(isTypedArray(n))return e==="string"?[]:[n.length];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||isTypedArray(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&env().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&deepAssertShapeConsistency(n,s,[]),s}function deepAssertShapeConsistency(n,e,t){if(t=t||[],!Array.isArray(n)&&!isTypedArray(n)){assert$1(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}assert$1(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),assert$1(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)deepAssertShapeConsistency(n[r],s,t.concat(r))}function assertDtype(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function convertToTensor(n,e,t,s="numeric"){if(n instanceof Tensor)return assertDtype(s,n.dtype,e,t),n;let r=inferDtype(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),assertDtype(s,r,e,t),n==null||!isTypedArray(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const a=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${a}'`)}const o=inferShape(n,r);!isTypedArray(n)&&!Array.isArray(n)&&(n=[n]);const c=r!=="string"?toTypedArray(n,r):flatten$2(n,[],!0);return ENGINE.makeTensor(c,o,r)}function convertToTensorArray(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,i)=>convertToTensor(o,`${e}[${i}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OP_SCOPE_SUFFIX="__op";function op(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+OP_SCOPE_SUFFIX;const r=(...o)=>{ENGINE.startScope(t);try{const i=s(...o);return isPromise(i)&&console.error("Cannot return a Promise inside of tidy."),ENGINE.endScope(i),i}catch(i){throw ENGINE.endScope(null),i}};return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function complex_(n,e){const t=convertToTensor(n,"real","complex"),s=convertToTensor(e,"imag","complex");assertShapesMatch(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return ENGINE.runKernel(Complex,r)}const complex$2=op({complex_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function makeTensor(n,e,t,s){if(s==null&&(s=inferDtype(n)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!isTypedArray(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){assertNonNegativeIntegerDimensions(e);const r=sizeFromShape(e),o=sizeFromShape(t);assert$1(r===o,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${o}`);for(let i=0;i<t.length;++i){const c=t[i],a=i===t.length-1?c!==sizeFromShape(e.slice(i)):!0;assert$1(t[i]===e[i]||!a,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!isTypedArray(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?toTypedArray(n,s):flatten$2(n,[],!0),ENGINE.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor(n,e,t){const s=inferShape(n,t);return makeTensor(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DTYPE_VALUE_SIZE_MAP={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NUM_BYTES_STRING_LENGTH=4;async function encodeWeights(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<r.length;++i){const c=r[i],a=Array.isArray(n)?n[i].tensor:n[c];if(a.dtype!=="float32"&&a.dtype!=="int32"&&a.dtype!=="bool"&&a.dtype!=="string"&&a.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${c}': ${a.dtype}`);const l={name:c,shape:a.shape,dtype:a.dtype};if(a.dtype==="string"){const d=new Promise(async f=>{const y=await a.bytes(),m=y.reduce((x,w)=>x+w.length,0)+NUM_BYTES_STRING_LENGTH*y.length,h=new Uint8Array(m);let g=0;for(let x=0;x<y.length;x++){const w=y[x],I=new Uint8Array(new Uint32Array([w.length]).buffer);h.set(I,g),g+=NUM_BYTES_STRING_LENGTH,h.set(w,g),g+=w.length}f(h)});s.push(d)}else s.push(a.data());e!=null&&(l.group=e),t.push(l)}const o=await Promise.all(s);return{data:concatenateTypedArrays(o),specs:t}}function decodeWeights(n,e){const t={};let s,r=0;for(const o of e){const i=o.name,c=o.dtype,a=o.shape,l=sizeFromShape(a);let d;if("quantization"in o){const f=o.quantization;if(f.dtype==="uint8"||f.dtype==="uint16"){if(!("min"in f&&"scale"in f))throw new Error(`Weight ${o.name} with quantization ${f.dtype} doesn't have corresponding metadata min and scale.`)}else if(f.dtype==="float16"){if(c!=="float32")throw new Error(`Weight ${o.name} is quantized with ${f.dtype} which only supports weights of type float32 not ${c}.`)}else throw new Error(`Weight ${o.name} has unknown quantization dtype ${f.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const y=DTYPE_VALUE_SIZE_MAP[f.dtype],m=n.slice(r,r+l*y),h=f.dtype==="uint8"?new Uint8Array(m):new Uint16Array(m);if(c==="float32")if(f.dtype==="uint8"||f.dtype==="uint16"){d=new Float32Array(h.length);for(let g=0;g<h.length;g++){const x=h[g];d[g]=x*f.scale+f.min}}else if(f.dtype==="float16")s===void 0&&(s=getFloat16Decoder()),d=s(h);else throw new Error(`Unsupported quantization type ${f.dtype} for weight type float32.`);else if(c==="int32"){if(f.dtype!=="uint8"&&f.dtype!=="uint16")throw new Error(`Unsupported quantization type ${f.dtype} for weight type int32.`);d=new Int32Array(h.length);for(let g=0;g<h.length;g++){const x=h[g];d[g]=Math.round(x*f.scale+f.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${c}`);r+=l*y}else if(c==="string"){const f=sizeFromShape(o.shape);d=[];for(let y=0;y<f;y++){const m=new Uint32Array(n.slice(r,r+NUM_BYTES_STRING_LENGTH))[0];r+=NUM_BYTES_STRING_LENGTH;const h=new Uint8Array(n.slice(r,r+m));d.push(h),r+=m}}else{const f=DTYPE_VALUE_SIZE_MAP[c],y=n.slice(r,r+l*f);if(c==="float32")d=new Float32Array(y);else if(c==="int32")d=new Int32Array(y);else if(c==="bool")d=new Uint8Array(y);else if(c==="complex64"){d=new Float32Array(y);const m=new Float32Array(d.length/2),h=new Float32Array(d.length/2);for(let w=0;w<m.length;w++)m[w]=d[w*2],h[w]=d[w*2+1];const g=tensor(m,a,"float32"),x=tensor(h,a,"float32");t[i]=complex$2(g,x),g.dispose(),x.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${c}`);r+=l*f}c!=="complex64"&&(t[i]=tensor(d,a,c))}return t}function concatenateTypedArrays(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const useNodeBuffer=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function stringByteLength(n){return useNodeBuffer?Buffer.byteLength(n):new Blob([n]).size}function arrayBufferToBase64String(n){if(useNodeBuffer)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function base64StringToArrayBuffer(n){if(useNodeBuffer){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function concatenateArrayBuffers(n){if(n.length===1)return n[0];let e=0;n.forEach(r=>{e+=r.byteLength});const t=new Uint8Array(e);let s=0;return n.forEach(r=>{t.set(new Uint8Array(r),s),s+=r.byteLength}),t.buffer}function basename(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function getModelArtifactsInfoForJSON(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:stringByteLength(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:stringByteLength(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}function computeFloat16MantisaTable(){const n=t=>{let s=t<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function computeFloat16ExponentTable(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function computeFloat16OffsetTable(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function getFloat16Decoder(){const n=computeFloat16MantisaTable(),e=computeFloat16ExponentTable(),t=computeFloat16OffsetTable();return s=>{const r=new ArrayBuffer(4*s.length),o=new Uint32Array(r);for(let i=0;i<s.length;i++){const c=s[i],a=n[t[c>>10]+(c&1023)]+e[c>>10];o[i]=a}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IORouterRegistry{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return IORouterRegistry.instance==null&&(IORouterRegistry.instance=new IORouterRegistry),IORouterRegistry.instance}static registerSaveRouter(e){IORouterRegistry.getInstance().saveRouters.push(e)}static registerLoadRouter(e){IORouterRegistry.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return IORouterRegistry.getHandlers(e,"save")}static getLoadHandlers(e,t){return IORouterRegistry.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?IORouterRegistry.getInstance().loadRouters:IORouterRegistry.getInstance().saveRouters).forEach(i=>{const c=i(e,s);c!==null&&r.push(c)}),r}}const registerSaveRouter=n=>IORouterRegistry.registerSaveRouter(n),registerLoadRouter=n=>IORouterRegistry.registerLoadRouter(n),getSaveHandlers=n=>IORouterRegistry.getSaveHandlers(n),getLoadHandlers=(n,e)=>IORouterRegistry.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DATABASE_NAME="tensorflowjs",DATABASE_VERSION=1,MODEL_STORE_NAME="models_store",INFO_STORE_NAME="model_info_store";function getIndexedDBFactory(){if(!env().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function setUpDatabase(n){const e=n.result;e.createObjectStore(MODEL_STORE_NAME,{keyPath:"modelPath"}),e.createObjectStore(INFO_STORE_NAME,{keyPath:"modelPath"})}class BrowserIndexedDB{constructor(e){if(this.indexedDB=getIndexedDBFactory(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const o=this.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);o.onupgradeneeded=()=>setUpDatabase(o),o.onsuccess=()=>{const i=o.result;if(t==null){const c=i.transaction(MODEL_STORE_NAME,"readonly"),l=c.objectStore(MODEL_STORE_NAME).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return i.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(l.result.modelArtifacts)},l.onerror=d=>(i.close(),r(l.error)),c.oncomplete=()=>i.close()}else{const c=getModelArtifactsInfoForJSON(t),a=i.transaction(INFO_STORE_NAME,"readwrite");let l=a.objectStore(INFO_STORE_NAME);const d=l.put({modelPath:this.modelPath,modelArtifactsInfo:c});let f;d.onsuccess=()=>{f=i.transaction(MODEL_STORE_NAME,"readwrite");const m=f.objectStore(MODEL_STORE_NAME).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:c});m.onsuccess=()=>s({modelArtifactsInfo:c}),m.onerror=h=>{l=a.objectStore(INFO_STORE_NAME);const g=l.delete(this.modelPath);g.onsuccess=()=>(i.close(),r(m.error)),g.onerror=x=>(i.close(),r(m.error))}},d.onerror=y=>(i.close(),r(d.error)),a.oncomplete=()=>{f==null?i.close():f.oncomplete=()=>i.close()}}},o.onerror=i=>r(o.error)})}}BrowserIndexedDB.URL_SCHEME="indexeddb://";const indexedDBRouter=n=>env().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(BrowserIndexedDB.URL_SCHEME)?browserIndexedDB(n.slice(BrowserIndexedDB.URL_SCHEME.length)):null;IORouterRegistry.registerSaveRouter(indexedDBRouter);IORouterRegistry.registerLoadRouter(indexedDBRouter);function browserIndexedDB(n){return new BrowserIndexedDB(n)}function maybeStripScheme$1(n){return n.startsWith(BrowserIndexedDB.URL_SCHEME)?n.slice(BrowserIndexedDB.URL_SCHEME.length):n}class BrowserIndexedDBManager{constructor(){this.indexedDB=getIndexedDBFactory()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);s.onupgradeneeded=()=>setUpDatabase(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(INFO_STORE_NAME,"readonly"),c=o.objectStore(INFO_STORE_NAME).getAll();c.onsuccess=()=>{const a={};for(const l of c.result)a[l.modelPath]=l.modelArtifactsInfo;e(a)},c.onerror=a=>(r.close(),t(c.error)),o.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=maybeStripScheme$1(e),new Promise((t,s)=>{const r=this.indexedDB.open(DATABASE_NAME,DATABASE_VERSION);r.onupgradeneeded=()=>setUpDatabase(r),r.onsuccess=()=>{const o=r.result,i=o.transaction(INFO_STORE_NAME,"readwrite"),c=i.objectStore(INFO_STORE_NAME),a=c.get(e);let l;a.onsuccess=()=>{if(a.result==null)return o.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const d=c.delete(e),f=()=>{l=o.transaction(MODEL_STORE_NAME,"readwrite");const m=l.objectStore(MODEL_STORE_NAME).delete(e);m.onsuccess=()=>t(a.result.modelArtifactsInfo),m.onerror=h=>s(a.error)};d.onsuccess=f,d.onerror=y=>(f(),o.close(),s(a.error))}},a.onerror=d=>(o.close(),s(a.error)),i.oncomplete=()=>{l==null?o.close():l.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PATH_SEPARATOR="/",PATH_PREFIX="tensorflowjs_models",INFO_SUFFIX="info",MODEL_TOPOLOGY_SUFFIX="model_topology",WEIGHT_SPECS_SUFFIX="weight_specs",WEIGHT_DATA_SUFFIX="weight_data",MODEL_METADATA_SUFFIX="model_metadata";function getModelKeys(n){return{info:[PATH_PREFIX,n,INFO_SUFFIX].join(PATH_SEPARATOR),topology:[PATH_PREFIX,n,MODEL_TOPOLOGY_SUFFIX].join(PATH_SEPARATOR),weightSpecs:[PATH_PREFIX,n,WEIGHT_SPECS_SUFFIX].join(PATH_SEPARATOR),weightData:[PATH_PREFIX,n,WEIGHT_DATA_SUFFIX].join(PATH_SEPARATOR),modelMetadata:[PATH_PREFIX,n,MODEL_METADATA_SUFFIX].join(PATH_SEPARATOR)}}function getModelPathFromKey(n){const e=n.split(PATH_SEPARATOR);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(PATH_SEPARATOR)}function maybeStripScheme(n){return n.startsWith(BrowserLocalStorage.URL_SCHEME)?n.slice(BrowserLocalStorage.URL_SCHEME.length):n}class BrowserLocalStorage{constructor(e){if(!env().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=getModelKeys(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=getModelArtifactsInfoForJSON(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,arrayBufferToBase64String(e.weightData));const o={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return e.signature!=null&&(o.signature=e.signature),e.userDefinedMetadata!=null&&(o.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(o.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:r}}catch{throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const c=JSON.parse(o);t.format=c.format,t.generatedBy=c.generatedBy,t.convertedBy=c.convertedBy,c.signature!=null&&(t.signature=c.signature),c.userDefinedMetadata!=null&&(t.userDefinedMetadata=c.userDefinedMetadata),c.modelInitializer!=null&&(t.modelInitializer=c.modelInitializer)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=base64StringToArrayBuffer(i),t}}BrowserLocalStorage.URL_SCHEME="localstorage://";const localStorageRouter=n=>env().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(BrowserLocalStorage.URL_SCHEME)?browserLocalStorage(n.slice(BrowserLocalStorage.URL_SCHEME.length)):null;IORouterRegistry.registerSaveRouter(localStorageRouter);IORouterRegistry.registerLoadRouter(localStorageRouter);function browserLocalStorage(n){return new BrowserLocalStorage(n)}class BrowserLocalStorageManager{constructor(){assert$1(env().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),assert$1(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=PATH_PREFIX+PATH_SEPARATOR,s=PATH_SEPARATOR+INFO_SUFFIX;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(t)&&o.endsWith(s)){const i=getModelPathFromKey(o);e[i]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=maybeStripScheme(e);const t=getModelKeys(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const URL_SCHEME_SUFFIX="://";class ModelStoreManagerRegistry{constructor(){this.managers={}}static getInstance(){return ModelStoreManagerRegistry.instance==null&&(ModelStoreManagerRegistry.instance=new ModelStoreManagerRegistry),ModelStoreManagerRegistry.instance}static registerManager(e,t){assert$1(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(URL_SCHEME_SUFFIX)&&(e=e.slice(0,e.indexOf(URL_SCHEME_SUFFIX))),assert$1(e.length>0,()=>"scheme must not be an empty string.");const s=ModelStoreManagerRegistry.getInstance();assert$1(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function parseURL(n){if(n.indexOf(URL_SCHEME_SUFFIX)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ModelStoreManagerRegistry.getSchemes().join(",")}`);return{scheme:n.split(URL_SCHEME_SUFFIX)[0],path:n.split(URL_SCHEME_SUFFIX)[1]}}async function cloneModelInternal(n,e,t=!1){assert$1(n!==e,()=>`Old path and new path are the same: '${n}'`);const s=IORouterRegistry.getLoadHandlers(n);assert$1(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),assert$1(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],o=IORouterRegistry.getSaveHandlers(e);assert$1(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),assert$1(o.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const i=o[0],c=parseURL(n).scheme,a=parseURL(n).path,l=c===parseURL(n).scheme,d=await r.load();t&&l&&await ModelStoreManagerRegistry.getManager(c).removeModel(a);const f=await i.save(d);return t&&!l&&await ModelStoreManagerRegistry.getManager(c).removeModel(a),f.modelArtifactsInfo}async function listModels(){const n=ModelStoreManagerRegistry.getSchemes(),e={};for(const t of n){const s=await ModelStoreManagerRegistry.getManager(t).listModels();for(const r in s){const o=t+URL_SCHEME_SUFFIX+r;e[o]=s[r]}}return e}async function removeModel(n){const e=parseURL(n);return ModelStoreManagerRegistry.getManager(e.scheme).removeModel(e.path)}async function copyModel(n,e){return cloneModelInternal(n,e,!1)}async function moveModel(n,e){return cloneModelInternal(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PlatformBrowser{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(env().get("IS_BROWSER")){env().setPlatform("browser",new PlatformBrowser);try{ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME,new BrowserLocalStorageManager)}catch{}try{ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME,new BrowserIndexedDBManager)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const getNodeFetch={importFetch:()=>require("node-fetch")};let systemFetch;class PlatformNode{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return env().global.fetch!=null?env().global.fetch(e,t):(systemFetch==null&&(systemFetch=getNodeFetch.importFetch()),systemFetch(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}}env().get("IS_NODE")&&env().setPlatform("node",new PlatformNode);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function buffer(n,e="float32",t){return e=e||"float32",assertNonNegativeIntegerDimensions(n),new TensorBuffer(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cast_(n,e){const t=convertToTensor(n,"x","cast");if(!isValidDtype(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return ENGINE.runKernel(Cast,s,r)}const cast$3=op({cast_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clone_(n){const t={x:convertToTensor(n,"x","clone","string_or_numeric")};return ENGINE.runKernel(Identity$1,t)}const clone=op({clone_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function print(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */getOrMakeEngine();const opHandler={buffer,cast:cast$3,clone,print};setOpHandler(opHandler);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DEFAULT_FILE_NAME_PREFIX="model",DEFAULT_JSON_EXTENSION_NAME=".json",DEFAULT_WEIGHT_DATA_EXTENSION_NAME=".weights.bin";function defer(n){return new Promise(e=>setTimeout(e)).then(n)}class BrowserDownloads{constructor(e){if(!env().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(BrowserDownloads.URL_SCHEME)&&(e=e.slice(BrowserDownloads.URL_SCHEME.length)),(e==null||e.length===0)&&(e=DEFAULT_FILE_NAME_PREFIX),this.modelTopologyFileName=e+DEFAULT_JSON_EXTENSION_NAME,this.weightDataFileName=e+DEFAULT_WEIGHT_DATA_EXTENSION_NAME}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:s};e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer);const o=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=this.jsonAnchor==null?document.createElement("a"):this.jsonAnchor;if(i.download=this.modelTopologyFileName,i.href=o,await defer(()=>i.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const c=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;c.download=this.weightDataFileName,c.href=t,await defer(()=>c.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:getModelArtifactsInfoForJSON(e)}}}}BrowserDownloads.URL_SCHEME="downloads://";class BrowserFiles{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise((s,r)=>{const o=new FileReader;o.onload=i=>{const c=JSON.parse(i.target.result),a=c.modelTopology;if(a==null){r(new Error(`modelTopology field is missing from file ${e.name}`));return}t.length===0&&s({modelTopology:a});const l=c.weightsManifest;if(l==null){r(new Error(`weightManifest field is missing from file ${e.name}`));return}let d;try{d=this.checkManifestAndWeightFiles(l,t)}catch(h){r(h);return}const f=[],y=[],m=[];l.forEach(h=>{h.paths.forEach(g=>{y.push(g),m.push(null)}),f.push(...h.weights)}),l.forEach(h=>{h.paths.forEach(g=>{const x=new FileReader;x.onload=w=>{const I=w.target.result,N=y.indexOf(g);if(m[N]=I,m.indexOf(null)===-1){const A={modelTopology:a,weightSpecs:f,weightData:concatenateArrayBuffers(m),format:c.format,generatedBy:c.generatedBy,convertedBy:c.convertedBy};c.signature!=null&&(A.signature=c.signature),c.userDefinedMetadata!=null&&(A.userDefinedMetadata=c.userDefinedMetadata),c.modelInitializer!=null&&(A.modelInitializer=c.modelInitializer),s(A)}},x.onerror=w=>r(`Failed to weights data from file of path '${g}'.`),x.readAsArrayBuffer(d[g])})})},o.onerror=i=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),o.readAsText(e)})}checkManifestAndWeightFiles(e,t){const s=[],r=t.map(i=>basename(i.name)),o={};for(const i of e)i.paths.forEach(c=>{const a=basename(c);if(s.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(s.push(a),r.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);o[c]=t[r.indexOf(a)]});if(s.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${s.length}) and the number of weight files provided (${t.length}).`);return o}}const browserDownloadsRouter=n=>env().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(BrowserDownloads.URL_SCHEME)?browserDownloads(n.slice(BrowserDownloads.URL_SCHEME.length)):null;IORouterRegistry.registerSaveRouter(browserDownloadsRouter);function browserDownloads(n="model"){return new BrowserDownloads(n)}function browserFiles(n){return new BrowserFiles(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function monitorPromisesProgress(n,e,t,s){i(n),t=t??0,s=s??1,c(t,s);let r=0;const o=a=>(a.then(l=>{const d=t+ ++r/n.length*(s-t);return e(d),l}),a);function i(a){assert$1(a!=null&&Array.isArray(a)&&a.length>0,()=>"promises must be a none empty array")}function c(a,l){assert$1(a>=0&&a<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${a}`),assert$1(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),assert$1(l>=a,()=>`startFraction must be no more than endFraction, but got startFraction ${a} and endFraction ${l}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function loadWeightsAsArrayBuffer(n,e){e==null&&(e={});const t=e.fetchFunc==null?env().platform.fetch:e.fetchFunc,s=n.map(f=>t(f,e.requestInit,{isBinary:!0})),c=(e.onProgress==null?await Promise.all(s):await monitorPromisesProgress(s,e.onProgress,0,.5)).map(f=>f.arrayBuffer());return e.onProgress==null?await Promise.all(c):await monitorPromisesProgress(c,e.onProgress,.5,1)}async function loadWeights(n,e="",t,s){return weightsLoaderFactory(i=>loadWeightsAsArrayBuffer(i,{requestInit:s}))(n,e,t)}function weightsLoaderFactory(n){return async(e,t="",s)=>{const r=e.map(()=>!1),o={},i=s!=null?s.map(()=>!1):[],c=[];if(e.forEach((m,h)=>{let g=0;m.weights.forEach(x=>{const w="quantization"in x?x.quantization.dtype:x.dtype,I=DTYPE_VALUE_SIZE_MAP[w]*sizeFromShape(x.shape),N=()=>{r[h]=!0,o[h]==null&&(o[h]=[]),o[h].push({manifestEntry:x,groupOffset:g,sizeBytes:I})};s!=null?s.forEach((A,T)=>{A===x.name&&(N(),i[T]=!0)}):N(),c.push(x.name),g+=I})}),!i.every(m=>m)){const m=s.filter((h,g)=>!i[g]);throw new Error(`Could not find weights in manifest with names: ${m.join(", ")}. 
Manifest JSON has weights with names: ${c.join(", ")}.`)}const a=r.reduce((m,h,g)=>(h&&m.push(g),m),[]),l=[];a.forEach(m=>{e[m].paths.forEach(h=>{const g=t+(t.endsWith("/")?"":"/")+h;l.push(g)})});const d=await n(l),f={};let y=0;return a.forEach(m=>{const h=e[m].paths.length;let g=0;for(let A=0;A<h;A++)g+=d[y+A].byteLength;const x=new ArrayBuffer(g),w=new Uint8Array(x);let I=0;for(let A=0;A<h;A++){const T=new Uint8Array(d[y+A]);w.set(T,I),I+=T.byteLength}o[m].forEach(A=>{const T=x.slice(A.groupOffset,A.groupOffset+A.sizeBytes),P=decodeWeights(T,[A.manifestEntry]);for(const O in P)f[O]=P[O]}),y+=h}),f}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OCTET_STREAM_MIME_TYPE="application/octet-stream",JSON_TYPE="application/json";class HTTPRequest{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(assert$1(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=env().platform.fetch,assert$1(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&assert$1(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:s};e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:JSON_TYPE}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:OCTET_STREAM_MIME_TYPE}),"model.weights.bin");const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:getModelArtifactsInfoForJSON(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let g=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?g+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":g+=" Please make sure the server is serving valid JSON for this request.",new Error(g)}const s=t.modelTopology,r=t.weightsManifest,o=t.generatedBy,i=t.convertedBy,c=t.format,a=t.signature,l=t.userDefinedMetadata;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let d,f;r!=null&&([d,f]=await this.loadWeights(r));const y={modelTopology:s,weightSpecs:d,weightData:f,generatedBy:o,convertedBy:i,format:c};a!=null&&(y.signature=a),l!=null&&(y.userDefinedMetadata=l);const m=t.modelInitializer;return m&&(y.modelInitializer=m),y}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=parseUrl(t),o=this.weightPathPrefix||s,i=[];for(const d of e)i.push(...d.weights);const c=[],a=[];for(const d of e)for(const f of d.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(f)):c.push(o+f+r);this.weightUrlConverter&&c.push(...await Promise.all(a));const l=await loadWeightsAsArrayBuffer(c,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,concatenateArrayBuffers(l)]}}HTTPRequest.URL_SCHEME_REGEX=/^https?:\/\//;function parseUrl(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}function isHTTPScheme(n){return n.match(HTTPRequest.URL_SCHEME_REGEX)!=null}const httpRouter=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>isHTTPScheme(s)):t=isHTTPScheme(n),t)return http(n,e)}return null};IORouterRegistry.registerSaveRouter(httpRouter);IORouterRegistry.registerLoadRouter(httpRouter);function http(n,e){return new HTTPRequest(n,e)}function browserHTTPRequest(n,e){return http(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PassthroughLoader{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class PassthroughSaver{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function fromMemory(n,e,t,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new PassthroughLoader(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new PassthroughLoader({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new PassthroughLoader({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:s}))}function withSaveHandler(n){return new PassthroughSaver(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const io=Object.freeze(Object.defineProperty({__proto__:null,browserFiles,browserHTTPRequest,concatenateArrayBuffers,copyModel,decodeWeights,encodeWeights,fromMemory,getLoadHandlers,getModelArtifactsInfoForJSON,getSaveHandlers,http,isHTTPScheme,listModels,loadWeights,moveModel,registerLoadRouter,registerSaveRouter,removeModel,weightsLoaderFactory,withSaveHandler},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function matMul_(n,e,t=!1,s=!1){let r=convertToTensor(n,"a","matMul"),o=convertToTensor(e,"b","matMul");[r,o]=makeTypesMatch(r,o);const i={a:r,b:o},c={transposeA:t,transposeB:s};return ENGINE.runKernel(BatchMatMul,i,c)}const matMul$1=op({matMul_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oneHot_(n,e,t=1,s=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const o={indices:convertToTensor(n,"indices","oneHot","int32")},i={depth:e,onValue:t,offValue:s};return ENGINE.runKernel(OneHot,o,i)}const oneHot$2=op({oneHot_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transpose_(n,e){const t=convertToTensor(n,"x","transpose");if(e==null&&(e=t.shape.map((o,i)=>i).reverse()),assert$1(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of perm ${e}.`),e.forEach(o=>{assert$1(o>=0&&o<t.rank,()=>`All entries in 'perm' must be between 0 and ${t.rank-1} but got ${e}`)}),t.rank<=1)return t.clone();const s={x:t},r={perm:e};return ENGINE.runKernel(Transpose,s,r)}const transpose$2=op({transpose_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function confusionMatrix_(n,e,t){const s=convertToTensor(n,"labels","confusionMatrix"),r=convertToTensor(e,"predictions","confusionMatrix");assert$1(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),assert$1(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),assert$1(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),assert$1(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),assert$1(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);const o=oneHot$2(cast$3(s,"int32"),t),i=oneHot$2(cast$3(r,"int32"),t),c=transpose$2(o),a=matMul$1(c,i);return cast$3(a,"int32")}const confusionMatrix=op({confusionMatrix_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const math=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor3d(n,e,t){if(assertNonNull(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=inferShape(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return makeTensor(n,e,s,t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fromPixels2DContext$1;function fromPixels_(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,s=!1,r=!1,o=!1,i=!1,c=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else if(n.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)c=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(r&&r&&n.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(getKernel(FromPixels,ENGINE.backendName)!=null){const h={pixels:n},g={numChannels:e};return ENGINE.runKernel(FromPixels,h,g)}const[l,d]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let f;i?f=n.getContext("2d").getImageData(0,0,l,d).data:s||t?f=n.data:(o||r||c)&&(fromPixels2DContext$1==null&&(fromPixels2DContext$1=document.createElement("canvas").getContext("2d")),fromPixels2DContext$1.canvas.width=l,fromPixels2DContext$1.canvas.height=d,fromPixels2DContext$1.drawImage(n,0,0,l,d),f=fromPixels2DContext$1.getImageData(0,0,l,d).data);let y;if(e===4)y=new Int32Array(f);else{const h=l*d;y=new Int32Array(h*e);for(let g=0;g<h;g++)for(let x=0;x<e;++x)y[g*e+x]=f[g*4+x]}return tensor3d(y,[d,l,e],"int32")}async function toPixels(n,e){let t=convertToTensor(n,"img","toPixels");if(!(n instanceof Tensor)){const l=t;t=cast$3(l,"int32"),l.dispose()}if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);const[s,r]=t.shape.slice(0,2),o=t.rank===2?1:t.shape[2];if(o>4||o===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${o}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);const i=await t.data(),c=t.dtype==="float32"?255:1,a=new Uint8ClampedArray(r*s*4);for(let l=0;l<s*r;++l){const d=[0,0,0,255];for(let y=0;y<o;y++){const m=i[l*o+y];if(t.dtype==="float32"){if(m<0||m>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${m}.`)}else if(t.dtype==="int32"&&(m<0||m>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${m}.`);o===1?(d[0]=m*c,d[1]=m*c,d[2]=m*c):d[y]=m*c}const f=l*4;a[f+0]=Math.round(d[0]),a[f+1]=Math.round(d[1]),a[f+2]=Math.round(d[2]),a[f+3]=Math.round(d[3])}if(e!=null){e.width=r,e.height=s;const l=e.getContext("2d"),d=new ImageData(a,r,s);l.putImageData(d,0,0)}return t!==n&&t.dispose(),a}const fromPixels$1=op({fromPixels_}),browser=Object.freeze(Object.defineProperty({__proto__:null,fromPixels:fromPixels$1,toPixels},Symbol.toStringTag,{value:"Module"}));function prepareAndValidate(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(sizeFromShape(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,o=r[r.length-1];let i=1;for(let f=0;f<r.length-1;++f)i*=r[f];const c=n.shape,a=r.slice();a.pop();let l=1;for(let f=o;f<t;++f)l*=c[f],a.push(c[f]);const d=[...computeStrides(n.shape).map(f=>f/l),1].slice(0,o);return[a,i,l,d]}const gather_nd_util=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate},Symbol.toStringTag,{value:"Module"}));function validateUpdateShape(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(o+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(o+` update.rank != ${r+n.length-s}`);for(let i=0;i<r;++i)if(t.shape[i]!==e.shape[i])throw new Error(o+` updates.shape[${i}] (${t.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<t.rank-r;++i)if(t.shape[i+r]!==n[i+s])throw new Error(o+` updates.shape[${i+r}] (${t.shape[i+r]}) != shape[${i+r}] (${n[i+r]})`)}function validateInput$1(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}validateUpdateShape(t,e,n)}function calculateShapes(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,o=t.length;let i=1;for(let f=r;f<o;++f)i*=t[f];const c=r<1?1:r,a=sizeFromShape(e.shape)/c,l=[...computeStrides(t.slice(0,r)),1],d=sizeFromShape(t);return{sliceRank:r,numUpdates:a,sliceSize:i,strides:l,outputSize:d}}const scatter_nd_util=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes,validateInput:validateInput$1,validateUpdateShape},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function assertParamsValid(n,e,t){const s=n.shape.length;assert$1(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),assert$1(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)assert$1(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function maskToAxes(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function computeOutShape$2(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}function stridesWithElidedDims(n,e,t,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<t;o++)o===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function unnormalizeAxis(n,e,t){return t<=n?t:t-(e-1)}function getElidedAxes(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function getNormalizedAxes(n,e,t,s,r,o,i,c,a){const l=n.length;let d=new Array(l),f=new Array(l),y=new Array(l);if(e.length&&t>0){const m=e[0],h=t+1;d=startIndicesWithElidedDims(i,m,h,s,n),f=stopIndicesWithElidedDims(c,m,h,r,n),y=stridesWithElidedDims(o,m,h,n)}else for(let m=0;m<l;m++)d[m]=startForAxis(i,s,o,n,m,a),f[m]=stopForAxis(c,r,o,n,m,a),y[m]=stridesForAxis(o,m,a);return{begin:d,end:f,strides:y}}function startIndicesWithElidedDims(n,e,t,s,r){const o=[...r],i=getElidedAxes(t,e);for(let c=0;c<o.length;c++)if(i.indexOf(c)>-1)o[c]=0;else{const a=unnormalizeAxis(e,t,c);let l=s[a];n&1<<a&&(l=0),o[c]=l}return o}function stopIndicesWithElidedDims(n,e,t,s,r){const o=[...r],i=getElidedAxes(t,e);for(let c=0;c<o.length;c++)if(i.indexOf(c)>-1)o[c]=Number.MAX_SAFE_INTEGER;else{const a=unnormalizeAxis(e,t,c);let l=s[a];n&1<<a&&(l=Number.MAX_SAFE_INTEGER),o[c]=l}for(let c=0;c<o.length;c++){const a=r[c];o[c]<0&&(o[c]+=a),o[c]=clamp(0,o[c],r[c])}return o}function stridesForAxis(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function startForAxis(n,e,t,s,r,o){let i=e[r];const c=t[r]||1;(n&1<<r||o&1<<r||i==null)&&(c>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const a=s[r];return i<0&&(i+=a),i=clamp(0,i,a-1),i}function stopForAxis(n,e,t,s,r,o){let i=e[r];const c=t[r]||1;(n&1<<r||o&1<<r||i==null)&&(c>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const a=s[r];return i<0&&(i+=a),c>0?i=clamp(0,i,a):i=clamp(-1,i,a-1),i}function isSliceContinous(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}function computeFlatOffset(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function parseSliceParams(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(i=>{assert$1(i!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(r).fill(-1):typeof t=="number"?o=[t,...new Array(r-1).fill(-1)]:t.length<r?o=t.concat(new Array(r-t.length).fill(-1)):o=t,o=o.map((i,c)=>i>=0?i:(assert$1(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${c}.`),n.shape[c]-s[c])),[s,o]}function sliceInfo(n,e,t,s,r,o,i,c,a){let l=e.slice(),d=t.slice(),f=s;s==null&&(f=new Array(l.length));const y=maskToAxes(i);if(y.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(i!==0&&c!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(i!==0&&a!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const m=n.length-l.length,h=maskToAxes(c),g=n.slice();h.forEach(O=>{l[O]=0,d[O]=1,g.splice(O,0,1)});const{begin:x,end:w,strides:I}=getNormalizedAxes(g,y,m,l,d,f,r,o,i);l=x,d=w,f=I;const N=maskToAxes(a);N.forEach(O=>{d[O]=l[O]+1,f[O]=1});const A=computeOutShape$2(l,d,f),T=A.filter((O,F)=>N.indexOf(F)===-1);return{nonStrided:f.every(O=>O===1),$begin:l,$end:d,$strides:f,size:A,newShape:g,outShape:T}}const slice_util=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid,computeFlatOffset,computeOutShape:computeOutShape$2,getNormalizedAxes,isSliceContinous,maskToAxes,parseSliceParams,sliceInfo,startForAxis,startIndicesWithElidedDims,stopForAxis,stopIndicesWithElidedDims,stridesForAxis,stridesWithElidedDims},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Serializable{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class SerializationMap{constructor(){this.classNameMap={}}static getMap(){return SerializationMap.instance==null&&(SerializationMap.instance=new SerializationMap),SerializationMap.instance}static register(e){SerializationMap.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function registerClass(n){assert$1(n.className!=null,()=>"Class being registered does not have the static className property defined."),assert$1(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),assert$1(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),SerializationMap.register(n)}const serialization=Object.freeze(Object.defineProperty({__proto__:null,Serializable,SerializationMap,registerClass},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TEST_EPSILON_FLOAT32=.001,TEST_EPSILON_FLOAT16=.1;function expectArraysClose(n,e,t){return t==null&&(t=testEpsilon()),expectArraysPredicate(n,e,(s,r)=>areClose(s,r,t))}function testEpsilon(){return ENGINE.backend.floatPrecision()===32?TEST_EPSILON_FLOAT32:TEST_EPSILON_FLOAT16}function expectArraysPredicate(n,e,t){let s=!0;if((isTypedArray(n)||isTypedArray(e))&&(s=!1),isTypedArray(n)&&isTypedArray(e)&&(s=!0),s){const i=n.constructor.name,c=e.constructor.name;if(i!==c)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${c}`)}if(Array.isArray(n)&&Array.isArray(e)){const i=inferShape(n),c=inferShape(e);if(!arraysEqual(i,c))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${c}]`)}const r=isTypedArray(n)?n:flatten$2(n),o=isTypedArray(e)?e:flatten$2(e);if(r.length!==o.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${o.length}.
Actual:   ${r}.
Expected: ${o}.`);for(let i=0;i<o.length;++i){const c=r[i],a=o[i];if(!t(c,a))throw new Error(`Arrays differ: actual[${i}] = ${c}, expected[${i}] = ${a}.
Actual:   ${r}.
Expected: ${o}.`)}}function expectPromiseToFail(n,e){n().then(()=>e.fail(),()=>e())}function expectArraysEqual(n,e){const t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return isString(n)||isString(n[0])||isString(e)||isString(e[0])?expectArraysPredicate(n,t,(s,r)=>s==r):expectArraysPredicate(n,e,(s,r)=>areClose(s,r,0))}function expectNumbersClose(n,e,t){if(t==null&&(t=testEpsilon()),!areClose(n,e,t))throw new Error(`Numbers differ: actual === ${n}, expected === ${e}`)}function areClose(n,e,t){return!isFinite(n)&&!isFinite(e)?!0:!(isNaN(n)||isNaN(e)||Math.abs(n-e)>t)}function expectValuesInRange(n,e,t){for(let s=0;s<n.length;s++)if(n[s]<e||n[s]>t)throw new Error(`Value out of range:${n[s]} low: ${e}, high: ${t}`)}function expectArrayBuffersEqual(n,e){expect(new Float32Array(n)).toEqual(new Float32Array(e))}function encodeStrings(n){for(let e=0;e<n.length;e++){const t=n[e];Array.isArray(t)?encodeStrings(t):n[e]=encodeString(t)}return n}const test_util=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16,encodeStrings,expectArrayBuffersEqual,expectArraysClose,expectArraysEqual,expectNumbersClose,expectPromiseToFail,expectValuesInRange,testEpsilon},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const version$7="2.8.6";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function enableProdMode(){env().set("PROD",!0)}function enableDebugMode(){env().set("DEBUG",!0)}function disableDeprecationWarnings(){env().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function deprecationWarn(n){env().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function disposeVariables(){ENGINE.disposeVariables()}function engine(){return ENGINE}function memory(){return ENGINE.memory()}function profile(n){return ENGINE.profile(n)}function tidy(n,e){return ENGINE.tidy(n,e)}function dispose(n){getTensorsInContainer(n).forEach(t=>t.dispose())}function keep(n){return ENGINE.keep(n)}function time(n){return ENGINE.time(n)}function setBackend(n){return ENGINE.setBackend(n)}function ready(){return ENGINE.ready()}function getBackend(){return ENGINE.backendName}function removeBackend(n){ENGINE.removeBackend(n)}function findBackend(n){return ENGINE.findBackend(n)}function findBackendFactory(n){return ENGINE.findBackendFactory(n)}function registerBackend(n,e,t=1){return ENGINE.registerBackend(n,e,t)}function backend(){return ENGINE.backend}function setPlatform(n,e){env().setPlatform(n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function add_(n,e){let t=convertToTensor(n,"a","add"),s=convertToTensor(e,"b","add");[t,s]=makeTypesMatch(t,s);const r={a:t,b:s};return ENGINE.runKernel(Add$1,r)}const add$2=op({add_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function floorDiv_(n,e){let t=convertToTensor(n,"a","floorDiv"),s=convertToTensor(e,"b","floorDiv");[t,s]=makeTypesMatch(t,s);const r={a:t,b:s};return ENGINE.runKernel(FloorDiv,r)}const floorDiv$2=op({floorDiv_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function div_(n,e){let t=convertToTensor(n,"a","div"),s=convertToTensor(e,"b","div");if([t,s]=makeTypesMatch(t,s),t.dtype==="int32"&&s.dtype==="int32")return floorDiv$2(t,s);const r={a:t,b:s},o={};return ENGINE.runKernel(RealDiv,r,o)}const div$1=op({div_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mul_(n,e){let t=convertToTensor(n,"a","mul"),s=convertToTensor(e,"b","mul");[t,s]=makeTypesMatch(t,s);const r={a:t,b:s};return ENGINE.runKernel(Multiply$1,r)}const mul=op({mul_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function abs_(n){const e=convertToTensor(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return ENGINE.runKernel(ComplexAbs,t)}else{const t={x:e};return ENGINE.runKernel(Abs,t)}}const abs$2=op({abs_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function acos_(n){const t={x:convertToTensor(n,"x","acos")};return ENGINE.runKernel(Acos,t)}const acos$2=op({acos_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function acosh_(n){const t={x:convertToTensor(n,"x","acosh")};return ENGINE.runKernel(Acosh,t)}const acosh$2=op({acosh_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function addN_(n){assert$1(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),assert$1(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((r,o)=>convertToTensor(r,`tensors${o}`,"addN")),t=e[0];e.forEach(r=>{if(r.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!arraysEqual(r.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return ENGINE.runKernel(AddN,s)}const addN$2=op({addN_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function all_(n,e=null,t=!1){const r={x:convertToTensor(n,"x","all","bool")},o={axis:e,keepDims:t};return ENGINE.runKernel(All,r,o)}const all$2=op({all_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function any_(n,e=null,t=!1){const r={x:convertToTensor(n,"x","any","bool")},o={axis:e,keepDims:t};return ENGINE.runKernel(Any,r,o)}const any$2=op({any_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMax_(n,e=0){const s={x:convertToTensor(n,"x","argMax")},r={axis:e};return ENGINE.runKernel(ArgMax,s,r)}const argMax$2=op({argMax_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMin_(n,e=0){const s={x:convertToTensor(n,"x","argMin")},r={axis:e};return ENGINE.runKernel(ArgMin,s,r)}const argMin$2=op({argMin_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function asin_(n){const t={x:convertToTensor(n,"x","asin")};return ENGINE.runKernel(Asin,t)}const asin$2=op({asin_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function asinh_(n){const t={x:convertToTensor(n,"x","asinh")};return ENGINE.runKernel(Asinh,t)}const asinh$2=op({asinh_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function atan_(n){const t={x:convertToTensor(n,"x","atan")};return ENGINE.runKernel(Atan,t)}const atan$2=op({atan_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function atan2_(n,e){let t=convertToTensor(n,"a","atan2"),s=convertToTensor(e,"b","atan2");[t,s]=makeTypesMatch(t,s);const r={a:t,b:s};return ENGINE.runKernel(Atan2,r)}const atan2$2=op({atan2_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function atanh_(n){const t={x:convertToTensor(n,"x","atanh")};return ENGINE.runKernel(Atanh,t)}const atanh$2=op({atanh_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function computeDilation2DInfo(n,e,t,s,r="NHWC",o){const i=n[3],c=[...e,i],a=convertConv2DDataFormat(r);return computeConv2DInfo(n,c,t,o,s,null,null,a)}function computePool2DInfo(n,e,t,s,r,o,i="channelsLast"){const[c,a]=parseTupleParam(e);let l;if(i==="channelsLast")l=[c,a,n[3],n[3]];else if(i==="channelsFirst")l=[c,a,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return computeConv2DInfo(n,l,t,s,r,o,!1,i)}function computePool3DInfo(n,e,t,s,r,o,i="NDHWC"){const[c,a,l]=parse3TupleParam(e);let d,f;if(i==="NDHWC")f="channelsLast",d=[c,a,l,n[4],n[4]];else if(i==="NCDHW")f="channelsFirst",d=[c,a,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return computeConv3DInfo(n,d,t,s,r,!1,f,o)}function computeConv2DInfo(n,e,t,s,r,o,i=!1,c="channelsLast"){let[a,l,d,f]=[-1,-1,-1,-1];if(c==="channelsLast")[a,l,d,f]=n;else if(c==="channelsFirst")[a,f,l,d]=n;else throw new Error(`Unknown dataFormat ${c}`);const[y,m,,h]=e,[g,x]=parseTupleParam(t),[w,I]=parseTupleParam(s),N=getEffectiveFilterSize(y,w),A=getEffectiveFilterSize(m,I),{padInfo:T,outHeight:P,outWidth:O}=getPadAndOutInfo(r,l,d,g,x,N,A,o,c),F=i?h*f:h;let G;return c==="channelsFirst"?G=[a,F,P,O]:c==="channelsLast"&&(G=[a,P,O,F]),{batchSize:a,dataFormat:c,inHeight:l,inWidth:d,inChannels:f,outHeight:P,outWidth:O,outChannels:F,padInfo:T,strideHeight:g,strideWidth:x,filterHeight:y,filterWidth:m,effectiveFilterHeight:N,effectiveFilterWidth:A,dilationHeight:w,dilationWidth:I,inShape:n,outShape:G,filterShape:e}}function computeConv3DInfo(n,e,t,s,r,o=!1,i="channelsLast",c){let[a,l,d,f,y]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[a,l,d,f,y]=n;else if(i==="channelsFirst")[a,y,l,d,f]=n;else throw new Error(`Unknown dataFormat ${i}`);const[m,h,g,,x]=e,[w,I,N]=parse3TupleParam(t),[A,T,P]=parse3TupleParam(s),O=getEffectiveFilterSize(m,A),F=getEffectiveFilterSize(h,T),G=getEffectiveFilterSize(g,P),{padInfo:U,outDepth:Q,outHeight:ne,outWidth:J}=get3DPadAndOutInfo(r,l,d,f,w,I,N,O,F,G,c),oe=o?x*y:x;let le;return i==="channelsFirst"?le=[a,oe,Q,ne,J]:i==="channelsLast"&&(le=[a,Q,ne,J,oe]),{batchSize:a,dataFormat:i,inDepth:l,inHeight:d,inWidth:f,inChannels:y,outDepth:Q,outHeight:ne,outWidth:J,outChannels:oe,padInfo:U,strideDepth:w,strideHeight:I,strideWidth:N,filterDepth:m,filterHeight:h,filterWidth:g,effectiveFilterDepth:O,effectiveFilterHeight:F,effectiveFilterWidth:G,dilationDepth:A,dilationHeight:T,dilationWidth:P,inShape:n,outShape:le,filterShape:e}}function computeOutputShape2D(n,e,t,s,r){s==null&&(s=computeDefaultPad(n,e,t));const o=n[0],i=n[1],c=round$3((o-e+2*s)/t+1,r),a=round$3((i-e+2*s)/t+1,r);return[c,a]}function computeOutputShape4D(n,e,t,s,r,o){r==null&&(r=computeDefaultPad(n,e,s));const i=n[0],c=n[1],a=n[2],l=round$3((i-e+2*r)/s+1,o),d=round$3((c-e+2*r)/s+1,o),f=round$3((a-e+2*r)/s+1,o);return[l,d,f,t]}function computeDefaultPad(n,e,t,s=1){const r=getEffectiveFilterSize(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}function parseTupleParam(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function parse3TupleParam(n){return typeof n=="number"?[n,n,n]:n}function getEffectiveFilterSize(n,e){return e<=1?n:n+(n-1)*(e-1)}function getPadAndOutInfo(n,e,t,s,r,o,i,c,a){let l,d,f;if(typeof n=="number"){l={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const m=computeOutputShape2D([e,t],o,s,n,c);d=m[0],f=m[1]}else if(n==="same"){d=Math.ceil(e/s),f=Math.ceil(t/r);const y=Math.max(0,(d-1)*s+o-e),m=Math.max(0,(f-1)*r+i-t),h=Math.floor(y/2),g=y-h,x=Math.floor(m/2),w=m-x;l={top:h,bottom:g,left:x,right:w,type:"SAME"}}else if(n==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((e-o+1)/s),f=Math.ceil((t-i+1)/r);else if(typeof n=="object"){const y=a==="channelsLast"?n[1][0]:n[2][0],m=a==="channelsLast"?n[1][1]:n[2][1],h=a==="channelsLast"?n[2][0]:n[3][0],g=a==="channelsLast"?n[2][1]:n[3][1];l={top:y,bottom:m,left:h,right:g,type:y===0&&m===0&&h===0&&g===0?"VALID":"EXPLICIT"},d=round$3((e-o+y+m)/s+1,c),f=round$3((t-i+h+g)/r+1,c)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:l,outHeight:d,outWidth:f}}function get3DPadAndOutInfo(n,e,t,s,r,o,i,c,a,l,d){let f,y,m,h;if(typeof n=="number"){f={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const x=computeOutputShape4D([e,t,s,1],c,1,r,n,d);y=x[0],m=x[1],h=x[2]}else if(n==="same"){y=Math.ceil(e/r),m=Math.ceil(t/o),h=Math.ceil(s/i);const g=(y-1)*r+c-e,x=(m-1)*o+a-t,w=(h-1)*i+l-s,I=Math.floor(g/2),N=g-I,A=Math.floor(x/2),T=x-A,P=Math.floor(w/2),O=w-P;f={top:A,bottom:T,left:P,right:O,front:I,back:N,type:"SAME"}}else if(n==="valid")f={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},y=Math.ceil((e-c+1)/r),m=Math.ceil((t-a+1)/o),h=Math.ceil((s-l+1)/i);else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:f,outDepth:y,outHeight:m,outWidth:h}}function round$3(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function tupleValuesAreOne(n){const[e,t,s]=parseTupleParam(n);return e===1&&t===1&&s===1}function eitherStridesOrDilationsAreOne(n,e){return tupleValuesAreOne(n)||tupleValuesAreOne(e)}function convertConv2DDataFormat(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reshape_(n,e){const s={x:convertToTensor(n,"x","reshape","string_or_numeric")},r={shape:e};return ENGINE.runKernel(Reshape$1,s,r)}const reshape$3=op({reshape_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool_(n,e,t,s,r){const o=convertToTensor(n,"x","avgPool","float32"),i=1;assert$1(eitherStridesOrDilationsAreOne(t,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);let c=o,a=!1;o.rank===3&&(a=!0,c=reshape$3(o,[1,o.shape[0],o.shape[1],o.shape[2]])),assert$1(c.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${c.rank}.`),r!=null&&assert$1(isInt(s),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const l={x:c},d={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let f=ENGINE.runKernel(AvgPool,l,d);return f=cast$3(f,o.dtype),a?reshape$3(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const avgPool$2=op({avgPool_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3d_(n,e,t,s,r,o="NDHWC",i){i==null?i=[1,1,1]:deprecationWarn("dilations is deprecated, this field will be gone in v3.0.0.");const c=convertToTensor(n,"x","avgPool3d","float32");let a=c,l=!1;c.rank===4&&(l=!0,a=reshape$3(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),assert$1(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),assert$1(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),assert$1(eitherStridesOrDilationsAreOne(t,i),()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),r!=null&&assert$1(isInt(s),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const d={x:a},f={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o,dilations:i};let y=ENGINE.runKernel(AvgPool3D,d,f);return y=cast$3(y,a.dtype),l?reshape$3(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const avgPool3d$1=op({avgPool3d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concat_(n,e=0){assert$1(n.length>=1,()=>"Pass at least one tensor to concat");const t=convertToTensorArray(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return clone(t[0]);const s=t,r={axis:e};return ENGINE.runKernel(Concat,s,r)}const concat$2=op({concat_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sigmoid_(n){const t={x:convertToTensor(n,"x","sigmoid")};return ENGINE.runKernel(Sigmoid$1,t)}const sigmoid$2=op({sigmoid_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice_(n,e,t){const s=convertToTensor(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:e,size:t};return ENGINE.runKernel(Slice,r,o)}const slice$2=op({slice_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tanh_(n){const t={x:convertToTensor(n,"x","tanh")};return ENGINE.runKernel(Tanh$1,t)}const tanh$2=op({tanh_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function basicLSTMCell_(n,e,t,s,r,o){const i=convertToTensor(n,"forgetBias","basicLSTMCell"),c=convertToTensor(e,"lstmKernel","basicLSTMCell"),a=convertToTensor(t,"lstmBias","basicLSTMCell"),l=convertToTensor(s,"data","basicLSTMCell"),d=convertToTensor(r,"c","basicLSTMCell"),f=convertToTensor(o,"h","basicLSTMCell"),y=concat$2([l,f],1),m=matMul$1(y,c),h=add$2(m,a),g=h.shape[0],x=h.shape[1]/4,w=[g,x],I=slice$2(h,[0,0],w),N=slice$2(h,[0,x],w),A=slice$2(h,[0,x*2],w),T=slice$2(h,[0,x*3],w),P=add$2(mul(sigmoid$2(I),tanh$2(N)),mul(d,sigmoid$2(add$2(i,A)))),O=mul(tanh$2(P),sigmoid$2(T));return[P,O]}const basicLSTMCell=op({basicLSTMCell_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchToSpaceND_(n,e,t){const s=convertToTensor(n,"x","batchToSpaceND"),r=e.reduce((c,a)=>c*a);assert$1(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),assert$1(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),assert$1(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const o={x:s},i={blockShape:e,crops:t};return ENGINE.runKernel(BatchToSpaceND,o,i)}const batchToSpaceND$2=op({batchToSpaceND_});function xAs4D(n){let e;return n.rank===0||n.rank===1?e=reshape$3(n,[1,1,1,n.size]):n.rank===2?e=reshape$3(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=reshape$3(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchNorm_(n,e,t,s,r,o){o==null&&(o=.001);const i=convertToTensor(n,"x","batchNorm"),c=convertToTensor(e,"mean","batchNorm"),a=convertToTensor(t,"variance","batchNorm");let l;r!=null&&(l=convertToTensor(r,"scale","batchNorm"));let d;s!=null&&(d=convertToTensor(s,"offset","batchNorm")),assert$1(c.rank===a.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),assert$1(d==null||c.rank===d.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),assert$1(l==null||c.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const y={x:xAs4D(i),scale:l,offset:d,mean:c,variance:a},m={varianceEpsilon:o},h=ENGINE.runKernel(FusedBatchNorm,y,m);return reshape$3(h,i.shape)}const batchNorm$2=op({batchNorm_});function batchNorm2d_(n,e,t,s,r,o){const i=convertToTensor(n,"x","batchNorm"),c=convertToTensor(e,"mean","batchNorm"),a=convertToTensor(t,"variance","batchNorm");let l;r!=null&&(l=convertToTensor(r,"scale","batchNorm"));let d;return s!=null&&(d=convertToTensor(s,"offset","batchNorm")),assert$1(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),assert$1(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${c.rank}.`),assert$1(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${a.rank}.`),l!=null&&assert$1(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),d!=null&&assert$1(d.rank===2||d.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`),batchNorm$2(i,c,a,d,l,o)}const batchNorm2d=op({batchNorm2d_});function batchNorm3d_(n,e,t,s,r,o){const i=convertToTensor(n,"x","batchNorm"),c=convertToTensor(e,"mean","batchNorm"),a=convertToTensor(t,"variance","batchNorm");let l;r!=null&&(l=convertToTensor(r,"scale","batchNorm"));let d;return s!=null&&(d=convertToTensor(s,"offset","batchNorm")),assert$1(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),assert$1(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${c.rank}.`),assert$1(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${a.rank}.`),l!=null&&assert$1(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),d!=null&&assert$1(d.rank===3||d.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`),batchNorm$2(i,c,a,d,l,o)}const batchNorm3d=op({batchNorm3d_});function batchNorm4d_(n,e,t,s,r,o){const i=convertToTensor(n,"x","batchNorm"),c=convertToTensor(e,"mean","batchNorm"),a=convertToTensor(t,"variance","batchNorm");let l;r!=null&&(l=convertToTensor(r,"scale","batchNorm"));let d;return s!=null&&(d=convertToTensor(s,"offset","batchNorm")),assert$1(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),assert$1(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${c.rank}.`),assert$1(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${a.rank}.`),l!=null&&assert$1(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),d!=null&&assert$1(d.rank===4||d.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`),batchNorm$2(i,c,a,d,l,o)}const batchNorm4d=op({batchNorm4d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincount_(n,e,t){const s=convertToTensor(n,"x","bincount"),r=convertToTensor(e,"weights","bincount");assert$1(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),assert$1(t>=0,()=>`size must be non-negative, but got ${t}.`),assert$1(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},i={size:t};return ENGINE.runKernel(Bincount,o,i)}const bincount$2=op({bincount_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function broadcastTo_(n,e){let t=convertToTensor(n,"broadcastTo","x");const s=t.shape;if(e.some(l=>!(l>0)||l%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=reshape$3(t,l)}const r=t.shape,o=Array.from(e);for(let l=e.length-1;l>=0;l--)if(r[l]===e[l])o[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(o.map((l,d)=>l>1?d:-1).filter(l=>l>=0).length===0)return clone(t);const c={x:t},a={reps:o};return ENGINE.runKernel(Tile,c,a)}const broadcastTo=op({broadcastTo_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ceil_(n){const t={x:convertToTensor(n,"x","ceil")};return ENGINE.runKernel(Ceil,t)}const ceil$2=op({ceil_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clipByValue_(n,e,t){const s=convertToTensor(n,"x","clipByValue");assert$1(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`);const r={x:s},o={clipValueMin:e,clipValueMax:t};return ENGINE.runKernel(ClipByValue,r,o)}const clipByValue$1=op({clipByValue_});function concat1d_(n){return concat$2(n,0)}const concat1d=op({concat1d_});function concat2d_(n,e){return concat$2(n,e)}const concat2d=op({concat2d_});function concat3d_(n,e){return concat$2(n,e)}const concat3d=op({concat3d_});function concat4d_(n,e){return concat$2(n,e)}const concat4d=op({concat4d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2d_(n,e,t,s,r="NHWC",o=[1,1],i){const c=convertToTensor(n,"x","conv2d"),a=convertToTensor(e,"filter","conv2d");let l=c,d=!1;c.rank===3&&(d=!0,l=reshape$3(c,[1,c.shape[0],c.shape[1],c.shape[2]])),assert$1(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),assert$1(a.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${a.rank}.`),i!=null&&assert$1(isInt(s),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const f=r==="NHWC"?l.shape[3]:l.shape[1];assert$1(f===a.shape[2],()=>`Error in conv2d: depth of input (${f}) must match input depth for filter ${a.shape[2]}.`),assert$1(eitherStridesOrDilationsAreOne(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const y={x:l,filter:a},m={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},h=ENGINE.runKernel(Conv2D$1,y,m);return d?reshape$3(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const conv2d$3=op({conv2d_});function conv1d_(n,e,t,s,r="NWC",o=1,i){const c=convertToTensor(n,"x","conv1d"),a=convertToTensor(e,"filter","conv1d");let l=c,d=!1;c.rank===2&&(d=!0,l=reshape$3(c,[1,c.shape[0],c.shape[1]])),assert$1(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),assert$1(a.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${a.rank}.`),i!=null&&assert$1(isInt(s),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),assert$1(l.shape[2]===a.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${a.shape[1]}.`),assert$1(eitherStridesOrDilationsAreOne(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),assert$1(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const f=reshape$3(a,[1,a.shape[0],a.shape[1],a.shape[2]]),y=reshape$3(l,[l.shape[0],1,l.shape[1],l.shape[2]]),x=conv2d$3(y,f,[1,t],s,"NHWC",[1,o],i);return d?reshape$3(x,[x.shape[2],x.shape[3]]):reshape$3(x,[x.shape[0],x.shape[2],x.shape[3]])}const conv1d$1=op({conv1d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropInput_(n,e,t,s,r,o="NHWC",i){assert$1(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let c=n,a=e,l=!1;e.rank===3&&(l=!0,a=reshape$3(e,[1,e.shape[0],e.shape[1],e.shape[2]]),c=[1,n[0],n[1],n[2]]),assert$1(c.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${c.length}.`),assert$1(a.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${a.rank}`),assert$1(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const d=o==="NHWC"?c[3]:c[1],f=o==="NHWC"?a.shape[3]:a.shape[1];assert$1(d===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${t.shape[2]}.`),assert$1(f===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${f}) must match output depth for filter ${t.shape[3]}.`),i!=null&&assert$1(isInt(r),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const y={dy:a,filter:t},m={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,inputShape:c},h=ENGINE.runKernel(Conv2DBackpropInput,y,m);return l?reshape$3(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const conv2DBackpropInput$2=op({conv2DBackpropInput_});function conv2dTranspose_(n,e,t,s,r,o){const i=convertToTensor(n,"x","conv2dTranspose"),c=convertToTensor(e,"filter","conv2dTranspose");return conv2DBackpropInput$2(t,i,c,s,r,"NHWC",o)}const conv2dTranspose$1=op({conv2dTranspose_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3d_(n,e,t,s,r="NDHWC",o=[1,1,1]){const i=convertToTensor(n,"x","conv3d"),c=convertToTensor(e,"filter","conv3d");let a=i,l=!1;i.rank===4&&(l=!0,a=reshape$3(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),assert$1(a.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${a.rank}.`),assert$1(c.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${c.rank}.`),assert$1(a.shape[4]===c.shape[3],()=>`Error in conv3d: depth of input (${a.shape[4]}) must match input depth for filter ${c.shape[3]}.`),assert$1(eitherStridesOrDilationsAreOne(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),assert$1(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);const d={x:a,filter:c},f={strides:t,pad:s,dataFormat:r,dilations:o},y=ENGINE.runKernel(Conv3D$1,d,f);return l?reshape$3(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const conv3d$1=op({conv3d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropInput_(n,e,t,s,r){assert$1(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,i=e,c=!1;e.rank===4&&(c=!0,i=reshape$3(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const a=o[4],l=i.shape[4];assert$1(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),assert$1(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),assert$1(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),assert$1(a===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${a}) must match input depth for filter ${t.shape[3]}.`),assert$1(l===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${t.shape[4]}.`);const d={dy:i,filter:t},f={pad:r,strides:s,inputShape:o},y=ENGINE.runKernel(Conv3DBackpropInputV2,d,f);return c?reshape$3(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const conv3DBackpropInput$1=op({conv3DBackpropInput_});function conv3dTranspose_(n,e,t,s,r){const o=convertToTensor(n,"x","conv3dTranspose"),i=convertToTensor(e,"filter","conv3dTranspose");return conv3DBackpropInput$1(t,o,i,s,r)}const conv3dTranspose=op({conv3dTranspose_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cos_(n){const t={x:convertToTensor(n,"x","cos")};return ENGINE.runKernel(Cos,t)}const cos$2=op({cos_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cosh_(n){const t={x:convertToTensor(n,"x","cosh")};return ENGINE.runKernel(Cosh,t)}const cosh$2=op({cosh_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumsum_(n,e=0,t=!1,s=!1){const o={x:convertToTensor(n,"x","cumsum")},i={axis:e,exclusive:t,reverse:s};return ENGINE.runKernel(Cumsum,o,i)}const cumsum$2=op({cumsum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function denseBincount_(n,e,t,s=!1){const r=convertToTensor(n,"x","denseBincount"),o=convertToTensor(e,"weights","denseBincount");assert$1(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),assert$1(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),assert$1(t>=0,()=>`size must be non-negative, but got ${t}.`),assert$1(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const i={x:r,weights:o},c={size:t,binaryOutput:s};return ENGINE.runKernel(DenseBincount,i,c)}const denseBincount$2=op({denseBincount_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthToSpace_(n,e,t="NHWC"){const s=convertToTensor(n,"x","depthToSpace"),r=t==="NHWC"?s.shape[1]:s.shape[2],o=t==="NHWC"?s.shape[2]:s.shape[3],i=t==="NHWC"?s.shape[3]:s.shape[1];assert$1(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),assert$1(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${s.shape}`),assert$1(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${s.shape}`);const c={x:s},a={blockSize:e,dataFormat:t};return ENGINE.runKernel(DepthToSpace,c,a)}const depthToSpace$2=op({depthToSpace_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2d_(n,e,t,s,r="NHWC",o=[1,1],i){const c=convertToTensor(n,"x","depthwiseConv2d"),a=convertToTensor(e,"filter","depthwiseConv2d");let l=c,d=!1;c.rank===3&&(d=!0,l=reshape$3(c,[1,c.shape[0],c.shape[1],c.shape[2]])),assert$1(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),assert$1(a.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${a.rank}.`),assert$1(l.shape[3]===a.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${a.shape[2]}.`),i!=null&&assert$1(isInt(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const f={x:l,filter:a},y={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i},m=ENGINE.runKernel(DepthwiseConv2dNative,f,y);return d?reshape$3(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const depthwiseConv2d$3=op({depthwiseConv2d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function diag_(n){const t={x:convertToTensor(n,"x","diag")};return ENGINE.runKernel(Diag,t)}const diag$2=op({diag_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dilation2d_(n,e,t,s,r=[1,1],o="NHWC"){const i=convertToTensor(n,"x","dilation2d"),c=convertToTensor(e,"filter","dilation2d");assert$1(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),assert$1(c.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${c.rank}.`),assert$1(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let a=i,l=!1;i.rank===3&&(a=reshape$3(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const d={x:a,filter:c},f={strides:t,pad:s,dilations:r},y=ENGINE.runKernel(Dilation2D,d,f);return l?reshape$3(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const dilation2d=op({dilation2d_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getBroadcastDims$1(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const o=t-1-r,i=n[o]||1;(e[e.length-1-r]||1)>1&&i===1&&s.unshift(o)}return s}function getReductionAxes(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],o=e.length-s-1,i=e[o];(r==null||r===1&&i>1)&&t.unshift(o)}return t}function assertAndGetBroadcastShape(n,e){const t=[],s=Math.max(n.length,e.length);for(let r=0;r<s;r++){let o=n[n.length-r-1];o==null&&(o=1);let i=e[e.length-r-1];if(i==null&&(i=1),o===1)t.unshift(i);else if(i===1)t.unshift(o);else if(o!==i){const c=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(c)}else t.unshift(o)}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function equal_(n,e){let t=convertToTensor(n,"a","equal"),s=convertToTensor(e,"b","equal");[t,s]=makeTypesMatch(t,s),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(Equal,r)}const equal$2=op({equal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function where_(n,e,t){const s=convertToTensor(e,"a","where"),r=convertToTensor(t,"b","where"),o=convertToTensor(n,"condition","where","bool"),i=assertAndGetBroadcastShape(s.shape,r.shape),c=broadcastTo(s,i),a=broadcastTo(r,i);o.rank===1&&assert$1(o.shape[0]===s.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),o.rank!==1&&assertShapesMatch(o.shape,a.shape,"Error in where: ");const l={condition:o,t:c,e:a};return ENGINE.runKernel(Select,l)}const where=op({where_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zerosLike_(n){const t={x:convertToTensor(n,"x","zerosLike")};return ENGINE.runKernel(ZerosLike,t)}const zerosLike$2=op({zerosLike_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function divNoNan_(n,e){let t=convertToTensor(n,"a","div"),s=convertToTensor(e,"b","div");[t,s]=makeTypesMatch(t,s);const r=div$1(t,s),o=zerosLike$2(r),i=equal$2(s,o);return where(i,o,r)}const divNoNan=op({divNoNan_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dot_(n,e){const t=convertToTensor(n,"t1","dot"),s=convertToTensor(e,"t2","dot");assert$1((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],o=s.rank===1?s.size:s.shape[0];if(assert$1(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),t.rank===1&&s.rank===1){const i=reshape$3(t,[1,-1]),c=reshape$3(s,[-1,1]),a=matMul$1(i,c);return reshape$3(a,[])}else if(t.rank===1&&s.rank===2){const i=reshape$3(t,[1,-1]),c=reshape$3(s,[s.shape[0],s.shape[1]]),a=matMul$1(i,c);return reshape$3(a,[a.size])}else if(t.rank===2&&s.rank===1){const i=reshape$3(s,[-1,1]),c=matMul$1(t,i);return reshape$3(c,[c.size])}else{const i=reshape$3(s,[s.shape[0],s.shape[1]]);return matMul$1(t,i)}}const dot$2=op({dot_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function elu_(n){const t={x:convertToTensor(n,"x","elu")};return ENGINE.runKernel(Elu$1,t)}const elu$4=op({elu_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function erf_(n){let e=convertToTensor(n,"x","erf");assert$1(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=cast$3(e,"float32"));const t={x:e};return ENGINE.runKernel(Erf,t)}const erf$2=op({erf_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function exp_(n){const t={x:convertToTensor(n,"x","exp")};return ENGINE.runKernel(Exp,t)}const exp$2=op({exp_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expandDims_(n,e=0){const t=convertToTensor(n,"x","expandDims","string_or_numeric");assert$1(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return ENGINE.runKernel(ExpandDims,s,r)}const expandDims$3=op({expandDims_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expm1_(n){const t={x:convertToTensor(n,"x","expm1")};return ENGINE.runKernel(Expm1,t)}const expm1$2=op({expm1_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tile_(n,e){const t=convertToTensor(n,"x","tile","string_or_numeric");assert$1(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return ENGINE.runKernel(Tile,s,r)}const tile$3=op({tile_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eye_(n,e,t,s="float32"){e==null&&(e=n);const r=buffer([n,e],s),o=n<=e?n:e;for(let c=0;c<o;++c)r.set(1,c,c);const i=reshape$3(r.toTensor(),[n,e]);if(t==null)return i;if(t.length===1)return tile$3(expandDims$3(i,0),[t[0],1,1]);if(t.length===2)return tile$3(expandDims$3(expandDims$3(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return tile$3(expandDims$3(expandDims$3(expandDims$3(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const eye=op({eye_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fill$2(n,e,t){const s={shape:n,value:e,dtype:t};return ENGINE.runKernel(Fill,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function floor_(n){const t={x:convertToTensor(n,"x","floor")};return ENGINE.runKernel(Floor,t)}const floor$2=op({floor_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gather_(n,e,t=0,s=0){const r=convertToTensor(n,"x","gather"),o=convertToTensor(e,"indices","gather","int32"),i={x:r,indices:o},c={axis:t,batchDims:s};return ENGINE.runKernel(GatherV2,i,c)}const gather$1=op({gather_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function greater_(n,e){let t=convertToTensor(n,"a","greater"),s=convertToTensor(e,"b","greater");[t,s]=makeTypesMatch(t,s),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(Greater,r)}const greater$3=op({greater_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function greaterEqual_(n,e){let t=convertToTensor(n,"a","greaterEqual"),s=convertToTensor(e,"b","greaterEqual");[t,s]=makeTypesMatch(t,s),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(GreaterEqual,r)}const greaterEqual$2=op({greaterEqual_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function imag_(n){const t={input:convertToTensor(n,"input","imag")};return ENGINE.runKernel(Imag,t)}const imag$2=op({imag_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isFinite_(n){const t={x:convertToTensor(n,"x","isFinite")};return ENGINE.runKernel(IsFinite,t)}const isFinite$3=op({isFinite_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isInf_(n){const t={x:convertToTensor(n,"x","isInf")};return ENGINE.runKernel(IsInf,t)}const isInf$2=op({isInf_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function isNaN_(n){const t={x:convertToTensor(n,"x","isNaN")};return ENGINE.runKernel(IsNan,t)}const isNaN$3=op({isNaN_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function leakyRelu_(n,e=.2){const s={x:convertToTensor(n,"x","leakyRelu")},r={alpha:e};return ENGINE.runKernel(LeakyRelu,s,r)}const leakyRelu$2=op({leakyRelu_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function less_(n,e){let t=convertToTensor(n,"a","less"),s=convertToTensor(e,"b","less");[t,s]=makeTypesMatch(t,s),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(Less,r)}const less$3=op({less_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lessEqual_(n,e){let t=convertToTensor(n,"a","lessEqual"),s=convertToTensor(e,"b","lessEqual");[t,s]=makeTypesMatch(t,s),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(LessEqual,r)}const lessEqual$2=op({lessEqual_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linspace(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return ENGINE.runKernel(LinSpace,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function localResponseNormalization_(n,e=5,t=1,s=1,r=.5){const o=convertToTensor(n,"x","localResponseNormalization");assert$1(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),assert$1(isInt(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=o,c=!1;o.rank===3&&(c=!0,i=reshape$3(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const a={x:i},l={depthRadius:e,bias:t,alpha:s,beta:r},d=ENGINE.runKernel(LRN,a,l);return c?reshape$3(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const localResponseNormalization=op({localResponseNormalization_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function log_(n){const t={x:convertToTensor(n,"x","log")};return ENGINE.runKernel(Log,t)}const log$3=op({log_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function log1p_(n){const t={x:convertToTensor(n,"x","log1p")};return ENGINE.runKernel(Log1p,t)}const log1p$2=op({log1p_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function grad(n){return assert$1(isFunction(n),()=>"The f passed in grad(f) must be a function"),(e,t)=>{const s=convertToTensor(e,"x","tf.grad","string_or_numeric"),r=t!=null?convertToTensor(t,"dy","tf.grad"):null;return ENGINE.tidy(()=>{const{value:o,grads:i}=ENGINE.gradients(()=>n(s),[s],r);return r!=null&&assertShapesMatch(o.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),checkGrads(i),i[0]})}}function grads(n){return assert$1(isFunction(n),()=>"The f passed in grads(f) must be a function"),(e,t)=>{assert$1(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const s=convertToTensorArray(e,"args","tf.grads","string_or_numeric"),r=t!=null?convertToTensor(t,"dy","tf.grads"):null;return ENGINE.tidy(()=>{const{value:o,grads:i}=ENGINE.gradients(()=>n(...s),s,r);return r!=null&&assertShapesMatch(o.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),checkGrads(i),i})}}function valueAndGrad(n){return assert$1(isFunction(n),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{assert$1(e instanceof Tensor,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),assert$1(t==null||t instanceof Tensor,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:r}=ENGINE.gradients(()=>n(e),[e],t);return checkGrads(s),{grad:s[0],value:r}}}function valueAndGrads(n){return assert$1(isFunction(n),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{assert$1(Array.isArray(e)&&e.every(r=>r instanceof Tensor),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),assert$1(t==null||t instanceof Tensor,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=ENGINE.gradients(()=>n(...e),e,t);return t!=null&&assertShapesMatch(s.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),checkGrads(s.grads),s}}function variableGrads(n,e){assert$1(isFunction(n),()=>"The f passed in variableGrads(f) must be a function"),assert$1(e==null||Array.isArray(e)&&e.every(l=>l instanceof Variable),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const l in ENGINE.registeredVariables)e.push(ENGINE.registeredVariables[l])}const s=t?e.filter(l=>!l.trainable):null,r=e.length;e=e.filter(l=>l.trainable),assert$1(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:i,grads:c}=ENGINE.gradients(n,e,null,o);assert$1(c.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),assert$1(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const a={};return e.forEach((l,d)=>{c[d]!=null&&(a[l.name]=c[d])}),s!=null&&s.forEach(l=>a[l.name]=null),{value:i,grads:a}}function customGrad(n){return ENGINE.customGrad(n)}function checkGrads(n){if(n.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function neg_(n){const t={x:convertToTensor(n,"x","neg")};return ENGINE.runKernel(Neg,t)}const neg$2=op({neg_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softplus_(n){const t={x:convertToTensor(n,"x","softplus")};return ENGINE.runKernel(Softplus$1,t)}const softplus$2=op({softplus_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logSigmoid_(n){const e=convertToTensor(n,"x","logSigmoid");return customGrad(s=>({value:neg$2(softplus$2(neg$2(s))),gradFunc:i=>mul(i,sigmoid$2(neg$2(s)))}))(e)}const logSigmoid=op({logSigmoid_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function max_(n,e=null,t=!1){const r={x:convertToTensor(n,"x","max")},o={reductionIndices:e,keepDims:t};return ENGINE.runKernel(Max,r,o)}const max$3=op({max_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sub_(n,e){let t=convertToTensor(n,"a","sub"),s=convertToTensor(e,"b","sub");[t,s]=makeTypesMatch(t,s);const r={a:t,b:s};return ENGINE.runKernel(Sub,r)}const sub$2=op({sub_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sum_(n,e=null,t=!1){let s=convertToTensor(n,"x","sum");s.dtype==="bool"&&(s=cast$3(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return ENGINE.runKernel(Sum,r,o)}const sum$2=op({sum_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logSoftmax_(n,e=-1){const t=convertToTensor(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return customGrad((r,o)=>{const c=max$3(r,e,!0),a=sub$2(r,c),l=sub$2(cast$3(a,"float32"),log$3(sum$2(exp$2(a),e,!0)));return o([l]),{value:l,gradFunc:(f,y)=>{const[m]=y,h=!0,g=exp$2(m);return sub$2(f,mul(sum$2(f,e,h),g))}}})(t)}const logSoftmax=op({logSoftmax_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function axesAreInnerMostDims(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function combineLocations(n,e,t){const s=n.length+e.length,r=[];let o=0,i=0;for(let c=0;c<s;c++)t.indexOf(c)===-1?r.push(n[o++]):r.push(e[i++]);return r}function computeOutAndReduceShapes(n,e){const t=[],s=n.length;for(let o=0;o<s;o++)e.indexOf(o)===-1&&t.push(n[o]);const r=e.map(o=>n[o]);return[t,r]}function expandShapeToKeepDim(n,e){const t=e.map(s=>1);return combineLocations(n,t,e)}function assertAxesAreInnerMostDims(n,e,t){assert$1(axesAreInnerMostDims(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function getAxesPermutation(n,e){if(axesAreInnerMostDims(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function getUndoAxesPermutation(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function getInnerMostAxes(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logSumExp_(n,e=null,t=!1){const s=convertToTensor(n,"x","logSumExp"),r=parseAxisParam(e,s.shape),o=max$3(s,r,!0),i=sub$2(s,o),c=exp$2(i),a=sum$2(c,r),l=log$3(a),d=add$2(reshape$3(o,l.shape),l);if(t){const f=expandShapeToKeepDim(d.shape,r);return reshape$3(d,f)}return d}const logSumExp=op({logSumExp_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalAnd_(n,e){const t=convertToTensor(n,"a","logicalAnd","bool"),s=convertToTensor(e,"b","logicalAnd","bool");assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(LogicalAnd,r)}const logicalAnd$2=op({logicalAnd_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalNot_(n){const t={x:convertToTensor(n,"x","logicalNot","bool")};return ENGINE.runKernel(LogicalNot,t)}const logicalNot$2=op({logicalNot_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalOr_(n,e){const t=convertToTensor(n,"a","logicalOr","bool"),s=convertToTensor(e,"b","logicalOr","bool");assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(LogicalOr,r)}const logicalOr$2=op({logicalOr_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logicalXor_(n,e){const t=convertToTensor(n,"a","logicalXor","bool"),s=convertToTensor(e,"b","logicalXor","bool");return assertAndGetBroadcastShape(t.shape,s.shape),logicalAnd$2(logicalOr$2(n,e),logicalNot$2(logicalAnd$2(n,e)))}const logicalXor=op({logicalXor_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool_(n,e,t,s,r){const o=convertToTensor(n,"x","maxPool"),i=1;let c=o,a=!1;o.rank===3&&(a=!0,c=reshape$3(o,[1,o.shape[0],o.shape[1],o.shape[2]])),assert$1(c.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${c.rank}.`),assert$1(eitherStridesOrDilationsAreOne(t,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),r!=null&&assert$1(isInt(s),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const l={x:c},d={filterSize:e,strides:t,pad:s,dimRoundingMode:r},f=ENGINE.runKernel(MaxPool,l,d);return a?reshape$3(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const maxPool$2=op({maxPool_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3d_(n,e=[1,1,1],t,s,r,o="NDHWC",i){i==null?i=[1,1,1]:deprecationWarn("dilations is deprecated, this field will be gone in v3.0.0.");const c=convertToTensor(n,"x","maxPool3d");let a=c,l=!1;c.rank===4&&(l=!0,a=reshape$3(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),assert$1(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),assert$1(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),assert$1(eitherStridesOrDilationsAreOne(t,i),()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),r!=null&&assert$1(isInt(s),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`);const d={x:a},f={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o,dilations:i},y=ENGINE.runKernel(MaxPool3D,d,f);return l?reshape$3(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const maxPool3d$1=op({maxPool3d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolWithArgmax_(n,e,t,s,r=!1){const i={x:convertToTensor(n,"x","maxPoolWithArgmax")},c={filterSize:e,strides:t,pad:s,includeBatchInIndex:r},a=ENGINE.runKernel(MaxPoolWithArgmax,i,c);return{result:a[0],indexes:a[1]}}const maxPoolWithArgmax=op({maxPoolWithArgmax_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maximum_(n,e){let t=convertToTensor(n,"a","maximum"),s=convertToTensor(e,"b","maximum");[t,s]=makeTypesMatch(t,s),t.dtype==="bool"&&(t=cast$3(t,"int32"),s=cast$3(s,"int32")),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(Maximum$1,r)}const maximum$3=op({maximum_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mean_(n,e=null,t=!1){const r={x:convertToTensor(n,"x","mean")},o={axis:e,keepDims:t};return ENGINE.runKernel(Mean,r,o)}const mean$1=op({mean_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function min_(n,e=null,t=!1){const r={x:convertToTensor(n,"x","min")},o={axis:e,keepDims:t};return ENGINE.runKernel(Min,r,o)}const min$3=op({min_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function minimum_(n,e){let t=convertToTensor(n,"a","minimum"),s=convertToTensor(e,"b","minimum");[t,s]=makeTypesMatch(t,s),t.dtype==="bool"&&(t=cast$3(t,"int32"),s=cast$3(s,"int32")),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(Minimum$1,r)}const minimum$3=op({minimum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mirrorPad_(n,e,t){assert$1(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=convertToTensor(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");assert$1(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let c=0;c<s.rank;c++)assert$1(e[c].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),assert$1(e[c][0]>=0&&e[c][0]<=s.shape[c]-r&&e[c][1]>=0&&e[c][1]<=s.shape[c]-r,()=>`Padding in dimension ${c} cannot be greater than or equal to ${s.shape[c]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:e,mode:t},i={x:s};return ENGINE.runKernel(MirrorPad,i,o)}const mirrorPad$1=op({mirrorPad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mod_(n,e){let t=convertToTensor(n,"a","mod"),s=convertToTensor(e,"b","mod");[t,s]=makeTypesMatch(t,s);const r={a:t,b:s};return ENGINE.runKernel(Mod,r)}const mod$2=op({mod_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function square_(n){const e=convertToTensor(n,"x","square"),t={};return ENGINE.runKernel("Square",{x:e},t)}const square$2=op({square_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function moments_(n,e=null,t=!1){n=convertToTensor(n,"x","moments");const s=parseAxisParam(e,n.shape),r=mean$1(n,s,t);let o=r.shape;t||(o=expandShapeToKeepDim(r.shape,s));const i=square$2(sub$2(cast$3(n,"float32"),reshape$3(r,o))),c=mean$1(i,s,t);return{mean:r,variance:c}}const moments=op({moments_});function multiRNNCell_(n,e,t,s){const r=convertToTensor(e,"data","multiRNNCell"),o=convertToTensorArray(t,"c","multiRNNCell"),i=convertToTensorArray(s,"h","multiRNNCell");let c=r;const a=[];for(let f=0;f<n.length;f++){const y=n[f](c,o[f],i[f]);a.push(y[0]),a.push(y[1]),c=y[1]}const l=[],d=[];for(let f=0;f<a.length;f+=2)l.push(a[f]),d.push(a[f+1]);return[l,d]}const multiRNNCell=op({multiRNNCell_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function multinomial_(n,e,t,s=!1){const r=convertToTensor(n,"logits","multinomial"),o=r.size,i=r.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);t=t||Math.random();const a={logits:i===1?reshape$3(r,[1,-1]):r},l={numSamples:e,seed:t,normalized:s},d=ENGINE.runKernel(Multinomial,a,l);return i===1?reshape$3(d,[d.size]):d}const multinomial$2=op({multinomial_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function notEqual_(n,e){let t=convertToTensor(n,"a","notEqual"),s=convertToTensor(e,"b","notEqual");[t,s]=makeTypesMatch(t,s),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s};return ENGINE.runKernel(NotEqual,r)}const notEqual$2=op({notEqual_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zeros$2(n,e="float32"){if(e==="complex64"){const s=zeros$2(n,"float32"),r=zeros$2(n,"float32");return complex$2(s,r)}const t=makeZerosTypedArray(sizeFromShape(n),e);return ENGINE.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ones$1(n,e="float32"){if(e==="complex64"){const s=ones$1(n,"float32"),r=zeros$2(n,"float32");return complex$2(s,r)}const t=makeOnesTypedArray(sizeFromShape(n),e);return ENGINE.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function onesLike_(n){const t={x:convertToTensor(n,"x","onesLike")};return ENGINE.runKernel(OnesLike,t)}const onesLike$2=op({onesLike_});function outerProduct_(n,e){const t=convertToTensor(n,"v1","outerProduct"),s=convertToTensor(e,"v2","outerProduct");assert$1(t.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${s.rank}.`);const r=reshape$3(t,[-1,1]),o=reshape$3(s,[1,-1]);return matMul$1(r,o)}const outerProduct=op({outerProduct_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pad_(n,e,t=0){const s=convertToTensor(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},o={x:s};return ENGINE.runKernel(PadV2,o,r)}const pad=op({pad_});function pad1d_(n,e,t=0){return assert$1(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),pad(n,[e],t)}const pad1d=op({pad1d_});function pad2d_(n,e,t=0){return assert$1(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),pad(n,e,t)}const pad2d=op({pad2d_});function pad3d_(n,e,t=0){return assert$1(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),pad(n,e,t)}const pad3d=op({pad3d_});function pad4d_(n,e,t=0){return assert$1(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),pad(n,e,t)}const pad4d=op({pad4d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function spaceToBatchND_(n,e,t){const s=convertToTensor(n,"x","spaceToBatchND");assert$1(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),assert$1(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),assert$1(s.shape.reduce((i,c,a)=>a>0&&a<=e.length?i&&(c+t[a-1][0]+t[a-1][1])%e[a-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},o={blockShape:e,paddings:t};return ENGINE.runKernel(SpaceToBatchND,r,o)}const spaceToBatchND$2=op({spaceToBatchND_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pool_(n,e,t,s,r,o){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const i=convertToTensor(n,"x","maxPool");let c=i,a=!1;i.rank===3&&(a=!0,c=reshape$3(i,[1,i.shape[0],i.shape[1],i.shape[2]])),assert$1(eitherStridesOrDilationsAreOne(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const l=computePool2DInfo(c.shape,e,o,r,s),d=[l.dilationHeight,l.dilationWidth];let f;s==="same"?f=withSpaceToBatchBasePaddings([l.filterHeight,l.filterWidth],d):f=[[0,0],[0,0]];const y=d[0]===1&&d[1]===1,[m,h]=requiredSpaceToBatchPaddings([l.inHeight,l.inWidth],d,f),g=y?s:"valid",x=y?c:spaceToBatchND$2(c,d,m),I=(t==="avg"?()=>avgPool$2(x,e,o,g):()=>maxPool$2(x,e,o,g))(),N=y?I:batchToSpaceND$2(I,d,h);return a?reshape$3(N,[N.shape[1],N.shape[2],N.shape[3]]):N}function requiredSpaceToBatchPaddings(n,e,t){const s=t.map(d=>d[0]),r=t.map(d=>d[1]),o=n.concat(s,r),i=e.map((d,f)=>(d-o[f]%d)%d),c=r.map((d,f)=>d+i[f]),a=e.map((d,f)=>[s[f],c[f]]),l=e.map((d,f)=>[0,i[f]]);return[a,l]}function withSpaceToBatchBasePaddings(n,e){const s=n.map((i,c)=>i+(i-1)*(e[c]-1)).map(i=>i-1),r=s.map(i=>Math.floor(i/2)),o=s.map((i,c)=>i-r[c]);return s.map((i,c)=>[r[c],o[c]])}const pool$1=op({pool_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pow_(n,e){let t=convertToTensor(n,"base","pow"),s=convertToTensor(e,"exp","pow");[t,s]=makeTypesMatch(t,s);const r={a:t,b:s};return ENGINE.runKernel(Pow,r)}const pow$2=op({pow_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prelu_(n,e){const t=convertToTensor(n,"x","prelu"),s=convertToTensor(e,"alpha","prelu"),r={x:t,alpha:s};return ENGINE.runKernel(Prelu,r)}const prelu$3=op({prelu_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prod_(n,e=null,t=!1){let s=convertToTensor(n,"x","prod");s.dtype==="bool"&&(s=cast$3(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return ENGINE.runKernel(Prod,r,o)}const prod$2=op({prod_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rand_(n,e,t){const s=sizeFromShape(n);let r=null;if(t==null||t==="float32")r=new Float32Array(s);else if(t==="int32")r=new Int32Array(s);else if(t==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${t}`);for(let o=0;o<s;o++)r[o]=e();return ENGINE.makeTensor(r,n,t)}const rand=op({rand_});var alea$5={exports:{}},alea$4=alea$5.exports,hasRequiredAlea$2;function requireAlea$2(){return hasRequiredAlea$2||(hasRequiredAlea$2=1,function(n){(function(e,t,s){function r(a){var l=this,d=c();l.next=function(){var f=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=f-(l.c=f|0)},l.c=1,l.s0=d(" "),l.s1=d(" "),l.s2=d(" "),l.s0-=d(a),l.s0<0&&(l.s0+=1),l.s1-=d(a),l.s1<0&&(l.s1+=1),l.s2-=d(a),l.s2<0&&(l.s2+=1),d=null}function o(a,l){return l.c=a.c,l.s0=a.s0,l.s1=a.s1,l.s2=a.s2,l}function i(a,l){var d=new r(a),f=l&&l.state,y=d.next;return y.int32=function(){return d.next()*4294967296|0},y.double=function(){return y()+(y()*2097152|0)*11102230246251565e-32},y.quick=y,f&&(typeof f=="object"&&o(f,d),y.state=function(){return o(d,{})}),y}function c(){var a=4022871197,l=function(d){d=d.toString();for(var f=0;f<d.length;f++){a+=d.charCodeAt(f);var y=.02519603282416938*a;a=y>>>0,y-=a,y*=a,a=y>>>0,y-=a,a+=y*4294967296}return(a>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=i:this.alea=i})(alea$4,n)}(alea$5)),alea$5.exports}var xor128$5={exports:{}},xor128$4=xor128$5.exports,hasRequiredXor128$2;function requireXor128$2(){return hasRequiredXor128$2||(hasRequiredXor128$2=1,function(n){(function(e,t,s){function r(c){var a=this,l="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var f=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^f^f>>>8},c===(c|0)?a.x=c:l+=c;for(var d=0;d<l.length+64;d++)a.x^=l.charCodeAt(d)|0,a.next()}function o(c,a){return a.x=c.x,a.y=c.y,a.z=c.z,a.w=c.w,a}function i(c,a){var l=new r(c),d=a&&a.state,f=function(){return(l.next()>>>0)/4294967296};return f.double=function(){do var y=l.next()>>>11,m=(l.next()>>>0)/4294967296,h=(y+m)/(1<<21);while(h===0);return h},f.int32=l.next,f.quick=f,d&&(typeof d=="object"&&o(d,l),f.state=function(){return o(l,{})}),f}t&&t.exports?t.exports=i:this.xor128=i})(xor128$4,n)}(xor128$5)),xor128$5.exports}var xorwow$5={exports:{}},xorwow$4=xorwow$5.exports,hasRequiredXorwow$2;function requireXorwow$2(){return hasRequiredXorwow$2||(hasRequiredXorwow$2=1,function(n){(function(e,t,s){function r(c){var a=this,l="";a.next=function(){var f=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(f^f<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,c===(c|0)?a.x=c:l+=c;for(var d=0;d<l.length+64;d++)a.x^=l.charCodeAt(d)|0,d==l.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function o(c,a){return a.x=c.x,a.y=c.y,a.z=c.z,a.w=c.w,a.v=c.v,a.d=c.d,a}function i(c,a){var l=new r(c),d=a&&a.state,f=function(){return(l.next()>>>0)/4294967296};return f.double=function(){do var y=l.next()>>>11,m=(l.next()>>>0)/4294967296,h=(y+m)/(1<<21);while(h===0);return h},f.int32=l.next,f.quick=f,d&&(typeof d=="object"&&o(d,l),f.state=function(){return o(l,{})}),f}t&&t.exports?t.exports=i:this.xorwow=i})(xorwow$4,n)}(xorwow$5)),xorwow$5.exports}var xorshift7$5={exports:{}},xorshift7$4=xorshift7$5.exports,hasRequiredXorshift7$2;function requireXorshift7$2(){return hasRequiredXorshift7$2||(hasRequiredXorshift7$2=1,function(n){(function(e,t,s){function r(c){var a=this;a.next=function(){var d=a.x,f=a.i,y,m;return y=d[f],y^=y>>>7,m=y^y<<24,y=d[f+1&7],m^=y^y>>>10,y=d[f+3&7],m^=y^y>>>3,y=d[f+4&7],m^=y^y<<7,y=d[f+7&7],y=y^y<<13,m^=y^y<<9,d[f]=m,a.i=f+1&7,m};function l(d,f){var y,m=[];if(f===(f|0))m[0]=f;else for(f=""+f,y=0;y<f.length;++y)m[y&7]=m[y&7]<<15^f.charCodeAt(y)+m[y+1&7]<<13;for(;m.length<8;)m.push(0);for(y=0;y<8&&m[y]===0;++y);for(y==8?m[7]=-1:m[y],d.x=m,d.i=0,y=256;y>0;--y)d.next()}l(a,c)}function o(c,a){return a.x=c.x.slice(),a.i=c.i,a}function i(c,a){c==null&&(c=+new Date);var l=new r(c),d=a&&a.state,f=function(){return(l.next()>>>0)/4294967296};return f.double=function(){do var y=l.next()>>>11,m=(l.next()>>>0)/4294967296,h=(y+m)/(1<<21);while(h===0);return h},f.int32=l.next,f.quick=f,d&&(d.x&&o(d,l),f.state=function(){return o(l,{})}),f}t&&t.exports?t.exports=i:this.xorshift7=i})(xorshift7$4,n)}(xorshift7$5)),xorshift7$5.exports}var xor4096$5={exports:{}},xor4096$4=xor4096$5.exports,hasRequiredXor4096$2;function requireXor4096$2(){return hasRequiredXor4096$2||(hasRequiredXor4096$2=1,function(n){(function(e,t,s){function r(c){var a=this;a.next=function(){var d=a.w,f=a.X,y=a.i,m,h;return a.w=d=d+1640531527|0,h=f[y+34&127],m=f[y=y+1&127],h^=h<<13,m^=m<<17,h^=h>>>15,m^=m>>>12,h=f[y]=h^m,a.i=y,h+(d^d>>>16)|0};function l(d,f){var y,m,h,g,x,w=[],I=128;for(f===(f|0)?(m=f,f=null):(f=f+"\0",m=0,I=Math.max(I,f.length)),h=0,g=-32;g<I;++g)f&&(m^=f.charCodeAt((g+32)%f.length)),g===0&&(x=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,g>=0&&(x=x+1640531527|0,y=w[g&127]^=m+x,h=y==0?h+1:0);for(h>=128&&(w[(f&&f.length||0)&127]=-1),h=127,g=4*128;g>0;--g)m=w[h+34&127],y=w[h=h+1&127],m^=m<<13,y^=y<<17,m^=m>>>15,y^=y>>>12,w[h]=m^y;d.w=x,d.X=w,d.i=h}l(a,c)}function o(c,a){return a.i=c.i,a.w=c.w,a.X=c.X.slice(),a}function i(c,a){c==null&&(c=+new Date);var l=new r(c),d=a&&a.state,f=function(){return(l.next()>>>0)/4294967296};return f.double=function(){do var y=l.next()>>>11,m=(l.next()>>>0)/4294967296,h=(y+m)/(1<<21);while(h===0);return h},f.int32=l.next,f.quick=f,d&&(d.X&&o(d,l),f.state=function(){return o(l,{})}),f}t&&t.exports?t.exports=i:this.xor4096=i})(xor4096$4,n)}(xor4096$5)),xor4096$5.exports}var tychei$5={exports:{}},tychei$4=tychei$5.exports,hasRequiredTychei$2;function requireTychei$2(){return hasRequiredTychei$2||(hasRequiredTychei$2=1,function(n){(function(e,t,s){function r(c){var a=this,l="";a.next=function(){var f=a.b,y=a.c,m=a.d,h=a.a;return f=f<<25^f>>>7^y,y=y-m|0,m=m<<24^m>>>8^h,h=h-f|0,a.b=f=f<<20^f>>>12^y,a.c=y=y-m|0,a.d=m<<16^y>>>16^h,a.a=h-f|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,c===Math.floor(c)?(a.a=c/4294967296|0,a.b=c|0):l+=c;for(var d=0;d<l.length+20;d++)a.b^=l.charCodeAt(d)|0,a.next()}function o(c,a){return a.a=c.a,a.b=c.b,a.c=c.c,a.d=c.d,a}function i(c,a){var l=new r(c),d=a&&a.state,f=function(){return(l.next()>>>0)/4294967296};return f.double=function(){do var y=l.next()>>>11,m=(l.next()>>>0)/4294967296,h=(y+m)/(1<<21);while(h===0);return h},f.int32=l.next,f.quick=f,d&&(typeof d=="object"&&o(d,l),f.state=function(){return o(l,{})}),f}t&&t.exports?t.exports=i:this.tychei=i})(tychei$4,n)}(tychei$5)),tychei$5.exports}var seedrandom$5={exports:{}};const __viteBrowserExternal={},__viteBrowserExternal$1=Object.freeze(Object.defineProperty({__proto__:null,default:__viteBrowserExternal},Symbol.toStringTag,{value:"Module"})),require$$0$1=getAugmentedNamespace(__viteBrowserExternal$1);var hasRequiredSeedrandom$5;function requireSeedrandom$5(){return hasRequiredSeedrandom$5||(hasRequiredSeedrandom$5=1,function(n){(function(e,t){var s=this,r=256,o=6,i=52,c="random",a=t.pow(r,o),l=t.pow(2,i),d=l*2,f=r-1,y;function m(A,T,P){var O=[];T=T==!0?{entropy:!0}:T||{};var F=w(x(T.entropy?[A,N(e)]:A??I(),3),O),G=new h(O),U=function(){for(var Q=G.g(o),ne=a,J=0;Q<l;)Q=(Q+J)*r,ne*=r,J=G.g(1);for(;Q>=d;)Q/=2,ne/=2,J>>>=1;return(Q+J)/ne};return U.int32=function(){return G.g(4)|0},U.quick=function(){return G.g(4)/4294967296},U.double=U,w(N(G.S),e),(T.pass||P||function(Q,ne,J,oe){return oe&&(oe.S&&g(oe,G),Q.state=function(){return g(G,{})}),J?(t[c]=Q,ne):Q})(U,F,"global"in T?T.global:this==t,T.state)}t["seed"+c]=m;function h(A){var T,P=A.length,O=this,F=0,G=O.i=O.j=0,U=O.S=[];for(P||(A=[P++]);F<r;)U[F]=F++;for(F=0;F<r;F++)U[F]=U[G=f&G+A[F%P]+(T=U[F])],U[G]=T;(O.g=function(Q){for(var ne,J=0,oe=O.i,le=O.j,ge=O.S;Q--;)ne=ge[oe=f&oe+1],J=J*r+ge[f&(ge[oe]=ge[le=f&le+ne])+(ge[le]=ne)];return O.i=oe,O.j=le,J})(r)}function g(A,T){return T.i=A.i,T.j=A.j,T.S=A.S.slice(),T}function x(A,T){var P=[],O=typeof A,F;if(T&&O=="object")for(F in A)try{P.push(x(A[F],T-1))}catch{}return P.length?P:O=="string"?A:A+"\0"}function w(A,T){for(var P=A+"",O,F=0;F<P.length;)T[f&F]=f&(O^=T[f&F]*19)+P.charCodeAt(F++);return N(T)}function I(){try{var A;return y&&(A=y.randomBytes)?A=A(r):(A=new Uint8Array(r),(s.crypto||s.msCrypto).getRandomValues(A)),N(A)}catch{var T=s.navigator,P=T&&T.plugins;return[+new Date,s,P,s.screen,N(e)]}}function N(A){return String.fromCharCode.apply(0,A)}if(w(t.random(),e),n.exports){n.exports=m;try{y=require$$0$1}catch{}}})([],Math)}(seedrandom$5)),seedrandom$5.exports}var seedrandom$4,hasRequiredSeedrandom$4;function requireSeedrandom$4(){if(hasRequiredSeedrandom$4)return seedrandom$4;hasRequiredSeedrandom$4=1;var n=requireAlea$2(),e=requireXor128$2(),t=requireXorwow$2(),s=requireXorshift7$2(),r=requireXor4096$2(),o=requireTychei$2(),i=requireSeedrandom$5();return i.alea=n,i.xor128=e,i.xorwow=t,i.xorshift7=s,i.xor4096=r,i.tychei=o,seedrandom$4=i,seedrandom$4}var seedrandomExports$2=requireSeedrandom$4();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MPRandGauss{constructor(e,t,s,r,o){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=o||Math.random();this.random=seedrandomExports$2.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,o,i;do r=2*this.random()-1,o=2*this.random()-1,i=r*r+o*o;while(i>=1||i===0);const c=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*c,t=this.mean+this.stdDev*o*c,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class RandGamma{constructor(e,t,s,r){this.alpha=e,this.beta=1/t,this.dtype=s;const o=r||Math.random();this.randu=seedrandomExports$2.alea(o.toString()),this.randn=new MPRandGauss(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,s,r,o,i;for(;;){do r=this.randn.nextValue(),i=1+this.c*r;while(i<=0);if(i*=i*i,e=r*r,t=1-.331*e*e,s=.5*e+this.d*(1-i+Math.log(i)),o=this.randu(),o<t||Math.log(o)<s)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class UniformRandom{constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=seedrandomExports$2.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function randomGamma_(n,e,t=1,s="float32",r){if(t==null&&(t=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const o=new RandGamma(e,t,s,r),i=buffer(n,s);for(let c=0;c<i.values.length;c++)i.values[c]=o.nextValue();return i.toTensor()}const randomGamma=op({randomGamma_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function randomNormal_(n,e=0,t=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new MPRandGauss(e,t,s,!1,r),i=buffer(n,s);for(let c=0;c<i.values.length;c++)i.values[c]=o.nextValue();return i.toTensor()}const randomNormal$2=op({randomNormal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function randomUniform_(n,e=0,t=1,s="float32",r){const o=buffer(n,s),i=new UniformRandom(e,t,null,r);for(let c=0;c<o.values.length;c++)o.values[c]=i.nextValue();return o.toTensor()}const randomUniform$1=op({randomUniform_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function range$3(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return ENGINE.runKernel(Range,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function real_(n){const t={input:convertToTensor(n,"input","real")};return ENGINE.runKernel(Real,t)}const real$2=op({real_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reciprocal_(n){const t={x:convertToTensor(n,"x","reciprocal")};return ENGINE.runKernel(Reciprocal,t)}const reciprocal$2=op({reciprocal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function relu_(n){const t={x:convertToTensor(n,"x","relu")};return ENGINE.runKernel(Relu$1,t)}const relu$2=op({relu_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function relu6_(n){const t={x:convertToTensor(n,"x","relu6")};return ENGINE.runKernel(Relu6$1,t)}const relu6$2=op({relu6_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse_(n,e){const s={x:convertToTensor(n,"x","reverse")},r={dims:e};return ENGINE.runKernel(Reverse,s,r)}const reverse$2=op({reverse_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse1d_(n){const e=convertToTensor(n,"x","reverse");return assert$1(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),reverse$2(e,0)}const reverse1d=op({reverse1d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse2d_(n,e){const t=convertToTensor(n,"x","reverse");return assert$1(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),reverse$2(t,e)}const reverse2d=op({reverse2d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse3d_(n,e){const t=convertToTensor(n,"x","reverse");return assert$1(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),reverse$2(t,e)}const reverse3d=op({reverse3d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse4d_(n,e){const t=convertToTensor(n,"x","reverse");return assert$1(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),reverse$2(t,e)}const reverse4d=op({reverse4d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function round_(n){const t={x:convertToTensor(n,"x","round")};return ENGINE.runKernel(Round,t)}const round$2=op({round_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rsqrt_(n){const t={x:convertToTensor(n,"x","rsqrt")};return ENGINE.runKernel(Rsqrt,t)}const rsqrt$2=op({rsqrt_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scalar(n,e){if((isTypedArray(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&isTypedArray(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return makeTensor(n,[],[],e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function selu_(n){const t={x:convertToTensor(n,"x","selu")};return ENGINE.runKernel(Selu$1,t)}const selu$2=op({selu_});function separableConv2d_(n,e,t,s,r,o=[1,1],i="NHWC"){const c=convertToTensor(n,"x","separableConv2d"),a=convertToTensor(e,"depthwiseFilter","separableConv2d"),l=convertToTensor(t,"pointwiseFilter","separableConv2d");let d=c,f=!1;if(c.rank===3&&(f=!0,d=reshape$3(c,[1,c.shape[0],c.shape[1],c.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");assert$1(d.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`),assert$1(a.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${a.rank}.`),assert$1(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${a.rank}.`),assert$1(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),assert$1(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const y=a.shape[2],m=a.shape[3];assert$1(l.shape[2]===y*m,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*m}, but got ${l.shape[2]}.`);const h=depthwiseConv2d$3(d,a,s,r,i,o),x=conv2d$3(h,l,1,"valid",i);return f?reshape$3(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const separableConv2d$1=op({separableConv2d_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function setdiff1dAsync_(n,e){const t=convertToTensor(n,"x","setdiff1d"),s=convertToTensor(e,"y","setdiff1d");assert$1(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),assert$1(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),assert$1(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await t.data(),o=await s.data(),i=new Set(o);let c=0;for(let d=0;d<r.length;d++)i.has(r[d])||c++;const a=new TensorBuffer([c],t.dtype),l=new TensorBuffer([c],"int32");for(let d=0,f=0;d<r.length;d++)i.has(r[d])||(a.values[f]=r[d],l.values[f]=d,f++);return[a.toTensor(),l.toTensor()]}const setdiff1dAsync=setdiff1dAsync_;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sign_(n){const t={x:convertToTensor(n,"x","sign")};return ENGINE.runKernel(Sign,t)}const sign$2=op({sign_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sin_(n){const t={x:convertToTensor(n,"x","sin")};return ENGINE.runKernel(Sin,t)}const sin$2=op({sin_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sinh_(n){const t={x:convertToTensor(n,"x","sinh")};return ENGINE.runKernel(Sinh,t)}const sinh$2=op({sinh_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice1d_(n,e,t){const s=convertToTensor(n,"x","slice1d");return assert$1(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),slice$2(s,[e],[t])}const slice1d=op({slice1d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice2d_(n,e,t){const s=convertToTensor(n,"x","slice2d");return assert$1(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),slice$2(s,e,t)}const slice2d=op({slice2d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice3d_(n,e,t){const s=convertToTensor(n,"x","slice3d");return assert$1(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),slice$2(s,e,t)}const slice3d=op({slice3d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slice4d_(n,e,t){const s=convertToTensor(n,"x","slice4d");return assert$1(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),slice$2(s,e,t)}const slice4d=op({slice4d_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmax_(n,e=-1){const t=convertToTensor(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return ENGINE.runKernel(Softmax$2,s,r)}const softmax$3=op({softmax_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fft_(n){assert$1(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return ENGINE.runKernel(FFT,e)}const fft$2=op({fft_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ifft_(n){assert$1(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return ENGINE.runKernel(IFFT,e)}const ifft$2=op({ifft_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function irfft_(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=reshape$3(n,[t,e]);s=ifft$2(r)}else{const r=[t,2*(e-1)],o=reshape$3(real$2(n),[t,e]),i=reshape$3(imag$2(n),[t,e]),c=reverse$2(slice$2(o,[0,1],[t,e-2]),1),a=mul(reverse$2(slice$2(i,[0,1],[t,e-2]),1),scalar(-1)),l=concat$2([o,c],1),d=concat$2([i,a],1),f=reshape$3(complex$2(l,d),[r[0],r[1]]);s=ifft$2(f)}if(s=real$2(s),n.rank===3&&n.shape[0]!==0){const r=s,o=n.shape[0];s=reshape$3(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const irfft=op({irfft_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function split_(n,e,t=0){const r={x:convertToTensor(n,"x","split")},o={numOrSizeSplits:e,axis:t};return ENGINE.runKernel(SplitV,r,o)}const split$1=op({split_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rfft_(n,e){assert$1(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const h=n.shape.map(x=>0),g=n.shape.map(x=>x);g[n.shape.length-1]=e,r=slice$2(n,h,g),t=e}else if(e!=null&&e>t){const h=n.shape.map(g=>g);h[n.shape.length-1]=e-t,r=concat$2([n,zeros$2(h)],n.shape.length-1),t=e}else r=n;const o=zerosLike$2(r),i=reshape$3(complex$2(r,o),[s,t]),c=fft$2(i),a=Math.floor(t/2)+1,l=real$2(c),d=imag$2(c),f=split$1(l,[a,t-a],l.shape.length-1),y=split$1(d,[a,t-a],d.shape.length-1),m=r.shape.slice();return m[r.shape.length-1]=a,reshape$3(complex$2(f[0],y[0]),m)}const rfft=op({rfft_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sqrt_(n){const t={x:convertToTensor(n,"x","sqrt")};return ENGINE.runKernel(Sqrt,t)}const sqrt$2=op({sqrt_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function squaredDifference_(n,e){let t=convertToTensor(n,"a","squaredDifference"),s=convertToTensor(e,"b","squaredDifference");[t,s]=makeTypesMatch(t,s),assertAndGetBroadcastShape(t.shape,s.shape);const r={a:t,b:s},o={};return ENGINE.runKernel(SquaredDifference,r,o)}const squaredDifference$2=op({squaredDifference_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function squeeze_(n,e){const t=convertToTensor(n,"x","squeeze");return reshape$3(t,squeezeShape(t.shape,e).newShape)}const squeeze=op({squeeze_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stack_(n,e=0){const t=convertToTensorArray(n,"tensors","stack","string_or_numeric");assert$1(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&assert$1(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return ENGINE.runKernel(Pack,s,r)}const stack=op({stack_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function step_(n,e=0){const s={x:convertToTensor(n,"x","step")},r={alpha:e};return ENGINE.runKernel(Step,s,r)}const step$2=op({step_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSlice_(n,e,t,s,r=0,o=0,i=0,c=0,a=0){const d={x:convertToTensor(n,"x","stridedSlice")},f={begin:e,end:t,strides:s,beginMask:r,endMask:o,ellipsisMask:i,newAxisMask:c,shrinkAxisMask:a};return ENGINE.runKernel(StridedSlice,d,f)}const stridedSlice$2=op({stridedSlice_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tan_(n){const t={x:convertToTensor(n,"x","tan")};return ENGINE.runKernel(Tan,t)}const tan$2=op({tan_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor1d(n,e){assertNonNull(n);const t=inferShape(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return makeTensor(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor2d(n,e,t){if(assertNonNull(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=inferShape(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return makeTensor(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor4d(n,e,t){if(assertNonNull(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=inferShape(n,t);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return makeTensor(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor5d(n,e,t){if(assertNonNull(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=inferShape(n,t);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return makeTensor(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tensor6d(n,e,t){if(assertNonNull(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=inferShape(n,t);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,makeTensor(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function topk_(n,e=1,t=!0){const s=convertToTensor(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const o={x:s},i={k:e,sorted:t},[c,a]=ENGINE.runKernel(TopK,o,i);return{values:c,indices:a}}const topk=op({topk_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function truncatedNormal_(n,e=0,t=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new MPRandGauss(e,t,s,!0,r),i=buffer(n,s);for(let c=0;c<i.values.length;c++)i.values[c]=o.nextValue();return i.toTensor()}const truncatedNormal$1=op({truncatedNormal_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unique_(n,e=0){const t=convertToTensor(n,"x","unique","string_or_numeric");assert$1(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[o,i]=ENGINE.runKernel(Unique,s,r);return{values:o,indices:i}}const unique$3=op({unique_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unsortedSegmentSum_(n,e,t){const s=convertToTensor(n,"x","unsortedSegmentSum"),r=convertToTensor(e,"segmentIds","unsortedSegmentSum","int32");assert$1(isInt(t),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},i={numSegments:t};return ENGINE.runKernel(UnsortedSegmentSum,o,i)}const unsortedSegmentSum$2=op({unsortedSegmentSum_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unstack_(n,e=0){const t=convertToTensor(n,"x","unstack","string_or_numeric");assert$1(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return ENGINE.runKernel(Unpack,s,r)}const unstack=op({unstack_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function variable(n,e=!0,t,s){return ENGINE.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function whereImpl$2(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const s=buffer(n,"int32"),r=buffer([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const i=s.indexToLoc(t[o]),c=o*n.length;r.values.set(i,c)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function whereAsync_(n){const e=convertToTensor(n,"condition","whereAsync","bool"),t=await e.data(),s=whereImpl$2(e.shape,t);return n!==e&&e.dispose(),s}const whereAsync=whereAsync_;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function booleanMaskAsync_(n,e,t){const s=convertToTensor(n,"tensor","boolMask"),r=convertToTensor(e,"mask","boolMask","bool"),o=t??0,i=r.rank,c=s.shape;assert$1(i>0,()=>"mask cannot be scalar"),assertShapesMatch(c.slice(o,o+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let a=1;for(let g=o;g<o+i;g++)a*=c[g];const l=c.slice(0,o).concat([a],c.slice(o+i)),d=reshape$3(s,l),f=reshape$3(r,[-1]),y=await whereAsync(f),m=squeeze(y,[1]),h=gather$1(d,m,o);return n!==s&&s.dispose(),e!==r&&r.dispose(),m.dispose(),d.dispose(),f.dispose(),y.dispose(),h}const booleanMaskAsync=booleanMaskAsync_;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function notEqualStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","notEqualStrict"),s=convertToTensor(e,"b","notEqualStrict");return assertShapesMatch(t.shape,s.shape,"Error in notEqualStrict: "),notEqual$2(t,s)}function lessStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","lessStrict"),s=convertToTensor(e,"b","lessStrict");return assertShapesMatch(t.shape,s.shape,"Error in lessStrict: "),less$3(t,s)}function equalStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","equalStrict"),s=convertToTensor(e,"b","equalStrict");return assertShapesMatch(t.shape,s.shape,"Error in equalStrict: "),equal$2(t,s)}function lessEqualStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","lessEqualStrict"),s=convertToTensor(e,"b","lessEqualStrict");return assertShapesMatch(t.shape,s.shape,"Error in lessEqualStrict: "),lessEqual$2(t,s)}function greaterStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","greaterStrict"),s=convertToTensor(e,"b","greaterStrict");return assertShapesMatch(t.shape,s.shape,"Error in greaterStrict: "),greater$3(t,s)}function greaterEqualStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","greaterEqualStrict"),s=convertToTensor(e,"b","greaterEqualStrict");return assertShapesMatch(t.shape,s.shape,"Error in greaterEqualStrict: "),greaterEqual$2(t,s)}const equalStrict=op({equalStrict_}),greaterEqualStrict=op({greaterEqualStrict_}),greaterStrict=op({greaterStrict_}),lessEqualStrict=op({lessEqualStrict_}),lessStrict=op({lessStrict_}),notEqualStrict=op({notEqualStrict_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function addStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","addStrict"),s=convertToTensor(e,"b","addStrict");return assertShapesMatch(t.shape,s.shape,"Error in addStrict: "),add$2(t,s)}function subStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","subStrict"),s=convertToTensor(e,"b","subStrict");return assertShapesMatch(t.shape,s.shape,"Error in subStrict: "),sub$2(t,s)}function powStrict_(n,e){return deprecationWarn("strict variants of ops have been deprecated and will be removed in future"),assertShapesMatch(n.shape,e.shape,"Error in powStrict: "),pow$2(n,e)}function mulStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","mul"),s=convertToTensor(e,"b","mul");return assertShapesMatch(t.shape,s.shape,"Error in multiplyStrict: "),mul(t,s)}function divStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","div"),s=convertToTensor(e,"b","div");return assertShapesMatch(t.shape,s.shape,"Error in divideStrict: "),div$1(t,s)}function modStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","modStrict"),s=convertToTensor(e,"b","modStrict");return assertShapesMatch(t.shape,s.shape,"Error in modStrict: "),mod$2(t,s)}function minimumStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","minimumStrict"),s=convertToTensor(e,"b","minimumStrict");return assertShapesMatch(t.shape,s.shape,"Error in minimumStrict: "),minimum$3(t,s)}function maximumStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","maximumStrict"),s=convertToTensor(e,"b","maximumStrict");return assertShapesMatch(t.shape,s.shape,"Error in maximumStrict: "),maximum$3(t,s)}function squaredDifferenceStrict_(n,e){deprecationWarn("strict variants of ops have been deprecated and will be removed in future");const t=convertToTensor(n,"a","squaredDifferenceStrict"),s=convertToTensor(e,"b","squaredDifferenceStrict");return assertShapesMatch(t.shape,s.shape,"Error in squaredDifferenceStrict: "),squaredDifference$2(t,s)}const addStrict=op({addStrict_}),divStrict=op({divStrict_}),maximumStrict=op({maximumStrict_}),minimumStrict=op({minimumStrict_}),modStrict=op({modStrict_}),mulStrict=op({mulStrict_}),powStrict=op({powStrict_}),squaredDifferenceStrict=op({squaredDifferenceStrict_}),subStrict=op({subStrict_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function norm_(n,e="euclidean",t=null,s=!1){n=convertToTensor(n,"x","norm");const r=normImpl(n,e,t);let o=r.shape;if(s){const i=parseAxisParam(t,n.shape);o=expandShapeToKeepDim(r.shape,i)}return reshape$3(r,o)}function normImpl(n,e,t=null){if(n.rank===0)return abs$2(n);if(n.rank!==1&&t===null)return normImpl(reshape$3(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return sum$2(abs$2(n),t);if(e===1/0)return max$3(abs$2(n),t);if(e===-1/0)return min$3(abs$2(n),t);if(e==="euclidean"||e===2)return sqrt$2(sum$2(pow$2(abs$2(n),scalar(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return max$3(sum$2(abs$2(n),t[0]),t[1]-1);if(e===1/0)return max$3(sum$2(abs$2(n),t[1]),t[0]);if(e===-1/0)return min$3(sum$2(abs$2(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return sqrt$2(sum$2(square$2(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const norm=op({norm_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function movingAverage_(n,e,t,s,r=!0){const o=convertToTensor(n,"v","movingAverage"),i=convertToTensor(e,"x","movingAverage"),c=convertToTensor(t,"decay","movingAverage");assertTypesMatch(o,i),assert$1(arraysEqual(o.shape,i.shape),()=>"Shape mismatch in v and x");const a=scalar(1),l=sub$2(a,c);let d=mul(sub$2(i,o),l);if(r){assert$1(s!=null,()=>"When using zeroDebias: true, step is required.");const f=convertToTensor(s,"step","movingAverage");d=div$1(d,sub$2(a,pow$2(c,f)))}return add$2(o,d)}const movingAverage=op({movingAverage_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterND_(n,e,t){const s=convertToTensor(n,"indices","scatterND","int32"),r=convertToTensor(e,"updates","scatterND");validateInput$1(r,s,t);const o={indices:s,updates:r},i={shape:t};return ENGINE.runKernel(ScatterNd,o,i)}const scatterND=op({scatterND_});function validateInput(n,e,t,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(t.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${o}.`);const i=e.size;if(!(e.rank===0||e.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseToDense_(n,e,t,s=0){const r=convertToTensor(n,"sparseIndices","sparseToDense","int32"),o=convertToTensor(e,"sparseValues","sparseToDense"),i=convertToTensor(s,"defaultValue","sparseToDense",o.dtype);validateInput(r,o,t,i);const c={sparseIndices:r,sparseValues:o,defaultValue:i},a={outputShape:t};return ENGINE.runKernel(SparseToDense,c,a)}const sparseToDense$2=op({sparseToDense_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherND_(n,e){const t=convertToTensor(e,"indices","gatherND","int32"),r={params:convertToTensor(n,"x","gatherND"),indices:t};return ENGINE.runKernel(GatherNd,r)}const gatherND=op({gatherND_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getNoiseShape(n,e){if(e==null)return n.shape.slice();if(arraysEqual(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dropout_(n,e,t,s){const r=convertToTensor(n,"x","dropout");if(assert$1(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),assert$1(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Tensor?r.clone():r;const o=getNoiseShape(r,t),i=1-e,c=div$1(floor$2(add$2(randomUniform$1(o,0,1,"float32",s),i)),i);return mul(r,c)}const dropout$2=op({dropout_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function enclosingPowerOfTwo(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function cosineWindow(n,e,t){const s=1-n%2,r=new Float32Array(n);for(let o=0;o<n;++o){const i=2*Math.PI*o/(n+s-1);r[o]=e-t*Math.cos(i)}return tensor1d(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function inTopKAsync_(n,e,t=1){const s=convertToTensor(n,"predictions","inTopK"),r=convertToTensor(e,"targets","inTopK");assert$1(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),assert$1(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),assertShapesMatch(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=s.shape[s.shape.length-1];assert$1(t>0&&t<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${t}`);const i=await s.data(),c=await r.data(),[a,l]=[i.length/o,o],d=getTypedArrayFromDType("bool",a);for(let f=0;f<a;f++){const y=f*l,m=i.subarray(y,y+l),h=[];for(let g=0;g<m.length;g++)h.push({value:m[g],index:g});h.sort((g,x)=>x.value-g.value),d[f]=0;for(let g=0;g<t;g++)if(h[g].index===c[f]){d[f]=1;break}}return n!==s&&s.dispose(),e!==r&&r.dispose(),tensor(d,r.shape,"bool")}const inTopKAsync=inTopKAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropFilter_(n,e,t,s,r,o="NHWC",i){let c=n;n.rank===3&&(c=reshape$3(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let a=e;a.rank===3&&(a=reshape$3(e,[1,e.shape[0],e.shape[1],e.shape[2]])),assert$1(c.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${c.shape}.`),assert$1(a.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${a.shape}.`),assert$1(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const l=o==="NHWC"?c.shape[3]:c.shape[1],d=o==="NHWC"?a.shape[3]:a.shape[1];assert$1(l===t[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${t[2]}.`),assert$1(d===t[3],()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${t[3]}).`),i!=null&&assert$1(isInt(r),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const f={x:c,dy:a},y={strides:s,pad:r,dataFormat:o,dimRoundingMode:i,filterShape:t};return ENGINE.runKernel(Conv2DBackpropFilter,f,y)}const conv2DBackpropFilter$2=op({conv2DBackpropFilter_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getFusedDyActivation(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return mul(n,step$2(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function getFusedBiasGradient(n,e){let t=e;const s=getReductionAxes(n.shape,e.shape);return s.length>0&&(t=sum$2(t,s)),reshape$3(t,n.shape)}function applyActivation$1(n,e,t,s){if(e==="linear")return n;if(e==="relu")return relu$2(n);if(e==="elu")return elu$4(n);if(e==="relu6")return relu6$2(n);if(e==="prelu")return prelu$3(n,t);if(e==="leakyrelu")return leakyRelu$2(n,s);throw new Error(`Unknown fused activation ${e}.`)}const shouldFuse=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConv2d_({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:c,activation:a="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(a=a||"linear",shouldFuse(ENGINE.state.gradientDepth,a)===!1){let T=conv2d$3(n,e,t,s,r,o,i);return c!=null&&(T=add$2(T,c)),applyActivation$1(T,a,l,d)}const f=convertToTensor(n,"x","conv2d"),y=convertToTensor(e,"filter","conv2d");let m=f,h=!1;f.rank===3&&(h=!0,m=reshape$3(f,[1,f.shape[0],f.shape[1],f.shape[2]])),assert$1(m.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${m.rank}.`),assert$1(y.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${y.rank}.`),i!=null&&assert$1(isInt(s),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),assert$1(m.shape[3]===y.shape[2],()=>`Error in conv2d: depth of input (${m.shape[3]}) must match input depth for filter ${y.shape[2]}.`),assert$1(eitherStridesOrDilationsAreOne(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),assert$1(r==="NHWC",()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`);const g=computeConv2DInfo(m.shape,y.shape,t,o,s,i);let x;c!=null&&(x=convertToTensor(c,"bias","fused conv2d"),[x]=makeTypesMatch(x,f),assertAndGetBroadcastShape(g.outShape,x.shape));let w;l!=null&&(w=convertToTensor(l,"prelu weights","fused conv2d"));const I=(T,P)=>{const[O,F,G,U]=P,Q=getFusedDyActivation(T,G,a);assert$1(tupleValuesAreOne(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const ne=conv2DBackpropInput$2(F.shape,Q,O,t,s),J=conv2DBackpropFilter$2(F,Q,O.shape,t,s),oe=[ne,J];if(U!=null){const le=getFusedBiasGradient(U,Q);oe.push(le)}return oe},N={x:m,filter:y,bias:x,preluActivationWeights:w},A={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:a,leakyreluAlpha:d};return c==null?customGrad((P,O,F)=>{let G=ENGINE.runKernel(FusedConv2D,N,A);return F([O,P,G]),h&&(G=reshape$3(G,[G.shape[1],G.shape[2],G.shape[3]])),{value:G,gradFunc:I}})(m,y):customGrad((P,O,F,G)=>{let U=ENGINE.runKernel(FusedConv2D,N,A);return G([O,P,U,F]),h&&(U=reshape$3(U,[U.shape[1],U.shape[2],U.shape[3]])),{value:U,gradFunc:I}})(m,y,x)}const conv2d$2=op({fusedConv2d_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropFilter_(n,e,t,s,r,o=[1,1],i){let c=n;n.rank===3&&(c=reshape$3(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let a=e;a.rank===3&&(a=reshape$3(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:c,dy:a},d={strides:s,pad:r,dimRoundingMode:i,dilations:o,filterShape:t};return ENGINE.runKernel(DepthwiseConv2dNativeBackpropFilter,l,d)}const depthwiseConv2dNativeBackpropFilter$2=op({depthwiseConv2dNativeBackpropFilter_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropInput_(n,e,t,s,r,o=[1,1],i){let c=e,a=!1;e.rank===3&&(a=!0,c=reshape$3(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:c,filter:t},d={strides:s,pad:r,dimRoundingMode:i,dilations:o,inputShape:n},f=ENGINE.runKernel(DepthwiseConv2dNativeBackpropInput,l,d);return a?reshape$3(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const depthwiseConv2dNativeBackpropInput$2=op({depthwiseConv2dNativeBackpropInput_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedDepthwiseConv2d_({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:c,activation:a="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(shouldFuse(ENGINE.state.gradientDepth,a)===!1){let T=depthwiseConv2d$3(n,e,t,s,r,o,i);return c!=null&&(T=add$2(T,c)),applyActivation$1(T,a,l,d)}const f=convertToTensor(n,"x","depthwiseConv2d"),y=convertToTensor(e,"filter","depthwiseConv2d");let m=f,h=!1;f.rank===3&&(h=!0,m=reshape$3(f,[1,f.shape[0],f.shape[1],f.shape[2]])),assert$1(m.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),assert$1(y.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${y.rank}.`),assert$1(m.shape[3]===y.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${y.shape[2]}.`),o==null&&(o=[1,1]),assert$1(eitherStridesOrDilationsAreOne(t,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),i!=null&&assert$1(isInt(s),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${s}.`);const g=computeConv2DInfo(m.shape,y.shape,t,o,s,i,!0);let x;c!=null&&(x=convertToTensor(c,"bias","fused conv2d"),[x]=makeTypesMatch(x,f),assertAndGetBroadcastShape(g.outShape,x.shape));let w;l!=null&&(w=convertToTensor(l,"prelu weights","fused depthwiseConv2d"));const I=(T,P)=>{assert$1(tupleValuesAreOne(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[O,F,G,U]=P,Q=getFusedDyActivation(T,G,a),ne=depthwiseConv2dNativeBackpropInput$2(F.shape,Q,O,t,s,o,i),J=depthwiseConv2dNativeBackpropFilter$2(F,Q,O.shape,t,s,o,i);if(U!=null){const oe=getFusedBiasGradient(x,Q);return[ne,J,oe]}return[ne,J]},N={x:m,filter:y,bias:x,preluActivationWeights:w},A={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:i,activation:a,leakyreluAlpha:d};return c==null?customGrad((P,O,F)=>{let G=ENGINE.runKernel(FusedDepthwiseConv2D,N,A);return F([O,P,G]),h&&(G=reshape$3(G,[G.shape[1],G.shape[2],G.shape[3]])),{value:G,gradFunc:I}})(m,y):customGrad((P,O,F,G)=>{let U=ENGINE.runKernel(FusedDepthwiseConv2D,N,A);return G([O,P,U,F]),h&&(U=reshape$3(U,[U.shape[1],U.shape[2],U.shape[3]])),{value:U,gradFunc:I}})(m,y,x)}const depthwiseConv2d$2=op({fusedDepthwiseConv2d_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedMatMul_({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:c}){if(shouldFuse(ENGINE.state.gradientDepth,o)===!1){let U=matMul$1(n,e,t,s);return r!=null&&(U=add$2(U,r)),applyActivation$1(U,o,i,c)}let a=convertToTensor(n,"a","fused matMul"),l=convertToTensor(e,"b","fused matMul");[a,l]=makeTypesMatch(a,l);const d=t?a.shape[a.rank-2]:a.shape[a.rank-1],f=s?l.shape[l.rank-1]:l.shape[l.rank-2],y=t?a.shape[a.rank-1]:a.shape[a.rank-2],m=s?l.shape[l.rank-2]:l.shape[l.rank-1],h=a.shape.slice(0,-2),g=l.shape.slice(0,-2),x=sizeFromShape(h),w=sizeFromShape(g);assert$1(a.rank>=2&&l.rank>=2&&a.rank===l.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${a.rank} and ${l.rank}.`),assert$1(arraysEqual(h,g),()=>`Error in fused matMul: outer dimensions (${h}) and (${g}) of Tensors with shapes ${a.shape} and ${l.shape} must match.`),assert$1(d===f,()=>`Error in fused matMul: inner shapes (${d}) and (${f}) of Tensors with shapes ${a.shape} and ${l.shape} and transposeA=${t} and transposeB=${s} must match.`);const I=a.shape.slice(0,-2).concat([y,m]),N=t?reshape$3(a,[x,d,y]):reshape$3(a,[x,y,d]),A=s?reshape$3(l,[w,m,f]):reshape$3(l,[w,f,m]);let T;r!=null&&(T=convertToTensor(r,"bias","fused matMul"),[T]=makeTypesMatch(T,a),assertAndGetBroadcastShape(I,T.shape));let P;i!=null&&(P=convertToTensor(i,"prelu weights","fused matMul"));const O=(U,Q)=>{const[ne,J,oe,le]=Q,ge=getFusedDyActivation(reshape$3(U,oe.shape),oe,o);let te,ce;if(!t&&!s?(te=matMul$1(ge,J,!1,!0),ce=matMul$1(ne,ge,!0,!1)):!t&&s?(te=matMul$1(ge,J,!1,!1),ce=matMul$1(ge,ne,!0,!1)):t&&!s?(te=matMul$1(J,ge,!1,!0),ce=matMul$1(ne,ge,!1,!1)):(te=matMul$1(J,ge,!0,!0),ce=matMul$1(ge,ne,!0,!0)),r!=null){const ue=getFusedBiasGradient(le,ge);return[te,ce,ue]}else return[te,ce]},F={a:N,b:A,bias:T,preluActivationWeights:P},G={transposeA:t,transposeB:s,activation:o,leakyreluAlpha:c};return r==null?customGrad((Q,ne,J)=>{const oe=ENGINE.runKernel(_FusedMatMul,F,G);return J([Q,ne,oe]),{value:reshape$3(oe,I),gradFunc:O}})(N,A):customGrad((Q,ne,J,oe)=>{const le=ENGINE.runKernel(_FusedMatMul,F,G);return oe([Q,ne,le,J]),{value:reshape$3(le,I),gradFunc:O}})(N,A,T)}const matMul=op({fusedMatMul_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fused_ops=Object.freeze(Object.defineProperty({__proto__:null,conv2d:conv2d$2,depthwiseConv2d:depthwiseConv2d$2,matMul},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hammingWindow_(n){return cosineWindow(n,.54,.46)}const hammingWindow=op({hammingWindow_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hannWindow_(n){return cosineWindow(n,.5,.5)}const hannWindow=op({hannWindow_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function frame_(n,e,t,s=!1,r=0){let o=0;const i=[];for(;o+e<=n.size;)i.push(slice$2(n,o,e)),o+=t;if(s)for(;o<n.size;){const c=o+e-n.size,a=concat$2([slice$2(n,o,e-c),fill$2([c],r)]);i.push(a),o+=t}return i.length===0?tensor2d([],[0,e]):reshape$3(concat$2(i),[i.length,e])}const frame=op({frame_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stft_(n,e,t,s,r=hannWindow){s==null&&(s=enclosingPowerOfTwo(e));const o=frame(n,e,t),i=mul(o,r(e)),c=[];for(let a=0;a<o.shape[0];a++)c.push(rfft(slice$2(i,[a,0],[1,e]),s));return concat$2(c)}const stft=op({stft_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cropAndResize_(n,e,t,s,r="bilinear",o=0){const i=convertToTensor(n,"image","cropAndResize"),c=convertToTensor(e,"boxes","cropAndResize","float32"),a=convertToTensor(t,"boxInd","cropAndResize","int32"),l=c.shape[0];assert$1(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),assert$1(c.rank===2&&c.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${c.shape}.`),assert$1(a.rank===1&&a.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${c.shape}.`),assert$1(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),assert$1(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),assert$1(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const d={image:i,boxes:c,boxInd:a},f={method:r,extrapolationValue:o,cropSize:s};return ENGINE.runKernel(CropAndResize,d,f)}const cropAndResize$2=op({cropAndResize_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function flipLeftRight_(n){const e=convertToTensor(n,"image","flipLeftRight","float32");assert$1(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return ENGINE.runKernel(FlipLeftRight,t,{})}const flipLeftRight=op({flipLeftRight_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rotateWithOffset_(n,e,t=0,s=.5){const r=convertToTensor(n,"image","rotateWithOffset","float32");assert$1(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},i={radians:e,fillValue:t,center:s};return ENGINE.runKernel(RotateWithOffset,o,i)}const rotateWithOffset=op({rotateWithOffset_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppSanityCheck(n,e,t,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const i=n.shape[0];return t=Math.min(t,i),assert$1(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),assert$1(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),assert$1(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),assert$1(e.rank===1,()=>"scores must be a 1D tensor"),assert$1(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),assert$1(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppression_(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=convertToTensor(n,"boxes","nonMaxSuppression"),i=convertToTensor(e,"scores","nonMaxSuppression"),c=nonMaxSuppSanityCheck(o,i,t,s,r);t=c.maxOutputSize,s=c.iouThreshold,r=c.scoreThreshold;const a={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return ENGINE.runKernel(NonMaxSuppressionV3,{boxes:o,scores:i},a)}const nonMaxSuppression=op({nonMaxSuppression_});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function binaryInsert(n,e,t){const s=binarySearch(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}function binarySearch(n,e,t){return binarySearch_(n,e,t||defaultComparator)}function defaultComparator(n,e){return n>e?1:n<e?-1:0}function binarySearch_(n,e,t){let s=0,r=n.length,o=0,i=!1;for(;s<r;){o=s+(r-s>>>1);const c=t(e,n[o]);c>0?s=o+1:(r=o,i=!c)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppressionV3Impl$2(n,e,t,s,r){return nonMaxSuppressionImpl_(n,e,t,s,r,0)}function nonMaxSuppressionV4Impl$2(n,e,t,s,r,o){return nonMaxSuppressionImpl_(n,e,t,s,r,0,!1,o,!0)}function nonMaxSuppressionV5Impl$2(n,e,t,s,r,o){return nonMaxSuppressionImpl_(n,e,t,s,r,o,!0)}function nonMaxSuppressionImpl_(n,e,t,s,r,o,i=!1,c=!1,a=!1){const l=[];for(let x=0;x<e.length;x++)e[x]>r&&l.push({score:e[x],boxIndex:x,suppressBeginIndex:0});l.sort(ascendingComparator);const d=o>0?-.5/o:0,f=[],y=[];for(;f.length<t&&l.length>0;){const x=l.pop(),{score:w,boxIndex:I,suppressBeginIndex:N}=x;if(w<r)break;let A=!1;for(let T=f.length-1;T>=N;--T){const P=intersectionOverUnion(n,I,f[T]);if(P>=s){A=!0;break}if(x.score=x.score*suppressWeight(s,d,P),x.score<=r)break}x.suppressBeginIndex=f.length,A||(x.score===w?(f.push(I),y.push(x.score)):x.score>r&&binaryInsert(l,x,ascendingComparator))}const m=f.length,h=t-m;c&&h>0&&(f.push(...new Array(h).fill(0)),y.push(...new Array(h).fill(0)));const g={selectedIndices:f};return i&&(g.selectedScores=y),a&&(g.validOutputs=m),g}function intersectionOverUnion(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),o=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),c=Math.max(s[0],s[2]),a=Math.max(s[1],s[3]),l=Math.min(r[0],r[2]),d=Math.min(r[1],r[3]),f=Math.max(r[0],r[2]),y=Math.max(r[1],r[3]),m=(c-o)*(a-i),h=(f-l)*(y-d);if(m<=0||h<=0)return 0;const g=Math.max(o,l),x=Math.max(i,d),w=Math.min(c,f),I=Math.min(a,y),N=Math.max(w-g,0)*Math.max(I-x,0);return N/(m+h-N)}function suppressWeight(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function ascendingComparator(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nonMaxSuppressionAsync_(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=convertToTensor(n,"boxes","nonMaxSuppressionAsync"),i=convertToTensor(e,"scores","nonMaxSuppressionAsync"),c=nonMaxSuppSanityCheck(o,i,t,s,r);t=c.maxOutputSize,s=c.iouThreshold,r=c.scoreThreshold;const a=await Promise.all([o.data(),i.data()]),l=a[0],d=a[1],{selectedIndices:f}=nonMaxSuppressionV3Impl$2(l,d,t,s,r);return o!==n&&o.dispose(),i!==e&&i.dispose(),tensor1d(f,"int32")}const nonMaxSuppressionAsync=nonMaxSuppressionAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppressionWithScore_(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=convertToTensor(n,"boxes","nonMaxSuppression"),c=convertToTensor(e,"scores","nonMaxSuppression"),a=nonMaxSuppSanityCheck(i,c,t,s,r,o);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold,o=a.softNmsSigma;const l={boxes:i,scores:c},d={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},f=ENGINE.runKernel(NonMaxSuppressionV5,l,d);return{selectedIndices:f[0],selectedScores:f[1]}}const nonMaxSuppressionWithScore=op({nonMaxSuppressionWithScore_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nonMaxSuppressionWithScoreAsync_(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const i=convertToTensor(n,"boxes","nonMaxSuppressionAsync"),c=convertToTensor(e,"scores","nonMaxSuppressionAsync"),a=nonMaxSuppSanityCheck(i,c,t,s,r,o);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold,o=a.softNmsSigma;const l=await Promise.all([i.data(),c.data()]),d=l[0],f=l[1],{selectedIndices:y,selectedScores:m}=nonMaxSuppressionV5Impl$2(d,f,t,s,r,o);return i!==n&&i.dispose(),c!==e&&c.dispose(),{selectedIndices:tensor1d(y,"int32"),selectedScores:tensor1d(m)}}const nonMaxSuppressionWithScoreAsync=nonMaxSuppressionWithScoreAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nonMaxSuppressionPadded_(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=convertToTensor(n,"boxes","nonMaxSuppression"),c=convertToTensor(e,"scores","nonMaxSuppression"),a=nonMaxSuppSanityCheck(i,c,t,s,r,null),l=a.maxOutputSize,d=a.iouThreshold,f=a.scoreThreshold,y={boxes:i,scores:c},m={maxOutputSize:l,iouThreshold:d,scoreThreshold:f,padToMaxOutputSize:o},h=ENGINE.runKernel(NonMaxSuppressionV4,y,m);return{selectedIndices:h[0],validOutputs:h[1]}}const nonMaxSuppressionPadded=op({nonMaxSuppressionPadded_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nonMaxSuppressionPaddedAsync_(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const i=convertToTensor(n,"boxes","nonMaxSuppressionAsync"),c=convertToTensor(e,"scores","nonMaxSuppressionAsync"),a=nonMaxSuppSanityCheck(i,c,t,s,r,null),l=a.maxOutputSize,d=a.iouThreshold,f=a.scoreThreshold,[y,m]=await Promise.all([i.data(),c.data()]),{selectedIndices:h,validOutputs:g}=nonMaxSuppressionV4Impl$2(y,m,l,d,f,o);return i!==n&&i.dispose(),c!==e&&c.dispose(),{selectedIndices:tensor1d(h,"int32"),validOutputs:scalar(g,"int32")}}const nonMaxSuppressionPaddedAsync=nonMaxSuppressionPaddedAsync_;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinear_(n,e,t=!1,s=!1){const r=convertToTensor(n,"images","resizeBilinear");assert$1(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),assert$1(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),assert$1(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=reshape$3(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const c={images:o},a={alignCorners:t,halfPixelCenters:s,size:e},l=ENGINE.runKernel(ResizeBilinear,c,a);return i?reshape$3(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const resizeBilinear$2=op({resizeBilinear_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighbor_(n,e,t=!1,s=!1){const r=convertToTensor(n,"images","resizeNearestNeighbor");assert$1(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),assert$1(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),assert$1(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),assert$1(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,i=!1;r.rank===3&&(i=!0,o=reshape$3(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const c={images:o},a={alignCorners:t,halfPixelCenters:s,size:e},l=ENGINE.runKernel(ResizeNearestNeighbor,c,a);return i?reshape$3(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const resizeNearestNeighbor$2=op({resizeNearestNeighbor_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bandPart_(n,e,t){assert$1(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),assert$1(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);const s=convertToTensor(n,"a","bandPart");assert$1(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,i]=s.shape.slice(-2);if(!(e<=o))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`);if(!(t<=i))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${i}).`);e<0&&(e=o),t<0&&(t=i);const c=reshape$3(range$3(0,o,1,"int32"),[-1,1]),a=range$3(0,i,1,"int32"),l=sub$2(c,a),d=logicalAnd$2(lessEqual$2(l,scalar(+e,"int32")),greaterEqual$2(l,scalar(-t,"int32"))),f=zeros$2([o,i],s.dtype);return reshape$3(stack(unstack(reshape$3(s,[-1,o,i])).map(y=>where(d,y,f))),r)}const bandPart=op({bandPart_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gramSchmidt_(n){let e;if(Array.isArray(n)){e=!1,assert$1(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)assert$1(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else e=!0,n=split$1(n,n.shape[0],0).map(r=>squeeze(r,[0]));assert$1(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(ENGINE.tidy(()=>{let o=s[r];if(r>0)for(let i=0;i<r;++i){const c=mul(sum$2(mul(t[i],o)),t[i]);o=sub$2(o,c)}return div$1(o,norm(o,"euclidean"))}));return e?stack(t,0):t}const gramSchmidt=op({gramSchmidt_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qr_(n,e=!1){if(assert$1(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return qr2d(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((a,l)=>a*l),s=unstack(reshape$3(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];s.forEach(a=>{const[l,d]=qr2d(a,e);r.push(l),o.push(d)});const i=reshape$3(stack(r,0),n.shape),c=reshape$3(stack(o,0),n.shape);return[i,c]}}function qr2d(n,e=!1){return ENGINE.tidy(()=>{assert$1(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=eye(t),o=clone(n);const i=tensor2d([[1]],[1,1]);let c=clone(i);const a=t>=s?s:t;for(let l=0;l<a;++l){const d=o,f=c,y=r;[c,o,r]=ENGINE.tidy(()=>{const m=slice$2(o,[l,l],[t-l,1]),h=norm(m),g=slice$2(o,[l,l],[1,1]),x=where(greater$3(g,0),tensor2d([[-1]]),tensor2d([[1]])),w=sub$2(g,mul(x,h)),I=div$1(m,w);I.shape[0]===1?c=clone(i):c=concat$2([i,slice$2(I,[1,0],[I.shape[0]-1,I.shape[1]])],0);const N=neg$2(div$1(matMul$1(x,w),h)),A=slice$2(o,[l,0],[t-l,s]),T=mul(N,c),P=transpose$2(c);if(l===0)o=sub$2(A,matMul$1(T,matMul$1(P,A)));else{const G=sub$2(A,matMul$1(T,matMul$1(P,A)));o=concat$2([slice$2(o,[0,0],[l,s]),G],0)}const O=transpose$2(T),F=slice$2(r,[0,l],[t,r.shape[1]-l]);if(l===0)r=sub$2(F,matMul$1(matMul$1(F,c),O));else{const G=sub$2(F,matMul$1(matMul$1(F,c),O));r=concat$2([slice$2(r,[0,0],[t,l]),G],1)}return[c,o,r]}),dispose([d,f,y])}return!e&&t>s&&(r=slice$2(r,[0,0],[t,s]),o=slice$2(o,[0,0],[s,s])),[r,o]})}const qr=op({qr_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Reduction;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Reduction||(Reduction={}));function computeWeightedLoss_(n,e,t=Reduction.SUM_BY_NONZERO_WEIGHTS){const s=convertToTensor(n,"losses","computeWeightedLoss");let r=null;e!=null&&(r=convertToTensor(e,"weights","computeWeightedLoss"));const o=r==null?s:mul(s,r);if(t===Reduction.NONE)return o;if(t===Reduction.SUM)return sum$2(o);if(t===Reduction.MEAN){if(r==null)return mean$1(o);{const i=s.size/r.size,c=div$1(sum$2(o),sum$2(r));return i>1?div$1(c,scalar(i)):c}}if(t===Reduction.SUM_BY_NONZERO_WEIGHTS){if(r==null)return div$1(sum$2(o),scalar(s.size));{const i=mul(r,ones$1(s.shape)),c=cast$3(sum$2(notEqual$2(i,scalar(0))),"float32");return div$1(sum$2(o),c)}}throw Error(`Unknown reduction: ${t}`)}const computeWeightedLoss$1=op({computeWeightedLoss_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function absoluteDifference_(n,e,t,s=Reduction.SUM_BY_NONZERO_WEIGHTS){const r=convertToTensor(n,"labels","absoluteDifference"),o=convertToTensor(e,"predictions","absoluteDifference");let i=null;t!=null&&(i=convertToTensor(t,"weights","absoluteDifference")),assertShapesMatch(r.shape,o.shape,"Error in absoluteDifference: ");const c=abs$2(sub$2(r,o));return computeWeightedLoss$1(c,i,s)}const absoluteDifference=op({absoluteDifference_});function cosineDistance_(n,e,t,s,r=Reduction.SUM_BY_NONZERO_WEIGHTS){const o=convertToTensor(n,"labels","cosineDistance"),i=convertToTensor(e,"predictions","cosineDistance");let c=null;s!=null&&(c=convertToTensor(s,"weights","cosineDistance")),assertShapesMatch(o.shape,i.shape,"Error in cosineDistance: ");const a=scalar(1),l=sub$2(a,sum$2(mul(o,i),t,!0));return computeWeightedLoss$1(l,c,r)}const cosineDistance=op({cosineDistance_});function hingeLoss_(n,e,t,s=Reduction.SUM_BY_NONZERO_WEIGHTS){let r=convertToTensor(n,"labels","hingeLoss");const o=convertToTensor(e,"predictions","hingeLoss");let i=null;t!=null&&(i=convertToTensor(t,"weights","hingeLoss")),assertShapesMatch(r.shape,o.shape,"Error in hingeLoss: ");const c=scalar(1);r=sub$2(mul(scalar(2),r),c);const a=relu$2(sub$2(c,mul(r,o)));return computeWeightedLoss$1(a,i,s)}const hingeLoss=op({hingeLoss_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function huberLoss_(n,e,t,s=1,r=Reduction.SUM_BY_NONZERO_WEIGHTS){const o=convertToTensor(n,"labels","huberLoss"),i=convertToTensor(e,"predictions","huberLoss");let c=null;t!=null&&(c=convertToTensor(t,"weights","huberLoss")),assertShapesMatch(o.shape,i.shape,"Error in huberLoss: ");const a=scalar(s),l=abs$2(sub$2(i,o)),d=minimum$3(l,a),f=sub$2(l,d),y=add$2(mul(scalar(.5),square$2(d)),mul(a,f));return computeWeightedLoss$1(y,c,r)}const huberLoss=op({huberLoss_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function logLoss_(n,e,t,s=1e-7,r=Reduction.SUM_BY_NONZERO_WEIGHTS){const o=convertToTensor(n,"labels","logLoss"),i=convertToTensor(e,"predictions","logLoss");let c=null;t!=null&&(c=convertToTensor(t,"weights","logLoss")),assertShapesMatch(o.shape,i.shape,"Error in logLoss: ");const a=scalar(1),l=scalar(s),d=neg$2(mul(o,log$3(add$2(i,l)))),f=mul(sub$2(a,o),log$3(add$2(sub$2(a,i),l))),y=sub$2(d,f);return computeWeightedLoss$1(y,c,r)}const logLoss=op({logLoss_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function meanSquaredError_(n,e,t,s=Reduction.SUM_BY_NONZERO_WEIGHTS){const r=convertToTensor(n,"labels","meanSquaredError"),o=convertToTensor(e,"predictions","meanSquaredError");let i=null;t!=null&&(i=convertToTensor(t,"weights","meanSquaredError")),assertShapesMatch(r.shape,o.shape,"Error in meanSquaredError: ");const c=squaredDifference$2(r,o);return computeWeightedLoss$1(c,i,s)}const meanSquaredError$2=op({meanSquaredError_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sigmoidCrossEntropyWithLogits_(n,e){const t=convertToTensor(n,"labels","sigmoidCrossEntropyWithLogits"),s=convertToTensor(e,"logits","sigmoidCrossEntropyWithLogits");assertShapesMatch(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=relu$2(s),o=mul(s,t),i=log1p$2(exp$2(neg$2(abs$2(s))));return add$2(sub$2(r,o),i)}function sigmoidCrossEntropy_(n,e,t,s=0,r=Reduction.SUM_BY_NONZERO_WEIGHTS){let o=convertToTensor(n,"multiClassLabels","sigmoidCrossEntropy");const i=convertToTensor(e,"logits","sigmoidCrossEntropy");let c=null;if(t!=null&&(c=convertToTensor(t,"weights","sigmoidCrossEntropy")),assertShapesMatch(o.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const l=scalar(s),d=scalar(1),f=scalar(.5);o=add$2(mul(o,sub$2(d,l)),mul(f,l))}const a=sigmoidCrossEntropyWithLogits_(o,i);return computeWeightedLoss$1(a,c,r)}const sigmoidCrossEntropy=op({sigmoidCrossEntropy_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmaxCrossEntropyWithLogits_(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return customGrad((r,o,i)=>{const a=logSumExp(o,[t],!0),l=sub$2(cast$3(o,"float32"),a);i([r,l]);const d=neg$2(mul(l,r));return{value:sum$2(d,[t]),gradFunc:(m,h)=>{const[g,x]=h,w=expandShapeToKeepDim(m.shape,[t]);return[mul(reshape$3(m,w),sub$2(cast$3(g,"float32"),exp$2(x))),mul(reshape$3(m,w),sub$2(exp$2(x),cast$3(g,"float32")))]}}})(n,e)}function softmaxCrossEntropy_(n,e,t,s=0,r=Reduction.SUM_BY_NONZERO_WEIGHTS){let o=convertToTensor(n,"onehotLabels","softmaxCrossEntropy");const i=convertToTensor(e,"logits","softmaxCrossEntropy");let c=null;if(t!=null&&(c=convertToTensor(t,"weights","softmaxCrossEntropy")),assertShapesMatch(o.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const l=scalar(s),d=scalar(1),f=scalar(o.shape[1]);o=add$2(mul(o,sub$2(d,l)),div$1(l,f))}const a=softmaxCrossEntropyWithLogits_(o,i);return computeWeightedLoss$1(a,c,r)}const softmaxCrossEntropy=op({softmaxCrossEntropy_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const spectral$1={fft:fft$2,ifft:ifft$2,rfft,irfft},signal={hammingWindow,hannWindow,frame,stft},image$1={flipLeftRight,resizeNearestNeighbor:resizeNearestNeighbor$2,resizeBilinear:resizeBilinear$2,rotateWithOffset,cropAndResize:cropAndResize$2,nonMaxSuppression,nonMaxSuppressionAsync,nonMaxSuppressionWithScore,nonMaxSuppressionWithScoreAsync,nonMaxSuppressionPadded,nonMaxSuppressionPaddedAsync},linalg={bandPart,gramSchmidt,qr},losses={absoluteDifference,computeWeightedLoss:computeWeightedLoss$1,cosineDistance,hingeLoss,huberLoss,logLoss,meanSquaredError:meanSquaredError$2,sigmoidCrossEntropy,softmaxCrossEntropy};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Optimizer extends Serializable{minimize(e,t=!1,s){const{value:r,grads:o}=this.computeGradients(e,s);if(s!=null){const i=s.map(c=>({name:c.name,tensor:o[c.name]}));this.applyGradients(i)}else this.applyGradients(o);return dispose(o),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return variableGrads(e,t)}dispose(){this.iterations_!=null&&dispose(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:scalar(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Optimizer,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdadeltaOptimizer extends Optimizer{constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=ENGINE.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=ENGINE.registeredVariables[s],i=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:tidy(()=>zerosLike$2(o).variable(i))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:tidy(()=>zerosLike$2(o).variable(i))});const c=Array.isArray(e)?e[r].tensor:e[s];if(c==null)return;const a=this.accumulatedGrads[r].variable,l=this.accumulatedUpdates[r].variable;tidy(()=>{const d=add$2(mul(a,this.rho),mul(square$2(c),1-this.rho)),f=mul(div$1(sqrt$2(add$2(l,this.epsilon)),sqrt$2(add$2(a,this.epsilon))),c),y=add$2(mul(l,this.rho),mul(square$2(f),1-this.rho));a.assign(d),l.assign(y);const m=add$2(mul(f,-this.learningRate),o);o.assign(m)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(dispose(this.accumulatedGrads.map(e=>e.variable)),dispose(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}AdadeltaOptimizer.className="Adadelta";registerClass(AdadeltaOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdagradOptimizer extends Optimizer{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=ENGINE.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:tidy(()=>fill$2(o.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const c=this.accumulatedGrads[r].variable;tidy(()=>{const a=add$2(c,square$2(i));c.assign(a);const l=add$2(mul(div$1(i,sqrt$2(add$2(a,ENGINE.backend.epsilon()))),-this.learningRate),o);o.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&dispose(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}AdagradOptimizer.className="Adagrad";registerClass(AdagradOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdamOptimizer extends Optimizer{constructor(e,t,s,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],tidy(()=>{this.accBeta1=scalar(t).variable(),this.accBeta2=scalar(s).variable()}),r==null&&(this.epsilon=ENGINE.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);tidy(()=>{const s=sub$2(1,this.accBeta1),r=sub$2(1,this.accBeta2);t.forEach((o,i)=>{const c=ENGINE.registeredVariables[o],a=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:tidy(()=>zerosLike$2(c).variable(a))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${o}/v`,variable:tidy(()=>zerosLike$2(c).variable(a))});const l=Array.isArray(e)?e[i].tensor:e[o];if(l==null)return;const d=this.accumulatedFirstMoment[i].variable,f=this.accumulatedSecondMoment[i].variable,y=add$2(mul(d,this.beta1),mul(l,1-this.beta1)),m=add$2(mul(f,this.beta2),mul(square$2(l),1-this.beta2)),h=div$1(y,s),g=div$1(m,r);d.assign(y),f.assign(m);const x=add$2(mul(div$1(h,add$2(sqrt$2(g),this.epsilon)),-this.learningRate),c);c.assign(x)}),this.accBeta1.assign(mul(this.accBeta1,this.beta1)),this.accBeta2.assign(mul(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&dispose(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&dispose(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),tidy(()=>{this.accBeta1.assign(pow$2(this.beta1,this.iterations_+1)),this.accBeta2.assign(pow$2(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}AdamOptimizer.className="Adam";registerClass(AdamOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AdamaxOptimizer extends Optimizer{constructor(e,t,s,r=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],tidy(()=>{this.iteration=scalar(0).variable(),this.accBeta1=scalar(t).variable()}),r==null&&(this.epsilon=ENGINE.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);tidy(()=>{const s=sub$2(1,this.accBeta1),r=div$1(-this.learningRate,add$2(mul(this.iteration,this.decay),1));t.forEach((o,i)=>{const c=ENGINE.registeredVariables[o],a=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:zerosLike$2(c).variable(a)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${o}/v`,variable:zerosLike$2(c).variable(a)});const l=Array.isArray(e)?e[i].tensor:e[o];if(l==null)return;const d=this.accumulatedFirstMoment[i].variable,f=this.accumulatedWeightedInfNorm[i].variable,y=add$2(mul(d,this.beta1),mul(l,1-this.beta1)),m=mul(f,this.beta2),h=abs$2(l),g=maximum$3(m,h);d.assign(y),f.assign(g);const x=add$2(mul(div$1(r,s),div$1(y,add$2(g,this.epsilon))),c);c.assign(x)}),this.iteration.assign(add$2(this.iteration,1)),this.accBeta1.assign(mul(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&dispose(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&dispose(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}AdamaxOptimizer.className="Adamax";registerClass(AdamaxOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SGDOptimizer extends Optimizer{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const i=ENGINE.registeredVariables[s];tidy(()=>{const c=add$2(mul(this.c,o),i);i.assign(c)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=keep(scalar(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}SGDOptimizer.className="SGD";registerClass(SGDOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MomentumOptimizer extends SGDOptimizer{constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=scalar(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=ENGINE.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:tidy(()=>zerosLike$2(o).variable(!1))});const i=this.accumulations[r].variable,c=Array.isArray(e)?e[r].tensor:e[s];c!=null&&tidy(()=>{let a;const l=add$2(mul(this.m,i),c);this.useNesterov?a=add$2(mul(this.c,add$2(c,mul(l,this.m))),o):a=add$2(mul(this.c,l),o),i.assign(l),o.assign(a)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&dispose(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}MomentumOptimizer.className="Momentum";registerClass(MomentumOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RMSPropOptimizer extends Optimizer{constructor(e,t=.9,s=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=ENGINE.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=ENGINE.registeredVariables[s],i=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:tidy(()=>zerosLike$2(o).variable(i))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:tidy(()=>zerosLike$2(o).variable(i))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:tidy(()=>zerosLike$2(o).variable(i))});const c=Array.isArray(e)?e[r].tensor:e[s];if(c==null)return;const a=this.accumulatedMeanSquares[r].variable,l=this.accumulatedMoments[r].variable;tidy(()=>{const d=add$2(mul(a,this.decay),mul(square$2(c),1-this.decay));if(this.centered){const f=this.accumulatedMeanGrads[r].variable,y=add$2(mul(f,this.decay),mul(c,1-this.decay)),m=div$1(mul(c,this.learningRate),sqrt$2(sub$2(d,add$2(square$2(y),this.epsilon)))),h=add$2(mul(l,this.momentum),m);a.assign(d),f.assign(y),l.assign(h);const g=sub$2(o,h);o.assign(g)}else{const f=add$2(mul(a,this.decay),mul(square$2(c),1-this.decay)),y=add$2(mul(l,this.momentum),div$1(mul(c,this.learningRate),sqrt$2(add$2(f,this.epsilon))));a.assign(f),l.assign(y);const m=sub$2(o,y);o.assign(m)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&dispose(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&dispose(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&dispose(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}RMSPropOptimizer.className="RMSProp";registerClass(RMSPropOptimizer);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OptimizerConstructors{static sgd(e){return new SGDOptimizer(e)}static momentum(e,t,s=!1){return new MomentumOptimizer(e,t,s)}static rmsprop(e,t=.9,s=0,r=null,o=!1){return new RMSPropOptimizer(e,t,s,r,o)}static adam(e=.001,t=.9,s=.999,r=null){return new AdamOptimizer(e,t,s,r)}static adadelta(e=.001,t=.95,s=null){return new AdadeltaOptimizer(e,t,s)}static adamax(e=.002,t=.9,s=.999,r=null,o=0){return new AdamaxOptimizer(e,t,s,r,o)}static adagrad(e,t=.1){return new AdagradOptimizer(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const train={sgd:OptimizerConstructors.sgd,momentum:OptimizerConstructors.momentum,adadelta:OptimizerConstructors.adadelta,adagrad:OptimizerConstructors.adagrad,rmsprop:OptimizerConstructors.rmsprop,adamax:OptimizerConstructors.adamax,adam:OptimizerConstructors.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const delayCallback=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function nextFrame(){return new Promise(n=>delayCallback(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function assertParamsConsistent(n,e){const t=n[0].length;n.forEach((r,o)=>{assert$1(r.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),assert$1(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,o)=>{for(let i=0;i<t;i++)assert$1(i===e||r[i]===s[i],()=>`Error in concat${t}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function computeOutShape$1(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PARALLELIZE_THRESHOLD=30;function computeOptimalWindowSize(n){return n<=PARALLELIZE_THRESHOLD?n:nearestDivisor(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getImageCenter(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getReshaped(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=e.length;for(let i=0;i<o;++i)r=r.concat([n[i+1]/e[i],e[i]]);r=r.concat(n.slice(o+1))}return r}function getPermuted(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],o=[];for(let i=1;i<n;++i)i>=e*2+1||i%2===1?o.push(i):r.push(i);s.push(...r),s.push(0),s.push(...o)}return s}function getReshapedPermuted(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?s?r.push(e[o-1]*n[o]):r.push(n[o]/e[o-1]):r.push(n[o]);return r}function getSliceBeginCoords(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function getSliceSize(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SELU_SCALEALPHA=1.7580993408473768,SELU_SCALE=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ERF_P=.3275911,ERF_A1=.254829592,ERF_A2=-.284496736,ERF_A3=1.421413741,ERF_A4=-1.453152027,ERF_A5=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function warn(...n){env().getBool("IS_TEST")||console.warn(...n)}function log$2(...n){env().getBool("IS_TEST")||console.log(...n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mergeRealAndImagArrays(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function splitRealAndImagArrays(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function complexWithEvenIndex(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function complexWithOddIndex(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function getComplexWithIndex(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function assignToTypedArray(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function exponents(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:t,imag:s}}function exponent(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}function prepareSplitSize(n,e,t=0){let s=[];if(typeof e=="number")assert$1(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((i,c)=>(c===-1&&(i+=1),i),0);assert$1(r<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const i=e.reduce((c,a)=>a>0?c+a:c);e[o]=n.shape[t]-i}assert$1(n.shape[t]===e.reduce((i,c)=>i+c),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function segOpComputeOptimalWindowSize(n,e){let t=!1,s;for(n<=PARALLELIZE_THRESHOLD?(s=n,t=!0):s=nearestDivisor(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=nearestDivisor(n,s+1);return s}function computeOutShape(n,e,t){const s=[],r=n.length;for(let o=0;o<r;o++)o!==e?s.push(n[o]):s.push(t);return s}function collectGatherOpShapeInfo(n,e,t,s){const r=e.shape.length,o=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let f=0;f<s;++f)if(n.shape[f]!==e.shape[f])throw new Error(`x.shape[${f}]: ${n.shape[f]} should be equal to indices.shape[${f}]: ${e.shape[f]}.`);const i=n.shape[t],c=[];let a=1,l=1,d=1;for(let f=0;f<s;++f)c.push(n.shape[f]),a*=n.shape[f];for(let f=s;f<t;f++)c.push(n.shape[f]),l*=n.shape[f];for(let f=s;f<r;f++)c.push(e.shape[f]);for(let f=t+1;f<o;f++)c.push(n.shape[f]),d*=n.shape[f];return{batchSize:a,sliceSize:d,outerSize:l,dimSize:i,outputShape:c}}const segment_util=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo,computeOutShape,segOpComputeOptimalWindowSize},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function castTensor(n,e,t){if(e==="complex64"){if(n.dtype==="complex64")return n.clone();const s=zeros$2(n.shape),r=cast$3(n,"float32"),o=t.complex(r,s);return s.dispose(),r.dispose(),o}if(!hasEncodingLoss(n.dtype,e))return ENGINE.makeTensorFromDataId(n.dataId,n.shape,e);if(n.dtype==="complex64"){const s=t.real(n),r=cast$3(s,e);return s.dispose(),r}if(e==="int32")return t.int(n);if(e==="bool"){const s=scalar(0,n.dtype),r=t.notEqual(n,s);return s.dispose(),r}else throw new Error(`Error in Cast: failed to cast ${n.dtype} to ${e}`)}function reshapeTensor(n,e){return ENGINE.makeTensorFromDataId(n.dataId,e,n.dtype)}function fromUint8ToStringArray(n){try{return n.map(e=>decodeString(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function fromStringArrayToUint8(n){return n.map(e=>encodeString(e))}const backend_util=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1,ERF_A2,ERF_A3,ERF_A4,ERF_A5,ERF_P,PARALLELIZE_THRESHOLD,SELU_SCALE,SELU_SCALEALPHA,applyActivation:applyActivation$1,assertAndGetBroadcastShape,assertAxesAreInnerMostDims,assertParamsConsistent,assignToTypedArray,axesAreInnerMostDims,calculateShapes,castTensor,combineLocations,complexWithEvenIndex,complexWithOddIndex,computeConv2DInfo,computeConv3DInfo,computeDefaultPad,computeDilation2DInfo,computeOptimalWindowSize,computeOutAndReduceShapes,computeOutShape:computeOutShape$1,computePool2DInfo,computePool3DInfo,convertConv2DDataFormat,eitherStridesOrDilationsAreOne,expandShapeToKeepDim,exponent,exponents,fromStringArrayToUint8,fromUint8ToStringArray,getAxesPermutation,getBroadcastDims:getBroadcastDims$1,getComplexWithIndex,getFusedBiasGradient,getFusedDyActivation,getImageCenter,getInnerMostAxes,getPermuted,getReductionAxes,getReshaped,getReshapedPermuted,getSliceBeginCoords,getSliceSize,getUndoAxesPermutation,log:log$2,mergeRealAndImagArrays,prepareAndValidate,prepareSplitSize,reshapeTensor,segment_util,shouldFuse,slice_util,splitRealAndImagArrays,tupleValuesAreOne,upcastType,validateInput:validateInput$1,validateUpdateShape,warn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernel_impls=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:nonMaxSuppressionV3Impl$2,nonMaxSuppressionV4Impl:nonMaxSuppressionV4Impl$2,nonMaxSuppressionV5Impl:nonMaxSuppressionV5Impl$2,whereImpl:whereImpl$2},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const absGradConfig={kernelName:Abs,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(n,step$2(cast$3(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acosGradConfig={kernelName:Acos,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=square$2(cast$3(t,"float32")),r=sqrt$2(sub$2(scalar(1),s));return neg$2(div$1(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acoshGradConfig={kernelName:Acosh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=sqrt$2(sub$2(square$2(cast$3(t,"float32")),1));return div$1(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const addGradConfig={kernelName:Add$1,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=assertAndGetBroadcastShape(t.shape,s.shape);return{a:()=>{let c=n;const a=getReductionAxes(t.shape,r);return a.length>0&&(c=sum$2(c,a)),reshape$3(c,t.shape)},b:()=>{let c=n;const a=getReductionAxes(s.shape,r);return a.length>0&&(c=sum$2(c,a)),reshape$3(c,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const addNGradConfig={kernelName:AddN,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,r)=>{t[r]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const argMaxGradConfig={kernelName:ArgMax,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>zerosLike$2(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const argMinGradConfig={kernelName:ArgMin,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>zerosLike$2(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asinGradConfig={kernelName:Asin,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>div$1(n,sqrt$2(sub$2(scalar(1),square$2(cast$3(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asinhGradConfig={kernelName:Asinh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=sqrt$2(add$2(scalar(1),square$2(cast$3(t,"float32"))));return div$1(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atan2GradConfig={kernelName:Atan2,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=assertAndGetBroadcastShape(t.shape,s.shape);return{a:()=>{const c=add$2(square$2(t),square$2(s));let a=mul(n,div$1(s,c));const l=getReductionAxes(t.shape,r);return l.length>0&&(a=sum$2(a,l)),reshape$3(a,t.shape)},b:()=>{const c=add$2(square$2(t),square$2(s));let a=neg$2(mul(n,div$1(t,c)));const l=getReductionAxes(s.shape,r);return l.length>0&&(a=sum$2(a,l)),reshape$3(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atanGradConfig={kernelName:Atan,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>div$1(n,add$2(square$2(cast$3(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atanhGradConfig={kernelName:Atanh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>div$1(n,sub$2(scalar(1),square$2(cast$3(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3dGrad_(n,e,t,s,r=[1,1,1],o,i){const c=convertToTensor(n,"dy","avgPool3dGrad"),a=convertToTensor(e,"input","avgPool3dGrad");let l=c,d=a,f=!1;a.rank===4&&(f=!0,l=reshape$3(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),d=reshape$3(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),assert$1(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),assert$1(d.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),assert$1(eitherStridesOrDilationsAreOne(s,r),()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`),i!=null&&assert$1(isInt(o),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`);const y={dy:l,input:d},m={filterSize:t,strides:s,dilations:r,pad:o,dimRoundingMode:i},h=ENGINE.runKernel(AvgPool3DGrad,y,m);return f?reshape$3(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const avgPool3dGrad=op({avgPool3dGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const avgPool3DGradConfig$1={kernelName:AvgPool3D,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,dilations:i,pad:c,dimRoundingMode:a}=t,l=i??[1,1,1];return{x:()=>avgPool3dGrad(n,s,r,o,l,c,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPoolGrad_(n,e,t,s,r){const o=convertToTensor(n,"dy","avgPoolGrad"),i=convertToTensor(e,"input","avgPoolGrad");assert$1(i.rank===o.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${o.rank})`);let c=i,a=o,l=!1;i.rank===3&&(l=!0,c=reshape$3(i,[1,i.shape[0],i.shape[1],i.shape[2]]),a=reshape$3(o,[1,o.shape[0],o.shape[1],o.shape[2]])),assert$1(a.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),assert$1(c.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${c.rank}.`);const d={dy:a,input:c},f={filterSize:t,strides:s,pad:r},y=ENGINE.runKernel(AvgPoolGrad,d,f);return l?reshape$3(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const avgPoolGrad$2=op({avgPoolGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const avgPoolGradConfig$2={kernelName:AvgPool,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:i}=t;return{x:()=>avgPoolGrad$2(n,s,r,o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchMatMulGradConfig={kernelName:BatchMatMul,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,r]=e,{transposeA:o,transposeB:i}=t;return!o&&!i?{a:()=>matMul$1(n,r,!1,!0),b:()=>matMul$1(s,n,!0,!1)}:!o&&i?{a:()=>matMul$1(n,r,!1,!1),b:()=>matMul$1(n,s,!0,!1)}:o&&!i?{a:()=>matMul$1(r,n,!1,!0),b:()=>matMul$1(s,n,!1,!1)}:{a:()=>matMul$1(r,n,!0,!0),b:()=>matMul$1(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchToSpaceNDGradConfig={kernelName:BatchToSpaceND,gradFunc:(n,e,t)=>{const{blockShape:s,crops:r}=t;return{x:()=>spaceToBatchND$2(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const broadcastToGradConfig={kernelName:BroadcastTo,gradFunc:(n,e,t)=>{const s=t,r=s.inputShape,o=s.shape,i=Array.from(o);for(let a=r.length-1;a>=0;a--)if(r[a]===o[a])i[a]=1;else if(r[a]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const c=[];for(let a=0;a<i.length;a++)i[a]>1&&c.push(a);return{x:()=>sum$2(n,c,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const castGradConfig={kernelName:Cast,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ceilGradConfig={kernelName:Ceil,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const clipByValueGradConfig={kernelName:ClipByValue,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:r,clipValueMax:o}=t;return{x:()=>where(logicalAnd$2(greaterEqual$2(s,r),lessEqual$2(s,o)),n,zerosLike$2(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const complexAbsGradConfig={kernelName:ComplexAbs,inputsToSave:["x"],gradFunc:absGradConfig.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const concatGradConfig={kernelName:Concat,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(a=>a.shape),{axis:r}=t,o=parseAxisParam(r,e[0].shape)[0],i=s.map(a=>a[o]);return split$1(n,i,o).map(a=>()=>a)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const conv2DGradConfig={kernelName:Conv2D$1,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{dilations:o,strides:i,pad:c,dataFormat:a}=t;return assert$1(tupleValuesAreOne(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>conv2DBackpropInput$2(s.shape,n,r,i,c,a),filter:()=>conv2DBackpropFilter$2(s,n,r.shape,i,c,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const conv2DBackpropInputGradConfig={kernelName:Conv2DBackpropInput,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{strides:o,pad:i,dataFormat:c,dimRoundingMode:a}=t;return{dy:()=>conv2d$3(n,r,o,i,c,1,a),filter:()=>conv2DBackpropFilter$2(n,s,r.shape,o,i,c,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropFilter_(n,e,t,s,r){let o=n;n.rank===4&&(o=reshape$3(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=e;i.rank===4&&(i=reshape$3(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),assert$1(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),assert$1(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),assert$1(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),assert$1(o.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${t[3]}.`),assert$1(i.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${t[4]}).`);const c={x:o,dy:i},a={strides:s,pad:r,filterShape:t};return ENGINE.runKernel(Conv3DBackpropFilterV2,c,a)}const conv3DBackpropFilter=op({conv3DBackpropFilter_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const conv3DGradConfig={kernelName:Conv3D$1,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o}=t;assert$1(tupleValuesAreOne(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,c]=e;return{x:()=>conv3DBackpropInput$1(i.shape,n,c,r,o),filter:()=>conv3DBackpropFilter(i,n,c.shape,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cosGradConfig={kernelName:Cos,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(neg$2(sin$2(cast$3(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const coshGradConfig={kernelName:Cosh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(sinh$2(cast$3(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cumsumGradConfig={kernelName:Cumsum,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r,exclusive:o,reverse:i}=t;return{x:()=>{const c=getAxesPermutation([r],s.rank);let a=cumsum$2(n,r,o,!i);return c!=null&&(a=transpose$2(a,c)),a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const depthwiseConv2dNativeGradConfig={kernelName:DepthwiseConv2dNative,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:i}=t,c=s??[1,1];assert$1(tupleValuesAreOne(c),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${c}'`);const[a,l]=e;return assert$1(a.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${a.rank}.`),assert$1(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),assert$1(a.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${a.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),assert$1(eitherStridesOrDilationsAreOne(r,c),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${c}'.`),i!=null&&assert$1(isInt(o),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`),{x:()=>depthwiseConv2dNativeBackpropInput$2(a.shape,n,l,r,o,s,i),filter:()=>depthwiseConv2dNativeBackpropFilter$2(a,n,l.shape,r,o,s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2dGradConfig={kernelName:Dilation2D,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,o={x:s,filter:r,dy:n},i={x:s,filter:r,dy:n};return{x:()=>ENGINE.runKernel(Dilation2DBackpropInput,o,t),filter:()=>ENGINE.runKernel(Dilation2DBackpropFilter,i,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eluGradConfig$2={kernelName:Elu$1,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>ENGINE.runKernel(EluGrad,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const erfGradConfig={kernelName:Erf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=mul(exp$2(neg$2(square$2(t))),2/Math.sqrt(Math.PI));return{x:()=>mul(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expGradConfig={kernelName:Exp,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expandDimsGradConfig={kernelName:ExpandDims,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>reshape$3(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expm1GradConfig={kernelName:Expm1,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(n,exp$2(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorGradConfig={kernelName:Floor,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorDivGradConfig={kernelName:FloorDiv,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=assertAndGetBroadcastShape(t.shape,s.shape);return{a:()=>{const c=div$1(n,cast$3(s,"float32")),a=getReductionAxes(t.shape,r);return a.length>0?reshape$3(sum$2(c,a),t.shape):c},b:()=>{let c=mul(n,cast$3(t,"float32"));const a=getReductionAxes(s.shape,r);a.length>0&&(c=reshape$3(sum$2(c,a),s.shape));const l=square$2(s);return neg$2(div$1(c,cast$3(l,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fusedBatchNormGradConfig={kernelName:FusedBatchNorm,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[r,o,i,c]=e,a=c??scalar(1),l=getReductionAxes(o.shape,r.shape),d=[];if(o.rank===1){for(let A=0;A<r.shape.length-1;++A)d.push(r.shape[A]);d.push(1)}const f=sub$2(r,o),y=mul(n,a),m=rsqrt$2(add$2(i,scalar(s))),h=mul(mul(mul(m,m),m),scalar(-.5));return{x:()=>o.rank===1?reshape$3(mul(mul(n,tile$3(reshape$3(m,[1,1,1,o.shape[0]]),d)),a),r.shape):reshape$3(mul(mul(n,m),a),r.shape),mean:()=>{let A=mul(mul(m,scalar(-1)),y);return o.rank===1&&(A=sum$2(A,l)),reshape$3(A,o.shape)},variance:()=>{let A=mul(mul(h,f),y);return o.rank===1&&(A=sum$2(A,l)),reshape$3(A,o.shape)},scale:()=>{const A=mul(f,m);let T=mul(n,A);return o.rank===1&&(T=sum$2(T,l)),reshape$3(T,o.shape)},offset:()=>{let A=n;return o.rank===1&&(A=sum$2(A,l)),reshape$3(A,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gatherGradConfig={kernelName:GatherV2,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,r]=e,{axis:o}=t,i=parseAxisParam(o,s.shape)[0];return{x:()=>{const a=s.shape,l=r.size,d=a.slice(0,i),f=d.length,y=a.slice(o,a.length).slice(1),m=y.length,h=arrayRange(0,f),g=arrayRange(f+1,f+1+m),x=arrayConcat([d,[l],y]),w=reshape$3(n,x),I=reshape$3(r,[l]),N=arrayConcat([[f],h,g]),A=transpose$2(w,N);let T=unsortedSegmentSum$2(A,I,s.shape[i]);const P=getUndoAxesPermutation(N);return T=transpose$2(T,P),T},indices:()=>r}}};function arrayRange(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function arrayConcat(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const greaterEqualGradConfig={kernelName:GreaterEqual,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>zerosLike$2(t),b:()=>zerosLike$2(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const identityGradConfig={kernelName:Identity$1,gradFunc:n=>({x:()=>cast$3(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isFiniteGradConfig={kernelName:IsFinite,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isInfGradConfig={kernelName:IsInf,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isNanGradConfig={kernelName:IsNan,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const leakyReluGradConfig={kernelName:LeakyRelu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:r}=t,o=greater$3(s,0);return{x:()=>where(o,n,mul(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const log1pGradConfig={kernelName:Log1p,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>div$1(n,add$2(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logGradConfig={kernelName:Log,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>div$1(n,cast$3(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logSoftmaxGradConfig={kernelName:LogSoftmax$1,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;return{logits:()=>{const i=exp$2(s);return sub$2(n,mul(sum$2(n,r,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function localResponseNormalizationBackprop_(n,e,t,s=5,r=1,o=1,i=.5){const c={x:n,y:e,dy:t},a={depthRadius:s,bias:r,alpha:o,beta:i};return ENGINE.runKernel(LRNGrad,c,a)}const localResponseNormalizationBackprop=op({localResponseNormalizationBackprop_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrnGradConfig={kernelName:LRN,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{depthRadius:o,bias:i,alpha:c,beta:a}=t;return{x:()=>localResponseNormalizationBackprop(s,r,n,o,i,c,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gradForMinAndMax(n,e,t,s){return e.rank<t.rank&&(e=reshape$3(e,expandShapeToKeepDim(e.shape,s))),n.rank<t.rank&&(n=reshape$3(n,expandShapeToKeepDim(n.shape,s))),{x:()=>mul(n,cast$3(equal$2(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxGradConfig={kernelName:Max,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:r}=s,o=e[0],i=e[1],c=parseAxisParam(r,o.shape),a=gradForMinAndMax(n,i,o,c);return{x:()=>a.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maximumGradConfig={kernelName:Maximum$1,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>mul(n,cast$3(greaterEqual$2(t,s),"float32")),b:()=>mul(n,cast$3(less$3(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3dGrad_(n,e,t,s,r,o=[1,1,1],i,c){const a=convertToTensor(n,"dy","maxPool3dGrad"),l=convertToTensor(e,"input","maxPool3dGrad"),d=convertToTensor(t,"output","maxPool3dGrad");let f=a,y=l,m=d,h=!1;l.rank===4&&(h=!0,f=reshape$3(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),y=reshape$3(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),m=reshape$3(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),assert$1(f.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${f.rank}.`),assert$1(y.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${y.rank}.`),assert$1(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),assert$1(eitherStridesOrDilationsAreOne(r,o),()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${r} and dilations '${o}'`),c!=null&&assert$1(isInt(i),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${c} but got pad ${i}.`);const g={dy:f,input:y,output:m},x={filterSize:s,strides:r,dilations:o,pad:i,dimRoundingMode:c},w=ENGINE.runKernel(MaxPool3DGrad,g,x);return h?reshape$3(w,[w.shape[1],w.shape[2],w.shape[3],w.shape[4]]):w}const maxPool3dGrad=op({maxPool3dGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPool3DGradConfig$1={kernelName:MaxPool3D,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:i,dilations:c,pad:a,dimRoundingMode:l}=t,d=c??[1,1,1];return{x:()=>maxPool3dGrad(n,s,r,o,i,d,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolGrad_(n,e,t,s,r,o,i){const c=convertToTensor(n,"dy","maxPoolGrad"),a=convertToTensor(e,"input","maxPoolGrad"),l=convertToTensor(t,"output","maxPoolGrad");assert$1(a.rank===c.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${c.rank})`),assert$1(c.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${c.rank}.`),assert$1(a.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${a.rank}.`),i!=null&&assert$1(isInt(o),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${o}.`);const d={dy:c,input:a,output:l},f={filterSize:s,strides:r,pad:o,dimRoundingMode:i};return ENGINE.runKernel(MaxPoolGrad,d,f)}const maxPoolGrad$2=op({maxPoolGrad_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPoolGradConfig$2={kernelName:MaxPool,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:i,pad:c}=t;return{x:()=>maxPoolGrad$2(n,s,r,o,i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const meanGradConfig={kernelName:Mean,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t,o=parseAxisParam(r,s.shape),c=computeOutAndReduceShapes(s.shape,o)[1],a=sizeFromShape(c);return{x:()=>{const d=s.shape.slice();o.forEach(m=>{d[m]=1});const f=reshape$3(n,d);return div$1(mul(f,ones$1(s.shape,"float32")),a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const minGradConfig={kernelName:Min,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:r}=s,[o,i]=e,c=parseAxisParam(r,o.shape),a=gradForMinAndMax(n,i,o,c);return{x:()=>a.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const minimumGradConfig={kernelName:Minimum$1,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>mul(n,cast$3(lessEqual$2(t,s),"float32")),b:()=>mul(n,cast$3(greater$3(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mirrorPadGradConfig={kernelName:MirrorPad,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(i=>i[0]);return{x:()=>slice$2(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const modGradConfig={kernelName:Mod,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=assertAndGetBroadcastShape(t.shape,s.shape);return{a:()=>{const c=getReductionAxes(t.shape,r);return c.length>0?reshape$3(sum$2(n,c),t.shape):n},b:()=>{const c=mul(n,neg$2(floor$2(div$1(t,s)))),a=getReductionAxes(s.shape,r);return a.length>0?reshape$3(sum$2(c,a),s.shape):c}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const multiplyGradConfig={kernelName:Multiply$1,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=assertAndGetBroadcastShape(t.shape,s.shape);return{a:()=>{const c=mul(n,cast$3(s,"float32")),a=getReductionAxes(t.shape,r);return a.length>0?reshape$3(sum$2(c,a),t.shape):c},b:()=>{const c=mul(n,cast$3(t,"float32")),a=getReductionAxes(s.shape,r);return a.length>0?reshape$3(sum$2(c,a),s.shape):c}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const negGradConfig={kernelName:Neg,gradFunc:n=>({x:()=>neg$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oneHotGradConfig={kernelName:OneHot,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>zeros$2(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const onesLikeGradConfig={kernelName:OnesLike,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const packGradConfig={kernelName:Pack,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return unstack(n,s).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const padV2GradConfig={kernelName:PadV2,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(i=>i[0]);return{x:()=>slice$2(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const powGradConfig={kernelName:Pow,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,r]=e,o=t,i=s,c=assertAndGetBroadcastShape(o.shape,i.shape);return{a:()=>{const d=cast$3(i,"float32");let f=mul(n,mul(d,pow$2(o,sub$2(d,scalar(1)))));const y=getReductionAxes(o.shape,c);return y.length>0&&(f=sum$2(f,y)),reshape$3(f,o.shape)},b:()=>{const d=greater$3(o,0),f=where(d,log$3(o),zerosLike$2(o));let y=mul(n,mul(r,f));const m=getReductionAxes(i.shape,c);return m.length>0&&(y=sum$2(y,m)),reshape$3(y,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const preluGradConfig={kernelName:Prelu,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,r=greater$3(t,0);return{x:()=>where(r,n,mul(n,s)),alpha:()=>{let o=where(r,zerosLike$2(n),mul(n,t));const i=getReductionAxes(s.shape,n.shape);return i.length>0&&(o=sum$2(o,i)),reshape$3(o,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const divGradConfig={kernelName:RealDiv,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=assertAndGetBroadcastShape(t.shape,s.shape);return{a:()=>{const c=div$1(n,cast$3(s,"float32")),a=getReductionAxes(t.shape,r);return a.length>0?reshape$3(sum$2(c,a),t.shape):c},b:()=>{let c=mul(n,cast$3(t,"float32"));const a=getReductionAxes(s.shape,r);a.length>0&&(c=reshape$3(sum$2(c,a),s.shape));const l=square$2(s);return neg$2(div$1(c,cast$3(l,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reciprocalGradConfig={kernelName:Reciprocal,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>div$1(n,neg$2(square$2(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const relu6GradConfig={kernelName:Relu6$1,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=mul(lessEqual$2(t,6),step$2(t));return{x:()=>mul(n,cast$3(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reluGradConfig={kernelName:Relu$1,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(n,cast$3(step$2(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reshapeGradConfig={kernelName:Reshape$1,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>reshape$3(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const resizeBilinearGradConfig$2={kernelName:ResizeBilinear,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>ENGINE.runKernel(ResizeBilinearGrad,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const resizeNearestNeighborGradConfig$2={kernelName:ResizeNearestNeighbor,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>ENGINE.runKernel(ResizeNearestNeighborGrad,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reverseGradConfig={kernelName:Reverse,gradFunc:(n,e,t)=>{const{dims:s}=t,r=parseAxisParam(s,n.shape);return{x:()=>reverse$2(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const roundGradConfig={kernelName:Round,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rsqrtGradConfig={kernelName:Rsqrt,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>neg$2(div$1(n,mul(pow$2(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const selectGradConfig={kernelName:Select,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>cast$3(zerosLike$2(t),"float32"),t:()=>mul(n,cast$3(t,n.dtype)),e:()=>mul(n,cast$3(logicalNot$2(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const seluGradConfig={kernelName:Selu$1,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=greater$3(t,scalar(0)),r=scalar(SELU_SCALEALPHA),o=scalar(SELU_SCALE),i=mul(n,o),c=mul(mul(n,r),exp$2(cast$3(t,"float32")));return where(s,i,c)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sigmoidGradConfig={kernelName:Sigmoid$1,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(n,mul(t,sub$2(scalar(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const signGradConfig={kernelName:Sign,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sinGradConfig={kernelName:Sin,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(cos$2(cast$3(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sinhGradConfig={kernelName:Sinh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(cosh$2(cast$3(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sliceGradConfig={kernelName:Slice,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:r,size:o}=t,i=s.shape,[c,a]=parseSliceParams(s,r,o),l=[];for(let d=0;d<n.rank;d++)l.push([c[d],i[d]-c[d]-a[d]]);return{x:()=>pad(n,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const softmaxGradConfig={kernelName:Softmax$2,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:r}=t,o=!0,i=mul(n,s);return{logits:()=>sub$2(i,mul(sum$2(i,[r],o),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const softplusGradConfig={kernelName:Softplus$1,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(n,sigmoid$2(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const spaceToBatchNDGradConfig={kernelName:SpaceToBatchND,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:r}=t;return{x:()=>batchToSpaceND$2(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const splitVGradConfig={kernelName:SplitV,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>concat$2(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sqrtGradConfig={kernelName:Sqrt,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>div$1(n,mul(sqrt$2(cast$3(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squareGradConfig={kernelName:Square,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(n,mul(cast$3(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squaredDifferenceGradConfig={kernelName:SquaredDifference,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=scalar(2);return{a:()=>mul(n,mul(r,sub$2(t,s))),b:()=>mul(n,mul(r,sub$2(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const stepGradConfig={kernelName:Step,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const subGradConfig={kernelName:Sub,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=assertAndGetBroadcastShape(t.shape,s.shape);return{a:()=>{let c=n;const a=getReductionAxes(t.shape,r);return a.length>0&&(c=sum$2(c,a)),reshape$3(c,t.shape)},b:()=>{let c=n;const a=getReductionAxes(s.shape,r);return a.length>0&&(c=sum$2(c,a)),reshape$3(neg$2(c),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sumGradConfig={kernelName:Sum,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,r=s.shape.slice(),{axis:o}=t;parseAxisParam(o,s.shape).forEach(l=>{r[l]=1});const c=reshape$3(n,r),a=mul(c,ones$1(s.shape,"float32"));return{x:()=>a}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tanGradConfig={kernelName:Tan,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>div$1(n,square$2(cos$2(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tanhGradConfig={kernelName:Tanh$1,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>mul(sub$2(scalar(1),square$2(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tileGradConfig={kernelName:Tile,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:r}=t;return{x:()=>{let i=zerosLike$2(s);if(s.rank===1)for(let c=0;c<r[0];++c)i=add$2(i,slice$2(n,[c*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let c=0;c<r[0];++c)for(let a=0;a<r[1];++a)i=add$2(i,slice$2(n,[c*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let c=0;c<r[0];++c)for(let a=0;a<r[1];++a)for(let l=0;l<r[2];++l)i=add$2(i,slice$2(n,[c*s.shape[0],a*s.shape[1],l*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let c=0;c<r[0];++c)for(let a=0;a<r[1];++a)for(let l=0;l<r[2];++l)for(let d=0;d<r[3];++d)i=add$2(i,slice$2(n,[c*s.shape[0],a*s.shape[1],l*s.shape[2],d*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const transposeGradConfig={kernelName:Transpose,gradFunc:(n,e,t)=>{const s=t,{perm:r}=s,o=getUndoAxesPermutation(r);return{x:()=>transpose$2(n,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const unpackGradConfig={kernelName:Unpack,gradFunc:(n,e,t)=>{const s=t,{axis:r}=s;return{value:()=>stack(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const unsortedSegmentSumGradConfig={kernelName:UnsortedSegmentSum,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>gatherDropNegatives(n,t)}}};function gatherDropNegatives(n,e){const t=maximum$3(e,zerosLike$2(e)),s=gather$1(n,t);let r=greaterEqual$2(e,scalar(0,"int32"));const o=s.rank-r.rank;for(let c=0;c<o;++c)r=expandDims$3(r,c+1);r=logicalAnd$2(r,ones$1(s.shape,"bool"));const i=zerosLike$2(s);return where(r,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zerosLikeGradConfig={kernelName:ZerosLike,gradFunc:n=>({x:()=>zerosLike$2(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gradConfigs=[absGradConfig,acosGradConfig,acoshGradConfig,addGradConfig,addNGradConfig,argMaxGradConfig,argMinGradConfig,asinGradConfig,asinhGradConfig,atan2GradConfig,atanGradConfig,atanhGradConfig,avgPool3DGradConfig$1,avgPoolGradConfig$2,batchMatMulGradConfig,batchToSpaceNDGradConfig,broadcastToGradConfig,castGradConfig,ceilGradConfig,clipByValueGradConfig,complexAbsGradConfig,concatGradConfig,conv2DBackpropInputGradConfig,conv2DGradConfig,conv3DGradConfig,cosGradConfig,coshGradConfig,cumsumGradConfig,depthwiseConv2dNativeGradConfig,dilation2dGradConfig,divGradConfig,eluGradConfig$2,erfGradConfig,expGradConfig,expandDimsGradConfig,expm1GradConfig,floorDivGradConfig,floorGradConfig,fusedBatchNormGradConfig,gatherGradConfig,greaterEqualGradConfig,identityGradConfig,isFiniteGradConfig,isInfGradConfig,isNanGradConfig,leakyReluGradConfig,log1pGradConfig,logGradConfig,logSoftmaxGradConfig,lrnGradConfig,maxGradConfig,maxGradConfig,maximumGradConfig,maxPool3DGradConfig$1,maxPoolGradConfig$2,meanGradConfig,minGradConfig,minimumGradConfig,mirrorPadGradConfig,modGradConfig,multiplyGradConfig,negGradConfig,oneHotGradConfig,onesLikeGradConfig,packGradConfig,padV2GradConfig,padV2GradConfig,powGradConfig,preluGradConfig,reciprocalGradConfig,relu6GradConfig,reluGradConfig,reshapeGradConfig,resizeBilinearGradConfig$2,resizeNearestNeighborGradConfig$2,reverseGradConfig,roundGradConfig,rsqrtGradConfig,selectGradConfig,seluGradConfig,sigmoidGradConfig,signGradConfig,sinGradConfig,sinhGradConfig,sliceGradConfig,softmaxGradConfig,softplusGradConfig,spaceToBatchNDGradConfig,spaceToBatchNDGradConfig,splitVGradConfig,splitVGradConfig,sqrtGradConfig,squaredDifferenceGradConfig,squareGradConfig,stepGradConfig,subGradConfig,sumGradConfig,tanGradConfig,tanhGradConfig,tileGradConfig,transposeGradConfig,unpackGradConfig,unsortedSegmentSumGradConfig,zerosLikeGradConfig];for(const n of gradConfigs)registerGradient(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.abs=function(){return this.throwIfDisposed(),abs$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.acos=function(){return this.throwIfDisposed(),acos$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.acosh=function(){return this.throwIfDisposed(),acosh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.addStrict=function(n){return this.throwIfDisposed(),addStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.add=function(n){return this.throwIfDisposed(),add$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.all=function(n,e){return this.throwIfDisposed(),all$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.any=function(n,e){return this.throwIfDisposed(),any$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.argMax=function(n){return this.throwIfDisposed(),argMax$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.argMin=function(n){return this.throwIfDisposed(),argMin$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.asScalar=function(){return this.throwIfDisposed(),assert$1(this.size===1,()=>"The array must have only 1 element."),reshape$3(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.asType=function(n){return this.throwIfDisposed(),cast$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.as1D=function(){return this.throwIfDisposed(),reshape$3(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.as2D=function(n,e){return this.throwIfDisposed(),reshape$3(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.as3D=function(n,e,t){return this.throwIfDisposed(),reshape$3(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),reshape$3(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.as5D=function(n,e,t,s,r){return this.throwIfDisposed(),reshape$3(this,[n,e,t,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.asin=function(){return this.throwIfDisposed(),asin$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.asinh=function(){return this.throwIfDisposed(),asinh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.atan=function(){return this.throwIfDisposed(),atan$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.atan2=function(n){return this.throwIfDisposed(),atan2$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.atanh=function(){return this.throwIfDisposed(),atanh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),avgPool$2(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),batchToSpaceND$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.batchNorm=function(n,e,t,s,r){return this.throwIfDisposed(),batchNorm$2(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.broadcastTo=function(n){return this.throwIfDisposed(),broadcastTo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.cast=function(n){return this.throwIfDisposed(),cast$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.ceil=function(){return this.throwIfDisposed(),ceil$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.clipByValue=function(n,e){return this.throwIfDisposed(),clipByValue$1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof Tensor&&(n=[n]),concat$2([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.conv1d=function(n,e,t,s,r,o){return this.throwIfDisposed(),conv1d$1(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.conv2dTranspose=function(n,e,t,s,r){return this.throwIfDisposed(),conv2dTranspose$1(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.conv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),conv2d$3(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.cos=function(){return this.throwIfDisposed(),cos$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.cosh=function(){return this.throwIfDisposed(),cosh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),cumsum$2(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),depthToSpace$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.depthwiseConv2D=function(n,e,t,s,r,o){return deprecationWarn("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),depthwiseConv2d$3(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.depthwiseConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),depthwiseConv2d$3(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.dilation2d=function(n,e,t,s,r){return this.throwIfDisposed(),dilation2d(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.divNoNan=function(n){return this.throwIfDisposed(),divNoNan(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.divStrict=function(n){return this.throwIfDisposed(),divStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.div=function(n){return this.throwIfDisposed(),div$1(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.dot=function(n){return this.throwIfDisposed(),dot$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.elu=function(){return this.throwIfDisposed(),elu$4(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.equalStrict=function(n){return this.throwIfDisposed(),equalStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.equal=function(n){return this.throwIfDisposed(),equal$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.erf=function(){return this.throwIfDisposed(),erf$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.exp=function(){return this.throwIfDisposed(),exp$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.expandDims=function(n){return this.throwIfDisposed(),expandDims$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.expm1=function(){return this.throwIfDisposed(),expm1$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.fft=function(){return this.throwIfDisposed(),fft$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.flatten=function(){return this.throwIfDisposed(),reshape$3(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.floor=function(){return this.throwIfDisposed(),floor$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.floorDiv=function(n){return this.throwIfDisposed(),floorDiv$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.gather=function(n,e){return this.throwIfDisposed(),gather$1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.greaterEqualStrict=function(n){return this.throwIfDisposed(),greaterEqualStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.greaterEqual=function(n){return this.throwIfDisposed(),greaterEqual$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.greaterStrict=function(n){return this.throwIfDisposed(),greaterStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.greater=function(n){return this.throwIfDisposed(),greater$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.ifft=function(){return this.throwIfDisposed(),ifft$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.irfft=function(){return this.throwIfDisposed(),irfft(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.isFinite=function(){return this.throwIfDisposed(),isFinite$3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.isInf=function(){return this.throwIfDisposed(),isInf$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.isNaN=function(){return this.throwIfDisposed(),isNaN$3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.leakyRelu=function(n){return this.throwIfDisposed(),leakyRelu$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.lessEqualStrict=function(n){return this.throwIfDisposed(),lessEqualStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.lessEqual=function(n){return this.throwIfDisposed(),lessEqual$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.lessStrict=function(n){return this.throwIfDisposed(),lessStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.less=function(n){return this.throwIfDisposed(),less$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),localResponseNormalization(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logSigmoid=function(){return this.throwIfDisposed(),logSigmoid(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logSoftmax=function(n){return this.throwIfDisposed(),logSoftmax(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logSumExp=function(n,e){return this.throwIfDisposed(),logSumExp(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.log=function(){return this.throwIfDisposed(),log$3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.log1p=function(){return this.throwIfDisposed(),log1p$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logicalAnd=function(n){return this.throwIfDisposed(),logicalAnd$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logicalNot=function(){return this.throwIfDisposed(),logicalNot$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logicalOr=function(n){return this.throwIfDisposed(),logicalOr$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.logicalXor=function(n){return this.throwIfDisposed(),logicalXor(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.matMul=function(n,e,t){return this.throwIfDisposed(),matMul$1(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),maxPool$2(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.max=function(n,e){return this.throwIfDisposed(),max$3(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.maximumStrict=function(n){return this.throwIfDisposed(),maximumStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.maximum=function(n){return this.throwIfDisposed(),maximum$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.mean=function(n,e){return this.throwIfDisposed(),mean$1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.min=function(n,e){return this.throwIfDisposed(),min$3(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.minimumStrict=function(n){return this.throwIfDisposed(),minimumStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.minimum=function(n){return this.throwIfDisposed(),minimum$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),mirrorPad$1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.modStrict=function(n){return this.throwIfDisposed(),modStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.mod=function(n){return this.throwIfDisposed(),mod$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.mulStrict=function(n){return this.throwIfDisposed(),mulStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.mul=function(n){return this.throwIfDisposed(),mul(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.neg=function(){return this.throwIfDisposed(),neg$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.norm=function(n,e,t){return this.throwIfDisposed(),norm(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.notEqualStrict=function(n){return this.throwIfDisposed(),notEqualStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.notEqual=function(n){return this.throwIfDisposed(),notEqual$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),oneHot$2(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.onesLike=function(){return this.throwIfDisposed(),onesLike$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.pad=function(n,e){return this.throwIfDisposed(),pad(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.pool=function(n,e,t,s,r){return this.throwIfDisposed(),pool$1(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.powStrict=function(n){return this.throwIfDisposed(),powStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.pow=function(n){return this.throwIfDisposed(),pow$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.prelu=function(n){return this.throwIfDisposed(),prelu$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.prod=function(n,e){return this.throwIfDisposed(),prod$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.reciprocal=function(){return this.throwIfDisposed(),reciprocal$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.relu=function(){return this.throwIfDisposed(),relu$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.relu6=function(){return this.throwIfDisposed(),relu6$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.reshapeAs=function(n){return this.throwIfDisposed(),reshape$3(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.reshape=function(n){return this.throwIfDisposed(),reshape$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),resizeBilinear$2(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),resizeNearestNeighbor$2(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.reverse=function(n){return this.throwIfDisposed(),reverse$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.rfft=function(){return this.throwIfDisposed(),rfft(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.round=function(){return this.throwIfDisposed(),round$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.rsqrt=function(){return this.throwIfDisposed(),rsqrt$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.selu=function(){return this.throwIfDisposed(),selu$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.separableConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),separableConv2d$1(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sigmoid=function(){return this.throwIfDisposed(),sigmoid$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sign=function(){return this.throwIfDisposed(),sign$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sin=function(){return this.throwIfDisposed(),sin$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sinh=function(){return this.throwIfDisposed(),sinh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.slice=function(n,e){return this.throwIfDisposed(),slice$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.softmax=function(n){return this.throwIfDisposed(),softmax$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.softplus=function(){return this.throwIfDisposed(),softplus$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),spaceToBatchND$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.split=function(n,e){return this.throwIfDisposed(),split$1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sqrt=function(){return this.throwIfDisposed(),sqrt$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.square=function(){return this.throwIfDisposed(),square$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.squaredDifference=function(n){return this.throwIfDisposed(),squaredDifference$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.squaredDifferenceStrict=function(n){return this.throwIfDisposed(),squaredDifferenceStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.squeeze=function(n){return this.throwIfDisposed(),squeeze(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof Tensor?[this,n]:[this,...n];return stack(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.step=function(n){return this.throwIfDisposed(),step$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.stridedSlice=function(n,e,t,s,r,o,i,c){return this.throwIfDisposed(),stridedSlice$2(this,n,e,t,s,r,o,i,c)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.subStrict=function(n){return this.throwIfDisposed(),subStrict(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sub=function(n){return this.throwIfDisposed(),sub$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.sum=function(n,e){return this.throwIfDisposed(),sum$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.tan=function(){return this.throwIfDisposed(),tan$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.tanh=function(){return this.throwIfDisposed(),tanh$2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.tile=function(n){return this.throwIfDisposed(),tile$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.toBool=function(){return this.throwIfDisposed(),cast$3(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.toFloat=function(){return this.throwIfDisposed(),cast$3(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.toInt=function(){return this.throwIfDisposed(),cast$3(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.topk=function(n,e){return this.throwIfDisposed(),topk(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.transpose=function(n){return this.throwIfDisposed(),transpose$2(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.unique=function(n){return this.throwIfDisposed(),unique$3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),unsortedSegmentSum$2(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.unstack=function(n){return this.throwIfDisposed(),unstack(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.where=function(n,e){return this.throwIfDisposed(),where(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tensor.prototype.zerosLike=function(){return this.throwIfDisposed(),zerosLike$2(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let _epsilon;function epsilon$1(){return _epsilon==null&&(_epsilon=backend().epsilon()),_epsilon}function imageDataFormat(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class AttributeError extends Error{constructor(e){super(e),Object.setPrototypeOf(this,AttributeError.prototype)}}class RuntimeError extends Error{constructor(e){super(e),Object.setPrototypeOf(this,RuntimeError.prototype)}}class ValueError extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ValueError.prototype)}}class NotImplementedError extends Error{constructor(e){super(e),Object.setPrototypeOf(this,NotImplementedError.prototype)}}class AssertionError extends Error{constructor(e){super(e),Object.setPrototypeOf(this,AssertionError.prototype)}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pyListRepeat(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function assert(n,e){if(!n)throw new AssertionError(e)}function count(n,e){let t=0;for(const s of n)s===e&&t++;return t}function singletonOrArray(n){return n.length===1?n[0]:n}function toList(n){return Array.isArray(n)?n:[n]}function toSnakeCase(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function toCamelCase(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let _GLOBAL_CUSTOM_OBJECTS={};function serializeKerasObject(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function convertNDArrayScalarsInConfig(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>convertNDArrayScalarsInConfig(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:convertNDArrayScalarsInConfig(s))}}}function deserializeKerasObject(n,e={},t={},s="object",r=!1){if(typeof n=="string"){const o=n;let i;if(o in t)i=t[o];else if(o in _GLOBAL_CUSTOM_OBJECTS)i=_GLOBAL_CUSTOM_OBJECTS[o];else if(i=e[o],i==null)throw new ValueError(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const o=n;if(o.className==null||o.config==null)throw new ValueError(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const i=o.className;let c,a;if(i in t?[c,a]=t[i]:i in _GLOBAL_CUSTOM_OBJECTS?[c,a]=_GLOBAL_CUSTOM_OBJECTS.className:i in e&&([c,a]=e[i]),c==null)throw new ValueError(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(a!=null){const l={};for(const m of Object.keys(_GLOBAL_CUSTOM_OBJECTS))l[m]=_GLOBAL_CUSTOM_OBJECTS[m];for(const m of Object.keys(t))l[m]=t[m];const d=o.config;d.customObjects=l;const f=Object.assign({},_GLOBAL_CUSTOM_OBJECTS);for(const m of Object.keys(t))_GLOBAL_CUSTOM_OBJECTS[m]=t[m];convertNDArrayScalarsInConfig(o.config);const y=a(c,o.config,t,r);return _GLOBAL_CUSTOM_OBJECTS=Object.assign({},f),y}else{const l=Object.assign({},_GLOBAL_CUSTOM_OBJECTS);for(const f of Object.keys(t))_GLOBAL_CUSTOM_OBJECTS[f]=t[f];const d=new c(o.config);return _GLOBAL_CUSTOM_OBJECTS=Object.assign({},l),d}}}function numberCompare(n,e){return n<e?-1:n>e?1:0}function reverseNumberCompare(n,e){return-1*numberCompare(n,e)}function unique$2(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function isObjectEmpty(n){if(n==null)throw new ValueError(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function checkStringTypeUnionValue(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new ValueError(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function checkArrayTypeAndLength(n,e,t=0,s=1/0){return assert(t>=0),assert(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(r=>typeof r===e)}function assertPositiveInteger(n,e){Array.isArray(n)?(assert$1(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>assertPositiveInteger(t,`element ${s+1} of ${e}`))):assert$1(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${formatAsFriendlyString(n)}.`)}function formatAsFriendlyString(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>formatAsFriendlyString(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function debounce(n,e){let t=now(),s;return(...o)=>{const i=now();return i-t<e||(t=i,s=n(...o)),s}}function mapActivationToFusedKernel(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function calcL2Norms(n,e){return tidy(()=>sqrt$2(sum$2(mul(n,n),e,!0)))}class Constraint extends Serializable{getConfig(){return{}}}class MaxNorm extends Constraint{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return tidy(()=>{const t=calcL2Norms(e,this.axis),s=clipByValue$1(t,0,this.maxValue);return mul(e,div$1(s,add$2(epsilon$1(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}MaxNorm.className="MaxNorm";registerClass(MaxNorm);class UnitNorm extends Constraint{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return tidy(()=>div$1(e,add$2(epsilon$1(),calcL2Norms(e,this.axis))))}getConfig(){return{axis:this.axis}}}UnitNorm.className="UnitNorm";registerClass(UnitNorm);class NonNeg extends Constraint{apply(e){return relu$2(e)}}NonNeg.className="NonNeg";registerClass(NonNeg);class MinMaxNorm extends Constraint{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return tidy(()=>{const t=calcL2Norms(e,this.axis),s=add$2(mul(this.rate,clipByValue$1(t,this.minValue,this.maxValue)),mul(1-this.rate,t));return mul(e,div$1(s,add$2(epsilon$1(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}MinMaxNorm.className="MinMaxNorm";registerClass(MinMaxNorm);const CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function serializeConstraint(n){return serializeKerasObject(n)}function deserializeConstraint(n,e={}){return deserializeKerasObject(n,SerializationMap.getMap().classNameMap,e,"constraint")}function getConstraint(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP?CONSTRAINT_IDENTIFIER_REGISTRY_SYMBOL_MAP[n]:n,config:{}};return deserializeConstraint(t)}else return n instanceof Constraint?n:deserializeConstraint(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function maxNorm(n){return new MaxNorm(n)}function unitNorm(n){return new UnitNorm(n)}function nonNeg(){return new NonNeg}function minMaxNorm(n){return new MinMaxNorm(n)}const exports_constraints=Object.freeze(Object.defineProperty({__proto__:null,maxNorm,minMaxNorm,nonNeg,unitNorm},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const VALID_DATA_FORMAT_VALUES=["channelsFirst","channelsLast"],VALID_INTERPOLATION_FORMAT_VALUES=["nearest","bilinear"],VALID_PADDING_MODE_VALUES=["valid","same","causal"],VALID_POOL_MODE_VALUES=["max","avg"],VALID_BIDIRECTIONAL_MERGE_MODES=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const nameMap=new Map;function checkDataFormat(n){checkStringTypeUnionValue(VALID_DATA_FORMAT_VALUES,"DataFormat",n)}function checkInterpolationFormat(n){checkStringTypeUnionValue(VALID_INTERPOLATION_FORMAT_VALUES,"InterpolationFormat",n)}function checkPaddingMode(n){checkStringTypeUnionValue(VALID_PADDING_MODE_VALUES,"PaddingMode",n)}function checkPoolMode(n){checkStringTypeUnionValue(VALID_POOL_MODE_VALUES,"PoolMode",n)}const _nameScopeStack=[],_nameScopeDivider="/";function nameScope(n,e){_nameScopeStack.push(n);try{const t=e();return _nameScopeStack.pop(),t}catch(t){throw _nameScopeStack.pop(),t}}function currentNameScopePrefix(){return _nameScopeStack.length===0?"":_nameScopeStack.join(_nameScopeDivider)+_nameScopeDivider}function getScopedTensorName(n){if(!isValidTensorName(n))throw new Error("Not a valid tensor name: '"+n+"'");return currentNameScopePrefix()+n}function getUniqueTensorName(n){if(!isValidTensorName(n))throw new Error("Not a valid tensor name: '"+n+"'");nameMap.has(n)||nameMap.set(n,0);const e=nameMap.get(n);if(nameMap.set(n,nameMap.get(n)+1),e>0){const t=`${n}_${e}`;return nameMap.set(t,1),t}else return n}const tensorNameRegex=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function isValidTensorName(n){return!!n.match(tensorNameRegex)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isInteger(n){return n===parseInt(n.toString(),10)}function arrayProd(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let r=e;r<t;++r)s*=n[r];return s}function toArray1D(n){return n=Array.isArray(n)?new Float32Array(n):n,tensor1d(n)}function min$2(n){return min$3(toArray1D(n)).dataSync()[0]}function max$2(n){return max$3(toArray1D(n)).dataSync()[0]}function range$2(n,e){if(e<n)throw new ValueError(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cast$2(n,e){return n.asType(e)}function expandDims$2(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),n.reshape(t)}function repeat(n,e){return tidy(()=>{if(n.shape.length!==2)throw new ValueError(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=expandDims$2(n,1);return tile$2(t,[1,e,1])})}function flatten$1(n){const e=[arrayProd(n.shape)];return n.reshape(e)}function batchFlatten(n){if(n.rank<=1)throw new ValueError(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],arrayProd(n.shape,1)];return n.reshape(e)}function sliceAlongFirstAxis(n,e,t){return tidy(()=>{switch(n.rank){case 1:return slice1d(n,e,t);case 2:return slice2d(n,[e,0],[t,n.shape[1]]);case 3:return slice3d(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return slice4d(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return slice$2(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return slice$2(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new ValueError(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function sliceAlongLastAxis(n,e,t){return tidy(()=>{switch(n.rank){case 1:return slice1d(n,e,t);case 2:return slice2d(n,[0,e],[n.shape[0],t]);case 3:return slice3d(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return slice4d(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new ValueError(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function sliceAlongAxis(n,e,t,s){return tidy(()=>{switch(n.rank){case 1:return slice1d(n,e,t);case 2:switch(s){case 1:return sliceAlongFirstAxis(n,e,t);case 2:return sliceAlongLastAxis(n,e,t);default:throw new ValueError(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return sliceAlongFirstAxis(n,e,t);case 2:return slice3d(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return sliceAlongLastAxis(n,e,t);default:throw new ValueError(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return sliceAlongFirstAxis(n,e,t);case 2:return slice4d(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return slice4d(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return sliceAlongLastAxis(n,e,t);default:throw new ValueError(`The axis is not within the rank of the tensor ${s}`)}default:throw new ValueError(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function concatenate$1(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),concat$2(n,e)}function concatAlongFirstAxis(n,e){switch(n.rank){case 1:return concat1d([n,e]);case 2:return concat2d([n,e],0);case 3:return concat3d([n,e],0);case 4:return concat4d([n,e],0);default:throw new ValueError(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function tile$2(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new ValueError(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return tile$3(n,e)}function randomNormal$1(n,e=0,t=1,s,r){return randomNormal$2(n,e,t,s,r)}function dot$1(n,e,t,s){if(n.rank<2||e.rank<2)throw new NotImplementedError(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=n.shape.slice(-1)[0],o=e.shape.slice(-2)[0];if(r!==o)throw new NotImplementedError(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return matMul({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?reshapeBias(n.rank,s,imageDataFormat()):null,activation:t});{const r=n.shape.slice(),o=r.pop();n=n.reshape([-1,o]);const i=e.shape.slice(),c=i.pop(),a=i.pop(),l=[...i,c],d=Array.from({length:e.rank},(h,g)=>g===0?e.rank-2:g<=e.rank-2?g-1:g);e=e.transpose(d).reshape([a,-1]);const f=[...r,...l];return matMul({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?reshapeBias(n.rank,s,imageDataFormat()):null,activation:t}).reshape(f)}}function gather(n,e,t){return tidy(()=>(Array.isArray(e)?e=tensor1d(e,"int32"):e=e.toInt(),gather$1(n,e,t)))}function square$1(n){return mul(n,n)}function reshapeBias(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new ValueError(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?e.reshape([1,s[0],1,1,1]):e.reshape([1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?e.reshape([1,1,1,1,s[0]]):e.reshape([1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?e.reshape([1,s[0],1,1]):e.reshape([1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?e.reshape([1,1,1,s[0]]):e.reshape([1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?e.reshape([1,s[0],1]):e.reshape([1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?e.reshape([1,1,s[0]]):e.reshape([1].concat(s))}else if(n<3)return e;throw new ValueError(`Unsupported input rank by biasAdd: ${e.rank}`)}function biasAdd(n,e,t){return tidy(()=>(t==null&&(t=imageDataFormat()),checkDataFormat(t),n.add(reshapeBias(n.rank,e,t))))}function elu$3(n,e=1){if(e!==1)throw new NotImplementedError(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return elu$4(n)}function softsign(n){return tidy(()=>div$1(n,abs$2(n).add(1)))}function dropout$1(n,e,t,s){return tidy(()=>dropout$2(n,e,t,s))}function hardSigmoid(n){return tidy(()=>{const e=add$2(.5,mul(.2,n));return clipByValue$1(e,0,1)})}function inTrainPhase(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const VALID_FAN_MODE_VALUES=["fanIn","fanOut","fanAvg"],VALID_DISTRIBUTION_VALUES=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function checkFanMode(n){checkStringTypeUnionValue(VALID_FAN_MODE_VALUES,"FanMode",n)}function checkDistribution(n){checkStringTypeUnionValue(VALID_DISTRIBUTION_VALUES,"Distribution",n)}class Initializer extends Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Zeros extends Initializer{apply(e,t){return zeros$2(e,t)}}Zeros.className="Zeros";registerClass(Zeros);class Ones extends Initializer{apply(e,t){return ones$1(e,t)}}Ones.className="Ones";registerClass(Ones);class Constant extends Initializer{constructor(e){if(super(),typeof e!="object")throw new ValueError(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new ValueError(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return tidy(()=>mul(scalar(this.value),ones$1(e,t)))}getConfig(){return{value:this.value}}}Constant.className="Constant";registerClass(Constant);class RandomUniform extends Initializer{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return randomUniform$1(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}RandomUniform.className="RandomUniform";registerClass(RandomUniform);class RandomNormal extends Initializer{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new NotImplementedError(`randomNormal does not support dType ${t}.`);return randomNormal$1(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}RandomNormal.className="RandomNormal";registerClass(RandomNormal);class TruncatedNormal extends Initializer{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new NotImplementedError(`truncatedNormal does not support dType ${t}.`);return truncatedNormal$1(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}TruncatedNormal.className="TruncatedNormal";registerClass(TruncatedNormal);class Identity extends Initializer{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return tidy(()=>{if(e.length!==2||e[0]!==e[1])throw new ValueError("Identity matrix initializer can only be used for 2D square matrices.");return mul(this.gain,eye(e[0]))})}getConfig(){return{gain:this.gain}}}Identity.className="Identity";registerClass(Identity);function computeFans(n,e="channelsLast"){let t,s;if(checkDataFormat(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const r=arrayProd(n,2);t=n[1]*r,s=n[0]*r}else if(e==="channelsLast"){const r=arrayProd(n,0,n.length-2);t=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=arrayProd(n);t=Math.sqrt(r),s=Math.sqrt(r)}return[t,s]}class VarianceScaling extends Initializer{constructor(e){if(super(),e.scale<0)throw new ValueError(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,checkFanMode(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,checkDistribution(this.distribution),this.seed=e.seed}apply(e,t){const s=computeFans(e),r=s[0],o=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,r):this.mode==="fanOut"?i/=Math.max(1,o):i/=Math.max(1,(r+o)/2),this.distribution==="normal"){const c=Math.sqrt(i);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new NotImplementedError(`${this.getClassName()} does not support dType ${t}.`);return truncatedNormal$1(e,0,c,t,this.seed)}else{const c=Math.sqrt(3*i);return randomUniform$1(e,-c,c,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}VarianceScaling.className="VarianceScaling";registerClass(VarianceScaling);class GlorotUniform extends VarianceScaling{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}GlorotUniform.className="GlorotUniform";registerClass(GlorotUniform);class GlorotNormal extends VarianceScaling{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}GlorotNormal.className="GlorotNormal";registerClass(GlorotNormal);class HeNormal extends VarianceScaling{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}HeNormal.className="HeNormal";registerClass(HeNormal);class HeUniform extends VarianceScaling{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}HeUniform.className="HeUniform";registerClass(HeUniform);class LeCunNormal extends VarianceScaling{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}LeCunNormal.className="LeCunNormal";registerClass(LeCunNormal);class LeCunUniform extends VarianceScaling{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return VarianceScaling.className}}LeCunUniform.className="LeCunNormal";registerClass(LeCunUniform);class Orthogonal extends Initializer{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new NotImplementedError("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return tidy(()=>{if(e.length<2)throw new NotImplementedError("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const s=e[0]>e[1]?[e[1],e[0]]:e,r=randomNormal$1(s,0,1,"float32");let o=linalg.gramSchmidt(r);return e[0]>e[1]&&(o=o.transpose()),mul(this.gain,o)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Orthogonal.className="Orthogonal";registerClass(Orthogonal);const INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function deserializeInitializer(n,e={}){return deserializeKerasObject(n,SerializationMap.getMap().classNameMap,e,"initializer")}function serializeInitializer(n){return serializeKerasObject(n)}function getInitializer(n){if(typeof n=="string"){const e=n in INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP?INITIALIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[n]:n;if(e==="GlorotNormal")return new GlorotNormal;if(e==="GlorotUniform")return new GlorotUniform;if(e==="HeNormal")return new HeNormal;if(e==="HeUniform")return new HeUniform;if(e==="LeCunNormal")return new LeCunNormal;if(e==="LeCunUniform")return new LeCunUniform;{const t={};return t.className=e,t.config={},deserializeInitializer(t)}}else return n instanceof Initializer?n:deserializeInitializer(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zeros$1(){return new Zeros}function ones(){return new Ones}function constant(n){return new Constant(n)}function randomUniform(n){return new RandomUniform(n)}function randomNormal(n){return new RandomNormal(n)}function truncatedNormal(n){return new TruncatedNormal(n)}function identity$2(n){return new Identity(n)}function varianceScaling(n){return new VarianceScaling(n)}function glorotUniform(n){return new GlorotUniform(n)}function glorotNormal(n){return new GlorotNormal(n)}function heNormal(n){return new HeNormal(n)}function heUniform(n){return new HeUniform(n)}function leCunNormal(n){return new LeCunNormal(n)}function leCunUniform(n){return new LeCunUniform(n)}function orthogonal(n){return new Orthogonal(n)}const exports_initializers=Object.freeze(Object.defineProperty({__proto__:null,constant,glorotNormal,glorotUniform,heNormal,heUniform,identity:identity$2,leCunNormal,leCunUniform,ones,orthogonal,randomNormal,randomUniform,truncatedNormal,varianceScaling,zeros:zeros$1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let _nextUniqueTensorId=0;function getNextUniqueTensorId(){return _nextUniqueTensorId++}const _uidPrefixes={};function getUid(n=""){return n in _uidPrefixes||(_uidPrefixes[n]=0),_uidPrefixes[n]+=1,n+_uidPrefixes[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isArrayOfShapes(n){return Array.isArray(n)&&Array.isArray(n[0])}function normalizeShapeList(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function getExactlyOneTensor(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new ValueError(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function getExactlyOneShape(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new ValueError(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function countParamsInWeights(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,r)=>s*r);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const DEFAULT_VARIABLE_NAME_PREFIX="Variable";class LayerVariable{constructor(e,t="float32",s=DEFAULT_VARIABLE_NAME_PREFIX,r=!0,o=null){this.dtype=t??"float32",this.shape=e.shape,this.id=getNextUniqueTensorId(),s=s??DEFAULT_VARIABLE_NAME_PREFIX,this.originalName=getScopedTensorName(s),this.name=getUniqueTensorName(this.originalName),this.trainable_=r,this.constraint=o,this.val=variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),checkShapesMatch(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function checkShapesMatch(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function batchGetValue(n){return n.map(e=>e.read())}function batchSetValue(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class InputSpec{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class SymbolicTensor{constructor(e,t,s,r,o,i,c){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=c,this.id=getNextUniqueTensorId(),i!=null&&(this.originalName=getScopedTensorName(i),this.name=getUniqueTensorName(this.originalName)),this.rank=t.length}}let _nextNodeID=0;class Node{constructor(e,t){this.callArgs=t,this.id=_nextNodeID++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s!=null&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let _nextLayerID=0;class Layer extends Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=_nextLayerID++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=toSnakeCase(s)+"_"+getUid(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let o=null;e.batchSize!=null&&(o=e.batchSize),s=[o].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new RuntimeError(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ValueError(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return singletonOrArray(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return singletonOrArray(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new AttributeError(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new AttributeError(`Layer ${this.name} is not connected, no input to return.`);return singletonOrArray(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new AttributeError(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new AttributeError(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return singletonOrArray(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=toList(e),this.inputSpec==null||this.inputSpec.length===0)return;const t=toList(this.inputSpec);if(e.length!==t.length)throw new ValueError(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let s=0;s<e.length;s++){const r=e[s],o=t[s];if(o==null)continue;const i=r.rank;if(o.ndim!=null&&i!==o.ndim)throw new ValueError(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${i}`);if(o.maxNDim!=null&&i>o.maxNDim)throw new ValueError(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${i}`);if(o.minNDim!=null&&i<o.minNDim)throw new ValueError(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${i}.`);if(o.dtype!=null&&r.dtype!==o.dtype)throw new ValueError(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${r.dtype}.`);if(o.axes){const c=r.shape;for(const a in o.axes){const l=Number(a),d=o.axes[a],f=l>=0?c[l]:c[c.length+l];if(d!=null&&[d,null].indexOf(f)===-1)throw new ValueError(`Input ${s} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${d} but got shape ${c}.`)}}if(o.shape!=null)for(let c=0;c<o.shape.length;++c){const a=o.shape[c],l=r.shape[c];if(a!=null&&l!=null&&a!==l)throw new ValueError(`Input ${s} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=toList(e);let r=!0;for(const i of s)if(!(i instanceof SymbolicTensor)){r=!1;break}let o=!0;for(const i of s)if(i instanceof SymbolicTensor){o=!1;break}if(r===o)throw new ValueError("Arguments to apply() must be all SymbolicTensors or all Tensors");return nameScope(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const i=[];for(const c of toList(e))i.push(c.shape);this.build(singletonOrArray(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let i=this.call(e,t);const c=toList(i),a=[];for(let l of c)s.indexOf(l)!==-1&&(l=l.clone()),a.push(l);if(i=singletonOrArray(a),this.activityRegularizer!=null)throw new NotImplementedError("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=collectInputShape(e),c=this.computeOutputShape(i);let a;const l=guessOutputDType(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?i[0]:i),c!=null&&c.length>0&&Array.isArray(c[0])?a=c.map((d,f)=>new SymbolicTensor(l,d,this,toList(e),t,this.name,f)):a=new SymbolicTensor(l,c,this,toList(e),t,this.name),this.addInboundNode(e,a,null,null,i,c,t),this._refCount++,this.activityRegularizer!=null)throw new NotImplementedError("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new AttributeError(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new AttributeError(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new RuntimeError(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return countParamsInWeights(this.weights)}build(e){this.built=!0}getWeights(e=!1){return batchGetValue(e?this.trainableWeights:this.weights)}setWeights(e){tidy(()=>{const t=this.weights;if(t.length!==e.length)throw new ValueError(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],r=batchGetValue(t);for(let o=0;o<r.length;++o){const i=r[o],c=t[o],a=e[o];if(!arraysEqual(i.shape,a.shape))throw new ValueError(`Layer weight shape ${i.shape} not compatible with provided weight shape ${a.shape}`);s.push([c,a])}batchSetValue(s)})}addWeight(e,t,s,r,o,i,c){if(this._addedWeightNames.indexOf(e)!==-1)throw new ValueError(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=getInitializer("zeros"));const a=r.apply(t,s),l=new LayerVariable(a,s,e,i,c);return a.dispose(),o!=null&&this.addLoss(()=>o.apply(l.read())),i==null&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=toList(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,s,r,o,i,c=null){const a=toList(e);t=toList(t),s=toList(s),r=toList(r),o=normalizeShapeList(o),i=normalizeShapeList(i);const l=[],d=[],f=[];for(const y of a)l.push(y.sourceLayer),d.push(y.nodeIndex),f.push(y.tensorIndex);new Node({outboundLayer:this,inboundLayers:l,nodeIndices:d,tensorIndices:f,inputTensors:a,outputTensors:t,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:i},c);for(let y=0;y<t.length;y++)t[y].sourceLayer=this,t[y].nodeIndex=this.inboundNodes.length-1,t[y].tensorIndex=y}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function collectInputShape(n){n=toList(n);const e=[];for(const t of n)e.push(t.shape);return singletonOrArray(e)}function guessOutputDType(n){return"float32"}function getSourceInputs(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const i=s.inputTensors[o],c=s.inboundLayers[o],a=s.nodeIndices[o],l=getSourceInputs(i,c,a);for(const d of l)r.indexOf(d)===-1&&r.push(d)}return r}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class InputLayer extends Layer{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:getUid("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new ValueError("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new ValueError("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new ValueError("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const r=new SymbolicTensor(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ValueError(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}InputLayer.className="InputLayer";registerClass(InputLayer);function Input(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new ValueError("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new InputLayer({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function resolveScalarsInLogs(n){if(n==null)return;const e=[],t=[],s=[];for(const r in n){const o=n[r];if(typeof o!="number"){const i=o;e.push(i.data()),t.push(r),s.push(i)}}if(e.length>0){const r=await Promise.all(e);for(let o=0;o<r.length;++o)n[t[o]]=r[o][0];dispose(s)}}function disposeTensorsInLogs(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var ModelLoggingVerbosity;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(ModelLoggingVerbosity||(ModelLoggingVerbosity={}));const DEFAULT_YIELD_EVERY_MS=125;class BaseCallback{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class CallbackList{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class BaseLogger extends BaseCallback{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const r in t){const o=t[r];if(typeof o=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+o*s;else{let i;r in this.totals?i=this.totals[r]:this.totals[r]=0;const c=tidy(()=>add$2(this.totals[r],mul(o,s)));this.totals[r]=c,i!=null&&i.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:tidy(()=>{const r=mul(div$1(1,this.seen),this.totals[s]);t[s]=r,this.totals[s].dispose(),keep(t[s])}))}}class History extends BaseCallback{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const o in this.history){const i=this.history[o];for(let c=0;c<i.length;++c)if(typeof i[c]!="number"){const a=i[c];e.push(a.data()),t.push(o),s.push(c)}}const r=await Promise.all(e);for(let o=0;o<r.length;++o)this.history[t[o]][s[o]].dispose(),this.history[t[o]][s[o]]=r[o][0]}}class CustomCallback extends BaseCallback{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=DEFAULT_YIELD_EVERY_MS),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");isNumber(this.yieldEvery)&&(this.maybeWait=debounce(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const r=[];this.yield!=null&&(await resolveScalarsInLogs(s),r.push(this.yield(e,t,s))),r.push(nextFrame()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await resolveScalarsInLogs(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await resolveScalarsInLogs(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(nextFrame()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await resolveScalarsInLogs(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await resolveScalarsInLogs(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(nextFrame()):isNumber(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await resolveScalarsInLogs(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await resolveScalarsInLogs(e),await this.trainEnd(e))}}function standardizeCallbacks(n,e){return n==null&&(n={}),n instanceof BaseCallback?[n]:Array.isArray(n)&&n[0]instanceof BaseCallback?n:toList(n).map(s=>new CustomCallback(s,e))}class CallbackConstructorRegistry{constructor(){}static registerCallbackConstructor(e,t){assert$1(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),CallbackConstructorRegistry.checkForDuplicate(t),CallbackConstructorRegistry.constructors[e]==null&&(CallbackConstructorRegistry.constructors[e]=[]),CallbackConstructorRegistry.constructors[e].push(t)}static checkForDuplicate(e){for(const t in CallbackConstructorRegistry.constructors)CallbackConstructorRegistry.constructors[+t].forEach(r=>{if(r===e)throw new ValueError("Duplicate callback constructor.")})}static clear(){CallbackConstructorRegistry.constructors={}}static createCallbacks(e){const t=[];for(const s in CallbackConstructorRegistry.constructors){const r=+s;e>=r&&t.push(...CallbackConstructorRegistry.constructors[r])}return t.map(s=>new s)}}CallbackConstructorRegistry.constructors={};function configureCallbacks(n,e,t,s,r,o,i,c,a){const l=new History,d=[new BaseLogger,...CallbackConstructorRegistry.createCallbacks(e)];n!=null&&d.push(...n),d.push(l);const f=new CallbackList(d);return f.setParams({epochs:t,initialEpoch:s,samples:r,steps:o,batchSize:i,verbose:e,doValidation:c,metrics:a}),{callbackList:f,history:l}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function deserialize(n,e={},t=!1){return deserializeKerasObject(n,SerializationMap.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function l2Normalize(n,e){return tidy(()=>{n.dtype!=="float32"&&(n=n.asType("float32"));const t=sum$2(square$1(n),e,!0),s=fill$2(t.shape,epsilon$1()),r=sqrt$2(maximum$3(t,s));return div$1(n,r)})}function meanSquaredError$1(n,e){return tidy(()=>mean$1(square$1(sub$2(e,n)),-1))}function meanAbsoluteError$1(n,e){return tidy(()=>mean$1(abs$2(sub$2(e,n)),-1))}function meanAbsolutePercentageError$1(n,e){return tidy(()=>{const t=sub$2(n,e),s=clipByValue$1(abs$2(n),epsilon$1(),Number.MAX_VALUE),r=abs$2(div$1(t,s));return mul(100,mean$1(r,-1))})}function meanSquaredLogarithmicError(n,e){return tidy(()=>{const t=clipByValue$1(e,epsilon$1(),Number.MAX_VALUE),s=log$3(add$2(1,t)),r=clipByValue$1(n,epsilon$1(),Number.MAX_VALUE),o=log$3(add$2(1,r));return mean$1(square$1(sub$2(s,o)),-1)})}function squaredHinge(n,e){return tidy(()=>{const t=maximum$3(0,sub$2(1,mul(n,e)));return mean$1(square$1(t),-1)})}function hinge(n,e){return tidy(()=>{const t=maximum$3(0,sub$2(1,mul(n,e)));return mean$1(t,-1)})}function categoricalHinge(n,e){return tidy(()=>{const t=sum$2(mul(n,e),-1),s=max$3(mul(sub$2(1,n),e),-1);return maximum$3(0,add$2(1,sub$2(s,t)))})}function logcosh(n,e){return tidy(()=>{const t=Math.log(2),s=sub$2(e,n),r=sub$2(add$2(s,softplus$2(mul(-2,s))),t);return mean$1(r,-1)})}function categoricalCrossentropy$2(n,e,t=!1){return tidy(()=>{if(t)e=softmax$3(e);else{const s=sum$2(e,e.shape.length-1,!0);e=div$1(e,s)}return e=clipByValue$1(e,epsilon$1(),1-epsilon$1()),neg$2(sum$2(mul(n.toFloat(),log$3(e)),e.shape.length-1))})}function sparseCategoricalCrossentropy$1(n,e,t=!1){return tidy(()=>{const s=floor$2(flatten$1(n)).toInt();e=clipByValue$1(e,epsilon$1(),1-epsilon$1());const r=e.shape,o=oneHot$2(s,r[r.length-1]).reshape(r);return categoricalCrossentropy$2(o,e,t)})}function sigmoidCrossEntropyWithLogits(n,e){if(!arraysEqual(n.shape,e.shape))throw new ValueError(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return tidy(()=>{const t=e.relu(),s=e.abs().neg();return t.sub(e.mul(n)).add(s.exp().log1p())})}function binaryCrossentropy$2(n,e){return tidy(()=>{let t;return t=clipByValue$1(e,epsilon$1(),1-epsilon$1()),t=log$3(div$1(t,sub$2(1,t))),mean$1(sigmoidCrossEntropyWithLogits(n,t),-1)})}function kullbackLeiblerDivergence(n,e){return tidy(()=>{const t=clipByValue$1(n,epsilon$1(),1),s=clipByValue$1(e,epsilon$1(),1);return sum$2(mul(n,log$3(div$1(t,s))),-1)})}function poisson(n,e){return tidy(()=>{const t=log$3(add$2(epsilon$1(),e));return mean$1(sub$2(e,mul(n,t)),-1)})}function cosineProximity$1(n,e){return tidy(()=>{const t=l2Normalize(n,-1),s=l2Normalize(e,-1),r=mul(t,s);return neg$2(sum$2(r,-1))})}const lossesMap={meanSquaredError:meanSquaredError$1,meanAbsoluteError:meanAbsoluteError$1,meanAbsolutePercentageError:meanAbsolutePercentageError$1,meanSquaredLogarithmicError,squaredHinge,hinge,categoricalHinge,logcosh,categoricalCrossentropy:categoricalCrossentropy$2,sparseCategoricalCrossentropy:sparseCategoricalCrossentropy$1,binaryCrossentropy:binaryCrossentropy$2,kullbackLeiblerDivergence,poisson,cosineProximity:cosineProximity$1};function get$1(n){if(typeof n=="string"){if(n in lossesMap)return lossesMap[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ValueError(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function binaryAccuracy$1(n,e){return tidy(()=>{const t=mul(.5,onesLike$2(e)),s=cast$2(greater$3(e,t),n.dtype);return mean$1(equal$2(n,s),-1)})}function categoricalAccuracy$1(n,e){return tidy(()=>cast$2(equal$2(argMax$2(n,-1),argMax$2(e,-1)),"float32"))}function truePositives(n,e){return tidy(()=>logicalAnd$2(n.equal(1),e.equal(1)).sum().cast("float32"))}function falseNegatives(n,e){return tidy(()=>logicalAnd$2(n.equal(1),e.equal(0)).sum().cast("float32"))}function falsePositives(n,e){return tidy(()=>logicalAnd$2(n.equal(0),e.equal(1)).sum().cast("float32"))}function precision$1(n,e){return tidy(()=>{const t=truePositives(n,e),s=falsePositives(n,e),r=t.add(s);return where(greater$3(r,0),t.div(r),0).cast("float32")})}function recall$1(n,e){return tidy(()=>{const t=truePositives(n,e),s=falseNegatives(n,e),r=t.add(s);return where(greater$3(r,0),t.div(r),0).cast("float32")})}function binaryCrossentropy$1(n,e){return binaryCrossentropy$2(n,e)}function sparseCategoricalAccuracy$1(n,e){return n.rank===e.rank&&(n=n.squeeze([n.rank-1])),e=e.argMax(-1),e.dtype!==n.dtype&&(e=e.asType(n.dtype)),equal$2(n,e).asType("float32")}const mse$1=meanSquaredError$1,MSE$1=meanSquaredError$1,mae=meanAbsoluteError$1,MAE=meanAbsoluteError$1,mape$1=meanAbsolutePercentageError$1,MAPE$1=meanAbsolutePercentageError$1,categoricalCrossentropy$1=categoricalCrossentropy$2,cosine=cosineProximity$1,sparseCategoricalCrossentropy=sparseCategoricalCrossentropy$1,metricsMap={binaryAccuracy:binaryAccuracy$1,categoricalAccuracy:categoricalAccuracy$1,precision:precision$1,categoricalCrossentropy:categoricalCrossentropy$1,sparseCategoricalCrossentropy,mse:mse$1,MSE:MSE$1,mae,MAE,mape:mape$1,MAPE:MAPE$1,cosine};function get(n){if(typeof n=="string"&&n in metricsMap)return metricsMap[n];if(typeof n!="string"&&n!=null)return n;throw new ValueError(`Unknown metric ${n}`)}function getLossOrMetricName(n){if(assert(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(lossesMap))if(lossesMap[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(metricsMap))if(metricsMap[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function getOptimizer(n){const e={Adagrad:()=>train.adagrad(.01),Adadelta:()=>train.adadelta(1,.95,epsilon$1()),Adam:()=>train.adam(.001,.9,.999,epsilon$1()),Adamax:()=>train.adamax(.002,.9,.999,epsilon$1(),0),RMSProp:()=>train.rmsprop(.001,.9,0,epsilon$1()),SGD:()=>train.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new ValueError(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH=1*1024*1024;function checkUserDefinedMetadata(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!plainObjectCheck(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${MAX_USER_DEFINED_METADATA_SERIALIZED_LENGTH}.`)}}function plainObjectCheck(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!plainObjectCheck(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!plainObjectCheck(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function printSummary(n,e,t,s=console.log){const r=isModelSequentialLike(n),o=["Layer (type)","Output shape","Param #"];r?(e=e||65,t=t||[.45,.85,1]):(e=e||98,t=t||[.33,.55,.67,1]),t[t.length-1]<=1&&(t=t.map(d=>Math.floor(e*d)));let i;if(!r){o.push("Receives inputs"),i=[];for(const d in n.nodesByDepth)i.push(...n.nodesByDepth[d])}s("_".repeat(e)),printRow(o,t,s),s("=".repeat(e));const c=n.layers;for(let d=0;d<c.length;++d)r?printLayerSummary(c[d],t,s):printLayerSummaryWithConnections(c[d],t,i,s),s((d===c.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const a=countTrainableParams(n),l=countParamsInWeights(n.nonTrainableWeights);s(`Total params: ${a+l}`),s(`Trainable params: ${a}`),s(`Non-trainable params: ${l}`),s("_".repeat(e))}function countTrainableParams(n){let e;return n.collectedTrainableWeights!=null?e=countParamsInWeights(n.collectedTrainableWeights):e=countParamsInWeights(n.trainableWeights),e}function isModelSequentialLike(n){let e=!0;const t=[],s=[];for(const r in n.nodesByDepth)t.push(n.nodesByDepth[r]);for(const r of t){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of n.layers){let o=!1;for(const i of r.inboundNodes)if(s.indexOf(i)!==-1)if(o){e=!1;break}else o=!0;if(!e)break}return e}function printRow(n,e,t=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);t(s)}function printLayerSummary(n,e,t){let s;try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const r=n.name,o=n.getClassName(),i=[`${r} (${o})`,s,n.countParams().toString()];printRow(i,e,t)}function printLayerSummaryWithConnections(n,e,t,s){let r;try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const o=[];for(const d of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(d)===-1))for(let f=0;f<d.inboundLayers.length;++f){const y=d.inboundLayers[f].name,m=d.nodeIndices[f],h=d.tensorIndices[f];o.push(`${y}[${m}][${h}]`)}const i=n.name,c=n.getClassName(),a=o.length===0?"":o[0],l=[`${i} (${c})`,r,n.countParams().toString(),a];printRow(l,e,s);for(let d=1;d<o.length;++d)printRow(["","","",o[d]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isArrayItemInputOrOutputName(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function convertPythonicToTs(n,e){if(n===null)return null;if(typeof n=="string")return toCamelCase(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];isArrayItemInputOrOutputName(e,r,o)?t.push(o):t.push(convertPythonicToTs(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")t[s]=r;else{const o=toCamelCase(s);t[o]=convertPythonicToTs(r,o)}}return t}}function convertTsToPythonic(n,e){if(n==null)return null;if(typeof n=="string")return toSnakeCase(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];isArrayItemInputOrOutputName(e,r,o)?t.push(o):t.push(convertTsToPythonic(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s],o=toSnakeCase(s);(s==="name"||s==="className")&&typeof r=="string"?t[o]=r:t[o]=convertTsToPythonic(r,s)}return t}}/** @license See the LICENSE file. */const version$6="2.8.6";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function assertFeedCompatibility(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return cast$3(e,n.dtype)}catch{throw new ValueError(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class FeedDict{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof FeedDict)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=assertFeedCompatibility(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new ValueError(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof SymbolicTensor){if(this.id2Value[e.id]==null)throw new ValueError(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new ValueError(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof SymbolicTensor){if(this.id2Value[e.id]==null)throw new ValueError(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new ValueError(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&dispose(this.id2Mask)}}const cachedSorted={},cachedRecipientCounts={};function execute(n,e,t,s){const r=t==null?!1:t.training,o=Array.isArray(n),i=o?n:[n],c=i.map(h=>h.name),a=[],l=e.names();for(const h of c)l.indexOf(h)!==-1?a.push(e.getValue(h)):a.push(null);const d=c.join(",")+"|"+e.names().join(",");let f,y;if(cachedSorted[d]==null){const h=getTopologicalSortAndRecipientCounts(i,e);f=h.sorted,y=h.recipientCounts,cachedSorted[d]=f,cachedRecipientCounts[d]=y}f=cachedSorted[d],y={},r||Object.assign(y,cachedRecipientCounts[d]);const m=new FeedDict(e);for(let h=0;h<f.length;++h){const g=f[h],x=g.sourceLayer;if(x instanceof InputLayer)continue;const w=[],I=[],N=[];let A=!1;for(const G of g.inputs){const U=m.getValue(G),Q=m.getMask(G);w.push(U),I.push(Q),Q!=null&&(A=!0),r||(y[G.name]--,y[G.name]===0&&!e.hasKey(G)&&c.indexOf(G.name)===-1&&!U.isDisposed&&G.sourceLayer.stateful!==!0&&N.push(U))}A&&(t=t||{},t.mask=I[0]);const T=toList(x.apply(w,t));let P=null;x.supportsMasking&&(P=x.computeMask(w,I));const O=getNodeOutputs(g),F=Array.isArray(O)?O:[O];for(let G=0;G<F.length;++G){m.hasKey(F[G])||m.add(F[G],T[G],Array.isArray(P)?P[0]:P);const U=c.indexOf(F[G].name);U!==-1&&(a[U]=T[G])}r||dispose(N)}return m.disposeMasks(),o?a:a[0]}function getTopologicalSortAndRecipientCounts(n,e){assert$1(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const r=getTopologicalSortAndRecipientCountsForOneFetch(n[0],e);t=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of n){const{sorted:i,recipientMap:c}=getTopologicalSortAndRecipientCountsForOneFetch(o,e);for(const a of i)r.has(a.name)||(t.push(a),r.add(a.name));for(const a in c)s[a]==null&&(s[a]=new Set),c[a].forEach(l=>s[a].add(l))}}return{sorted:t,recipientCounts:recipientMap2Counts(s)}}function recipientMap2Counts(n){const e={};for(const t in n)e[t]=n[t].size;return e}function getTopologicalSortAndRecipientCountsForOneFetch(n,e){const t=new Set,s=[],r={};for(const c of e.names())t.add(c);const o=[],i=[];for(o.push(n);o.length>0;){const c=o[o.length-1];if(t.has(c.name)){o.pop();continue}const a=i[i.length-1]===o.length-1;if(c.inputs.length===0||a)o.pop(),s.push(c),t.add(c.name),a&&i.pop();else{i.push(o.length-1);for(const l of c.inputs)r[l.name]==null&&(r[l.name]=new Set),r[l.name].add(c.name),!t.has(l.name)&&o.push(l)}}return{sorted:s,recipientMap:r}}function getNodeOutputs(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Container extends Layer{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const I=this.getClassName().toLowerCase();this.name=getUid(I)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],unique$2(this.inputs).length!==this.inputs.length)throw new ValueError(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(I=>I.name)}`);unique$2(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(I=>I.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const I of this.outputs){const N=I.sourceLayer,A=I.nodeIndex,T=I.tensorIndex;this.outputLayers.push(N),this.outputLayersNodeIndices.push(A),this.outputLayersTensorIndices.push(T)}for(const I of this.inputs){const N=I.sourceLayer,A=I.nodeIndex,T=I.tensorIndex;assert(A===0,"input layer has >1 nodes"),assert(T===0,"input layer has >1 tensors"),this.inputLayers.push(N),this.inputLayersNodeIndices.push(A),this.inputLayersTensorIndices.push(T)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let I=0;I<this.inputLayers.length;I++){const N=this.inputLayers[I];if(!(N instanceof InputLayer))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${I} (0-based) originates from layer type ${N.getClassName()}.`);this.inputNames.push(N.name),this.feedInputShapes.push(N.batchInputShape),this.feedInputNames.push(N.name)}for(const I of this.outputLayers)this.outputNames.push(I.name);this.internalInputShapes=this.inputs.map(I=>I.shape),this.internalOutputShapes=this.outputs.map(I=>I.shape);const t={},s={},r={},o={},i={},c=[],a=(I,N,A,T,P,O)=>{(T==null||P==null||O==null)&&(T=I.sourceLayer,P=I.nodeIndex,O=I.tensorIndex);const F=T.inboundNodes[P];if(A.indexOf(F)!==-1)throw new RuntimeError(`The tensor ${I.name} at layer "${T.name}" is part of a cycle.`);if(N.indexOf(F)!==-1)return;this.containerNodes.add(Container.nodeKey(T,P)),T.id in i||(i[T.id]=Object.keys(i).length),A.indexOf(F)===-1&&A.push(F);const G=F.inboundLayers.length;for(let U=0;U<G;U++){const Q=F.inputTensors[U],ne=F.inboundLayers[U],J=F.nodeIndices[U],oe=F.tensorIndices[U];a(Q,N,A,ne,J,oe)}for(N.push(F);A.indexOf(F)>=0;)A.splice(A.indexOf(F),1);c.push(F)},l=[],d=[];for(const I of this.outputs)a(I,l,d);const f=c.slice().reverse();for(const I of f){s[I.id]=I,I.id in t||(t[I.id]=0);let N=t[I.id];const A=r[I.outboundLayer.id]==null?0:r[I.outboundLayer.id];N=Math.max(N,A),r[I.outboundLayer.id]=N,o[I.outboundLayer.id]=I.outboundLayer,t[I.id]=N;for(let T=0;T<I.inboundLayers.length;T++){const P=I.inboundLayers[T],O=I.nodeIndices[T],F=P.inboundNodes[O],G=t[F.id]==null?0:t[F.id];t[F.id]=Math.max(N+1,G),s[F.id]=F}}const y={};for(const I in t){const N=t[I];N in y||(y[N]=[]),y[N].push(s[I])}const m={};for(const I in r){const N=r[I];N in m||(m[N]=[]),m[N].push(o[I])}let h=Object.keys(m).map(I=>parseInt(I,10)).sort(reverseNumberCompare);this.layers=[];for(const I of h){const N=m[I];N.sort((A,T)=>{const P=i[A.id],O=i[T.id];return P<O?-1:P>O?1:0});for(const A of N)A instanceof Container&&this.internalContainerRefs.push(A),this.layers.push(A)}this.layersByDepth=m,h=Object.keys(y).map(I=>parseInt(I,10)).sort(reverseNumberCompare);const g=this.inputs.slice(),x=[];for(const I of h)for(const N of y[I]){const A=N.outboundLayer;if(A!=null){for(const T of N.inputTensors)if(g.indexOf(T)===-1)throw new RuntimeError(`Graph disconnected: cannot obtain value for tensor ${T} at layer "${A.name}". The following previous layers were accessed without issue: ${x}`);for(const T of N.outputTensors)g.push(T);x.push(A.name)}}this.nodesByDepth=y;const w=this.layers.map(I=>I.name);for(const I of w){const N=w.filter(A=>A===I).length;if(N!==1)throw new RuntimeError(`The name "${I}" is used ${N} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(w))}this.outboundNodes=[],this.inboundNodes=[],new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(I=>null),outputMasks:this.outputs.map(I=>null),inputShapes:this.inputs.map(I=>I.shape),outputShapes:this.outputs.map(I=>I.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ValueError("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let r=0;for(const i of this.layers)for(const c of i.weights){if(s[c.originalName]!=null)throw new ValueError(`Duplicate weight name: ${c.originalName}`);s[c.originalName]=c,r++}const o=[];for(const i in e){let c=i;if(s[i]==null){const a=i.split("/");c=a.slice(0,-2).concat([a[a.length-1]]).join("/")}if(s[c]!=null)o.push([s[c],e[i]]);else if(t)throw new ValueError(`Provided weight data has no target variable: ${i}`);delete s[c]}if(t){const i=[];for(const c in s)i.push(c);if(i.length>0)throw new ValueError(`${i.length} of ${r} weights are not set: ${i}`)}batchSetValue(o)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${version$6}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=convertTsToPythonic(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return tidy(()=>{e=toList(e);const s=new FeedDict;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return execute(this.outputs,s,t)})}computeMask(e,t){return tidy(()=>{e=toList(e);let s;return t==null?s=pyListRepeat(null,e.length):s=toList(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=normalizeShapeList(e);if(t.length!==this.inputLayers.length)throw new ValueError(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let c=0;c<t.length;c++){const a=this.inputLayers[c],l=t[c],d=a.name+"_0_0";s[d]=l}const r=Object.keys(this.nodesByDepth).map(c=>parseInt(c,10)).sort(reverseNumberCompare);if(r.length>1)for(const c of r){const a=this.nodesByDepth[c];for(const l of a){const d=l.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(d.id)!==-1)continue;const f=[];for(let g=0;g<l.inboundLayers.length;g++){const x=l.inboundLayers[g],w=l.nodeIndices[g],I=l.tensorIndices[g],N=`${x.name}_${w}_${I}`,A=s[N];f.push(A)}const y=d.computeOutputShape(singletonOrArray(f)),m=normalizeShapeList(y),h=d.inboundNodes.indexOf(l);for(let g=0;g<m.length;g++){const x=`${d.name}_${h}_${g}`;s[x]=m[g]}}}const o=[],i=[];for(let c=0;c<this.outputLayers.length;c++){const a=this.outputLayers[c],l=this.outputLayersNodeIndices[c],d=this.outputLayersTensorIndices[c],f=`${a.name}_${l}_${d}`;i.push(f)}for(let c=0;c<i.length;c++){const a=i[c];assert(a in s),o.push(s[a])}return singletonOrArray(o)}runInternalGraph(e,t){t==null&&(t=pyListRepeat(null,e.length));const s={};for(let a=0;a<this.inputs.length;++a){const l=this.inputs[a],d=e[a],f=t[a];s[l.id]=[d,f]}const r=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(reverseNumberCompare);for(const a of r){const l=this.nodesByDepth[a];for(const d of l){const f=d.outboundLayer,y=d.inputTensors,m=d.outputTensors,h=new Array;for(const g of y)g.id in s&&h.push(s[g.id]);if(h.length===y.length){let g={},x,w,I,N;if(d.callArgs!=null&&(g=d.callArgs),h.length===1){const[A,T]=h[0];g.mask==null&&(g.mask=T),I=toList(f.call(A,g)),N=toList(f.computeMask(A,T)),x=[A],w=[T]}else x=h.map(A=>A[0]),w=h.map(A=>A[1]),g.mask==null&&(g.mask=w),I=toList(f.call(x,g)),N=toList(f.computeMask(x,w));if(f.activityRegularizer)throw new NotImplementedError("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let A=0;A<m.length;++A){const T=m[A],P=I[A],O=N[A];s[T.id]=[P,O]}}}}const o=[],i=[],c=[];for(const a of this.outputs){assert(a.id in s,`Could not compute output ${a.name} : ${a.id}`);const[l,d]=s[a.id];c.push(l.shape),o.push(l),i.push(d)}return[o,i,c]}buildNodeConversionMap(e){const t={};let s;for(const r of this.layers){s=r instanceof Container?1:0;for(let o=0;o<r.inboundNodes.length;o++){const i=Container.nodeKey(r,o);this.containerNodes.has(i)&&(t[i]=s,s+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new ValueError(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new ValueError("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===e)return s;throw new ValueError(`No such layer: ${e}`)}calculateLosses(){return tidy(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const r=Container.nodeKey(t,s);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const c=i.getClassName(),a=i.getConfig(),l=[];for(let f=0;f<i.inboundNodes.length;f++){const y=i.inboundNodes[f],m=Container.nodeKey(i,f);let h={};if(this.containerNodes.has(m)){if(y.callArgs)try{JSON.stringify(y.callArgs),h=y.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${y.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(y.inboundLayers.length>0){const g=[];for(let x=0;x<y.inboundLayers.length;x++){const w=y.inboundLayers[x],I=y.nodeIndices[x],N=y.tensorIndices[x],A=Container.nodeKey(w,I);let T=t[A];T==null&&(T=0),g.push([w.name,T,N,h])}l.push(g)}}}const d={};d.name=i.name,d.className=c,d.config=a,d.inboundNodes=l,s.push(d)}e.layers=s;const r=[];for(let i=0;i<this.inputLayers.length;i++){const c=this.inputLayers[i],a=this.inputLayersNodeIndices[i],l=Container.nodeKey(c,a);if(!this.containerNodes.has(l))continue;let d=t[l];d==null&&(d=0);const f=this.inputLayersTensorIndices[i];r.push([c.name,d,f])}e.inputLayers=r;const o=[];for(let i=0;i<this.outputLayers.length;i++){const c=this.outputLayers[i],a=this.outputLayersNodeIndices[i],l=Container.nodeKey(c,a);if(!this.containerNodes.has(l))continue;let d=t[l];d==null&&(d=0);const f=this.outputLayersTensorIndices[i];o.push([c.name,d,f])}return e.outputLayers=o,e}static fromConfig(e,t,s={},r=!1){const o={},i={};function c(x,w){x.name in i?i[x.name].push(w):i[x.name]=[w]}function a(x,w){const I=[];let N;for(const A of w){const T=A[0],P=A[1],O=A[2];if(N=A[3]==null?{}:A[3],!(T in o)){c(x,w);return}const F=o[T];if(F.inboundNodes.length<=P){c(x,w);return}const G=F.inboundNodes[P];I.push(G.outputTensors[O])}I.length>0&&x.apply(singletonOrArray(I),N)}function l(x){const w=x.name,I=deserialize(x,t.customObjects!=null?t.customObjects:{});I.setFastWeightInitDuringBuild(r),o[w]=I,x.inboundNodes.forEach(A=>{if(!(A instanceof Array))throw new ValueError(`Corrupted configuration, expected array for nodeData: ${A}`);c(I,A)})}const d=t.name,f=t.layers;for(const x of f)l(x);for(;!isObjectEmpty(i);)for(const x of f){const w=o[x.name];if(w.name in i){const I=i[w.name];delete i[w.name];for(const N of I)a(w,N)}}const y=[],m=[],h=t.inputLayers;for(const x of h){const w=x[0],I=x[1],N=x[2];assert(w in o);const T=o[w].inboundNodes[I].outputTensors;y.push(T[N])}const g=t.outputLayers;for(const x of g){const w=x[0],I=x[1],N=x[2];assert(w in o);const T=o[w].inboundNodes[I].outputTensors;m.push(T[N])}return new e({inputs:y,outputs:m,name:d})}get stateful(){if(this._stateful)throw new ValueError("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){tidy(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function standardizeSampleOrClassWeights(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return e.forEach(o=>{o in n?r.push(n[o]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function standardizeClassWeights(n,e){return standardizeSampleOrClassWeights(n,e,"classWeight")}async function standardizeWeights(n,e,t,s){if(t!=null){const r=tidy(()=>{if(n.shape.length===1)return n.clone();if(n.shape.length===2){if(n.shape[1]>1)return n.argMax(1);if(n.shape[1]===1)return n.reshape([n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await r.data());dispose(r);const i=[];return o.forEach(c=>{if(t[c]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${c} exists in the data but not in classWeight`);i.push(t[c])}),tensor1d(i,"float32")}else return null}function computeWeightedLoss(n,e){return mul(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const DEFAULT_VALIDATION_BATCH_SIZE=32;function standardizeDataIteratorOutput(n,e){let t,s;const r=e;t=r.xs,s=r.ys,assert$1(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const o=flattenTensorOrArrayOrMap("input",n.inputNames,t),i=flattenTensorOrArrayOrMap("output",n.outputNames,s),c=o[0].shape[0];assert$1(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),assert$1(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let a=0;a<o.length;a++)assert$1(o[a].shape[0]===c,()=>`Batch size mismatch: input ${n.inputNames[a]} has ${o[a].shape[0]}; expected  ${c} based on input ${n.inputNames[0]}.`);for(let a=0;a<i.length;a++)assert$1(i[a].shape[0]===c,()=>`Batch size mismatch: output ${n.outputNames[a]} has ${i[a].shape[0]}; expected  ${c} based on input ${n.inputNames[0]}.`);return{xs:o,ys:i}}function flattenTensorOrArrayOrMap(n,e,t){if(t instanceof Tensor)return[t];if(Array.isArray(t))return assert$1(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const r of e){if(t[r]==null)throw new ValueError(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(t[r])}return s}}function standardizeTensorValidationData(n){if(n.length===3)throw new NotImplementedError("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function fitDataset(n,e,t){const s=t.batchesPerEpoch!=null;if(assert$1(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),assert$1(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),assert$1(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),assert$1(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),assert$1(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=t.validationData!=null;let o,i;if(r)if(isDatasetObject(t.validationData))assert$1(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const x=standardizeTensorValidationData(t.validationData);o=x.xs,i=x.ys}const c=n.makeTrainFunction(),a=n.getDedupedMetricsNames();let l;r?l=a.slice().concat(a.map(x=>"val_"+x)):l=a.slice();const d=standardizeCallbacks(t.callbacks,t.yieldEvery),f=t.verbose==null?1:t.verbose,{callbackList:y,history:m}=configureCallbacks(d,f,t.epochs,null,null,getStepsPerEpoch(e,t),null,r,l);y.setModel(n),n.history=m,await y.onTrainBegin(),n.stopTraining_=!1;let h=t.initialEpoch==null?0:t.initialEpoch,g=await e.iterator();for(;h<t.epochs;){const x={};await y.onEpochBegin(h);let w=0,I=0;for(s||(g=await e.iterator());!s||w<t.batchesPerEpoch;){const N=await g.next();if(s&&N.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${w} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(N.value!=null){const{xs:A,ys:T}=standardizeDataIteratorOutput(n,N.value),P={};P.batch=I,P.size=A[0].shape[0],await y.onBatchBegin(I,P);const O=[];if(t.classWeight!=null){const U=standardizeClassWeights(t.classWeight,n.outputNames);for(let Q=0;Q<U.length;++Q)O.push(await standardizeWeights(T[Q],null,U[Q]))}const F=A.concat(T).concat(O),G=c(F);dispose(F);for(let U=0;U<a.length;++U){const Q=a[U],ne=G[U];P[Q]=ne,keep(ne)}await y.onBatchEnd(I,P),disposeTensorsInLogs(P),I++,w++}if(s?w>=t.batchesPerEpoch:N.done){if(r){let A;isDatasetObject(t.validationData)?A=toList(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):A=toList(n.evaluate(o,i,{batchSize:t.validationBatchSize==null?DEFAULT_VALIDATION_BATCH_SIZE:t.validationBatchSize,verbose:0}));for(let T=0;T<n.metricsNames.length;++T)x[`val_${n.metricsNames[T]}`]=A[T]}break}if(n.stopTraining_)break}if(await y.onEpochEnd(h,x),h++,n.stopTraining_)break}return await y.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function getStepsPerEpoch(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function isDatasetObject(n){return typeof n.iterator=="function"}function isLazyIteratorObject(n){return typeof n.next=="function"}async function evaluateDataset(n,e,t){t=t||{};const s=t.batches!=null,r=n.testFunction;let o=[];if(t.verbose>0)throw new NotImplementedError("Verbose mode is not implemented yet.");assert$1(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const i=isLazyIteratorObject(e)?e:await e.iterator();let c=0,a=0;for(;!s||a<t.batches;){const l=await i.next();if(o=tidy(()=>{if(l.value){const{xs:d,ys:f}=standardizeDataIteratorOutput(n,l.value),y=d.concat(f),m=tidy(()=>r(y));if(dispose(y),a===0)for(let g=0;g<m.length;++g)o.push(scalar(0));const h=y[0].shape[0];for(let g=0;g<m.length;++g){const x=m[g],w=o[g];o[g]=tidy(()=>add$2(o[g],mul(h,x))),a>0&&dispose(w)}dispose(m),c+=h,++a}return o}),l.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<o.length;++l){const d=o[l];o[l]=div$1(o[l],c),dispose(d)}return singletonOrArray(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function checkBatchSize(n){assert$1(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function sliceArrays(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>sliceAlongFirstAxis(s,e,t-e)):sliceAlongFirstAxis(n,e,t-e)}function sliceArraysByIndices(n,e){return tidy(()=>n==null?null:Array.isArray(n)?n.map(t=>sliceArraysByIndices(t,e)):gather(n,e.dtype==="int32"?e:e.toInt()))}function makeBatches(n,e){const t=[];let s=0,r=null;for(;s<n;)r=s+e,r>=n&&(r=n),t.push([s,r]),s=r;return t}async function fitLoop(n,e,t,s,r,o,i,c,a,l,d,f,y,m,h){r==null&&(r=32),o==null&&(o=1),d==null&&(d=!0),y==null&&(y=0);let g=!1;a!=null&&l!=null&&(g=!0);const x=n.checkNumSamples(t,r,m,"steps_per_epoch");let w;x!=null&&(w=range$2(0,x)),i==null&&(i=1);const{callbackList:I,history:N}=configureCallbacks(c,i,o,y,x,m,r,g,f);I.setModel(n),n.history=N,await I.onTrainBegin(),n.stopTraining_=!1;for(let A=y;A<o;++A){await I.onEpochBegin(A);const T={};{if(d==="batch")throw new NotImplementedError("batch shuffling is not implemneted yet");d&&shuffle(w);const P=tensor1d(w),O=makeBatches(x,r);for(let F=0;F<O.length;++F){const G={};if(await I.onBatchBegin(F,G),tidy(()=>{const U=O[F][0],Q=O[F][1],ne=sliceAlongFirstAxis(P,U,Q-U);G.batch=F,G.size=Q-U;const J=sliceArraysByIndices(t,ne),oe=e(J);for(let le=0;le<s.length;++le){const ge=s[le],te=oe[le];G[ge]=te,keep(te)}if(F===O.length-1&&g){const le=n.testLoop(a,l,r);for(let ge=0;ge<s.length;++ge){const te=s[ge],ce=le[ge];keep(ce),T["val_"+te]=ce}}}),await I.onBatchEnd(F,G),disposeTensorsInLogs(G),n.stopTraining_)break}P.dispose()}if(await I.onEpochEnd(A,T),n.stopTraining_)break}return await I.onTrainEnd(),await n.history.syncData(),n.history}async function fitTensors(n,e,t,s={}){if(n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;let r,o,i,c,a,l,d;try{const f=s.batchSize==null?32:s.batchSize;checkBatchSize(f);const m=await n.standardizeUserData(e,t,s.sampleWeight,s.classWeight,!1,f);r=m[0],o=m[1],d=m[2];let h=!1,g;if(s.validationData!=null&&s.validationData.length>0){if(h=!0,s.validationData.length===2)i=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new NotImplementedError("validationData including sample weights is not supported yet."):new ValueError(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const F=await n.standardizeUserData(i,c,null,null,!0,f);a=F[0],l=F[1],g=a.concat(l)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){h=!0;const O=Math.floor(r[0].shape[0]*(1-s.validationSplit)),F=r[0].shape[0];a=sliceArrays(r,O,F),r=sliceArrays(r,0,O),l=sliceArrays(o,O,F),o=sliceArrays(o,0,O),g=a.concat(l)}else s.validationSteps!=null&&(h=!0);const x=r.concat(o).concat(d);n.checkTrainableWeightsConsistency();const w=n.makeTrainFunction(),I=n.getDedupedMetricsNames();let N,A;h?(n.makeTestFunction(),N=n.testFunction,A=I.slice().concat(I.map(O=>"val_"+O))):(N=null,g=[],A=I.slice());const T=standardizeCallbacks(s.callbacks,s.yieldEvery);return await fitLoop(n,w,x,I,f,s.epochs,s.verbose,T,N,g,s.shuffle,A,s.initialEpoch,null,null)}finally{n.isTraining=!1,disposeNewTensors(r,e),disposeNewTensors(o,t),disposeNewTensors(a,i),disposeNewTensors(l,c),d!=null&&dispose(d)}}function ensureTensorsRank2OrHigher(n){const e=[];n instanceof Tensor&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(expandDims$2(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function disposeNewTensors(n,e){if(n==null)return;const t=[];if(e instanceof Tensor)t.push(e.id);else if(Array.isArray(e))e.forEach(r=>t.push(r.id));else if(e!=null)for(const r in e){const o=e[r];t.push(o.id)}const s=[];if(n instanceof Tensor)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{t.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const o=n[r];t.indexOf(o.id)===-1&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function isDataTensor(n){return n instanceof Tensor}function isDataArray(n){return Array.isArray(n)}function isDataDict(n){return!isDataTensor(n)&&!isDataArray(n)}function standardizeInputData(n,e,t,s=!0,r=""){if(e==null||e.length===0){if(n!=null){let i=!1;if(isDataArray(n)&&n.length>0)i=!0;else if(isDataDict(n)){for(const c in n)if(n.hasOwnProperty(c)){i=!0;break}}else i=!0;if(i)throw new ValueError(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(i=>null);let o;if(isDataDict(n)){n=n,o=[];for(const i of e){if(n[i]==null)throw new ValueError(`No data provided for "${i}". Need data for each key in: ${e}`);o.push(n[i])}}else if(isDataArray(n)){if(n=n,n.length!==e.length)throw new ValueError(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,e.length>1)throw new ValueError(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=ensureTensorsRank2OrHigher(o),t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const c=o[i];if(c.shape.length!==t[i].length)throw new ValueError(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s). but got array with shape ${c.shape}`);for(let a=0;a<t[i].length;++a){if(a===0&&!s)continue;const l=c.shape[a],d=t[i][a];if(d!=null&&d>=0&&l!==d)throw new ValueError(`Error when checking ${r}: expected ${e[i]} to have shape [${t[i]}], but got array with shape [${c.shape}].`)}}return o}function checkArrayLengths(n,e,t){const s=unique$2(n.map(o=>o.shape[0]));s.sort();const r=unique$2(e.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new ValueError(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(r.length>1)throw new ValueError(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!arraysEqual(s,r))throw new ValueError(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function checkLossAndTargetCompatibility(n,e,t){const s=[meanSquaredError$1,binaryCrossentropy$2,categoricalCrossentropy$2];for(let r=0;r<n.length;++r){const o=n[r],i=e[r],c=t[r];if(i!=null){if(i===categoricalCrossentropy$2&&o.shape[o.shape.length-1]===1)throw new ValueError(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const a=o.shape.slice(1),l=c.slice(1);for(let d=0;d<a.length;++d){const f=a[d],y=l[d];if(y!=null&&f!==y)throw new ValueError(`A target Tensor with shape ${o.shape} was passed for an output of shape ${c}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function checkInputData(n,e,t,s=!0,r=""){let o;if(Array.isArray(n)){if(n.length!==e.length)throw new ValueError(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(e.length>1)throw new ValueError(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(t!=null)for(let i=0;i<e.length;++i){if(t[i]==null)continue;const c=o[i];if(c.shape.length!==t[i].length)throw new ValueError(`Error when checking ${r}: expected ${e[i]} to have ${t[i].length} dimension(s), but got array with shape ${JSON.stringify(c.shape)}`);for(let a=0;a<t[i].length;++a){if(a===0&&!s)continue;const l=c.shape[a],d=t[i][a];if(d!=null&&d!==l)throw new ValueError(`Error when checking ${r}: expected ${e[i]} to have shape ${JSON.stringify(t[i])} but got array with shape ${JSON.stringify(c.shape)}.`)}}}function collectMetrics(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const r of e){let o=t.hasOwnProperty(r)?t[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}const LAYERS_MODEL_FORMAT_NAME="layers-model";class LayersModel extends Container{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new ValueError("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");printSummary(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=getOptimizer(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Optimizer))throw new ValueError("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const i in e.loss)if(this.outputNames.indexOf(i)===-1)throw new ValueError(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)e.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),t.push(get$1(e.loss[i]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ValueError(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(c=>get$1(c))}else{const i=get$1(e.loss);this.outputs.forEach(c=>{t.push(i)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const c=this.internalOutputShapes[i],a=this.outputNames[i];this.feedOutputNames.push(a),this.feedOutputShapes.push(c),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],nameScope("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const c=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([c,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const r=collectMetrics(e.metrics,this.outputNames),o=(i,c,a)=>{this.outputNames.length>1&&(c=this.outputNames[i]+"_"+c),this.metricsNames.push(c),this.metricsTensors.push([a,i])};nameScope("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const c=r[i];(l=>{const d="";let f,y,m;for(const h of l){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){const x=this.internalOutputShapes[i];x[x.length-1]===1||this.lossFunctions[i]===binaryCrossentropy$2?["accuracy","acc"].indexOf(h)!==-1?y=binaryAccuracy$1:["crossentropy","ce"].indexOf(h)!==-1&&(y=binaryCrossentropy$1):this.lossFunctions[i]===sparseCategoricalCrossentropy$1?["accuracy","acc"].indexOf(h)!==-1?y=sparseCategoricalAccuracy$1:["crossentropy","ce"].indexOf(h)!==-1&&(y=sparseCategoricalCrossentropy):["accuracy","acc"].indexOf(h)!==-1?y=categoricalAccuracy$1:["crossentropy","ce"].indexOf(h)!==-1&&(y=categoricalCrossentropy$1);let w;["accuracy","acc"].indexOf(h)!==-1?w="acc":["crossentropy","ce"].indexOf(h)!==-1&&(w="ce"),m=y,f=d+w}else m=get(h),f=d+getLossOrMetricName(h);let g;nameScope(f,()=>{g=m}),o(i,f,g)}})(c)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const r=s.batchSize==null?32:s.batchSize;checkBatchSize(r);const i=this.standardizeUserDataXY(e,t,!0,r);try{const c=i[0].concat(i[1]);this.makeTestFunction();const a=this.testFunction,l=this.testLoop(a,c,r,s.verbose,s.steps);return singletonOrArray(l)}finally{disposeNewTensors(i[0],e),disposeNewTensors(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),evaluateDataset(this,e,t)}checkNumSamples(e,t,s,r="steps"){let o;if(s!=null){if(o=null,t!=null)throw new ValueError(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?o=e[0].shape[0]:o=e.shape[0];else throw new ValueError(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return o}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new ValueError("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),r=s?t:[t],o=this.retrieveSymbolicTensors(r),i=new FeedDict;if(e instanceof Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ValueError(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let a=0;a<this.inputs.length;++a)i.add(this.inputs[a],e[a])}else for(const a of this.inputs){const l=e[a.name];if(l==null)throw new ValueError(`No value is provided for the model's input ${a.name}`);i.add(a,l)}const c=execute(o,i);return s?c:c[0]}retrieveSymbolicTensors(e){const t=pyListRepeat(null,e.length);let s=e.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],i=o.map(c=>c.name);for(let c=0;c<e.length;++c){const a=i.indexOf(e[c]);if(a!==-1&&(t[c]=o[a],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw t.forEach((o,i)=>{o==null&&r.push(e[i])}),new ValueError(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,s=!1){return tidy(()=>{const r=this.checkNumSamples(e);if(s)throw new NotImplementedError("Verbose predictLoop() is not implemented yet.");const o=makeBatches(r,t),i=this.outputs.map(c=>[]);for(let c=0;c<o.length;++c)tidy(()=>{const l=o[c][0],d=o[c][1],f=sliceArrays(e,l,d),y=[];if(Array.isArray(f))for(let h=0;h<f.length;++h)y.push({key:this.inputs[h],value:f[h]});else y.push({key:this.inputs[0],value:f});const m=new FeedDict(y);return execute(this.outputs,m)}).forEach((l,d)=>i[d].push(l));return singletonOrArray(i.map(c=>concat$2(c,0)))})}predict(e,t={}){const s=ensureTensorsRank2OrHigher(e);checkInputData(s,this.inputNames,this.feedInputShapes,!1);try{const r=t.batchSize==null?32:t.batchSize;return checkBatchSize(r),this.predictLoop(s,r)}finally{disposeNewTensors(s,e)}}predictOnBatch(e){checkInputData(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,r){if(this.optimizer_==null)throw new RuntimeError("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let i=0;i<this.feedOutputShapes.length;++i){const c=this.feedOutputShapes[i];this.feedLossFns[i]===sparseCategoricalCrossentropy$1?o.push(c.slice(0,c.length-1).concat([1])):o.push(c)}if(e=standardizeInputData(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=standardizeInputData(t,this.feedOutputNames,o,!1,"target"),checkArrayLengths(e,t),checkLossAndTargetCompatibility(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new ValueError(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,r,o=!0,i){const[c,a]=this.standardizeUserDataXY(e,t,o,i);if(s!=null)throw new Error("sample weight is not supported yet.");let l=null;if(r!=null){const d=standardizeClassWeights(r,this.outputNames);l=[];for(let f=0;f<d.length;++f)l.push(await standardizeWeights(a[f],null,d[f]))}return[c,a,l]}testLoop(e,t,s,r=0,o){return tidy(()=>{const i=this.checkNumSamples(t,s,o,"steps"),c=[];if(r>0)throw new NotImplementedError("Verbose mode is not implemented yet.");if(o!=null)throw new NotImplementedError("steps mode in testLoop() is not implemented yet");{const a=makeBatches(i,s),l=tensor1d(range$2(0,i));for(let d=0;d<a.length;++d){const f=a[d][0],y=a[d][1],m=sliceAlongFirstAxis(l,f,y-f),h=sliceArraysByIndices(t,m),g=e(h);if(d===0)for(let x=0;x<g.length;++x)c.push(scalar(0));for(let x=0;x<g.length;++x){const w=g[x];c[x]=add$2(c[x],mul(y-f,w))}}for(let d=0;d<c.length;++d)c[d]=div$1(c[d],i)}return c})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const r=e[s];let o=r;if(count(e,r)>1){const i=count(e.slice(0,s),r);o+=`_${i}`}t.push(o)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],c=()=>{const f=[];for(let g=0;g<this.inputs.length;++g)f.push({key:this.inputs[g],value:s[g]});const y=new FeedDict(f),m=execute(this.outputs,y,{training:!0});let h;for(let g=0;g<this.lossFunctions.length;++g){const x=this.lossFunctions[g];let w=x(r[g],m[g]);o[g]!=null&&(w=computeWeightedLoss(w,o[g]));const I=mean$1(w);t.push(I),g===0?h=w:h=add$2(h,w)}for(let g=0;g<this.metricsTensors.length;++g){let x;if(this.outputs.length>1&&g<this.outputs.length)x=t[g];else{const w=this.metricsTensors[g][0],I=this.metricsTensors[g][1];x=mean$1(w(r[I],m[I]))}keep(x),i.push(x)}return h=mean$1(h),this.calculateLosses().forEach(g=>{h=add$2(h,g)}),h},a=this.collectedTrainableWeights.map(f=>f.read());return[this.optimizer_.minimize(c,!0,a)].concat(i)}}makeTestFunction(){this.testFunction=e=>tidy(()=>{const t=[];let s;const r=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let l=0;l<this.inputs.length;++l)i.push({key:this.inputs[l],value:r[l]});const c=new FeedDict(i),a=execute(this.outputs,c);for(let l=0;l<this.lossFunctions.length;++l){const d=this.lossFunctions[l],f=mean$1(d(o[l],a[l]));l===0?s=f:s=add$2(s,f),t.push(s)}for(let l=0;l<this.metricsTensors.length;++l){const d=this.metricsTensors[l][0],f=this.metricsTensors[l][1],y=mean$1(d(o[f],a[f]));t.push(y)}return t})}async fit(e,t,s={}){return fitTensors(this,e,t,s)}async fitDataset(e,t){return fitDataset(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),r=s[0],o=s[1],c=this.makeTrainFunction()(r.concat(o)),a=[];for(const l of c){const d=await l.data();a.push(d[0])}return dispose(c),singletonOrArray(a)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let i=0;i<r.length;++i)s&&!r[i].trainable||t.push({name:r[i].originalName,tensor:o[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-memory().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=toSnakeCase(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>toSnakeCase(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const r of t)if(typeof s[r]=="string")e[r]=toSnakeCase(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[toSnakeCase(getLossOrMetricName(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>toSnakeCase(getLossOrMetricName(e)));{const e={};for(const t in this.metrics)e[t]=toSnakeCase(getLossOrMetricName(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=convertPythonicToTs(e.optimizer_config),s=deserialize(t);let r;if(typeof e.loss=="string")r=toCamelCase(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(i=>toCamelCase(i));else if(e.loss!=null){r={};for(const i in e.loss)r[i]=toCamelCase(e.loss[i])}let o;if(Array.isArray(e.metrics))o=e.metrics.map(i=>toCamelCase(i));else if(e.metrics!=null){o={};for(const i in e.metrics)o[i]=toCamelCase(e.metrics[i])}this.compile({loss:r,metrics:o,optimizer:s})}async save(e,t){if(typeof e=="string"){const l=getSaveHandlers(e);if(l.length===0)throw new ValueError(`Cannot find any save handlers for URL '${e}'`);if(l.length>1)throw new ValueError(`Found more than one (${l.length}) save handlers for URL '${e}'`);e=l[0]}if(e.save==null)throw new ValueError("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await encodeWeights(this.getNamedWeights(t)),c={modelTopology:this.toJSON(null,!1),format:LAYERS_MODEL_FORMAT_NAME,generatedBy:`TensorFlow.js tfjs-layers v${version$6}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){c.trainingConfig=this.getTrainingConfig();const l="optimizer",{data:d,specs:f}=await encodeWeights(await this.optimizer.getWeights(),l);s.specs.push(...f),s.data=concatenateArrayBuffers([s.data,d])}return this.userDefinedMetadata!=null&&(checkUserDefinedMetadata(this.userDefinedMetadata,this.name,!0),c.userDefinedMetadata=this.userDefinedMetadata),c.weightData=s.data,c.weightSpecs=s.specs,e.save(c)}setUserDefinedMetadata(e){checkUserDefinedMetadata(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}LayersModel.className="Model";registerClass(LayersModel);class Functional extends LayersModel{}Functional.className="Functional";registerClass(Functional);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function modelFromJSON(n,e){"modelTopology"in n||(n={modelTopology:n}),n=n;let t=n.modelTopology;t.model_config!=null&&(t=t.model_config);const s=convertPythonicToTs(t),r=deserialize(s,e);if(n.weightsManifest!=null){const o=await loadWeights(n.weightsManifest,n.pathPrefix,r.weights.map(c=>c.originalName)),i={};for(const c of r.weights)i[c.originalName]=o[c.originalName];r.loadWeights(i),dispose(o)}return r}async function loadLayersModelInternal(n,e){if(e==null&&(e={}),typeof n=="string"){const t=getLoadHandlers(n,e);if(t.length===0)t.push(browserHTTPRequest(n,e));else if(t.length>1)throw new ValueError(`Found more than one (${t.length}) load handlers for URL '${n}'`);n=t[0]}return loadLayersModelFromIOHandler(n,void 0,e)}async function loadLayersModelFromIOHandler(n,e,t){if(t==null&&(t={}),n.load==null)throw new ValueError("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await n.load();let r=s.modelTopology;r.model_config!=null&&(r=r.model_config);const o=t.strict==null?!0:t.strict,i=s.weightData!=null&&s.weightSpecs!=null&&o,c=deserialize(convertPythonicToTs(r),e,i),a=s.trainingConfig;if(a!=null&&c.loadTrainingConfig(a),s.userDefinedMetadata!=null&&c.setUserDefinedMetadata(s.userDefinedMetadata),s.weightData!=null){if(s.weightSpecs==null)throw new ValueError("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:l,optimizerWeights:d}=decodeModelAndOptimizerWeights(s.weightData,s.weightSpecs);c.loadWeights(l,o),c.optimizer!=null&&d.length>0&&await c.optimizer.setWeights(d),dispose(l),dispose(d.map(f=>f.tensor))}return c}function decodeModelAndOptimizerWeights(n,e){const t=decodeWeights(n,e),s={},r=[];return e.forEach(o=>{o.group==="optimizer"?r.push({name:o.name,tensor:t[o.name]}):s[o.name]=t[o.name]}),{modelWeights:s,optimizerWeights:r}}class Sequential extends LayersModel{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:getUid("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new ValueError(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Sequential||e instanceof LayersModel;let s;if(t){if(s=e,s.outputs.length!==1)throw new ValueError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new ValueError("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new ValueError("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=Input({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new ValueError(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new ValueError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=getSourceInputs(this.outputs[0])}this.inboundNodes=[],new Node({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:pyListRepeat(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(getExactlyOneShape(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new LayersModel({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new RuntimeError("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},r=!1){let o,i={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new ValueError("Legacy serialization format not supported yet.");o=t}else assert$1(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=t.layers,delete t.layers,i=t;const c=new e(i);if(!(c instanceof Sequential))throw new NotImplementedError(`Sequential.fromConfig called on non-Sequential input: ${c}`);for(const a of o){const d=deserialize(a,void 0,r);r&&d.setFastWeightInitDuringBuild(!0),c.add(d)}return c}set stopTraining(e){if(this.model==null)throw new ValueError("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new ValueError("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}Sequential.className="Sequential";registerClass(Sequential);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function model(n){return new LayersModel(n)}function sequential(n){return new Sequential(n)}function loadLayersModel(n,e){return e==null&&(e={}),loadLayersModelInternal(n,e)}function input(n){return Input(n)}function registerCallbackConstructor(n,e){CallbackConstructorRegistry.registerCallbackConstructor(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Activation$1=class extends Serializable{getConfig(){return{}}};class Elu extends Activation$1{apply(e,t=1){return elu$3(e,t)}}Elu.className="elu";registerClass(Elu);class Selu extends Activation$1{apply(e){return selu$2(e)}}Selu.className="selu";registerClass(Selu);class Relu extends Activation$1{apply(e){return relu$2(e)}}Relu.className="relu";registerClass(Relu);class Relu6 extends Activation$1{apply(e){return tidy(()=>minimum$3(6,relu$2(e)))}}Relu6.className="relu6";registerClass(Relu6);class Linear extends Activation$1{apply(e){return e}}Linear.className="linear";registerClass(Linear);class Sigmoid extends Activation$1{apply(e){return sigmoid$2(e)}}Sigmoid.className="sigmoid";registerClass(Sigmoid);class HardSigmoid extends Activation$1{apply(e){return hardSigmoid(e)}}HardSigmoid.className="hardSigmoid";registerClass(HardSigmoid);class Softplus extends Activation$1{apply(e){return softplus$2(e)}}Softplus.className="softplus";registerClass(Softplus);class Softsign extends Activation$1{apply(e){return softsign(e)}}Softsign.className="softsign";registerClass(Softsign);class Tanh extends Activation$1{apply(e){return tanh$2(e)}}Tanh.className="tanh";registerClass(Tanh);let Softmax$1=class extends Activation$1{apply(e,t=-1){return softmax$3(e,t)}};Softmax$1.className="softmax";registerClass(Softmax$1);class LogSoftmax extends Activation$1{apply(e,t=-1){return logSoftmax(e,t)}}LogSoftmax.className="logSoftmax";registerClass(LogSoftmax);class Swish extends Activation$1{apply(e,t=1){return tidy(()=>sigmoid$2(e.mul(t)).mul(e))}}Swish.className="swish";registerClass(Swish);function serializeActivation(n){return n.getClassName()}function deserializeActivation(n,e={}){return deserializeKerasObject(n,SerializationMap.getMap().classNameMap,e,"activation")}function getActivation(n){if(n==null){const e={};return e.className="linear",e.config={},deserializeActivation(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},deserializeActivation(e)}else return n instanceof Activation$1?n:deserializeActivation(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function assertObjectArgs(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class Regularizer extends Serializable{}class L1L2 extends Regularizer{constructor(e){super(),assertObjectArgs(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return tidy(()=>{let t=zeros$2([1]);return this.hasL1&&(t=add$2(t,sum$2(mul(this.l1,abs$2(e))))),this.hasL2&&(t=add$2(t,sum$2(mul(this.l2,square$1(e))))),t.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}L1L2.className="L1L2";registerClass(L1L2);function l1$1(n){return assertObjectArgs(n),new L1L2({l1:n!=null?n.l1:null,l2:0})}function l2$1(n){return assertObjectArgs(n),new L1L2({l2:n!=null?n.l2:null,l1:0})}const REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP={l1l2:"L1L2"};function serializeRegularizer(n){return serializeKerasObject(n)}function deserializeRegularizer(n,e={}){return deserializeKerasObject(n,SerializationMap.getMap().classNameMap,e,"regularizer")}function getRegularizer(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP?REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[n]:n,config:{}};return deserializeRegularizer(t)}else return n instanceof Regularizer?n:deserializeRegularizer(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ReLU extends Layer{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=getExactlyOneTensor(e);let s=relu$2(e);return this.maxValue!=null&&(s=clipByValue$1(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}ReLU.className="ReLU";registerClass(ReLU);class LeakyReLU extends Layer{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=getExactlyOneTensor(e);return leakyRelu$2(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}LeakyReLU.className="LeakyReLU";registerClass(LeakyReLU);class PReLU extends Layer{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=getInitializer(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=getRegularizer(e.alphaRegularizer),this.alphaConstraint=getConstraint(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new ValueError(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=getExactlyOneShape(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new InputSpec({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=getExactlyOneTensor(e),prelu$3(e,this.alpha.read())}getConfig(){const e={alphaInitializer:serializeInitializer(this.alphaInitializer),alphaRegularizer:serializeRegularizer(this.alphaRegularizer),alphaConstraint:serializeConstraint(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}PReLU.className="PReLU";registerClass(PReLU);let ELU$3=class extends Layer{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new NotImplementedError(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=getExactlyOneTensor(e);return elu$4(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};ELU$3.className="ELU";registerClass(ELU$3);class ThresholdedReLU extends Layer{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=getExactlyOneTensor(e);return s.mul(cast$2(s.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}ThresholdedReLU.className="ThresholdedReLU";registerClass(ThresholdedReLU);class Softmax extends Layer{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Softmax$1().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){const s=getExactlyOneTensor(e);return this.softmax(s,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}Softmax.className="Softmax";registerClass(Softmax);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function normalizeArray(n,e,t){if(typeof n=="number")return pyListRepeat(n,e);if(n.length!==e)throw new ValueError(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const r=n[s];if(!isInteger(r))throw new ValueError(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function convOutputLength(n,e,t,s,r=1){if(n==null)return n;const o=e+(e-1)*(r-1);let i;return t==="same"?i=n:i=n-o+1,Math.floor((i+s-1)/s)}function deconvLength(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+max$2([t-e,0]);else if(s==="same")n=n*e;else throw new ValueError(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function preprocessConv2DInput(n,e){return tidy(()=>(checkDataFormat(e),e==="channelsFirst"?transpose$2(n,[0,2,3,1]):n))}function preprocessConv3DInput(n,e){return tidy(()=>(checkDataFormat(e),e==="channelsFirst"?transpose$2(n,[0,2,3,4,1]):n))}function conv1dWithBias(n,e,t,s=1,r="valid",o,i=1){return tidy(()=>{if(o==null&&(o=imageDataFormat()),checkDataFormat(o),n.shape.length!==3)throw new ValueError(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new ValueError(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new ValueError(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(o==="channelsFirst"&&(n=transpose$2(n,[0,2,1])),r==="causal")throw new NotImplementedError("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let c=conv1d$1(n,e,s,r==="same"?"same":"valid","NWC",i);return t!=null&&(c=biasAdd(c,t)),c})}function conv2dWithBiasActivation(n,e,t,s=[1,1],r="valid",o,i,c=null){return tidy(()=>{if(o==null&&(o=imageDataFormat()),checkDataFormat(o),n.rank!==3&&n.rank!==4)throw new ValueError(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new ValueError(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let a=preprocessConv2DInput(n,o);if(r==="causal")throw new NotImplementedError("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return a=conv2d$2({x:a,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:t,activation:c}),o==="channelsFirst"&&(a=transpose$2(a,[0,3,1,2])),a})}function conv3dWithBias(n,e,t,s=[1,1,1],r="valid",o,i){return tidy(()=>{if(o==null&&(o=imageDataFormat()),checkDataFormat(o),n.rank!==4&&n.rank!==5)throw new ValueError(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new ValueError(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let c=preprocessConv3DInput(n,o);if(r==="causal")throw new NotImplementedError("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return c=conv3d$1(c,e,s,r==="same"?"same":"valid","NDHWC",i),t!=null&&(c=biasAdd(c,t)),o==="channelsFirst"&&(c=transpose$2(c,[0,4,1,2,3])),c})}class BaseConv extends Layer{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",BaseConv.verifyArgs(t),this.rank=e,assertPositiveInteger(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new NotImplementedError(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=normalizeArray(t.kernelSize,e,"kernelSize"),this.strides=normalizeArray(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,checkPaddingMode(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,checkDataFormat(this.dataFormat),this.activation=getActivation(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=getInitializer(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=getConstraint(t.biasConstraint),this.biasRegularizer=getRegularizer(t.biasRegularizer),this.activityRegularizer=getRegularizer(t.activityRegularizer),this.dilationRate=normalizeArray(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new ValueError(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new ValueError(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new ValueError(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(assert("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!checkArrayTypeAndLength(e.kernelSize,"number",1,3))throw new ValueError(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:serializeActivation(this.activation),useBias:this.useBias,biasInitializer:serializeInitializer(this.biasInitializer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),biasConstraint:serializeConstraint(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Conv extends BaseConv{constructor(e,t){super(e,t),this.kernel=null,Conv.verifyArgs(t),this.filters=t.filters,assertPositiveInteger(this.filters,"filters"),this.kernelInitializer=getInitializer(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=getConstraint(t.kernelConstraint),this.kernelRegularizer=getRegularizer(t.kernelRegularizer)}build(e){e=getExactlyOneShape(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new ValueError(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return tidy(()=>{e=getExactlyOneTensor(e);let s;const r=this.bias==null?null:this.bias.read(),o=mapActivationToFusedKernel(this.activation.getClassName());if(o!=null&&this.rank===2)s=conv2dWithBiasActivation(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=conv1dWithBias(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=conv2dWithBiasActivation(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=conv3dWithBias(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new NotImplementedError("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=getExactlyOneShape(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let o=0;o<s.length;++o){const i=convOutputLength(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);t.push(i)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:serializeInitializer(this.kernelInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new ValueError(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Conv2D extends Conv{constructor(e){super(2,e),Conv2D.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!checkArrayTypeAndLength(e.kernelSize,"number",1,2))throw new ValueError(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Conv2D.className="Conv2D";registerClass(Conv2D);class Conv3D extends Conv{constructor(e){super(3,e),Conv3D.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new ValueError(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Conv3D.className="Conv3D";registerClass(Conv3D);class Conv2DTranspose extends Conv2D{constructor(e){if(super(e),this.inputSpec=[new InputSpec({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new ValueError(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=getExactlyOneShape(e),e.length!==4)throw new ValueError("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new ValueError("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new InputSpec({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return tidy(()=>{let s=getExactlyOneTensor(e);if(s.shape.length!==4)throw new ValueError(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let i,c;this.dataFormat==="channelsFirst"?(i=2,c=3):(i=1,c=2);const a=r[i],l=r[c],d=this.kernelSize[0],f=this.kernelSize[1],y=this.strides[0],m=this.strides[1],h=deconvLength(a,y,d,this.padding),g=deconvLength(l,m,f,this.padding),x=[o,h,g,this.filters];this.dataFormat!=="channelsLast"&&(s=transpose$2(s,[0,2,3,1]));let w=conv2dTranspose$1(s,this.kernel.read(),x,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(w=transpose$2(w,[0,3,1,2])),this.bias!=null&&(w=biasAdd(w,this.bias.read(),this.dataFormat)),this.activation!=null&&(w=this.activation.apply(w)),w})}computeOutputShape(e){e=getExactlyOneShape(e);const t=e.slice();let s,r,o;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3):(s=3,r=1,o=2);const i=this.kernelSize[0],c=this.kernelSize[1],a=this.strides[0],l=this.strides[1];return t[s]=this.filters,t[r]=deconvLength(t[r],a,i,this.padding),t[o]=deconvLength(t[o],l,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Conv2DTranspose.className="Conv2DTranspose";registerClass(Conv2DTranspose);class SeparableConv extends Conv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new ValueError("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new ValueError("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new ValueError(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=getInitializer(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=getRegularizer(t.depthwiseRegularizer),this.depthwiseConstraint=getConstraint(t.depthwiseConstraint),this.pointwiseInitializer=getInitializer(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=getRegularizer(t.pointwiseRegularizer),this.pointwiseConstraint=getConstraint(t.pointwiseConstraint)}build(e){if(e=getExactlyOneShape(e),e.length<this.rank+2)throw new ValueError(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new ValueError(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],r=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let c=0;c<this.rank;++c)o.push(1);o.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new InputSpec({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return tidy(()=>{e=getExactlyOneTensor(e);let s;if(this.rank===1)throw new NotImplementedError("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=transpose$2(e,[0,2,3,1])),s=separableConv2d$1(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=biasAdd(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=transpose$2(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=serializeInitializer(this.depthwiseInitializer),e.pointwiseInitializer=serializeInitializer(this.pointwiseInitializer),e.depthwiseRegularizer=serializeRegularizer(this.depthwiseRegularizer),e.pointwiseRegularizer=serializeRegularizer(this.pointwiseRegularizer),e.depthwiseConstraint=serializeConstraint(this.depthwiseConstraint),e.pointwiseConstraint=serializeConstraint(this.pointwiseConstraint),e}}SeparableConv.className="SeparableConv";class SeparableConv2D extends SeparableConv{constructor(e){super(2,e)}}SeparableConv2D.className="SeparableConv2D";registerClass(SeparableConv2D);class Conv1D extends Conv{constructor(e){super(1,e),Conv1D.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!checkArrayTypeAndLength(e.kernelSize,"number",1,1))throw new ValueError(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Conv1D.className="Conv1D";registerClass(Conv1D);class Cropping2D extends Layer{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return tidy(()=>{if(e=getExactlyOneTensor(e),this.dataFormat==="channelsLast"){const s=sliceAlongAxis(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return sliceAlongAxis(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=sliceAlongAxis(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return sliceAlongAxis(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Cropping2D.className="Cropping2D";registerClass(Cropping2D);class UpSampling2D extends Layer{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,checkDataFormat(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,checkInterpolationFormat(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return tidy(()=>{let s=getExactlyOneTensor(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=transpose$2(s,[0,2,3,1]);const o=this.size[0]*r[2],i=this.size[1]*r[3],c=this.interpolation==="nearest"?s.resizeNearestNeighbor([o,i]):s.resizeBilinear([o,i]);return transpose$2(c,[0,3,1,2])}else{const o=this.size[0]*r[1],i=this.size[1]*r[2];return this.interpolation==="nearest"?s.resizeNearestNeighbor([o,i]):s.resizeBilinear([o,i])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}UpSampling2D.className="UpSampling2D";registerClass(UpSampling2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function depthwiseConv2d$1(n,e,t=[1,1],s="valid",r,o){return tidy(()=>{r==null&&(r=imageDataFormat()),checkDataFormat(r);let i=preprocessConv2DInput(n,r);if(n.rank!==4)throw new ValueError(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new ValueError(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return i=depthwiseConv2d$3(i,e,t,s==="same"?"same":"valid","NHWC",o),r==="channelsFirst"&&(i=transpose$2(i,[0,3,1,2])),i})}class DepthwiseConv2D extends BaseConv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=getInitializer(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=getConstraint(e.depthwiseConstraint),this.depthwiseRegularizer=getRegularizer(e.depthwiseRegularizer)}build(e){if(e=getExactlyOneShape(e),e.length<4)throw new ValueError(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new ValueError(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return tidy(()=>{e=getExactlyOneTensor(e);let s=depthwiseConv2d$1(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=biasAdd(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=getExactlyOneShape(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=convOutputLength(t,this.kernelSize[0],this.padding,this.strides[0]),i=convOutputLength(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,o,i]:[e[0],o,i,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=serializeInitializer(this.depthwiseInitializer),e.depthwiseRegularizer=serializeRegularizer(this.depthwiseRegularizer),e.depthwiseConstraint=serializeConstraint(this.depthwiseRegularizer),e}}DepthwiseConv2D.className="DepthwiseConv2D";registerClass(DepthwiseConv2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function standardizeArgs(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new ValueError("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function r(o){return o==null||Array.isArray(o)?o:[o]}return e=r(e),t=r(t),{inputs:n,initialState:e,constants:t}}function rnn$1(n,e,t,s=!1,r,o,i=!1,c=!1){return tidy(()=>{const a=e.shape.length;if(a<3)throw new ValueError(`Input should be at least 3D, but is ${a}D.`);const l=[1,0].concat(range$2(2,a));e=transpose$2(e,l),i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=r.asType("bool").asType("float32"),r.rank===a-1&&(r=expandDims$3(r,-1)),r=transpose$2(r,l)),s&&(e=reverse$2(e,0),r!=null&&(r=reverse$2(r,0)));const d=[];let f,y=t;const m=e.shape[0],h=unstack(e);let g;r!=null&&(g=unstack(r));for(let w=0;w<m;++w){const I=h[w],N=tidy(()=>n(I,y));if(r==null)f=N[0],y=N[1];else{const A=tidy(()=>{const T=g[w],P=onesLike$2(T).sub(T),O=N[0].mul(T).add(y[0].mul(P)),F=y.map((G,U)=>N[1][U].mul(T).add(G.mul(P)));return{output:O,newStates:F}});f=A.output,y=A.newStates}c&&d.push(f)}let x;return c&&(x=stack(d,1)),[f,x,y]})}class RNN extends Layer{constructor(e){super(e);let t;if(e.cell==null)throw new ValueError("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new StackedRNNCells({cells:e.cell}):t=e.cell,t.stateSize==null)throw new ValueError("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new InputSpec({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return range$2(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){isArrayOfShapes(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const o=[];for(const i of t)o.push([e[0],i]);return[r].concat(o)}else return r}computeMask(e,t){return tidy(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const r=this.states.map(o=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new NotImplementedError("Constants support is not implemented in RNN yet.");isArrayOfShapes(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new InputSpec({shape:[t,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),o))throw new ValueError(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(i=>new InputSpec({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){tidy(()=>{if(!this.stateful)throw new AttributeError("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new ValueError("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>zeros$2([s,r])):this.states_=[zeros$2([s,this.cell.stateSize])];else if(e==null)dispose(this.states_),this.keptStates!=null&&(dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>zeros$2([s,r])):this.states_[0]=zeros$2([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ValueError(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):dispose(this.states_);for(let r=0;r<this.states_.length;++r){const o=e[r],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,c=[s,i];if(!arraysEqual(o.shape,c))throw new ValueError(`State ${r} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${o.shape}`);this.states_[r]=o}}this.states_=this.states_.map(r=>keep(r.clone()))})}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=standardizeArgs(e,s,r,this.numConstants);e=o.inputs,s=o.initialState,r=o.constants;let i=[],c=[];if(s!=null){t.initialState=s,i=i.concat(s),this.stateSpec=[];for(const l of s)this.stateSpec.push(new InputSpec({shape:l.shape}));c=c.concat(this.stateSpec)}if(r!=null&&(t.constants=r,i=i.concat(r),this.numConstants=r.length),i[0]instanceof SymbolicTensor){const l=[e].concat(i),d=this.inputSpec.concat(c),f=this.inputSpec;this.inputSpec=d;const y=super.apply(l,t);return this.inputSpec=f,y}else return super.apply(e,t)}call(e,t){return tidy(()=>{const s=t==null?null:t.mask,r=t==null?null:t.training;let o=t==null?null:t.initialState;e=getExactlyOneTensor(e),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==i)throw new ValueError(`RNN Layer has ${i} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const c={training:r},l=rnn$1((h,g)=>{const x=this.cell.call([h].concat(g),c);return[x[0],x.slice(1)]},e,o,this.goBackwards,s,null,this.unroll,this.returnSequences),d=l[0],f=l[1],y=l[2];this.stateful&&this.resetStates(y,r);const m=this.returnSequences?f:d;return this.returnState?[m].concat(y):m})}getInitialState(e){return tidy(()=>{let t=zeros$2(e.shape);return t=sum$2(t,[1,2]),t=expandDims$2(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?tile$2(t,[1,s]):t):this.cell.stateSize>1?[tile$2(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===RNN.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign({},s,e,t)}static fromConfig(e,t,s={}){const r=t.cell,o=deserialize(r,s);return new e(Object.assign(t,{cell:o}))}}RNN.className="RNN";registerClass(RNN);class RNNCell extends Layer{}class SimpleRNNCell extends RNNCell{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=getInitializer(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=getRegularizer(e.kernelRegularizer),this.recurrentRegularizer=getRegularizer(e.recurrentRegularizer),this.biasRegularizer=getRegularizer(e.biasRegularizer),this.kernelConstraint=getConstraint(e.kernelConstraint),this.recurrentConstraint=getConstraint(e.recurrentConstraint),this.biasConstraint=getConstraint(e.biasConstraint),this.dropout=min$2([1,max$2([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=min$2([1,max$2([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=getExactlyOneShape(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return tidy(()=>{if(e=e,e.length!==2)throw new ValueError(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(s),rate:this.recurrentDropout,training:r}));let o;const i=this.dropoutMask,c=this.recurrentDropoutMask;i!=null?o=dot$1(mul(e,i),this.kernel.read()):o=dot$1(e,this.kernel.read()),this.bias!=null&&(o=biasAdd(o,this.bias.read())),c!=null&&(s=mul(s,c));let a=add$2(o,dot$1(s,this.recurrentKernel.read()));return this.activation!=null&&(a=this.activation.apply(a)),[a,a]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:serializeActivation(this.activation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}SimpleRNNCell.className="SimpleRNNCell";registerClass(SimpleRNNCell);class SimpleRNN extends RNN{constructor(e){e.cell=new SimpleRNNCell(e),super(e)}call(e,t){return tidy(()=>{this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return new e(t)}}SimpleRNN.className="SimpleRNN";registerClass(SimpleRNN);class GRUCell extends RNNCell{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ValueError("GRUCell does not support reset_after parameter set to true.");this.units=e.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=getActivation(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=getInitializer(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=getRegularizer(e.kernelRegularizer),this.recurrentRegularizer=getRegularizer(e.recurrentRegularizer),this.biasRegularizer=getRegularizer(e.biasRegularizer),this.kernelConstraint=getConstraint(e.kernelConstraint),this.recurrentConstraint=getConstraint(e.recurrentConstraint),this.biasConstraint=getConstraint(e.biasConstraint),this.dropout=min$2([1,max$2([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=min$2([1,max$2([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=getExactlyOneShape(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return tidy(()=>{if(e=e,e.length!==2)throw new ValueError(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(e),rate:this.dropout,training:s,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(r),rate:this.recurrentDropout,training:s,count:3}));const o=this.dropoutMask,i=this.recurrentDropoutMask;let c,a,l;0<this.dropout&&this.dropout<1&&(e=mul(e,o[0]));let d=dot$1(e,this.kernel.read());this.useBias&&(d=biasAdd(d,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=mul(r,i[0]));const f=this.recurrentKernel.read(),[y,m]=split$1(f,[2*this.units,this.units],f.rank-1),h=dot$1(r,y),[g,x,w]=split$1(d,3,d.rank-1),[I,N]=split$1(h,2,h.rank-1);c=this.recurrentActivation.apply(add$2(g,I)),a=this.recurrentActivation.apply(add$2(x,N));const A=dot$1(mul(a,r),m);l=this.activation.apply(add$2(w,A));const T=add$2(mul(c,r),mul(add$2(1,neg$2(c)),l));return[T,T]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:serializeActivation(this.activation),recurrentActivation:serializeActivation(this.recurrentActivation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}GRUCell.className="GRUCell";registerClass(GRUCell);class GRU extends RNN{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new GRUCell(e),super(e)}call(e,t){return tidy(()=>{this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}GRU.className="GRU";registerClass(GRU);class LSTMCell extends RNNCell{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=getActivation(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=getInitializer(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=getInitializer(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=getInitializer(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=getRegularizer(e.kernelRegularizer),this.recurrentRegularizer=getRegularizer(e.recurrentRegularizer),this.biasRegularizer=getRegularizer(e.biasRegularizer),this.kernelConstraint=getConstraint(e.kernelConstraint),this.recurrentConstraint=getConstraint(e.recurrentConstraint),this.biasConstraint=getConstraint(e.biasConstraint),this.dropout=min$2([1,max$2([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=min$2([1,max$2([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=getExactlyOneShape(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,i=this.units;r=new(t=class extends Initializer{apply(a,l){const d=o.apply([i]),f=new Ones().apply([i]),y=o.apply([i*2]);return concatAlongFirstAxis(concatAlongFirstAxis(d,f),y)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return tidy(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new ValueError(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(e),rate:this.dropout,training:s,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(r),rate:this.recurrentDropout,training:s,count:4}));const i=this.dropoutMask,c=this.recurrentDropoutMask;let a,l,d,f;0<this.dropout&&this.dropout<1&&(e=mul(e,i[0]));let y=dot$1(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=mul(r,c[0])),y=add$2(y,dot$1(r,this.recurrentKernel.read())),this.useBias&&(y=biasAdd(y,this.bias.read()));const[m,h,g,x]=split$1(y,4,y.rank-1);a=this.recurrentActivation.apply(m),l=this.recurrentActivation.apply(h),d=add$2(mul(l,o),mul(a,this.activation.apply(g))),f=this.recurrentActivation.apply(x);const w=mul(f,this.activation.apply(d));return[w,w,d]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:serializeActivation(this.activation),recurrentActivation:serializeActivation(this.recurrentActivation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),recurrentInitializer:serializeInitializer(this.recurrentInitializer),biasInitializer:serializeInitializer(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:serializeRegularizer(this.kernelRegularizer),recurrentRegularizer:serializeRegularizer(this.recurrentRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),recurrentConstraint:serializeConstraint(this.recurrentConstraint),biasConstraint:serializeConstraint(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}LSTMCell.className="LSTMCell";registerClass(LSTMCell);class LSTM extends RNN{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new LSTMCell(e),super(e)}call(e,t){return tidy(()=>{this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}LSTM.className="LSTM";registerClass(LSTM);class StackedRNNCells extends RNNCell{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return tidy(()=>{e=e;let s=e.slice(1);const r=[];for(const c of this.cells.slice().reverse())Array.isArray(c.stateSize)?r.push(s.splice(0,c.stateSize.length)):r.push(s.splice(0,1));r.reverse();const o=[];let i;for(let c=0;c<this.cells.length;++c){const a=this.cells[c];s=r[c],c===0?i=[e[0]].concat(s):i=[i[0]].concat(s),i=a.call(i,t),o.push(i.slice(1))}s=[];for(const c of o.slice().reverse())s.push(...c);return[i[0]].concat(s)})}build(e){isArrayOfShapes(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,r)=>{nameScope(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=o=>({className:o.getClassName(),config:o.getConfig()}),r={cells:this.cells.map(t)};return Object.assign({},e,r)}static fromConfig(e,t,s={}){const r=[];for(const o of t.cells)r.push(deserialize(o,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return batchGetValue(e)}setWeights(e){const t=[];for(const s of this.cells){const r=s.weights.length,o=e.splice(r);for(let i=0;i<s.weights.length;++i)t.push([s.weights[i],o[i]])}batchSetValue(t)}}StackedRNNCells.className="StackedRNNCells";registerClass(StackedRNNCells);function generateDropoutMask(n){const{ones:e,rate:t,training:s=!1,count:r=1}=n,o=()=>dropout$1(e(),t),i=()=>inTrainPhase(o,e,s);return!r||r<=1?keep(i().clone()):Array(r).fill(void 0).map(i).map(a=>keep(a.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var __rest=function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(t[s[r]]=n[s[r]]);return t};class ConvRNN2D extends RNN{constructor(e){if(e.unroll)throw new NotImplementedError("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new NotImplementedError("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new InputSpec({ndim:5})]}call(e,t){return tidy(()=>{if(this.cell.dropoutMask!=null&&(dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ValueError("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return tidy(()=>{const{stateSize:t}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)],i=zeros$2(o);return Array.isArray(t)?Array(t.length).fill(i):[i]})}resetStates(e,t=!1){tidy(()=>{if(!this.stateful)throw new AttributeError("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)];if(s[0]==null)throw new ValueError("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>zeros$2(o)):this.states_=[zeros$2(o)];else if(e==null)dispose(this.states_),this.keptStates!=null&&(dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>zeros$2(o)):this.states_[0]=zeros$2(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ValueError(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):dispose(this.states_);for(let c=0;c<this.states_.length;++c){const a=e[c],l=o;if(!arraysEqual(a.shape,l))throw new ValueError(`State ${c} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${a.shape}`);this.states_[c]=a}}this.states_=this.states_.map(c=>keep(c.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:r,padding:o,strides:i,dilationRate:c}=this.cell,a=t==="channelsFirst",l=e[a?3:2],d=e[a?4:3],f=convOutputLength(l,r[0],o,i[0],c[0]),y=convOutputLength(d,r[1],o,i[1],c[1]);return[...e.slice(0,2),...a?[s,f,y]:[f,y,s]]}}ConvRNN2D.className="ConvRNN2D";class ConvLSTM2DCell extends LSTMCell{constructor(e){const{filters:t,kernelSize:s,strides:r,padding:o,dataFormat:i,dilationRate:c}=e;super(Object.assign({},e,{units:t})),this.filters=t,assertPositiveInteger(this.filters,"filters"),this.kernelSize=normalizeArray(s,2,"kernelSize"),this.kernelSize.forEach(a=>assertPositiveInteger(a,"kernelSize")),this.strides=normalizeArray(r||1,2,"strides"),this.strides.forEach(a=>assertPositiveInteger(a,"strides")),this.padding=o||"valid",checkPaddingMode(this.padding),this.dataFormat=i||"channelsLast",checkDataFormat(this.dataFormat),this.dilationRate=normalizeArray(c||1,2,"dilationRate"),this.dilationRate.forEach(a=>assertPositiveInteger(a,"dilationRate"))}build(e){var t;e=getExactlyOneShape(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new ValueError(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],o=4,i=this.kernelSize.concat([r,this.filters*o]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const c=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",c,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let a;if(this.unitForgetBias){const l=this.biasInitializer,d=this.filters;a=new(t=class extends Initializer{apply(y,m){const h=l.apply([d]),g=ones$1([d]),x=l.apply([d*2]);return concatenate$1([h,g,x])}},t.className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,a,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return tidy(()=>{if(e.length!==3)throw new ValueError(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,r=e[0],o=e[1],i=e[2],c=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=generateDropoutMask({ones:()=>onesLike$2(r),rate:this.dropout,training:s,count:c}));const a=this.dropoutMask,l=(Te,Ce,Ne)=>!Ce||!Ce[Ne]?Te:mul(Ce[Ne],Te);let d=l(r,a,0),f=l(r,a,1),y=l(r,a,2),m=l(r,a,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=generateDropoutMask({ones:()=>onesLike$2(o),rate:this.recurrentDropout,training:s,count:c}));const h=this.recurrentDropoutMask;let g=l(o,h,0),x=l(o,h,1),w=l(o,h,2),I=l(o,h,3);const N=3,[A,T,P,O]=split$1(this.kernel.read(),c,N),[F,G,U,Q]=this.useBias?split$1(this.bias.read(),c):[null,null,null,null];d=this.inputConv(d,A,F,this.padding),f=this.inputConv(f,T,G,this.padding),y=this.inputConv(y,P,U,this.padding),m=this.inputConv(m,O,Q,this.padding);const[ne,J,oe,le]=split$1(this.recurrentKernel.read(),c,N);g=this.recurrentConv(g,ne),x=this.recurrentConv(x,J),w=this.recurrentConv(w,oe),I=this.recurrentConv(I,le);const ge=this.recurrentActivation.apply(add$2(d,g)),te=this.recurrentActivation.apply(add$2(f,x)),ce=add$2(mul(te,i),mul(ge,this.activation.apply(add$2(y,w)))),ue=mul(this.recurrentActivation.apply(add$2(m,I)),this.activation.apply(ce));return[ue,ue,ce]})}getConfig(){const e=super.getConfig(),{units:t}=e,s=__rest(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},s,r)}inputConv(e,t,s,r){const o=conv2d$3(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?biasAdd(o,s,this.dataFormat):o}recurrentConv(e,t){return conv2d$3(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}ConvLSTM2DCell.className="ConvLSTM2DCell";registerClass(ConvLSTM2DCell);class ConvLSTM2D extends ConvRNN2D{constructor(e){const t=new ConvLSTM2DCell(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}ConvLSTM2D.className="ConvLSTM2D";registerClass(ConvLSTM2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Dropout extends Layer{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return s}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);const s=getExactlyOneTensor(e);if(0<this.rate&&this.rate<1){const r=t.training==null?!1:t.training,o=this.getNoiseShape(s);return inTrainPhase(()=>dropout$1(s,this.rate,o,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Dropout.className="Dropout";registerClass(Dropout);class SpatialDropout1D extends Dropout{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}SpatialDropout1D.className="SpatialDropout1D";registerClass(SpatialDropout1D);class Dense extends Layer{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,assertPositiveInteger(this.units,"units"),this.activation=getActivation(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=getInitializer(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=getInitializer(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=getConstraint(e.kernelConstraint),this.biasConstraint=getConstraint(e.biasConstraint),this.kernelRegularizer=getRegularizer(e.kernelRegularizer),this.biasRegularizer=getRegularizer(e.biasRegularizer),this.activityRegularizer=getRegularizer(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=getExactlyOneShape(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=getExactlyOneShape(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);const s=getExactlyOneTensor(e),r=mapActivationToFusedKernel(this.activation.getClassName());let o;return r!=null?o=dot$1(s,this.kernel.read(),r,this.bias?this.bias.read():null):(o=dot$1(s,this.kernel.read()),this.bias!=null&&(o=biasAdd(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:serializeActivation(this.activation),useBias:this.useBias,kernelInitializer:serializeInitializer(this.kernelInitializer),biasInitializer:serializeInitializer(this.biasInitializer),kernelRegularizer:serializeRegularizer(this.kernelRegularizer),biasRegularizer:serializeRegularizer(this.biasRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),kernelConstraint:serializeConstraint(this.kernelConstraint),biasConstraint:serializeConstraint(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Dense.className="Dense";registerClass(Dense);class Flatten extends Layer{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=getExactlyOneShape(e);for(const t of e.slice(1))if(t==null)throw new ValueError(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],arrayProd(e,1)]}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);let s=getExactlyOneTensor(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let o=2;o<s.rank;++o)r.push(o);r.push(1),s=s.transpose(r)}return batchFlatten(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Flatten.className="Flatten";registerClass(Flatten);class Activation extends Layer{constructor(e){super(e),this.supportsMasking=!0,this.activation=getActivation(e.activation)}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);const s=getExactlyOneTensor(e);return this.activation.apply(s)})}getConfig(){const e={activation:serializeActivation(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Activation.className="Activation";registerClass(Activation);class RepeatVector extends Layer{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return tidy(()=>(e=getExactlyOneTensor(e),repeat(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}RepeatVector.className="RepeatVector";registerClass(RepeatVector);class Reshape extends Layer{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",r=t.slice();let o=1,i=null;for(let a=0;a<r.length;++a){const l=r[a];if(this.isUnknown(l))if(i===null)i=a;else throw new ValueError("Can only specifiy one unknown dimension.");else o*=l}const c=arrayProd(e);if(i!==null){if(o===0||c%o!==0)throw new ValueError(s);r[i]=c/o}else if(c!==o)throw new ValueError(s);return r}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);const s=getExactlyOneTensor(e),r=s.shape,o=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return s.reshape(o)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Reshape.className="Reshape";registerClass(Reshape);class Permute extends Layer{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=range$2(1,e.dims.length+1);if(!arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new InputSpec({ndim:this.dims.length+1})]}computeOutputShape(e){e=getExactlyOneShape(e);const t=e.slice();return this.dims.forEach((s,r)=>{t[r+1]=e[s]}),t}call(e,t){return transpose$2(getExactlyOneTensor(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Permute.className="Permute";registerClass(Permute);class Masking extends Layer{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=getExactlyOneTensor(e);return any$2(notEqual$2(s,this.maskValue),-1)}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);const s=getExactlyOneTensor(e),i=any$2(notEqual$2(s,this.maskValue),-1,!0);return s.mul(i.asType(s.dtype))})}}Masking.className="Masking";registerClass(Masking);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Embedding extends Layer{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(toList(e.inputLength))}this.inputDim=e.inputDim,assertPositiveInteger(this.inputDim,"inputDim"),this.outputDim=e.outputDim,assertPositiveInteger(this.outputDim,"outputDim"),this.embeddingsInitializer=getInitializer(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=getRegularizer(e.embeddingsRegularizer),this.activityRegularizer=getRegularizer(e.activityRegularizer),this.embeddingsConstraint=getConstraint(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return tidy(()=>this.maskZero?(e=getExactlyOneTensor(e),notEqual$2(e,zerosLike$2(e))):null)}computeOutputShape(e){if(e=getExactlyOneShape(e),this.inputLength==null)return[...e,this.outputDim];const t=toList(this.inputLength);if(t.length!==e.length-1)throw new ValueError(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<t.length;++r){const o=t[r],i=e[r+1];if(o!=null&&i!=null&&o!==i)throw new ValueError(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);o==null&&(t[s]=i),s++}}return[e[0],...t,this.outputDim]}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);let s=getExactlyOneTensor(e);return s.dtype!=="int32"&&(s=cast$2(s,"int32")),gather(this.embeddings.read(),s.as1D()).reshape(getExactlyOneShape(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:serializeInitializer(this.embeddingsInitializer),embeddingsRegularizer:serializeRegularizer(this.embeddingsRegularizer),activityRegularizer:serializeRegularizer(this.activityRegularizer),embeddingsConstraint:serializeConstraint(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Embedding.className="Embedding";registerClass(Embedding);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Merge extends Layer{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new NotImplementedError}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const o=e[e.length-t.length+r],i=t[r];if(o==null||i==null||o<0||i<0)s.push(null);else if(o===1)s.push(i);else if(i===1)s.push(o);else{if(o!==i)throw new ValueError("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(o)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[getExactlyOneShape(e)]),e=e,e.length<2)throw new ValueError(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const o of e)o!=null&&o[0]!==null&&t.push(o[0]);if(t=unique$2(t),t.length>1)throw new ValueError(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let o=1;o<e.length;++o){const i=e[o]==null?null:e[o].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const r=e.map(o=>o.length);e.indexOf(null)===-1&&unique$2(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return tidy(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(o=>o.rank);if(r.indexOf(null)===-1){const o=max$2(r);for(let i of e){const c=i.rank;for(let a=0;a<o-c;++a)i=expandDims$2(i,1);s.push(i)}return this.mergeFunction(s)}else{let o=!1;for(const a of e){const l=a.rank;if(l==null){const d=a.shape,f=d[0],y=d.slice(1).concat([f]);let m=a.reshape([f].concat(arrayProd(d.slice(1))));m=transpose$2(m,[1,0]),m=m.reshape(y),s.push(m),o=!0}else if(l>1){const d=range$2(1,l).concat([0]);s.push(transpose$2(a,d)),o=!0}else s.push(a)}let i=this.mergeFunction(s);const c=i.rank;if(o){if(c==null){const a=i.shape,l=a.length,d=a[l-1],f=[d].concat(a.slice(0,a.length-1));i=transpose$2(i.reshape([-1,d]),[1,0]).reshape(f)}else if(c>1){const a=[c-1].concat(range$2(0,c-1));i=transpose$2(i,a)}}return i}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){const o=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,o)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=unique$2(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return tidy(()=>{if(t==null)return null;if(!Array.isArray(t))throw new ValueError("`mask` should be an Array");if(!Array.isArray(e))throw new ValueError("`inputs` should be an Array");if(t.length!==e.length)throw new ValueError(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:expandDims$3(r,0));let s=t[0];for(let r=1;r<t.length-1;++r)s=logicalAnd$2(s,t[r]);return s})}}class Add extends Merge{constructor(e){super(e)}mergeFunction(e){return tidy(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=add$2(t,e[s]);return t})}}Add.className="Add";registerClass(Add);class Multiply extends Merge{constructor(e){super(e)}mergeFunction(e){return tidy(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=mul(t,e[s]);return t})}}Multiply.className="Multiply";registerClass(Multiply);class Average extends Merge{constructor(e){super(e)}mergeFunction(e){return tidy(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=add$2(t,e[s]);return mul(1/e.length,t)})}}Average.className="Average";registerClass(Average);class Maximum extends Merge{constructor(e){super(e)}mergeFunction(e){return tidy(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=maximum$3(t,e[s]);return t})}}Maximum.className="Maximum";registerClass(Maximum);class Minimum extends Merge{constructor(e){super(e)}mergeFunction(e){return tidy(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=minimum$3(t,e[s]);return t})}}Minimum.className="Minimum";registerClass(Minimum);class Concatenate extends Merge{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new ValueError("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(r!=null){t=!1;break}if(t)return;const s=[];for(let r=0;r<e.length;++r){const o=e[r].slice();o.splice(this.axis,1);let i=!1;for(const c of s)if(arraysEqual(c,o)){i=!0;break}i||s.push(o)}if(s.length>1)throw new ValueError("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return tidy(()=>concatenate$1(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new ValueError("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const o of t.slice(1)){if(s[r]==null||o[r]==null){s[r]=null;break}s[r]+=o[r]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new ValueError("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ValueError("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ValueError(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return tidy(()=>{let s=!0;if(t.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const r=[];for(let i=0;i<e.length;++i)t[i]==null?r.push(onesLike$2(e[i]).asType("bool")):t[i].rank<e[i].rank?r.push(expandDims$3(t[i],-1)):r.push(t[i]);const o=concat$2(r,this.axis);return all$2(o,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}Concatenate.className="Concatenate";registerClass(Concatenate);function interpretAxis(n,e){for(;n<0;)n+=e;return n}function batchDot(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new NotImplementedError("batchDot is not implemented for tensors of 4D or higher rank yet");if(assert$1(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),assert$1(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new NotImplementedError("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=e.shape.length;t==null&&(t=[s-1,r-2]);const o=t;return tidy(()=>{let i;if(s>r){i=s-r;const a=[];for(let l=0;l<i;++l)a.push(1);e=e.reshape(e.shape.concat(a))}else if(r>s){i=r-s;const a=[];for(let l=0;l<i;++l)a.push(1);n=n.reshape(n.shape.concat(a))}else i=0;let c;if(n.shape.length===2&&e.shape.length===2)o[0]===o[1]?c=n.mul(e).sum(o[0]):c=n.transpose([1,0]).mul(e).sum(o[1]);else{const a=o[0]!==n.shape.length-1,l=o[1]===e.shape.length-1;c=n.matMul(e,a,l)}if(i>0){let a;s>r?a=s+r-3:a=s-1;const l=[];for(let d=a;d<a+i;++d)l.push(d);c=c.squeeze(l)}return c.shape.length===1&&(c=c.expandDims(1)),c})}class Dot extends Merge{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){assert$1(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new NotImplementedError("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);if(t[r[0]]!==s[r[1]])throw new ValueError(`Dimension incompatibility: ${t[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new ValueError(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((o,i)=>interpretAxis(o,e[i].shape.length)):r=[interpretAxis(this.axes,t.shape.length),interpretAxis(this.axes,s.shape.length)],this.normalize&&(t=l2Normalize(t,r[0]),s=l2Normalize(s,r[1])),batchDot(t,s,r)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[interpretAxis(this.axes,e.length),interpretAxis(this.axes,t.length)],s}computeOutputShape(e){assert$1(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new NotImplementedError("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);t.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const o=t.concat(s);return o.length===1&&o.push(1),o}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Dot.className="Dot";registerClass(Dot);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class GaussianNoise extends Layer{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);const s=getExactlyOneTensor(e);return inTrainPhase(()=>randomNormal$1(s.shape,0,this.stddev).add(s),()=>s,t.training||!1)})}}GaussianNoise.className="GaussianNoise";registerClass(GaussianNoise);class GaussianDropout extends Layer{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return tidy(()=>{this.invokeCallHook(e,t);const s=getExactlyOneTensor(e);return this.rate>0&&this.rate<1?inTrainPhase(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return s.mul(randomNormal$1(s.shape,1,o))},()=>s,t.training||!1):s})}}GaussianDropout.className="GaussianDropout";registerClass(GaussianDropout);class AlphaDropout extends Layer{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||getExactlyOneTensor(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return tidy(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return inTrainPhase(()=>{const o=getExactlyOneTensor(e),c=-1.6732632423543772*1.0507009873554805;let a=greaterEqual$2(randomUniform$1(s),this.rate);a=cast$2(a,"float32");const l=((1-this.rate)*(1+this.rate*c**2))**-.5,d=-l*c*this.rate;return o.mul(a).add(a.add(-1).mul(c)).mul(l).add(d)},()=>getExactlyOneTensor(e),t.training||!1)}return e})}}AlphaDropout.className="AlphaDropout";registerClass(AlphaDropout);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function batchNormalization$1(n,e,t,s,r,o=.001){let i;if(n.rank===2)i=batchNorm2d(n,e,t,s,r,o);else if(n.rank===3)i=batchNorm3d(n,e,t,s,r,o);else if(n.rank===4)i=batchNorm4d(n,e,t,s,r,o);else throw new NotImplementedError(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return i}function regularNormalizeBatchInTraining(n,e,t,s,r=.001){return tidy(()=>{const o=moments(n,s),i=o.mean,c=o.variance;return[batchNormalization$1(n,i,c,t,e,r),i,c]})}function broadcastNormalizeBatchInTraining(n,e,t,s,r=.001){return tidy(()=>{const o=moments(n,s),i=o.mean,c=o.variance,a=[];for(const h of range$2(0,n.rank))s.indexOf(h)!==-1?a.push(1):a.push(n.shape[h]);const l=i.reshape(a),d=c.reshape(a),f=e==null?null:e.reshape(a),y=t==null?null:t.reshape(a);return[batchNormalization$1(n,l,d,y,f,r),i,c]})}function normalizeBatchInTraining(n,e,t,s,r=.001){return arraysEqual(s.slice().sort(),range$2(0,n.rank-1))?regularNormalizeBatchInTraining(n,e,t,s,r):broadcastNormalizeBatchInTraining(n,e,t,s,r)}class BatchNormalization extends Layer{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=getInitializer(e.betaInitializer||"zeros"),this.gammaInitializer=getInitializer(e.gammaInitializer||"ones"),this.movingMeanInitializer=getInitializer(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=getInitializer(e.movingVarianceInitializer||"ones"),this.betaConstraint=getConstraint(e.betaConstraint),this.gammaConstraint=getConstraint(e.gammaConstraint),this.betaRegularizer=getRegularizer(e.betaRegularizer),this.gammaRegularizer=getRegularizer(e.gammaRegularizer)}build(e){e=getExactlyOneShape(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new ValueError(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new InputSpec({ndim:e.length,axes:{[t]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return tidy(()=>{const s=t.training==null?!1:t.training,r=getExactlyOneTensor(e),o=r.shape,i=o.length,c=range$2(0,i),a=this.axis>=0?this.axis:this.axis+i;c.splice(a,1);const l=pyListRepeat(1,i);l[a]=o[a];const d=c.slice();d.sort();const f=!arraysEqual(d,range$2(0,i).slice(0,i-1)),y=()=>{if(f){const I=this.movingMean.read().reshape(l),N=this.movingVariance.read().reshape(l),A=this.center?this.beta.read().reshape(l):null,T=this.scale?this.gamma.read().reshape(l):null;return batchNormalization$1(r,I,N,A,T,this.epsilon)}else return batchNormalization$1(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return y();const[m,h,g]=normalizeBatchInTraining(r,this.gamma.read(),this.beta.read(),c,this.epsilon),x=(I,N,A)=>{tidy(()=>{const T=1-A,P=I.read(),O=P.sub(N).mul(T);I.write(P.sub(O))})};return(()=>{x(this.movingMean,h,this.momentum),x(this.movingVariance,g,this.momentum)})(),m})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:serializeInitializer(this.betaInitializer),gammaInitializer:serializeInitializer(this.gammaInitializer),movingMeanInitializer:serializeInitializer(this.movingMeanInitializer),movingVarianceInitializer:serializeInitializer(this.movingVarianceInitializer),betaRegularizer:serializeRegularizer(this.betaRegularizer),gammaRegularizer:serializeRegularizer(this.gammaRegularizer),betaConstraint:serializeConstraint(this.betaConstraint),gammaConstraint:serializeConstraint(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}BatchNormalization.className="BatchNormalization";registerClass(BatchNormalization);class LayerNormalization extends Layer{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=getInitializer(e.betaInitializer||"zeros"),this.gammaInitializer=getInitializer(e.gammaInitializer||"ones"),this.betaRegularizer=getRegularizer(e.betaRegularizer),this.gammaRegularizer=getRegularizer(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=getExactlyOneShape(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=t);for(const o of this.axis)if(o<0||o>=t)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==unique$2(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>e[o]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const s=getExactlyOneTensor(e),r=s.shape,o=r.length;return tidy(()=>{let{mean:c,variance:a}=moments(s,this.axis,!0);const l=pyListRepeat(1,o);for(const g of this.axis)l[g]=r[g];const d=g=>g!=null&&g.shape.length!==o&&this.axis!==[o-1]?g.reshape(l):g;let f=d(this.gamma.read()),y=d(this.beta.read());const m=[],h=[];for(let g=0;g<o;++g)this.axis.indexOf(g)!==-1?(m.push(r[g]),h.push(1)):(m.push(1),h.push(r[g]));return c=c.tile(m),a=a.tile(m),f=f.tile(h),y=y.tile(h),batchNormalization$1(s,c,a,y,f,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:serializeInitializer(this.betaInitializer),gammaInitializer:serializeInitializer(this.gammaInitializer),betaRegularizer:serializeRegularizer(this.betaRegularizer),gammaRegularizer:serializeRegularizer(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}LayerNormalization.className="LayerNormalization";registerClass(LayerNormalization);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function spatial2dPadding(n,e,t){return tidy(()=>{if(n.rank!==4)throw new ValueError(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new ValueError("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=imageDataFormat()),t!=="channelsLast"&&t!=="channelsFirst")throw new ValueError(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],pad(n,s)})}class ZeroPadding2D extends Layer{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?imageDataFormat():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new ValueError(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new ValueError(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new ValueError(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(e){e=getExactlyOneShape(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return tidy(()=>spatial2dPadding(getExactlyOneTensor(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}ZeroPadding2D.className="ZeroPadding2D";registerClass(ZeroPadding2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pool2d(n,e,t,s,r,o){return tidy(()=>{checkDataFormat(r),checkPoolMode(o),checkPaddingMode(s),t==null&&(t=[1,1]),s==null&&(s="valid"),r==null&&(r=imageDataFormat()),o==null&&(o="max"),n=preprocessConv2DInput(n,r);let i;const c=s==="same"?"same":"valid";return o==="max"?i=maxPool$2(n,e,t,c):i=avgPool$2(n,e,t,c),r==="channelsFirst"&&(i=transpose$2(i,[0,3,1,2])),i})}function pool3d$1(n,e,t,s,r,o){return tidy(()=>{checkDataFormat(r),checkPoolMode(o),checkPaddingMode(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),r==null&&(r=imageDataFormat()),o==null&&(o="max"),n=preprocessConv3DInput(n,r);let i;const c=s==="same"?"same":"valid";return o==="max"?i=maxPool3d$1(n,e,t,c):i=avgPool3d$1(n,e,t,c),r==="channelsFirst"&&(i=transpose$2(i,[0,4,1,2,3])),i})}class Pooling1D extends Layer{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new ValueError(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(assertPositiveInteger(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new ValueError(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);assertPositiveInteger(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:3})]}computeOutputShape(e){e=getExactlyOneShape(e);const t=convOutputLength(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return tidy(()=>{this.invokeCallHook(e,t),e=expandDims$2(getExactlyOneTensor(e),2);const s=this.poolingFunction(getExactlyOneTensor(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return squeeze(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class MaxPooling1D extends Pooling1D{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return checkDataFormat(o),checkPaddingMode(r),pool2d(e,t,s,r,o,"max")}}MaxPooling1D.className="MaxPooling1D";registerClass(MaxPooling1D);class AveragePooling1D extends Pooling1D{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return checkDataFormat(o),checkPaddingMode(r),pool2d(e,t,s,r,o,"avg")}}AveragePooling1D.className="AveragePooling1D";registerClass(AveragePooling1D);class Pooling2D extends Layer{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new ValueError(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];assertPositiveInteger(this.poolSize,"poolSize"),assertPositiveInteger(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,checkDataFormat(this.dataFormat),checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(e){e=getExactlyOneShape(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=convOutputLength(t,this.poolSize[0],this.padding,this.strides[0]),s=convOutputLength(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return tidy(()=>(this.invokeCallHook(e,t),this.poolingFunction(getExactlyOneTensor(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class MaxPooling2D extends Pooling2D{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return checkDataFormat(o),checkPaddingMode(r),pool2d(e,t,s,r,o,"max")}}MaxPooling2D.className="MaxPooling2D";registerClass(MaxPooling2D);class AveragePooling2D extends Pooling2D{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return checkDataFormat(o),checkPaddingMode(r),pool2d(e,t,s,r,o,"avg")}}AveragePooling2D.className="AveragePooling2D";registerClass(AveragePooling2D);class Pooling3D extends Layer{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new ValueError(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];assertPositiveInteger(this.poolSize,"poolSize"),assertPositiveInteger(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,checkDataFormat(this.dataFormat),checkPaddingMode(this.padding),this.inputSpec=[new InputSpec({ndim:5})]}computeOutputShape(e){e=getExactlyOneShape(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=convOutputLength(t,this.poolSize[0],this.padding,this.strides[0]),s=convOutputLength(s,this.poolSize[1],this.padding,this.strides[1]),r=convOutputLength(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,r]:[e[0],t,s,r,e[4]]}call(e,t){return tidy(()=>(this.invokeCallHook(e,t),this.poolingFunction(getExactlyOneTensor(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class MaxPooling3D extends Pooling3D{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return checkDataFormat(o),checkPaddingMode(r),pool3d$1(e,t,s,r,o,"max")}}MaxPooling3D.className="MaxPooling3D";registerClass(MaxPooling3D);class AveragePooling3D extends Pooling3D{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return checkDataFormat(o),checkPaddingMode(r),pool3d$1(e,t,s,r,o,"avg")}}AveragePooling3D.className="AveragePooling3D";registerClass(AveragePooling3D);class GlobalPooling1D extends Layer{constructor(e){super(e),this.inputSpec=[new InputSpec({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new NotImplementedError}}class GlobalAveragePooling1D extends GlobalPooling1D{constructor(e){super(e||{})}call(e,t){return tidy(()=>{const s=getExactlyOneTensor(e);return mean$1(s,1)})}}GlobalAveragePooling1D.className="GlobalAveragePooling1D";registerClass(GlobalAveragePooling1D);class GlobalMaxPooling1D extends GlobalPooling1D{constructor(e){super(e||{})}call(e,t){return tidy(()=>{const s=getExactlyOneTensor(e);return max$3(s,1)})}}GlobalMaxPooling1D.className="GlobalMaxPooling1D";registerClass(GlobalMaxPooling1D);class GlobalPooling2D extends Layer{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,checkDataFormat(this.dataFormat),this.inputSpec=[new InputSpec({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new NotImplementedError}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class GlobalAveragePooling2D extends GlobalPooling2D{call(e,t){return tidy(()=>{const s=getExactlyOneTensor(e);return this.dataFormat==="channelsLast"?mean$1(s,[1,2]):mean$1(s,[2,3])})}}GlobalAveragePooling2D.className="GlobalAveragePooling2D";registerClass(GlobalAveragePooling2D);class GlobalMaxPooling2D extends GlobalPooling2D{call(e,t){return tidy(()=>{const s=getExactlyOneTensor(e);return this.dataFormat==="channelsLast"?max$3(s,[1,2]):max$3(s,[2,3])})}}GlobalMaxPooling2D.className="GlobalMaxPooling2D";registerClass(GlobalMaxPooling2D);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Wrapper extends Layer{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const r=t.layer,o=deserialize(r,s);delete t.layer;const i={layer:o};return Object.assign(i,t),new e(i)}}class TimeDistributed extends Wrapper{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=getExactlyOneShape(e),e.length<3)throw new ValueError(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=getExactlyOneShape(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,t){return tidy(()=>(e=getExactlyOneTensor(e),rnn$1((i,c)=>[getExactlyOneTensor(this.layer.call(i,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}TimeDistributed.className="TimeDistributed";registerClass(TimeDistributed);function checkBidirectionalMergeMode(n){checkStringTypeUnionValue(VALID_BIDIRECTIONAL_MERGE_MODES,"BidirectionalMergeMode",n)}const DEFAULT_BIDIRECTIONAL_MERGE_MODE="concat";class Bidirectional extends Wrapper{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=deserialize(s),t.goBackwards=t.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=deserialize(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?DEFAULT_BIDIRECTIONAL_MERGE_MODE:e.mergeMode,checkBidirectionalMergeMode(this.mergeMode),e.weights)throw new NotImplementedError("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,r,o;return this.returnState&&(o=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):singletonOrArray(r)}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=standardizeArgs(e,s,r,this.numConstants);if(e=o.inputs,s=o.initialState,r=o.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,t);const i=[],c=[];if(s!=null){const l=s.length;if(l%2>0)throw new ValueError("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,i.push(...s);const d=s.map(f=>new InputSpec({shape:f.shape}));this.forwardLayer.stateSpec=d.slice(0,l/2),this.backwardLayer.stateSpec=d.slice(l/2),c.push(...d)}if(r!=null)throw new NotImplementedError("Support for constants in Bidirectional layers is not implemented yet.");const a=i[0]instanceof SymbolicTensor;for(const l of i)if(l instanceof SymbolicTensor!==a)throw new ValueError("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(a){const l=[e].concat(i),d=this.inputSpec.concat(c),f=this.inputSpec;this.inputSpec=d;const y=super.apply(l,t);return this.inputSpec=f,y}else return super.apply(e,t)}call(e,t){return tidy(()=>{const s=t.initialState;let r,o;if(s==null)r=this.forwardLayer.call(e,t),o=this.backwardLayer.call(e,t);else{const a=s.slice(0,s.length/2),l=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),o=this.backwardLayer.call(e,Object.assign(t,{initialState:l}))}let i;this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=reverse$2(o,1));let c;return this.mergeMode==="concat"?c=concatenate$1([r,o]):this.mergeMode==="sum"?c=add$2(r,o):this.mergeMode==="ave"?c=mul(.5,add$2(r,o)):this.mergeMode==="mul"?c=mul(r,o):this.mergeMode==null&&(c=[r,o]),this.returnState?this.mergeMode==null?c.concat(i):[c].concat(i):c})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){nameScope(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),nameScope(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=deserialize(t.layer);if(delete t.layer,t.numConstants!=null)throw new NotImplementedError("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=s,new e(r)}}Bidirectional.className="Bidirectional";registerClass(Bidirectional);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function inputLayer(n){return new InputLayer(n)}function elu$2(n){return new ELU$3(n)}function reLU(n){return new ReLU(n)}function leakyReLU(n){return new LeakyReLU(n)}function prelu$2(n){return new PReLU(n)}function softmax$2(n){return new Softmax(n)}function thresholdedReLU(n){return new ThresholdedReLU(n)}function conv1d(n){return new Conv1D(n)}function conv2d$1(n){return new Conv2D(n)}function conv2dTranspose(n){return new Conv2DTranspose(n)}function conv3d(n){return new Conv3D(n)}function separableConv2d(n){return new SeparableConv2D(n)}function cropping2D(n){return new Cropping2D(n)}function upSampling2d(n){return new UpSampling2D(n)}function depthwiseConv2d(n){return new DepthwiseConv2D(n)}function activation(n){return new Activation(n)}function dense(n){return new Dense(n)}function dropout(n){return new Dropout(n)}function spatialDropout1d(n){return new SpatialDropout1D(n)}function flatten(n){return new Flatten(n)}function repeatVector(n){return new RepeatVector(n)}function reshape$2(n){return new Reshape(n)}function permute(n){return new Permute(n)}function embedding(n){return new Embedding(n)}function add$1(n){return new Add(n)}function average(n){return new Average(n)}function concatenate(n){return new Concatenate(n)}function maximum$2(n){return new Maximum(n)}function minimum$2(n){return new Minimum(n)}function multiply$2(n){return new Multiply(n)}function dot(n){return new Dot(n)}function batchNormalization(n){return new BatchNormalization(n)}function layerNormalization(n){return new LayerNormalization(n)}function zeroPadding2d(n){return new ZeroPadding2D(n)}function averagePooling1d(n){return new AveragePooling1D(n)}function avgPool1d(n){return averagePooling1d(n)}function avgPooling1d(n){return averagePooling1d(n)}function averagePooling2d(n){return new AveragePooling2D(n)}function avgPool2d(n){return averagePooling2d(n)}function avgPooling2d(n){return averagePooling2d(n)}function averagePooling3d(n){return new AveragePooling3D(n)}function avgPool3d(n){return averagePooling3d(n)}function avgPooling3d(n){return averagePooling3d(n)}function globalAveragePooling1d(n){return new GlobalAveragePooling1D(n)}function globalAveragePooling2d(n){return new GlobalAveragePooling2D(n)}function globalMaxPooling1d(n){return new GlobalMaxPooling1D(n)}function globalMaxPooling2d(n){return new GlobalMaxPooling2D(n)}function maxPooling1d(n){return new MaxPooling1D(n)}function maxPooling2d(n){return new MaxPooling2D(n)}function maxPooling3d(n){return new MaxPooling3D(n)}function gru(n){return new GRU(n)}function gruCell(n){return new GRUCell(n)}function lstm(n){return new LSTM(n)}function lstmCell(n){return new LSTMCell(n)}function simpleRNN(n){return new SimpleRNN(n)}function simpleRNNCell(n){return new SimpleRNNCell(n)}function convLstm2d(n){return new ConvLSTM2D(n)}function convLstm2dCell(n){return new ConvLSTM2DCell(n)}function rnn(n){return new RNN(n)}function stackedRNNCells(n){return new StackedRNNCells(n)}function bidirectional(n){return new Bidirectional(n)}function timeDistributed(n){return new TimeDistributed(n)}const globalMaxPool1d=globalMaxPooling1d,globalMaxPool2d=globalMaxPooling2d,maxPool1d=maxPooling1d,maxPool2d=maxPooling2d;function gaussianNoise(n){return new GaussianNoise(n)}function gaussianDropout(n){return new GaussianDropout(n)}function alphaDropout(n){return new AlphaDropout(n)}function masking(n){return new Masking(n)}const exports_layers=Object.freeze(Object.defineProperty({__proto__:null,Layer,RNN,RNNCell,activation,add:add$1,alphaDropout,average,averagePooling1d,averagePooling2d,averagePooling3d,avgPool1d,avgPool2d,avgPool3d,avgPooling1d,avgPooling2d,avgPooling3d,batchNormalization,bidirectional,concatenate,conv1d,conv2d:conv2d$1,conv2dTranspose,conv3d,convLstm2d,convLstm2dCell,cropping2D,dense,depthwiseConv2d,dot,dropout,elu:elu$2,embedding,flatten,gaussianDropout,gaussianNoise,globalAveragePooling1d,globalAveragePooling2d,globalMaxPool1d,globalMaxPool2d,globalMaxPooling1d,globalMaxPooling2d,gru,gruCell,input,inputLayer,layerNormalization,leakyReLU,lstm,lstmCell,masking,maxPool1d,maxPool2d,maxPooling1d,maxPooling2d,maxPooling3d,maximum:maximum$2,minimum:minimum$2,multiply:multiply$2,permute,prelu:prelu$2,reLU,repeatVector,reshape:reshape$2,rnn,separableConv2d,simpleRNN,simpleRNNCell,softmax:softmax$2,spatialDropout1d,stackedRNNCells,thresholdedReLU,timeDistributed,upSampling2d,zeroPadding2d},Symbol.toStringTag,{value:"Module"}));function binaryAccuracy(n,e){return binaryAccuracy$1(n,e)}function binaryCrossentropy(n,e){return binaryCrossentropy$1(n,e)}function sparseCategoricalAccuracy(n,e){return sparseCategoricalAccuracy$1(n,e)}function categoricalAccuracy(n,e){return categoricalAccuracy$1(n,e)}function categoricalCrossentropy(n,e){return categoricalCrossentropy$1(n,e)}function precision(n,e){return precision$1(n,e)}function recall(n,e){return recall$1(n,e)}function cosineProximity(n,e){return cosineProximity$1(n,e)}function meanAbsoluteError(n,e){return meanAbsoluteError$1(n,e)}function meanAbsolutePercentageError(n,e){return meanAbsolutePercentageError$1(n,e)}function MAPE(n,e){return meanAbsolutePercentageError$1(n,e)}function mape(n,e){return meanAbsolutePercentageError$1(n,e)}function meanSquaredError(n,e){return meanSquaredError$1(n,e)}function MSE(n,e){return meanSquaredError$1(n,e)}function mse(n,e){return meanSquaredError$1(n,e)}const exports_metrics=Object.freeze(Object.defineProperty({__proto__:null,MAPE,MSE,binaryAccuracy,binaryCrossentropy,categoricalAccuracy,categoricalCrossentropy,cosineProximity,mape,meanAbsoluteError,meanAbsolutePercentageError,meanSquaredError,mse,precision,recall,sparseCategoricalAccuracy},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const exports_models=Object.freeze(Object.defineProperty({__proto__:null,modelFromJSON},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function l1l2(n){return new L1L2(n)}function l1(n){return l1$1(n)}function l2(n){return l2$1(n)}const exports_regularizers=Object.freeze(Object.defineProperty({__proto__:null,l1,l1l2,l2},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Callback extends BaseCallback{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof LayersModel))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function less$2(n,e){return n<e}function greater$2(n,e){return n>e}class EarlyStopping extends Callback{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new NotImplementedError("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=less$2:this.mode==="max"?this.monitorFunc=greater$2:this.monitor.indexOf("acc")!==-1?this.monitorFunc=greater$2:this.monitorFunc=less$2,this.monitorFunc===less$2&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===less$2?1/0:-1/0}async onEpochEnd(e,t){await resolveScalarsInLogs(t);const s=this.getMonitorValue(t);s!=null&&(this.monitorFunc(s-this.minDelta,this.best)?(this.best=s,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});const t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}function earlyStopping(n){return new EarlyStopping(n)}const callbacks={earlyStopping};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var DataType;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(DataType||(DataType={}));var SaverDef;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(SaverDef||(SaverDef={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CUSTOM_OPS={};function registerOp(n,e){const t={tfOpName:n,category:"custom",inputs:[],attrs:[],customExecutor:e};CUSTOM_OPS[n]=t}function getRegisteredOp(n){return CUSTOM_OPS[n]}function deregisterOp(n){delete CUSTOM_OPS[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getParamValue(n,e,t,s,r){const o=e.inputParams[n];if(o&&o.inputIndexStart!==void 0){const c=o.inputIndexStart,a=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?c+1:o.inputIndexEnd;if(o.type==="tensor")return getTensor(e.inputNames[o.inputIndexStart],t,s,r);if(o.type==="tensors")return e.inputNames.slice(c,a).map(y=>getTensor(y,t,s,r));const l=getTensor(e.inputNames.slice(c)[0],t,s,r),d=l.dataSync();return o.type==="number"?d[0]:toNestedArray(l.shape,d)}const i=e.attrParams[n];return i&&i.value}function getTensor(n,e,t,s){const[r,o]=parseNodeName(n);if(s!=null){const c=s.getHashTableHandleByName(r);if(c!=null)return c}const i=t.currentContextIds.find(c=>!!e[getNodeNameWithContextId(r,c)]);return i!==void 0?e[getNodeNameWithContextId(r,i)][o]:void 0}function getTensorsForCurrentContenxt(n,e,t){return e[getNodeNameWithContextId(n,t.currentContextId)]}function getNodeNameAndIndex(n,e){const[t,s]=parseNodeName(n);return[getNodeNameWithContextId(t,e&&e.currentContextId),s]}function getNodeNameWithContextId(n,e){return e?`${n}-${e}`:n}function parseNodeName(n){const e=n.split(":");return e.length===1?[n,0]:[e[0],Number(e[e.length-1])]}function getPadding(n,e,t){let s=getParamValue("pad",n,e,t);if(s==="explicit"){s=getParamValue("explicitPaddings",n,e,t);const r=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)r[o][0]=s[o*2],r[o][1]=s[o*2+1];return r}return s}function cloneTensor(n){return n.kept?n:clone(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$g=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],arithmetic=Object.freeze(Object.defineProperty({__proto__:null,json:json$g},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$f=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],basicMath=Object.freeze(Object.defineProperty({__proto__:null,json:json$f},Symbol.toStringTag,{value:"Module"})),json$e=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],control=Object.freeze(Object.defineProperty({__proto__:null,json:json$e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$d=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],convolution=Object.freeze(Object.defineProperty({__proto__:null,json:json$d},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$c=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],creation=Object.freeze(Object.defineProperty({__proto__:null,json:json$c},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$b=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],dynamic=Object.freeze(Object.defineProperty({__proto__:null,json:json$b},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$a=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],evaluation=Object.freeze(Object.defineProperty({__proto__:null,json:json$a},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$9=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],graph=Object.freeze(Object.defineProperty({__proto__:null,json:json$9},Symbol.toStringTag,{value:"Module"})),json$8=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],hashTable=Object.freeze(Object.defineProperty({__proto__:null,json:json$8},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$7=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],image=Object.freeze(Object.defineProperty({__proto__:null,json:json$7},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$6=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],logical=Object.freeze(Object.defineProperty({__proto__:null,json:json$6},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$5=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],matrices=Object.freeze(Object.defineProperty({__proto__:null,json:json$5},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$4=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],normalization=Object.freeze(Object.defineProperty({__proto__:null,json:json$4},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$3=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],reduction=Object.freeze(Object.defineProperty({__proto__:null,json:json$3},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$2=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],sliceJoin=Object.freeze(Object.defineProperty({__proto__:null,json:json$2},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json$1=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],spectral=Object.freeze(Object.defineProperty({__proto__:null,json:json$1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const json=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}],transformation=Object.freeze(Object.defineProperty({__proto__:null,json},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OperationMapper{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[arithmetic,basicMath,control,convolution,creation,dynamic,evaluation,logical,image,graph,matrices,normalization,reduction,sliceJoin,spectral,transformation,hashTable],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,t={}){const s=e.node,r=[],o=[],i=[],c=s.reduce((g,x)=>(g[x.name]=this.mapNode(x),x.op.startsWith("Placeholder")?r.push(g[x.name]):x.op==="Const"?o.push(g[x.name]):(x.input==null||x.input.length===0)&&i.push(g[x.name]),g),{});let a=[];const l=[];let d={},f={};t!=null&&(d=this.mapSignatureEntries(t.inputs),f=this.mapSignatureEntries(t.outputs));const y=Object.keys(c);y.forEach(g=>{const x=c[g];x.inputNames.forEach(w=>{const[I]=getNodeNameAndIndex(w);x.inputs.push(c[I]),c[I].children.push(x)})}),Object.keys(f).length===0?y.forEach(g=>{const x=c[g];x.children.length===0&&l.push(x)}):Object.keys(f).forEach(g=>{const[x]=getNodeNameAndIndex(g),w=c[x];w!=null&&(w.signatureKey=f[g],l.push(w))}),Object.keys(d).length>0?Object.keys(d).forEach(g=>{const[x]=getNodeNameAndIndex(g),w=c[x];w&&(w.signatureKey=d[g],a.push(w))}):a=r;let m={};e.library!=null&&e.library.function!=null&&(m=e.library.function.reduce((g,x)=>(g[x.signature.name]=this.mapFunction(x),g),{}));const h={nodes:c,inputs:a,outputs:l,weights:o,placeholders:r,signature:t,functions:m};return i.length>0&&(h.initNodes=i),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=getRegisteredOp(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.substr(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((r,o)=>(r[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},r),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((r,o)=>{const i=o.type;let c;switch(o.type){case"string":c=getStringParam(e.attr,o.tfName,o.defaultValue),c===void 0&&o.tfDeprecatedName&&(c=getStringParam(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":c=getStringArrayParam(e.attr,o.tfName,o.defaultValue),c===void 0&&o.tfDeprecatedName&&(c=getStringArrayParam(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":c=getNumberParam(e.attr,o.tfName,o.defaultValue||0),c===void 0&&o.tfDeprecatedName&&(c=getNumberParam(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":c=getNumericArrayParam(e.attr,o.tfName,o.defaultValue),c===void 0&&o.tfDeprecatedName&&(c=getNumericArrayParam(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":c=getBoolParam(e.attr,o.tfName,o.defaultValue),c===void 0&&o.tfDeprecatedName&&(c=getBoolParam(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":c=getBoolArrayParam(e.attr,o.tfName,o.defaultValue),c===void 0&&o.tfDeprecatedName&&(c=getBoolArrayParam(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":c=getTensorShapeParam(e.attr,o.tfName,o.defaultValue),c===void 0&&o.tfDeprecatedName&&(c=getTensorShapeParam(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":c=getTensorShapeArrayParam(e.attr,o.tfName,o.defaultValue),c===void 0&&o.tfDeprecatedName&&(c=getTensorShapeArrayParam(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":c=getDtypeParam(e.attr,o.tfName,o.defaultValue),c===void 0&&o.tfDeprecatedName&&(c=getDtypeParam(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":c=getDtypeArrayParam(e.attr,o.tfName,o.defaultValue),c===void 0&&o.tfDeprecatedName&&(c=getDtypeArrayParam(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":c=getFuncParam(e.attr,o.tfName,o.defaultValue),c===void 0&&o.tfDeprecatedName&&(c=getFuncParam(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return r[o.name]={value:c,type:i},r},{})),s}mapFunction(e){const t=e.nodeDef,s=[],r=[];let o={};t!=null&&(o=t.reduce((f,y)=>(f[y.name]=this.mapNode(y),y.op==="Const"&&r.push(f[y.name]),f),{}));const i=[],c=[];e.signature.inputArg.forEach(f=>{const[y]=getNodeNameAndIndex(f.name),m={name:y,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:parseDtypeParam(f.type),type:"dtype"}},children:[]};m.signatureKey=f.name,i.push(m),o[y]=m}),Object.keys(o).forEach(f=>{const y=o[f];y.inputNames.forEach(m=>{const[h]=getNodeNameAndIndex(m);y.inputs.push(o[h]),o[h].children.push(y)})});const l=e.ret;e.signature.outputArg.forEach(f=>{const[y,m]=getNodeNameAndIndex(l[f.name]),h=o[y];h!=null&&(h.defaultOutput=m,c.push(h))});const d=this.mapArgsToSignature(e);return{nodes:o,inputs:i,outputs:c,weights:r,placeholders:s,signature:d}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function decodeBase64(n){const e=env().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function parseStringParam(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):decodeBase64(n);return e?t:t.toLowerCase()}function getStringParam(n,e,t,s=!1){const r=n[e];return r!=null?parseStringParam(r.s,s):t}function getBoolParam(n,e,t){const s=n[e];return s?s.b:t}function getNumberParam(n,e,t){const s=n[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:t;return typeof r=="number"?r:parseInt(r,10)}function parseDtypeParam(n){switch(typeof n=="string"&&(n=DataType[n]),n){case DataType.DT_FLOAT:return"float32";case DataType.DT_INT32:case DataType.DT_INT64:case DataType.DT_INT8:case DataType.DT_UINT8:return"int32";case DataType.DT_BOOL:return"bool";case DataType.DT_DOUBLE:return"float32";case DataType.DT_STRING:return"string";default:return null}}function getFuncParam(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function getDtypeParam(n,e,t){const s=n[e];return s&&s.type?parseDtypeParam(s.type):t}function getDtypeArrayParam(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(r=>parseDtypeParam(r)):t}function parseTensorShapeParam(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function getTensorShapeParam(n,e,t){const s=n[e];return s&&s.shape?parseTensorShapeParam(s.shape):t}function getNumericArrayParam(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):t}function getStringArrayParam(n,e,t,s=!1){const r=n[e];return r&&r.list&&r.list.s?r.list.s.map(o=>parseStringParam(o,s)):t}function getTensorShapeArrayParam(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>parseTensorShapeParam(r)):t}function getBoolArrayParam(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NodeValueImpl{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,o)=>(r[o]=this.getAttr(o),r),{}))}getInput(e){return getTensor(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return getTensor(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return getNumberParam(this.node.rawAttrs,e,t);if(s.s!=null)return getStringParam(this.node.rawAttrs,e,t);if(s.b!=null)return getBoolParam(this.node.rawAttrs,e,t);if(s.shape!=null)return getTensorShapeParam(this.node.rawAttrs,e,t);if(s.type!=null)return getDtypeParam(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return getNumericArrayParam(this.node.rawAttrs,e,t);if(s.list.s!=null)return getStringArrayParam(this.node.rawAttrs,e,t);if(s.list.shape!=null)return getTensorShapeArrayParam(this.node.rawAttrs,e,t);if(s.list.b!=null)return getBoolArrayParam(this.node.rawAttrs,e,t);if(s.list.type!=null)return getDtypeArrayParam(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$h=(n,e,t)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[add$2(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"AddN":return[addN$2(getParamValue("tensors",n,e,t))];case"FloorMod":case"Mod":return[mod$2(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"Mul":return[mul(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"RealDiv":case"Div":return[div$1(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"DivNoNan":return[divNoNan(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"FloorDiv":return[floorDiv$2(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"Sub":return[sub$2(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"Minimum":return[minimum$3(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"Maximum":return[maximum$3(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"Pow":return[pow$2(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"SquaredDifference":return[squaredDifference$2(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$g=(n,e,t)=>{switch(n.op){case"Abs":case"ComplexAbs":return[abs$2(getParamValue("x",n,e,t))];case"Acos":return[acos$2(getParamValue("x",n,e,t))];case"Acosh":return[acosh$2(getParamValue("x",n,e,t))];case"Asin":return[asin$2(getParamValue("x",n,e,t))];case"Asinh":return[asinh$2(getParamValue("x",n,e,t))];case"Atan":return[atan$2(getParamValue("x",n,e,t))];case"Atan2":return[atan2$2(getParamValue("x",n,e,t),getParamValue("y",n,e,t))];case"Atanh":return[atanh$2(getParamValue("x",n,e,t))];case"Ceil":return[ceil$2(getParamValue("x",n,e,t))];case"Complex":return[complex$2(getParamValue("real",n,e,t),getParamValue("imag",n,e,t))];case"Cos":return[cos$2(getParamValue("x",n,e,t))];case"Cosh":return[cosh$2(getParamValue("x",n,e,t))];case"Elu":return[elu$4(getParamValue("x",n,e,t))];case"Erf":return[erf$2(getParamValue("x",n,e,t))];case"Exp":return[exp$2(getParamValue("x",n,e,t))];case"Expm1":return[expm1$2(getParamValue("x",n,e,t))];case"Floor":return[floor$2(getParamValue("x",n,e,t))];case"Log":return[log$3(getParamValue("x",n,e,t))];case"Log1p":return[log1p$2(getParamValue("x",n,e,t))];case"Imag":return[imag$2(getParamValue("x",n,e,t))];case"Neg":return[neg$2(getParamValue("x",n,e,t))];case"Reciprocal":return[reciprocal$2(getParamValue("x",n,e,t))];case"Real":return[real$2(getParamValue("x",n,e,t))];case"Relu":return[relu$2(getParamValue("x",n,e,t))];case"Round":return[round$2(getParamValue("x",n,e,t))];case"Selu":return[selu$2(getParamValue("x",n,e,t))];case"Sigmoid":return[sigmoid$2(getParamValue("x",n,e,t))];case"Sin":return[sin$2(getParamValue("x",n,e,t))];case"Sign":return[sign$2(getParamValue("x",n,e,t))];case"Sinh":return[sinh$2(getParamValue("x",n,e,t))];case"Softplus":return[softplus$2(getParamValue("x",n,e,t))];case"Sqrt":return[sqrt$2(getParamValue("x",n,e,t))];case"Square":return[square$2(getParamValue("x",n,e,t))];case"Tanh":return[tanh$2(getParamValue("x",n,e,t))];case"Tan":return[tan$2(getParamValue("x",n,e,t))];case"ClipByValue":return[clipByValue$1(getParamValue("x",n,e,t),getParamValue("clipValueMin",n,e,t),getParamValue("clipValueMax",n,e,t))];case"Relu6":return[relu6$2(getParamValue("x",n,e,t))];case"Rsqrt":return[rsqrt$2(getTensor(n.inputNames[0],e,t))];case"Prod":return[prod$2(getParamValue("x",n,e,t),getParamValue("axes",n,e,t))];case"LeakyRelu":return[leakyRelu$2(getParamValue("x",n,e,t),getParamValue("alpha",n,e,t))];case"Prelu":return[prelu$3(getParamValue("x",n,e,t),getParamValue("alpha",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function assertShapesMatchAllowUndefinedSize(n,e,t=""){assert$1(shapesEqualAllowUndefinedSize(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function shapesEqualAllowUndefinedSize(n,e){if(n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==-1&&e[t]!==-1&&n[t]!==e[t])return!1;return!0}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TensorArray{constructor(e,t,s,r,o,i,c){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=o,this.dynamicSize=i,this.clearAfterRead=c,this.tensors=[],this.closed_=!1,this.idTensor=scalar(0),keep(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),assertShapesMatchAllowUndefinedSize(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,keep(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,r)=>this.write(s,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return tensor([],[0].concat(this.elementShape));const s=this.readMany(e);return assertShapesMatchAllowUndefinedSize(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),stack(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return tensor([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const s=this.readMany(t);return assertShapesMatchAllowUndefinedSize(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),concat$2(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,unstack(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const r=e.map(a=>(s+=a,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=s===0?0:t.size/s,i=[];tidy(()=>{t=reshape$3(t,[1,s,o]);for(let a=0;a<e.length;++a){const d=[0,a===0?0:r[a-1],0],f=[1,e[a],o];i[a]=reshape$3(slice$2(t,d,f),this.elementShape)}return i});const c=[];for(let a=0;a<e.length;a++)c[a]=a;this.writeMany(c,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TensorList{constructor(e,t,s,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e!=null&&e.forEach(o=>{if(s!==o.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`);assertShapesMatchAllowUndefinedSize(t,o.shape,"TensorList shape mismatch: "),keep(o)}),this.idTensor=scalar(0),this.maxNumElements=r,keep(this.idTensor)}get id(){return this.idTensor.id}copy(){return new TensorList([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);return assertShapesMatchAllowUndefinedSize(e,this.elementShape,"TensorList shape mismatch: "),tidy(()=>{const r=this.tensors.map(o=>reshape$3(o,e));return stack(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=this.tensors.pop();return assertShapesMatchAllowUndefinedSize(s.shape,e,"TensorList shape mismatch: "),reshape$3(s,e)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(assertShapesMatchAllowUndefinedSize(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");keep(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);return assertShapesMatchAllowUndefinedSize(this.tensors[e].shape,t,"TensorList shape mismatch: "),this.tensors[e]}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);assertShapesMatchAllowUndefinedSize(this.elementShape,t.shape,"TensorList shape mismatch: "),keep(t),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);return assertShapesMatchAllowUndefinedSize(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size()),e.length===0?tensor([],[0].concat(this.elementShape)):tidy(()=>{const r=e.map(o=>reshape$3(this.tensors[o],s));return stack(r,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);return assertShapesMatchAllowUndefinedSize(this.elementShape,t,"TensorList shape mismatch: "),this.size()===0?tensor([],[0].concat(this.elementShape)):tidy(()=>{const s=this.tensors.map(r=>reshape$3(r,t));return concat$2(s,0)})}}function fromTensor(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const r=n.shape.slice(1);assertShapesMatchAllowUndefinedSize(r,e,"TensorList shape mismatch: ");const o=unstack(n);return new TensorList(o,e,s)}function reserve(n,e,t){return new TensorList([],n,e,t)}function scatter(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const o=new TensorList([],t,n.dtype,s),i=unstack(n,0);return e.forEach((c,a)=>{o.setItem(c,i[a])}),o}function split(n,e,t){let s=0;const r=e.map(a=>(s+=a,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const o=s===0?0:n.size/s,i=tidy(()=>{const a=[];n=reshape$3(n,[1,s,o]);for(let l=0;l<e.length;++l){const f=[0,l===0?0:r[l-1],0],y=[1,e[l],o];a[l]=reshape$3(slice$2(n,f,y),t)}return n.dispose(),a}),c=new TensorList([],t,n.dtype,e.length);for(let a=0;a<i.length;a++)c.setItem(a,i[a]);return c}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$f=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=getParamValue("thenBranch",n,e,t),r=getParamValue("elseBranch",n,e,t),o=getParamValue("cond",n,e,t),i=getParamValue("args",n,e,t);return(await o.data())[0]?t.functionMap[s].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap):t.functionMap[r].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=getParamValue("body",n,e,t),r=getParamValue("cond",n,e,t),o=getParamValue("args",n,e,t),i=await t.functionMap[r].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap),c=o.map(d=>d.id);let a=await i[0].data();i.forEach(d=>{!d.kept&&c.indexOf(d.id)===-1&&d.dispose()});let l=o;for(;a[0];){const d=l;l=await t.functionMap[s].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);const f=l.map(m=>m.id);d.forEach(m=>{!m.kept&&c.indexOf(m.id)===-1&&f.indexOf(m.id)===-1&&m.dispose()});const y=await t.functionMap[r].executeFunctionAsync(l,t.tensorArrayMap,t.tensorListMap);a=await y[0].data(),y.forEach(m=>{!m.kept&&c.indexOf(m.id)===-1&&f.indexOf(m.id)===-1&&m.dispose()})}return l}case"LoopCond":{const s=getParamValue("pred",n,e,t);return[cloneTensor(s)]}case"Switch":{const s=getParamValue("pred",n,e,t);let r=getParamValue("data",n,e,t);return r.kept||(r=cloneTensor(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>getTensor(r,e,t)!==void 0);if(s){const r=getTensor(s,e,t);return[cloneTensor(r)]}return}case"Enter":{const s=getParamValue("frameName",n,e,t),r=getParamValue("tensor",n,e,t);return t.enterFrame(s),[cloneTensor(r)]}case"Exit":{const s=getParamValue("tensor",n,e,t);return t.exitFrame(),[cloneTensor(s)]}case"NextIteration":{const s=getParamValue("tensor",n,e,t);return t.nextIteration(),[cloneTensor(s)]}case"TensorArrayV3":{const s=getParamValue("size",n,e,t),r=getParamValue("dtype",n,e,t),o=getParamValue("elementShape",n,e,t),i=getParamValue("dynamicSize",n,e,t),c=getParamValue("clearAfterRead",n,e,t),a=getParamValue("identicalElementShapes",n,e,t),l=getParamValue("name",n,e,t),d=new TensorArray(l,r,s,o,a,i,c);return t.addTensorArray(d),[d.idTensor,scalar(1)]}case"TensorArrayWriteV3":{const s=getParamValue("tensorArrayId",n,e,t),r=getParamValue("index",n,e,t),o=getParamValue("tensor",n,e,t),i=t.getTensorArray(s.id);return i.write(r,o),[i.idTensor]}case"TensorArrayReadV3":{const s=getParamValue("tensorArrayId",n,e,t),r=getParamValue("index",n,e,t);return[t.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=getParamValue("tensorArrayId",n,e,t),r=getParamValue("indices",n,e,t),o=getParamValue("dtype",n,e,t);return[t.getTensorArray(s.id).gather(r,o)]}case"TensorArrayScatterV3":{const s=getParamValue("tensorArrayId",n,e,t),r=getParamValue("indices",n,e,t),o=getParamValue("tensor",n,e,t),i=t.getTensorArray(s.id);return i.scatter(r,o),[i.idTensor]}case"TensorArrayConcatV3":{const s=getParamValue("tensorArrayId",n,e,t),r=t.getTensorArray(s.id),o=getParamValue("dtype",n,e,t);return[r.concat(o)]}case"TensorArraySplitV3":{const s=getParamValue("tensorArrayId",n,e,t),r=getParamValue("tensor",n,e,t),o=getParamValue("lengths",n,e,t),i=t.getTensorArray(s.id);return i.split(o,r),[i.idTensor]}case"TensorArraySizeV3":{const s=getParamValue("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return[scalar(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=getParamValue("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=getParamValue("tensorListId",n,e,t),r=getParamValue("index",n,e,t),o=getParamValue("tensor",n,e,t),i=t.getTensorList(s.id);return i.setItem(r,o),[i.idTensor]}case"TensorListGetItem":{const s=getParamValue("tensorListId",n,e,t),r=getParamValue("index",n,e,t),o=getParamValue("elementShape",n,e,t),i=getParamValue("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(r,o,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=getParamValue("indices",n,e,t),r=getParamValue("tensor",n,e,t),o=getParamValue("elementShape",n,e,t),i=getParamValue("numElements",n,e,t),c=scatter(r,s,o,i);return t.addTensorList(c),[c.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=getParamValue("elementShape",n,e,t),r=getParamValue("elementDType",n,e,t);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const i=getParamValue(o,n,e,t),c=reserve(s,r,i);return t.addTensorList(c),[c.idTensor]}case"TensorListGather":{const s=getParamValue("tensorListId",n,e,t),r=getParamValue("indices",n,e,t),o=getParamValue("elementShape",n,e,t),i=getParamValue("elementDType",n,e,t);return[t.getTensorList(s.id).gather(r,i,o)]}case"TensorListStack":{const s=getParamValue("tensorListId",n,e,t),r=getParamValue("elementShape",n,e,t),o=getParamValue("elementDType",n,e,t),i=getParamValue("numElements",n,e,t);return[t.getTensorList(s.id).stack(r,o,i)]}case"TensorListFromTensor":{const s=getParamValue("tensor",n,e,t),r=getParamValue("elementShape",n,e,t),o=getParamValue("elementDType",n,e,t),i=fromTensor(s,r,o);return t.addTensorList(i),[i.idTensor]}case"TensorListConcat":{const s=getParamValue("tensorListId",n,e,t),r=t.getTensorList(s.id),o=getParamValue("dtype",n,e,t),i=getParamValue("elementShape",n,e,t);return[r.concat(o,i)]}case"TensorListPushBack":{const s=getParamValue("tensorListId",n,e,t),r=getParamValue("tensor",n,e,t),o=t.getTensorList(s.id);return o.pushBack(r),[o.idTensor]}case"TensorListPopBack":{const s=getParamValue("tensorListId",n,e,t),r=getParamValue("elementShape",n,e,t),o=getParamValue("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(r,o)]}case"TensorListSplit":{const s=getParamValue("tensor",n,e,t),r=getParamValue("elementShape",n,e,t),o=getParamValue("lengths",n,e,t),i=split(s,o,r);return t.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConvAndDepthWiseParams(n,e,t){const[s,r]=getParamValue("fusedOps",n,e,t),o=s==="biasadd",i=r==="prelu",c=s==="fusedbatchnorm",a=getParamValue("numArgs",n,e,t);if(o){if(i&&a!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&a!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=getParamValue("strides",n,e,t),d=getPadding(n,e,t),f=getParamValue("dataFormat",n,e,t).toUpperCase(),y=getParamValue("dilations",n,e,t),[m,h]=getParamValue("args",n,e,t),g=getParamValue("leakyreluAlpha",n,e,t);return{stride:l,pad:d,dataFormat:f,dilations:y,biasArg:m,preluArg:h,activationFunc:r,leakyreluAlpha:g}}const executeOp$e=(n,e,t)=>{switch(n.op){case"Conv1D":{const s=getParamValue("stride",n,e,t),r=getParamValue("pad",n,e,t),o=getParamValue("dataFormat",n,e,t).toUpperCase(),i=getParamValue("dilation",n,e,t);return[conv1d$1(getParamValue("x",n,e,t),getParamValue("filter",n,e,t),s,r,o,i)]}case"Conv2D":{const s=getParamValue("strides",n,e,t),r=getPadding(n,e,t),o=getParamValue("dataFormat",n,e,t).toUpperCase(),i=getParamValue("dilations",n,e,t);return[conv2d$3(getParamValue("x",n,e,t),getParamValue("filter",n,e,t),[s[1],s[2]],r,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:r,dataFormat:o,dilations:i,biasArg:c,preluArg:a,activationFunc:l,leakyreluAlpha:d}=fusedConvAndDepthWiseParams(n,e,t);return[conv2d$2({x:getParamValue("x",n,e,t),filter:getParamValue("filter",n,e,t),strides:[s[1],s[2]],pad:r,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:l,preluActivationWeights:a,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:r,dataFormat:o,dilations:i,biasArg:c,preluArg:a,activationFunc:l,leakyreluAlpha:d}=fusedConvAndDepthWiseParams(n,e,t);return[depthwiseConv2d$2({x:getParamValue("x",n,e,t),filter:getParamValue("filter",n,e,t),strides:[s[1],s[2]],pad:r,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:l,preluActivationWeights:a,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=getParamValue("outputShape",n,e,t),r=getParamValue("strides",n,e,t),o=getPadding(n,e,t);return[conv2dTranspose$1(getParamValue("x",n,e,t),getParamValue("filter",n,e,t),s,[r[1],r[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=getParamValue("strides",n,e,t),r=getPadding(n,e,t),o=getParamValue("dilations",n,e,t),i=getParamValue("dataFormat",n,e,t).toUpperCase();return[depthwiseConv2d$3(getParamValue("input",n,e,t),getParamValue("filter",n,e,t),[s[1],s[2]],r,i,[o[1],o[2]])]}case"Conv3D":{const s=getParamValue("strides",n,e,t),r=getParamValue("pad",n,e,t),o=getParamValue("dataFormat",n,e,t).toUpperCase(),i=getParamValue("dilations",n,e,t);return[conv3d$1(getParamValue("x",n,e,t),getParamValue("filter",n,e,t),[s[1],s[2],s[3]],r,o,[i[1],i[2],i[3]])]}case"AvgPool":{const s=getParamValue("strides",n,e,t),r=getParamValue("pad",n,e,t),o=getParamValue("kernelSize",n,e,t);return[avgPool$2(getParamValue("x",n,e,t),[o[1],o[2]],[s[1],s[2]],r)]}case"MaxPool":{const s=getParamValue("strides",n,e,t),r=getParamValue("pad",n,e,t),o=getParamValue("kernelSize",n,e,t);return[maxPool$2(getParamValue("x",n,e,t),[o[1],o[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{const s=getParamValue("strides",n,e,t),r=getParamValue("pad",n,e,t),o=getParamValue("kernelSize",n,e,t),i=getParamValue("includeBatchInIndex",n,e,t),{result:c,indexes:a}=maxPoolWithArgmax(getParamValue("x",n,e,t),[o[1],o[2]],[s[1],s[2]],r,i);return[c,a]}case"AvgPool3D":{const s=getParamValue("strides",n,e,t),r=getParamValue("pad",n,e,t),o=getParamValue("kernelSize",n,e,t);return[avgPool3d$1(getParamValue("x",n,e,t),[o[1],o[2],o[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{const s=getParamValue("strides",n,e,t),r=getParamValue("pad",n,e,t),o=getParamValue("kernelSize",n,e,t);return[maxPool3d$1(getParamValue("x",n,e,t),[o[1],o[2],o[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{const s=getParamValue("strides",n,e,t),r=getParamValue("pad",n,e,t),o=getParamValue("dilations",n,e,t),i=s[1],c=s[2],a=o[1],l=o[2];return[dilation2d(getParamValue("x",n,e,t),getParamValue("filter",n,e,t),[i,c],r,[a,l],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$d=(n,e,t)=>{switch(n.op){case"Fill":{const s=getParamValue("shape",n,e,t),r=getParamValue("dtype",n,e,t),o=getParamValue("value",n,e,t);return[fill$2(s,o,r)]}case"LinSpace":{const s=getParamValue("start",n,e,t),r=getParamValue("stop",n,e,t),o=getParamValue("num",n,e,t);return[linspace(s,r,o)]}case"Multinomial":{const s=getParamValue("logits",n,e,t),r=getParamValue("numSamples",n,e,t),o=getParamValue("seed",n,e,t);return[multinomial$2(s,r,o)]}case"OneHot":{const s=getParamValue("indices",n,e,t),r=getParamValue("depth",n,e,t),o=getParamValue("onValue",n,e,t),i=getParamValue("offValue",n,e,t);return[oneHot$2(s,r,o,i)]}case"Ones":return[ones$1(getParamValue("shape",n,e,t),getParamValue("dtype",n,e,t))];case"OnesLike":return[onesLike$2(getParamValue("x",n,e,t))];case"RandomUniform":return[randomUniform$1(getParamValue("shape",n,e,t),getParamValue("minval",n,e,t),getParamValue("maxval",n,e,t),getParamValue("dtype",n,e,t))];case"Range":{const s=getParamValue("start",n,e,t),r=getParamValue("stop",n,e,t),o=getParamValue("step",n,e,t);return[range$3(s,r,o,getParamValue("dtype",n,e,t))]}case"TruncatedNormal":{const s=getParamValue("shape",n,e,t),r=getParamValue("mean",n,e,t),o=getParamValue("stdDev",n,e,t),i=getParamValue("seed",n,e,t);return[truncatedNormal$1(s,r,o,getParamValue("dtype",n,e,t),i)]}case"Zeros":return[zeros$2(getParamValue("shape",n,e,t),getParamValue("dtype",n,e,t))];case"ZerosLike":return[zerosLike$2(getParamValue("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nmsParams(n,e,t){const s=getParamValue("boxes",n,e,t),r=getParamValue("scores",n,e,t),o=getParamValue("maxOutputSize",n,e,t),i=getParamValue("iouThreshold",n,e,t),c=getParamValue("scoreThreshold",n,e,t),a=getParamValue("softNmsSigma",n,e,t);return{boxes:s,scores:r,maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:a}}const executeOp$c=async(n,e,t)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:r,maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:a}=nmsParams(n,e,t),l=await image$1.nonMaxSuppressionWithScoreAsync(s,r,o,i,c,a);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:r,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=nmsParams(n,e,t),a=getParamValue("padToMaxOutputSize",n,e,t),l=await image$1.nonMaxSuppressionPaddedAsync(s,r,o,i,c,a);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:r,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=nmsParams(n,e,t);return[await image$1.nonMaxSuppressionAsync(s,r,o,i,c)]}case"Where":{const s=cast$3(getParamValue("condition",n,e,t),"bool"),r=[await whereAsync(s)];return s.dispose(),r}case"ListDiff":return setdiff1dAsync(getParamValue("x",n,e,t),getParamValue("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$b=(n,e,t)=>{switch(n.op){case"TopKV2":{const s=getParamValue("x",n,e,t),r=getParamValue("k",n,e,t),o=getParamValue("sorted",n,e,t),i=topk(s,r,o);return[i.values,i.indices]}case"Unique":{const s=getParamValue("x",n,e,t),r=unique$3(s);return[r.values,r.indices]}case"UniqueV2":{const s=getParamValue("x",n,e,t),r=getParamValue("axis",n,e,t),o=unique$3(s,r);return[o.values,o.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$a=(n,e,t)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const s=getParamValue("default",n,e,t);return[getTensor(n.name,e,t)||s];case"Placeholder":return[getTensor(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const l=getParamValue("x",n,e,t);return[cloneTensor(l)]}case"IdentityN":return getParamValue("x",n,e,t).map(l=>cloneTensor(l));case"Snapshot":const r=getParamValue("x",n,e,t);return[cloneTensor(r)];case"Shape":return[tensor1d(getParamValue("x",n,e,t).shape,"int32")];case"ShapeN":return getParamValue("x",n,e,t).map(l=>tensor1d(l.shape));case"Size":return[scalar(getParamValue("x",n,e,t).size,"int32")];case"Rank":return[scalar(getParamValue("x",n,e,t).rank,"int32")];case"NoOp":return[scalar(1)];case"Print":const o=getParamValue("x",n,e,t),i=getParamValue("data",n,e,t),c=getParamValue("message",n,e,t),a=getParamValue("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(c);for(let l=0;l<i.length;l++)console.log(Array.prototype.slice.call(i[l].dataSync()).slice(0,a));return[o];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HashTable{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=scalar(0),this.tensorMap=new Map,keep(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),tidy(()=>{const r=unstack(t),o=s.length,i=r.length;assert$1(o===i,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${i} elements.`);for(let c=0;c<o;c++){const a=s[c],l=r[c];keep(l),this.tensorMap.set(a,l)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return tidy(()=>{const r=[];for(let o=0;o<s.length;o++){const i=s[o],c=this.findWithDefault(i,t);r.push(c)}return stack(r)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return s??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$9=async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=getParamValue("keyDType",n,e,t),o=getParamValue("valueDType",n,e,t),i=new HashTable(r,o);return s.addHashTable(n.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=getParamValue("tableHandle",n,e,t,s),o=getParamValue("keys",n,e,t),i=getParamValue("values",n,e,t);return[await s.getHashTableById(r.id).import(o,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=getParamValue("tableHandle",n,e,t,s),o=getParamValue("keys",n,e,t),i=getParamValue("defaultValue",n,e,t);return[await s.getHashTableById(r.id).find(o,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$8=(n,e,t)=>{switch(n.op){case"ResizeBilinear":{const s=getParamValue("images",n,e,t),r=getParamValue("size",n,e,t),o=getParamValue("alignCorners",n,e,t),i=getParamValue("halfPixelCenters",n,e,t);return[image$1.resizeBilinear(s,[r[0],r[1]],o,i)]}case"ResizeNearestNeighbor":{const s=getParamValue("images",n,e,t),r=getParamValue("size",n,e,t),o=getParamValue("alignCorners",n,e,t),i=getParamValue("halfPixelCenters",n,e,t);return[image$1.resizeNearestNeighbor(s,[r[0],r[1]],o,i)]}case"CropAndResize":{const s=getParamValue("image",n,e,t),r=getParamValue("boxes",n,e,t),o=getParamValue("boxInd",n,e,t),i=getParamValue("cropSize",n,e,t),c=getParamValue("method",n,e,t),a=getParamValue("extrapolationValue",n,e,t);return[image$1.cropAndResize(s,r,o,i,c,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$7=(n,e,t)=>{switch(n.op){case"Equal":return[equal$2(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"NotEqual":return[notEqual$2(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"Greater":return[greater$3(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"GreaterEqual":return[greaterEqual$2(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"Less":return[less$3(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"LessEqual":return[lessEqual$2(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"LogicalAnd":return[logicalAnd$2(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"LogicalNot":return[logicalNot$2(getParamValue("a",n,e,t))];case"LogicalOr":return[logicalOr$2(getParamValue("a",n,e,t),getParamValue("b",n,e,t))];case"Select":case"SelectV2":return[where(getParamValue("condition",n,e,t),getParamValue("a",n,e,t),getParamValue("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$6=(n,e,t)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[matMul$1(getParamValue("a",n,e,t),getParamValue("b",n,e,t),getParamValue("transposeA",n,e,t),getParamValue("transposeB",n,e,t))];case"Transpose":return[transpose$2(getParamValue("x",n,e,t),getParamValue("perm",n,e,t))];case"_FusedMatMul":const[s,r]=getParamValue("fusedOps",n,e,t),o=s==="biasadd",i=r==="prelu",c=getParamValue("numArgs",n,e,t),a=getParamValue("leakyreluAlpha",n,e,t);if(o){if(i&&c!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&c!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,d]=getParamValue("args",n,e,t);return[matMul({a:getParamValue("a",n,e,t),b:getParamValue("b",n,e,t),transposeA:getParamValue("transposeA",n,e,t),transposeB:getParamValue("transposeB",n,e,t),bias:l,activation:r,preluActivationWeights:d,leakyreluAlpha:a})];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$5=(n,e,t)=>{switch(n.op){case"FusedBatchNorm":case"FusedBatchNormV2":return[batchNorm$2(getParamValue("x",n,e,t),getParamValue("mean",n,e,t),getParamValue("variance",n,e,t),getParamValue("offset",n,e,t),getParamValue("scale",n,e,t),getParamValue("epsilon",n,e,t))];case"FusedBatchNormV3":return[batchNorm$2(getParamValue("x",n,e,t),getParamValue("mean",n,e,t),getParamValue("variance",n,e,t),getParamValue("offset",n,e,t),getParamValue("scale",n,e,t),getParamValue("epsilon",n,e,t))];case"LRN":return[localResponseNormalization(getParamValue("x",n,e,t),getParamValue("radius",n,e,t),getParamValue("bias",n,e,t),getParamValue("alpha",n,e,t),getParamValue("beta",n,e,t))];case"Softmax":return[softmax$3(getParamValue("x",n,e,t))];case"LogSoftmax":return[logSoftmax(getParamValue("x",n,e,t))];case"SparseToDense":return[sparseToDense$2(getParamValue("sparseIndices",n,e,t),getParamValue("outputShape",n,e,t),getParamValue("sparseValues",n,e,t),getParamValue("defaultValue",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$4=(n,e,t)=>{switch(n.op){case"Max":{const i=getParamValue("axis",n,e,t),c=getParamValue("keepDims",n,e,t);return[max$3(getParamValue("x",n,e,t),i,c)]}case"Mean":{const i=getParamValue("axis",n,e,t),c=getParamValue("keepDims",n,e,t);return[mean$1(getParamValue("x",n,e,t),i,c)]}case"Min":{const i=getParamValue("axis",n,e,t),c=getParamValue("keepDims",n,e,t);return[min$3(getParamValue("x",n,e,t),i,c)]}case"Sum":{const i=getParamValue("axis",n,e,t),c=getParamValue("keepDims",n,e,t);return[sum$2(getParamValue("x",n,e,t),i,c)]}case"All":{const i=getParamValue("axis",n,e,t),c=getParamValue("keepDims",n,e,t);return[all$2(getParamValue("x",n,e,t),i,c)]}case"Any":{const i=getParamValue("axis",n,e,t),c=getParamValue("keepDims",n,e,t);return[any$2(getParamValue("x",n,e,t),i,c)]}case"ArgMax":{const i=getParamValue("axis",n,e,t);return[argMax$2(getParamValue("x",n,e,t),i)]}case"ArgMin":{const i=getParamValue("axis",n,e,t);return[argMin$2(getParamValue("x",n,e,t),i)]}case"Prod":{const i=getParamValue("axis",n,e,t),c=getParamValue("keepDims",n,e,t);return[prod$2(getParamValue("x",n,e,t),i,c)]}case"Cumsum":{const i=getParamValue("axis",n,e,t),c=getParamValue("exclusive",n,e,t),a=getParamValue("reverse",n,e,t);return[cumsum$2(getParamValue("x",n,e,t),i,c,a)]}case"Bincount":const s=getParamValue("x",n,e,t),r=getParamValue("weights",n,e,t),o=getParamValue("size",n,e,t);return[bincount$2(s,r,o)];case"DenseBincount":{const i=getParamValue("x",n,e,t),c=getParamValue("weights",n,e,t),a=getParamValue("size",n,e,t),l=getParamValue("binaryOutput",n,e,t);return[denseBincount$2(i,c,a,l)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$3=(n,e,t)=>{switch(n.op){case"ConcatV2":case"Concat":{const s=getParamValue("n",n,e,t),r=getParamValue("axis",n,e,t);let o=getParamValue("tensors",n,e,t);return o=o.slice(0,s),[concat$2(o,r)]}case"Gather":{const s=getParamValue("x",n,e,t),r=getParamValue("indices",n,e,t);return[gather$1(s,cast$3(r,"int32"),0)]}case"GatherV2":{const s=getParamValue("axis",n,e,t),r=getParamValue("batchDims",n,e,t),o=getParamValue("x",n,e,t),i=getParamValue("indices",n,e,t);return[gather$1(o,cast$3(i,"int32"),s,r)]}case"Reverse":{const s=getParamValue("dims",n,e,t),r=[];for(let i=0;i<s.length;i++)s[i]&&r.push(i);const o=getParamValue("x",n,e,t);return[reverse$2(o,r)]}case"ReverseV2":{const s=getParamValue("axis",n,e,t),r=getParamValue("x",n,e,t);return[reverse$2(r,s)]}case"Slice":{const s=getParamValue("begin",n,e,t),r=getParamValue("size",n,e,t);return[slice$2(getParamValue("x",n,e,t),s,r)]}case"StridedSlice":{const s=getParamValue("begin",n,e,t),r=getParamValue("end",n,e,t),o=getParamValue("strides",n,e,t),i=getParamValue("beginMask",n,e,t),c=getParamValue("endMask",n,e,t),a=getParamValue("ellipsisMask",n,e,t),l=getParamValue("newAxisMask",n,e,t),d=getParamValue("shrinkAxisMask",n,e,t),f=getParamValue("x",n,e,t);return[stridedSlice$2(f,s,r,o,i,c,a,l,d)]}case"Pack":return tidy(()=>{const s=getParamValue("axis",n,e,t),r=getParamValue("tensors",n,e,t),o=r[0].shape,i=squeeze(r[0]).shape,c=r.map(a=>{const l=arraysEqual(a.shape,o);if(!l&&!arraysEqual(squeeze(a).shape,i))throw new Error("the input tensors shape does not match");return l?a:reshape$3(a,o)});return[stack(c,s)]});case"Unpack":{const s=getParamValue("axis",n,e,t),r=getParamValue("tensor",n,e,t);return unstack(r,s)}case"Tile":{const s=getParamValue("reps",n,e,t);return[tile$3(getParamValue("x",n,e,t),s)]}case"Split":case"SplitV":{const s=getParamValue("axis",n,e,t),r=getParamValue("numOrSizeSplits",n,e,t),o=getParamValue("x",n,e,t);return split$1(o,r,s)}case"ScatterNd":{const s=getParamValue("indices",n,e,t),r=getParamValue("values",n,e,t),o=getParamValue("shape",n,e,t);return[scatterND(s,r,o)]}case"GatherNd":{const s=getParamValue("x",n,e,t),r=getParamValue("indices",n,e,t);return[gatherND(s,r)]}case"SparseToDense":{const s=getParamValue("sparseIndices",n,e,t),r=getParamValue("outputShape",n,e,t),o=getParamValue("sparseValues",n,e,t),i=getParamValue("defaultValue",n,e,t);return[sparseToDense$2(s,o,r,o.dtype===i.dtype?i:cast$3(i,o.dtype))]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$2=(n,e,t)=>{switch(n.op){case"FFT":return[fft$2(getParamValue("x",n,e,t))];case"IFFT":return[ifft$2(getParamValue("x",n,e,t))];case"RFFT":return[rfft(getParamValue("x",n,e,t))];case"IRFFT":return[irfft(getParamValue("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const executeOp$1=(n,e,t)=>{switch(n.op){case"Cast":return[cast$3(getParamValue("x",n,e,t),getParamValue("dtype",n,e,t))];case"ExpandDims":{const s=getParamValue("axis",n,e,t);return[expandDims$3(getParamValue("x",n,e,t),s)]}case"Squeeze":{const s=getParamValue("axis",n,e,t);return[squeeze(getParamValue("x",n,e,t),s)]}case"Reshape":return[reshape$3(getParamValue("x",n,e,t),getParamValue("shape",n,e,t))];case"MirrorPad":return[mirrorPad$1(getParamValue("x",n,e,t),getParamValue("padding",n,e,t),getParamValue("mode",n,e,t))];case"PadV2":case"Pad":return[pad(getParamValue("x",n,e,t),getParamValue("padding",n,e,t),getParamValue("constantValue",n,e,t))];case"SpaceToBatchND":{const s=getParamValue("blockShape",n,e,t),r=getParamValue("paddings",n,e,t);return[spaceToBatchND$2(getParamValue("x",n,e,t),s,r)]}case"BatchToSpaceND":{const s=getParamValue("blockShape",n,e,t),r=getParamValue("crops",n,e,t);return[batchToSpaceND$2(getParamValue("x",n,e,t),s,r)]}case"DepthToSpace":{const s=getParamValue("blockSize",n,e,t),r=getParamValue("dataFormat",n,e,t).toUpperCase();return[depthToSpace$2(getParamValue("x",n,e,t),s,r)]}case"BroadcastTo":return[broadcastTo(getParamValue("x",n,e,t),getParamValue("shape",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function executeOp(n,e,t,s){const r=((o,i,c)=>{switch(o.category){case"arithmetic":return tidy(()=>executeOp$h(o,i,c));case"basic_math":return tidy(()=>executeOp$g(o,i,c));case"control":return executeOp$f(o,i,c);case"convolution":return tidy(()=>executeOp$e(o,i,c));case"creation":return tidy(()=>executeOp$d(o,i,c));case"dynamic":return executeOp$c(o,i,c);case"evaluation":return tidy(()=>executeOp$b(o,i,c));case"image":return tidy(()=>executeOp$8(o,i,c));case"graph":return tidy(()=>executeOp$a(o,i,c));case"logical":return tidy(()=>executeOp$7(o,i,c));case"matrices":return tidy(()=>executeOp$6(o,i,c));case"normalization":return tidy(()=>executeOp$5(o,i,c));case"reduction":return tidy(()=>executeOp$4(o,i,c));case"slice_join":return tidy(()=>executeOp$3(o,i,c));case"spectral":return tidy(()=>executeOp$2(o,i,c));case"transformation":return tidy(()=>executeOp$1(o,i,c));case"hash_table":return executeOp$9(o,i,c,s);case"custom":const a=getRegisteredOp(o.op);if(a&&a.customExecutor)return a.customExecutor(new NodeValueImpl(o,i,c));throw TypeError(`Custom op ${o.op} is not registered.`);default:throw TypeError(`Unknown op '${o.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return isPromise(r)?r.then(o=>[].concat(o)):[].concat(r)}class ExecutionContext{constructor(e={},t={},s={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getExecutionSubgraph(n,e,t,s){const r=new Set,o=[];let i=null,c=null;const a=new Set,l=Object.keys(n).map(y=>parseNodeName(y)[0]);let d=[];s!=null&&(d=s.map(y=>parseNodeName(y.name)[0]));const f=[...e];for(;f.length>0;){const y=f.pop();if((isControlFlow(y)||isDynamicShape(y)||isHashTable(y))&&i==null&&(i=y,c=i.children.map(m=>m.name).filter(m=>r.has(m))),r.add(y.name),t[y.name]==null&&l.indexOf(y.name)===-1&&d.indexOf(y.name)===-1){if(y.inputs.length===0){o.push(y.name);continue}y.inputs.forEach(m=>{a.has(m.name)||(a.add(m.name),f.push(m))})}}return{inputs:n,outputs:e,usedNodes:r,missingInputs:o,dynamicNode:i,syncInputs:c}}function getNodesInTopologicalOrder(n,e,t){const{usedNodes:s,inputs:r}=t,o=[],i=Object.keys(r).map(d=>parseNodeName(d)[0]).map(d=>n.nodes[d]),c=n.initNodes;i.forEach(d=>{s.has(d.name)&&o.push(d)}),n.weights.forEach(d=>{s.has(d.name)&&o.push(d)}),c!=null&&c.forEach(d=>{s.has(d.name)&&o.push(d)});const a=new Set,l=[];for(;o.length>0;){const d=o.pop();a.add(d.name),e[d.name]||l.push(d),d.children.forEach(f=>{!a.has(f.name)&&s.has(f.name)&&f.inputs.every(y=>a.has(y.name))&&o.push(f)})}return l}const CONTROL_FLOW_OPS=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],DYNAMIC_SHAPE_OPS=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],HASH_TABLE_OPS=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function isControlFlow(n){return CONTROL_FLOW_OPS.indexOf(n.op)>=0}function isDynamicShape(n){return DYNAMIC_SHAPE_OPS.indexOf(n.op)>=0}function isHashTable(n){return HASH_TABLE_OPS.indexOf(n.op)>=0}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GraphExecutor{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new GraphExecutor(e.functions[s],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const s=e.map(o=>o.name).sort(),r=t.map(o=>o.name).sort();return s.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const s=getExecutionSubgraph(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:o,syncInputs:i}=s;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(r.length>0){const c=t.map(l=>l.name),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${c}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return getNodesInTopologicalOrder(this.graph,this.weightMap,s)}execute(e,t){e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=s.map(f=>this.graph.nodes[parseNodeName(f)[0]]),o=t.map(f=>parseNodeName(f)[0]);let i=o.map(f=>this.graph.nodes[f]);i.length===0&&(i=this._outputs);const c=this.getCompilationKey(r,i);let a=this.compiledMap.get(c);a==null&&(a=this.compile(e,i),this.compiledMap.set(c,a));const l={},d={};return tidy(()=>{const f=new ExecutionContext(this.weightMap,l,d,this.functionExecutorMap),y=Object.assign({},this.weightMap);Object.keys(e).forEach(g=>{const[x,w]=parseNodeName(g),I=[];I[w]=e[g],y[x]=I});const m=this.getFrozenTensorIds(y),h={};for(let g=0;g<a.length;g++){const x=a[g];if(!y[x.name]){const w=executeOp(x,y,f,this._resourceManager);if(isPromise(w))throw new Error(`The execution of the op '${x.op}' returned a promise. Please use model.executeAsync() instead.`);y[x.name]=w,this.checkTensorForDisposal(x.name,x,y,f,m,o,h)}}return this.parent==null&&f.dispose(m),t.map(g=>getTensor(g,y,f))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,s,r,o,i,c){t.category==="control"||i.indexOf(e)!==-1||(s[e].forEach(a=>{a!=null&&(c[a.id]=(c[a.id]||0)+t.children.length)}),t.inputs.forEach(a=>{if(a.category!=="control"){const l=getTensorsForCurrentContenxt(a.name,s,r);l!=null&&l.forEach(d=>{if(d&&!o.has(d.id)){const f=c[d.id];f===1?(d.dispose(),delete c[d.id]):f!=null&&c[d.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,s=!1,r={},o={}){s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const i=new ExecutionContext(this.weightMap,r,o,this.functionExecutorMap),c=await this.executeWithControlFlow(e,i,t,s),a=t.map(y=>getTensor(y,c,i)),l=a.map(y=>y.id),d=Object.keys(e).map(y=>e[y].id),f=new Set([...l,...d,...this.weightIds]);return Object.keys(c).forEach(y=>{c[y].forEach(h=>{h&&!h.isDisposed&&!f.has(h.id)&&h.dispose()})}),this.parent==null&&i.dispose(f),a}async executeFunctionAsync(e,t,s){const r=e.reduce((o,i,c)=>(o[this.inputs[c].name]=i,o),{});return this._executeAsync(r,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,r){const o=Object.keys(e),i=o.map(N=>this.graph.nodes[parseNodeName(N)[0]]),c=s.map(N=>parseNodeName(N)[0]);let a=c.map(N=>this.graph.nodes[N]);a.length===0&&(a=this._outputs);const{usedNodes:l,missingInputs:d,dynamicNode:f,syncInputs:y}=getExecutionSubgraph(e,a,this.weightMap,this._initNodes),m=[...i,...this.graph.weights,...this._initNodes||[]].map(N=>({node:N,contexts:t.currentContext})),h=Object.assign({},this.weightMap);Object.keys(e).forEach(N=>{const[A,T]=parseNodeName(N),P=[];P[T]=e[N],h[A]=P});const g={},x=this.getFrozenTensorIds(h),w={};for(;m.length>0;){const N=this.processStack(i,m,t,h,w,x,c,g,l);await Promise.all(N)}f==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const I=a.filter(N=>!isControlFlow(N)&&!getTensor(N.name,h,t)).map(N=>N.name);if(I.length>0){let N="";throw f!=null&&(N=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${y}]`),new Error(`Cannot compute the outputs [${I}] from the provided inputs [${o}]. Consider providing the following inputs: [${d}]. ${N}`)}return h}processStack(e,t,s,r,o,i,c,a,l){const d=[];for(;t.length>0;){const f=t.pop();s.currentContext=f.contexts;let y="";if(f.node.op==="Enter"&&getParamValue("isConstant",f.node,r,s)&&([y]=getNodeNameAndIndex(f.node.name,s)),r[f.node.name]==null){const m=executeOp(f.node,r,s,this._resourceManager);y||([y]=getNodeNameAndIndex(f.node.name,s));const h=s.currentContext;isPromise(m)?d.push(m.then(g=>(r[y]=g,s.currentContext=h,this.checkTensorForDisposal(y,f.node,r,s,i,c,a),this.processChildNodes(f.node,t,s,r,o,l),g))):(r[y]=m,this.checkTensorForDisposal(y,f.node,r,s,i,c,a),this.processChildNodes(f.node,t,s,r,o,l))}else this.processChildNodes(f.node,t,s,r,o,l)}return d}processChildNodes(e,t,s,r,o,i){e.children.forEach(c=>{const[a]=getNodeNameAndIndex(c.name,s);o[a]||!i.has(c.name)||(c.op==="Merge"?c.inputNames.some(l=>!!getTensor(l,r,s))&&(o[a]=!0,t.push({contexts:s.currentContext,node:c})):c.inputNames.every(l=>!!getTensor(l,r,s))&&(o[a]=!0,t.push({contexts:s.currentContext,node:c})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[r]=parseNodeName(t),o=this.graph.nodes[r];if(o.attrParams.shape&&o.attrParams.shape.value){const i=o.attrParams.shape.value,c=i.length===s.shape.length&&s.shape.every((a,l)=>i[l]===-1||i[l]===a);assert$1(c,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&assert$1(s.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){const t={};for(const s in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[s]!=null){const r=this._signature.inputs[s];t[r.name]=e[s]}else t[s]=e[s];return t}checkInputs(e){const t=Object.keys(e).filter(s=>{const[r]=parseNodeName(s);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{const[s]=parseNodeName(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class ResourceManager{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TFHUB_SEARCH_PARAM="?tfjs-format=file",DEFAULT_MODEL_NAME="model.json";class GraphModel{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={}),this.resourceManager=new ResourceManager}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=browserHTTPRequest(e,this.loadOptions);else{const t=getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let s;this.artifacts.userDefinedMetadata!=null&&this.artifacts.userDefinedMetadata.signature!=null?s=this.artifacts.userDefinedMetadata.signature:s=this.artifacts.signature,this.signature=s,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new GraphExecutor(OperationMapper.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=OperationMapper.Instance.transformGraph(e.modelInitializer);this.initializer=new GraphExecutor(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){const s=getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Tensor)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,s,r)=>(t[s]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function loadGraphModel(n,e={}){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&n.load==null&&(n.endsWith("/")||(n=n+"/"),n=`${n}${DEFAULT_MODEL_NAME}${TFHUB_SEARCH_PARAM}`);const t=new GraphModel(n,e);return await t.load(),t}/** @license See the LICENSE file. */const version$5="2.8.6";var alea$3={exports:{}},alea$2=alea$3.exports,hasRequiredAlea$1;function requireAlea$1(){return hasRequiredAlea$1||(hasRequiredAlea$1=1,function(n){(function(e,t,s){function r(a){var l=this,d=c();l.next=function(){var f=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=f-(l.c=f|0)},l.c=1,l.s0=d(" "),l.s1=d(" "),l.s2=d(" "),l.s0-=d(a),l.s0<0&&(l.s0+=1),l.s1-=d(a),l.s1<0&&(l.s1+=1),l.s2-=d(a),l.s2<0&&(l.s2+=1),d=null}function o(a,l){return l.c=a.c,l.s0=a.s0,l.s1=a.s1,l.s2=a.s2,l}function i(a,l){var d=new r(a),f=l&&l.state,y=d.next;return y.int32=function(){return d.next()*4294967296|0},y.double=function(){return y()+(y()*2097152|0)*11102230246251565e-32},y.quick=y,f&&(typeof f=="object"&&o(f,d),y.state=function(){return o(d,{})}),y}function c(){var a=4022871197,l=function(d){d=d.toString();for(var f=0;f<d.length;f++){a+=d.charCodeAt(f);var y=.02519603282416938*a;a=y>>>0,y-=a,y*=a,a=y>>>0,y-=a,a+=y*4294967296}return(a>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=i:this.alea=i})(alea$2,n)}(alea$3)),alea$3.exports}var xor128$3={exports:{}},xor128$2=xor128$3.exports,hasRequiredXor128$1;function requireXor128$1(){return hasRequiredXor128$1||(hasRequiredXor128$1=1,function(n){(function(e,t,s){function r(c){var a=this,l="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var f=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^f^f>>>8},c===(c|0)?a.x=c:l+=c;for(var d=0;d<l.length+64;d++)a.x^=l.charCodeAt(d)|0,a.next()}function o(c,a){return a.x=c.x,a.y=c.y,a.z=c.z,a.w=c.w,a}function i(c,a){var l=new r(c),d=a&&a.state,f=function(){return(l.next()>>>0)/4294967296};return f.double=function(){do var y=l.next()>>>11,m=(l.next()>>>0)/4294967296,h=(y+m)/(1<<21);while(h===0);return h},f.int32=l.next,f.quick=f,d&&(typeof d=="object"&&o(d,l),f.state=function(){return o(l,{})}),f}t&&t.exports?t.exports=i:this.xor128=i})(xor128$2,n)}(xor128$3)),xor128$3.exports}var xorwow$3={exports:{}},xorwow$2=xorwow$3.exports,hasRequiredXorwow$1;function requireXorwow$1(){return hasRequiredXorwow$1||(hasRequiredXorwow$1=1,function(n){(function(e,t,s){function r(c){var a=this,l="";a.next=function(){var f=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(f^f<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,c===(c|0)?a.x=c:l+=c;for(var d=0;d<l.length+64;d++)a.x^=l.charCodeAt(d)|0,d==l.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function o(c,a){return a.x=c.x,a.y=c.y,a.z=c.z,a.w=c.w,a.v=c.v,a.d=c.d,a}function i(c,a){var l=new r(c),d=a&&a.state,f=function(){return(l.next()>>>0)/4294967296};return f.double=function(){do var y=l.next()>>>11,m=(l.next()>>>0)/4294967296,h=(y+m)/(1<<21);while(h===0);return h},f.int32=l.next,f.quick=f,d&&(typeof d=="object"&&o(d,l),f.state=function(){return o(l,{})}),f}t&&t.exports?t.exports=i:this.xorwow=i})(xorwow$2,n)}(xorwow$3)),xorwow$3.exports}var xorshift7$3={exports:{}},xorshift7$2=xorshift7$3.exports,hasRequiredXorshift7$1;function requireXorshift7$1(){return hasRequiredXorshift7$1||(hasRequiredXorshift7$1=1,function(n){(function(e,t,s){function r(c){var a=this;a.next=function(){var d=a.x,f=a.i,y,m;return y=d[f],y^=y>>>7,m=y^y<<24,y=d[f+1&7],m^=y^y>>>10,y=d[f+3&7],m^=y^y>>>3,y=d[f+4&7],m^=y^y<<7,y=d[f+7&7],y=y^y<<13,m^=y^y<<9,d[f]=m,a.i=f+1&7,m};function l(d,f){var y,m=[];if(f===(f|0))m[0]=f;else for(f=""+f,y=0;y<f.length;++y)m[y&7]=m[y&7]<<15^f.charCodeAt(y)+m[y+1&7]<<13;for(;m.length<8;)m.push(0);for(y=0;y<8&&m[y]===0;++y);for(y==8?m[7]=-1:m[y],d.x=m,d.i=0,y=256;y>0;--y)d.next()}l(a,c)}function o(c,a){return a.x=c.x.slice(),a.i=c.i,a}function i(c,a){c==null&&(c=+new Date);var l=new r(c),d=a&&a.state,f=function(){return(l.next()>>>0)/4294967296};return f.double=function(){do var y=l.next()>>>11,m=(l.next()>>>0)/4294967296,h=(y+m)/(1<<21);while(h===0);return h},f.int32=l.next,f.quick=f,d&&(d.x&&o(d,l),f.state=function(){return o(l,{})}),f}t&&t.exports?t.exports=i:this.xorshift7=i})(xorshift7$2,n)}(xorshift7$3)),xorshift7$3.exports}var xor4096$3={exports:{}},xor4096$2=xor4096$3.exports,hasRequiredXor4096$1;function requireXor4096$1(){return hasRequiredXor4096$1||(hasRequiredXor4096$1=1,function(n){(function(e,t,s){function r(c){var a=this;a.next=function(){var d=a.w,f=a.X,y=a.i,m,h;return a.w=d=d+1640531527|0,h=f[y+34&127],m=f[y=y+1&127],h^=h<<13,m^=m<<17,h^=h>>>15,m^=m>>>12,h=f[y]=h^m,a.i=y,h+(d^d>>>16)|0};function l(d,f){var y,m,h,g,x,w=[],I=128;for(f===(f|0)?(m=f,f=null):(f=f+"\0",m=0,I=Math.max(I,f.length)),h=0,g=-32;g<I;++g)f&&(m^=f.charCodeAt((g+32)%f.length)),g===0&&(x=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,g>=0&&(x=x+1640531527|0,y=w[g&127]^=m+x,h=y==0?h+1:0);for(h>=128&&(w[(f&&f.length||0)&127]=-1),h=127,g=4*128;g>0;--g)m=w[h+34&127],y=w[h=h+1&127],m^=m<<13,y^=y<<17,m^=m>>>15,y^=y>>>12,w[h]=m^y;d.w=x,d.X=w,d.i=h}l(a,c)}function o(c,a){return a.i=c.i,a.w=c.w,a.X=c.X.slice(),a}function i(c,a){c==null&&(c=+new Date);var l=new r(c),d=a&&a.state,f=function(){return(l.next()>>>0)/4294967296};return f.double=function(){do var y=l.next()>>>11,m=(l.next()>>>0)/4294967296,h=(y+m)/(1<<21);while(h===0);return h},f.int32=l.next,f.quick=f,d&&(d.X&&o(d,l),f.state=function(){return o(l,{})}),f}t&&t.exports?t.exports=i:this.xor4096=i})(xor4096$2,n)}(xor4096$3)),xor4096$3.exports}var tychei$3={exports:{}},tychei$2=tychei$3.exports,hasRequiredTychei$1;function requireTychei$1(){return hasRequiredTychei$1||(hasRequiredTychei$1=1,function(n){(function(e,t,s){function r(c){var a=this,l="";a.next=function(){var f=a.b,y=a.c,m=a.d,h=a.a;return f=f<<25^f>>>7^y,y=y-m|0,m=m<<24^m>>>8^h,h=h-f|0,a.b=f=f<<20^f>>>12^y,a.c=y=y-m|0,a.d=m<<16^y>>>16^h,a.a=h-f|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,c===Math.floor(c)?(a.a=c/4294967296|0,a.b=c|0):l+=c;for(var d=0;d<l.length+20;d++)a.b^=l.charCodeAt(d)|0,a.next()}function o(c,a){return a.a=c.a,a.b=c.b,a.c=c.c,a.d=c.d,a}function i(c,a){var l=new r(c),d=a&&a.state,f=function(){return(l.next()>>>0)/4294967296};return f.double=function(){do var y=l.next()>>>11,m=(l.next()>>>0)/4294967296,h=(y+m)/(1<<21);while(h===0);return h},f.int32=l.next,f.quick=f,d&&(typeof d=="object"&&o(d,l),f.state=function(){return o(l,{})}),f}t&&t.exports?t.exports=i:this.tychei=i})(tychei$2,n)}(tychei$3)),tychei$3.exports}var seedrandom$3={exports:{}},hasRequiredSeedrandom$3;function requireSeedrandom$3(){return hasRequiredSeedrandom$3||(hasRequiredSeedrandom$3=1,function(n){(function(e,t){var s=(0,eval)("this"),r=256,o=6,i=52,c="random",a=t.pow(r,o),l=t.pow(2,i),d=l*2,f=r-1,y;function m(A,T,P){var O=[];T=T==!0?{entropy:!0}:T||{};var F=w(x(T.entropy?[A,N(e)]:A??I(),3),O),G=new h(O),U=function(){for(var Q=G.g(o),ne=a,J=0;Q<l;)Q=(Q+J)*r,ne*=r,J=G.g(1);for(;Q>=d;)Q/=2,ne/=2,J>>>=1;return(Q+J)/ne};return U.int32=function(){return G.g(4)|0},U.quick=function(){return G.g(4)/4294967296},U.double=U,w(N(G.S),e),(T.pass||P||function(Q,ne,J,oe){return oe&&(oe.S&&g(oe,G),Q.state=function(){return g(G,{})}),J?(t[c]=Q,ne):Q})(U,F,"global"in T?T.global:this==t,T.state)}t["seed"+c]=m;function h(A){var T,P=A.length,O=this,F=0,G=O.i=O.j=0,U=O.S=[];for(P||(A=[P++]);F<r;)U[F]=F++;for(F=0;F<r;F++)U[F]=U[G=f&G+A[F%P]+(T=U[F])],U[G]=T;(O.g=function(Q){for(var ne,J=0,oe=O.i,le=O.j,ge=O.S;Q--;)ne=ge[oe=f&oe+1],J=J*r+ge[f&(ge[oe]=ge[le=f&le+ne])+(ge[le]=ne)];return O.i=oe,O.j=le,J})(r)}function g(A,T){return T.i=A.i,T.j=A.j,T.S=A.S.slice(),T}function x(A,T){var P=[],O=typeof A,F;if(T&&O=="object")for(F in A)try{P.push(x(A[F],T-1))}catch{}return P.length?P:O=="string"?A:A+"\0"}function w(A,T){for(var P=A+"",O,F=0;F<P.length;)T[f&F]=f&(O^=T[f&F]*19)+P.charCodeAt(F++);return N(T)}function I(){try{var A;return y&&(A=y.randomBytes)?A=A(r):(A=new Uint8Array(r),(s.crypto||s.msCrypto).getRandomValues(A)),N(A)}catch{var T=s.navigator,P=T&&T.plugins;return[+new Date,s,P,s.screen,N(e)]}}function N(A){return String.fromCharCode.apply(0,A)}if(w(t.random(),e),n.exports){n.exports=m;try{y=require$$0$1}catch{}}})([],Math)}(seedrandom$3)),seedrandom$3.exports}var seedrandom$2,hasRequiredSeedrandom$2;function requireSeedrandom$2(){if(hasRequiredSeedrandom$2)return seedrandom$2;hasRequiredSeedrandom$2=1;var n=requireAlea$1(),e=requireXor128$1(),t=requireXorwow$1(),s=requireXorshift7$1(),r=requireXor4096$1(),o=requireTychei$1(),i=requireSeedrandom$3();return i.alea=n,i.xor128=e,i.xorwow=t,i.xorshift7=s,i.xor4096=r,i.tychei=o,seedrandom$2=i,seedrandom$2}var seedrandomExports$1=requireSeedrandom$2();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function deepMap(n,e){return deepMapInternal(n,e)}function deepMapInternal(n,e,t=new Map,s=new Set){if(n==null)return null;if(s.has(n))throw new Error("Circular references are not supported.");if(t.has(n))return t.get(n);const r=e(n);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(isIterable(n)){const o=Array.isArray(n)?[]:{};s.add(n);for(const i in n){const c=n[i],a=deepMapInternal(c,e,t,s);o[i]=a}return s.delete(n),o}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return t.set(n,r.value),r.value}function deepZip(n,e=zipToList){return deepZipInternal(n,e)}function deepZipInternal(n,e,t=new Set){const s=n[0];if(t.has(s))throw new Error("Circular references are not supported.");const r=e(n);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(isIterable(s)){const o=Array.isArray(s)?[]:{};t.add(s);for(const i in s){const c=n.map(l=>l[i]),a=deepZipInternal(c,e,t);o[i]=a}return t.delete(s),o}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function zipToList(n){return n===null?null:isIterable(n[0])?{value:null,recurse:!0}:{value:n,recurse:!1}}async function deepMapAndAwaitAll(n,e){const t=new Map;deepMapInternal(n,e,t);for(const r of Array.from(t.keys())){const o=t.get(r);if(isPromise(o)){const i=await o;t.set(r,i)}}return deepMapInternal(n,e,t)}function isIterable(n){return n!=null&&!ArrayBuffer.isView(n)&&(Array.isArray(n)||typeof n=="object"&&!(n instanceof Tensor))}function canTensorify(n){return n==null||isPrimitive(n)||Array.isArray(n)||typeof n=="object"&&n instanceof Tensor||isTypedArray(n)}function isPrimitive(n){return n===null||typeof n!="object"&&typeof n!="function"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function deepClone(n){return deepMap(n,cloneIfTensor)}function cloneIfTensor(n){return n instanceof Tensor?{value:n.clone(),recurse:!1}:isIterable(n)?{value:null,recurse:!0}:{value:n,recurse:!1}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class RingBuffer{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),s=this.get(t);return this.set(t,this.pop()),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class GrowingRingBuffer extends RingBuffer{constructor(){super(GrowingRingBuffer.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=this.capacity*2,t=new Array(e),s=this.length();for(let r=0;r<s;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=s}}GrowingRingBuffer.INITIAL_CAPACITY=32;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function iteratorFromItems(n){return new ArrayIterator(n)}function iteratorFromFunction(n){return new FunctionCallIterator(n)}function iteratorFromConcatenated(n,e){return new ChainedIterator(n,e)}function iteratorFromZipped(n,e=ZipMismatchMode.FAIL){return new ZipIterator(n,e)}class LazyIterator{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let s=await e.next();for(;!s.done;)t.push(s.value),s=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),s=e(t.value);for(;!t.done&&s;)t=await this.next(),s=e(t.value)}handleErrors(e){return new ErrorHandlingLazyIterator(this,e)}filter(e){return new FilterIterator(this,e)}map(e){return new MapIterator(this,e)}mapAsync(e){return new AsyncMapIterator(this,e)}serialMapAsync(e){return new AsyncMapIterator(this,e).serial()}flatmap(e){return new FlatmapIterator(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new RowMajorBatchIterator(this,e,t)}columnMajorBatch(e,t=!0,s=zipToList){return this.rowMajorBatch(e,t).map(o=>deepZip(o,s))}concatenate(e,t){return new ChainedIterator(iteratorFromItems([this,e]),t)}take(e){return e<0||e==null?this:new TakeIterator(this,e)}skip(e){return e<0||e==null?this:new SkipIterator(this,e)}prefetch(e){return new PrefetchIterator(this,e)}shuffle(e,t){return new ShuffleIterator(this,e,t)}serial(){return new SerialIterator(this)}}class ArrayIterator extends LazyIterator{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:deepClone(e),done:!1}}}class FunctionCallIterator extends LazyIterator{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class SerialIterator extends LazyIterator{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class SkipIterator extends LazyIterator{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;dispose(e.value)}return this.upstream.next()}}class TakeIterator extends LazyIterator{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class RowMajorBatchIterator extends LazyIterator{constructor(e,t,s=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=s,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class FilterIterator extends LazyIterator{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;dispose(e.value)}}}class MapIterator extends LazyIterator{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=getTensorsInContainer(e.value),s=this.transform(e.value),r=getTensorsInContainer(s);for(const o of t)isTensorInList(o,r)||o.dispose();return{value:s,done:!1}}}class ErrorHandlingLazyIterator extends LazyIterator{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class AsyncMapIterator extends LazyIterator{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=getTensorsInContainer(e.value),s=await this.transform(e.value),r=getTensorsInContainer(s);for(const o of t)isTensorInList(o,r)||o.dispose();return{value:s,done:!1}}}class OneToManyIterator extends LazyIterator{constructor(){super(),this.outputQueue=new GrowingRingBuffer,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class FlatmapIterator extends OneToManyIterator{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=getTensorsInContainer(e.value),s=this.transform(e.value),r=getTensorsInContainer(s);this.outputQueue.pushAll(s);for(const o of t)isTensorInList(o,r)||o.dispose();return!0}}class ChainedIterator extends LazyIterator{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){const s=await this.moreIterators.next();if(s.done)return{value:null,done:!0};this.iterator=s.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var ZipMismatchMode;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(ZipMismatchMode||(ZipMismatchMode={}));class ZipIterator extends LazyIterator{constructor(e,t=ZipMismatchMode.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,s=0;function r(i){return i instanceof LazyIterator?{value:i.next().then(a=>(t++,a.done&&s++,a.value)),recurse:!1}:{value:null,recurse:!0}}const o=await deepMapAndAwaitAll(this.iterators,r);if(t===s)return{value:null,done:!0};if(s>0)switch(this.mismatchMode){case ZipMismatchMode.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case ZipMismatchMode.SHORTEST:return{value:null,done:!0};case ZipMismatchMode.LONGEST:}return this.count++,{value:o,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class PrefetchIterator extends LazyIterator{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new RingBuffer(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class ShuffleIterator extends PrefetchIterator{constructor(e,t,s){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=seedrandomExports$1.alea(s||now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class Dataset{constructor(){this.size=null}batch(e,t=!0){const s=this;assert$1(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let r;return this.size===1/0||this.size==null?r=this.size:t?r=Math.ceil(this.size/e):r=Math.floor(this.size/e),datasetFromIteratorFn(async()=>(await s.iterator()).columnMajorBatch(e,t,deepBatchConcat),r)}concatenate(e){const t=this;let s;return this.size===1/0||e.size===1/0?s=1/0:this.size!=null&&e.size!=null?s=this.size+e.size:s=null,datasetFromIteratorFn(async()=>(await t.iterator()).concatenate(await e.iterator()),s)}filter(e){const t=this;let s;return this.size===1/0?s=1/0:s=null,datasetFromIteratorFn(async()=>(await t.iterator()).filter(r=>tidy(()=>e(r))),s)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return datasetFromIteratorFn(async()=>(await t.iterator()).map(s=>tidy(()=>e(s))),this.size)}mapAsync(e){const t=this;return datasetFromIteratorFn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return datasetFromIteratorFn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let s;return this.size!=null&&e>0?s=this.size*e:e===0?s=0:this.size!=null&&(e===void 0||e<0)?s=1/0:s=null,datasetFromIteratorFn(async()=>{const r=iteratorFromFunction(async()=>({value:await t.iterator(),done:!1}));return iteratorFromConcatenated(r.take(e))},s)}skip(e){const t=this;let s;return this.size!=null&&e>=0&&this.size>=e?s=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?s=0:s=null,datasetFromIteratorFn(async()=>(await t.iterator()).skip(e),s)}shuffle(e,t,s=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,o=seedrandomExports$1.alea(t||now().toString());return datasetFromIteratorFn(async()=>{let i=o.int32();return s&&(i+=o.int32()),(await r.iterator()).shuffle(e,i.toString())},this.size)}take(e){const t=this;let s;return this.size!=null&&this.size>e?s=e:this.size!=null&&this.size<=e?s=this.size:s=null,datasetFromIteratorFn(async()=>(await t.iterator()).take(e),s)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}Dataset.MAX_BUFFER_SIZE=1e4;function datasetFromIteratorFn(n,e=null){return new class extends Dataset{constructor(){super(...arguments),this.size=e}async iterator(){return n()}}}function array(n){return datasetFromIteratorFn(async()=>iteratorFromItems(n),n.length)}function zip(n){if(!isIterable(n))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(n))for(let t=0;t<n.length;t++)e=e==null?n[t].size:Math.min(e,n[t].size);else if(n instanceof Object)for(const t in n)e=e==null?n[t].size:Math.min(e,n[t].size);return datasetFromIteratorFn(async()=>{const t=await deepMapAndAwaitAll(n,s=>{if(s instanceof Dataset)return{value:s.iterator(),recurse:!1};if(isIterable(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return iteratorFromZipped(t,ZipMismatchMode.SHORTEST)},e)}function deepBatchConcat(n){if(n===null)return null;const e=n[0];return canTensorify(e)?{value:batchConcat(n),recurse:!1}:{value:null,recurse:!0}}function batchConcat(n){if(n.length===0)throw new Error("Can't make a batch of zero elements.");return n[0]instanceof Tensor?stack(n):tensor(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class TextLineDataset extends Dataset{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(r=>(r.endsWith("\r")&&(r=r.slice(0,-1)),r))}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */const CODE_QUOTE='"',STATE_OUT=Symbol("out"),STATE_FIELD=Symbol("field"),STATE_QUOTE=Symbol("quote"),STATE_QUOTE_AFTER_QUOTE=Symbol("quoteafterquote"),STATE_WITHIN_QUOTE_IN_QUOTE=Symbol("quoteinquote");class CSVDataset extends Dataset{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new TextLineDataset(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(assert$1(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&assert$1(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce((r,o)=>(r[o]=r[o]+1||1,r),{}),s=Object.keys(t).filter(r=>t[r]>1);if(assert$1(s.length===0,()=>"Duplicate column names found: "+s.toString()),this.columnConfigs){for(const r of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(r)===-1)throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");const s=t.value;return this.parseRow(s,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){const t=this.parseRow(e),s={},r={};for(let o=0;o<this.fullColumnNames.length;o++){const i=this.fullColumnNames[o],c=this.columnConfigs?this.columnConfigs[i]:null;if(!(this.configuredColumnsOnly&&!c)){const a=t[o];let l=null;if(a==="")if(c&&c.default!==void 0)l=c.default;else{if(c&&(c.required||c.isLabel))throw new Error(`Required column ${i} is empty in this line: ${e}`);l=void 0}else{const d=Number(a);if(isNaN(d))c&&c.dtype==="bool"?l=this.getBoolean(a):l=a;else if(!c||!c.dtype)l=d;else switch(c.dtype){case"float32":l=d;break;case"int32":l=Math.floor(d);break;case"bool":l=this.getBoolean(a);break;default:l=d}}c&&c.isLabel?r[i]=l:s[i]=l}}return Object.keys(r).length===0?s:{xs:s,ys:r}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){const s=[];let r=0;const o=e.length;let i=STATE_OUT;for(let c=0;c<o;c++)switch(i){case STATE_OUT:switch(e.charAt(c)){case CODE_QUOTE:r=c+1,i=STATE_QUOTE;break;case this.delimiter:if(r=c+1,this.delimiter===" "&&this.delimWhitespace)break;s.push(""),i=STATE_OUT;break;default:i=STATE_FIELD,r=c;break}break;case STATE_FIELD:switch(e.charAt(c)){case this.delimiter:s.push(e.substring(r,c)),i=STATE_OUT,r=c+1;break}break;case STATE_QUOTE:switch(e.charAt(c)){case CODE_QUOTE:i=STATE_QUOTE_AFTER_QUOTE;break}break;case STATE_QUOTE_AFTER_QUOTE:switch(e.charAt(c)){case this.delimiter:s.push(e.substring(r,c-1)),i=STATE_OUT,r=c+1;break;case CODE_QUOTE:i=STATE_QUOTE;break;default:i=STATE_WITHIN_QUOTE_IN_QUOTE;break}break;case STATE_WITHIN_QUOTE_IN_QUOTE:switch(e.charAt(c)){case CODE_QUOTE:i=STATE_QUOTE;break}break}if(i===STATE_QUOTE_AFTER_QUOTE?s.push(e.substring(r,o-1)):s.push(e.substring(r)),t&&s.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${s}`);return s}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class MicrophoneIterator extends LazyIterator{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(env().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new MicrophoneIterator(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(s){throw new Error(`Error thrown while initializing video stream: ${s.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const s=await this.getAudioData();if(this.includeSpectrogram){const r=this.flattenQueue(s.freqDataQueue);e=this.getTensorFromAudioDataArray(r,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const r=this.flattenQueue(s.timeDataQueue);t=this.getTensorFromAudioDataArray(r,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let s=0;return new Promise(r=>{const o=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++s===this.numFrames&&(clearInterval(o),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,s=new Float32Array(e.length*t);return e.forEach((r,o)=>s.set(r,o*t)),s}getTensorFromAudioDataArray(e,t){const s=new Float32Array(sizeFromShape(t));return s.set(e,s.length-e.length),tensor(s,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class WebcamIterator extends LazyIterator{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=tensor1d([0],"int32"),this.webcamConfig.centerCrop){const s=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,r=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,o=(1-s)/2,i=(1-r)/2,c=o+s,a=r+i;this.cropBox=tensor2d([i,o,a,c],[1,4])}else this.cropBox=tensor2d([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(env().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const s=new WebcamIterator(e,t);return await s.start(),s}async start(){this.webcamConfig.facingMode&&assert$1(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=fromPixels$1(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return tidy(()=>{const t=e.toFloat().expandDims(0);let s;s=image$1.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=s.shape;return s.reshape(r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class DataSource{}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class StringIterator extends LazyIterator{split(e){return new SplitIterator(this,e)}}class SplitIterator extends StringIterator{constructor(e,t){super(),this.upstream=e,this.impl=new SplitIteratorImpl(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class SplitIteratorImpl extends OneToManyIterator{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const s of t.slice(0,-1))this.outputQueue.push(s);return this.carryover=t[t.length-1],!0}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class ByteChunkIterator extends LazyIterator{decodeUTF8(){return new Utf8Iterator(this)}}class Utf8Iterator extends StringIterator{constructor(e){super(),this.upstream=e,this.impl=new Utf8IteratorImpl(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class Utf8IteratorImpl extends OneToManyIterator{constructor(e){if(super(),this.upstream=e,env().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=require("string_decoder");this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t;if(e.done)return!1;t=e.value;let s;return env().get("IS_BROWSER")?s=this.decoder.decode(t,{stream:!0}):s=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(s),!0}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class FileChunkIterator extends ByteChunkIterator{constructor(e,t={}){super(),this.file=e,this.options=t,assert$1(e instanceof Uint8Array||(env().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,s)=>{const r=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,r)));else{const o=new FileReader;o.onload=c=>{let a=o.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return s(new TypeError("FileReader returned unknown type."));t(a)},o.onabort=c=>s(new Error("Aborted")),o.onerror=c=>s(new Error(c.type));const i=this.file.slice(this.offset,r);o.readAsArrayBuffer(i)}this.offset=r}),done:!1}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */async function urlChunkIterator(n,e={}){let t,s;typeof n=="string"?t=n:(t=n.url,s=getRequestInitFromRequest(n));const r=await fetch$1(t,s);if(r.ok){const o=new Uint8Array(await r.arrayBuffer());return new FileChunkIterator(o,e)}else throw new Error(r.statusText)}const getRequestInitFromRequest=n=>({method:n.method,headers:n.headers,body:n.body,mode:n.mode,credentials:n.credentials,cache:n.cache,redirect:n.redirect,referrer:n.referrer,integrity:n.integrity});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function isLocalPath(n){return typeof n=="string"&&n.substr(0,7)==="file://"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class FileDataSource extends DataSource{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(isLocalPath(this.input)&&env().get("IS_NODE")){const e=require("fs");this.input=e.readFileSync(this.input.substr(7))}return new FileChunkIterator(this.input,this.options)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class URLDataSource extends DataSource{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return isLocalPath(this.url)?new FileDataSource(this.url,this.fileOptions).iterator():urlChunkIterator(this.url,this.fileOptions)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function csv(n,e={}){return new CSVDataset(new URLDataSource(n),e)}function func(n){const e=iteratorFromFunction(n);return datasetFromIteratorFn(async()=>e)}function generator(n){return datasetFromIteratorFn(async()=>{const e=await n();return iteratorFromFunction(()=>e.next())})}async function webcam(n,e){return WebcamIterator.create(n,e)}async function microphone(n){return MicrophoneIterator.create(n)}/** @license See the LICENSE file. */const version$4="2.8.6";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const index=Object.freeze(Object.defineProperty({__proto__:null,CSVDataset,Dataset,FileDataSource,TextLineDataset,URLDataSource,array,csv,func,generator,microphone,version_data:version$4,webcam,zip},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function assertNotComplex$1(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&assert$1(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const whereImpl$1=whereImpl$2;class MathBackendCPU extends KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new DataStorage(this,engine())}write(e,t,s){this.firstUse&&(this.firstUse=!1,env().get("IS_NODE")&&warn(`
============================
Hi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));const r={};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&isString(s[0])){const o=s.map(i=>encodeString(i));r=this.write(o,e,t)}else r=this.write(s,e,t);return{dataId:r,shape:e,dtype:t}}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,r){this.data.set(e,{values:t,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return mergeRealAndImagArrays(r,o)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let s=t;if(e.dtype==="string")try{s=t.map(r=>decodeString(r))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return buffer(e.shape,e.dtype,s)}makeOutput(e,t,s){const r=this.write(e,t,s);return engine().makeTensorFromDataId(r,t,s,this)}disposeData(e){if(this.data.has(e)){const{complexTensorInfos:t}=this.data.get(e);t!=null&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.data.has(t)){const s=this.data.get(t);s.refCount--,s.refCount<1&&this.disposeData(t)}}async time(e){const t=now();return e(),{kernelMs:now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){assertNotComplex$1([e],"where");const t=this.readSync(e.dataId);return whereImpl$1(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function simpleAbsImpl(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const abs$1=n=>{const{x:e}=n.inputs,t=n.backend;assertNotComplex$1(e,"abs");let s=new Float32Array(sizeFromShape(e.shape));const r=t.data.get(e.dataId).values;return s=simpleAbsImpl(r),t.makeOutput(s,e.shape,"float32")},absConfig$1={kernelName:Abs,backendName:"cpu",kernelFunc:abs$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createSimpleBinaryKernelImpl(n){return(e,t,s,r,o)=>{const i=assertAndGetBroadcastShape(e,t),c=i.length,a=computeStrides(i),l=sizeFromShape(i),d=getTypedArrayFromDType(o,l),f=e.length,y=t.length,m=computeStrides(e),h=computeStrides(t),g=getBroadcastDims$1(e,i),x=getBroadcastDims$1(t,i);if(g.length+x.length===0)for(let w=0;w<d.length;++w)d[w]=n(s[w%s.length],r[w%r.length]);else for(let w=0;w<d.length;++w){const I=indexToLoc(w,c,a),N=I.slice(-f);g.forEach(O=>N[O]=0);const A=locToIndex(N,f,m),T=I.slice(-y);x.forEach(O=>T[O]=0);const P=locToIndex(T,y,h);d[w]=n(s[A],r[P])}return[d,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function complex$1(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,c=t.makeTensorInfo(s.shape,"complex64"),a=t.data.get(c.dataId);return a.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",o),imag:t.makeTensorInfo(r.shape,"float32",i)},c}const complexConfig$1={kernelName:Complex,backendName:"cpu",kernelFunc:complex$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zeros(n,e,t="float32"){if(t==="complex64"){const r=zeros(n,e,"float32"),o=zeros(n,e,"float32");return complex$1({inputs:{real:r,imag:o},backend:n})}const s=makeZerosTypedArray(sizeFromShape(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function identity$1(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const identityConfig$1={kernelName:Identity$1,backendName:"cpu",kernelFunc:identity$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function real$1(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.real,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const realConfig$1={kernelName:Real,backendName:"cpu",kernelFunc:real$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cast$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return identity$1({inputs:{x:r},backend:t});const i=zeros(t,r.shape,r.dtype),c=cast$1({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),a=complex$1({inputs:{real:c,imag:i},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),a}if(r.dtype==="complex64"){const i=real$1({inputs:{input:r},backend:t}),c=cast$1({inputs:{x:i},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(i),c}if(!hasEncodingLoss(r.dtype,o)){const i=identity$1({inputs:{x:r},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(o==="int32"){const i=t.data.get(r.dataId).values,c=Int32Array.from(i);return t.makeTensorInfo(r.shape,"int32",c)}if(o==="bool"){const i=t.data.get(r.dataId).values,c=toTypedArray([0],r.dtype),[a,l]=createSimpleBinaryKernelImpl((d,f)=>d!==f?1:0)(r.shape,[],i,c,"bool");return t.makeTensorInfo(l,"bool",a)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const castConfig$1={kernelName:Cast,backendName:"cpu",kernelFunc:cast$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function binaryKernelFunc$1(n,e,t,s){return t==null?({inputs:r,backend:o})=>{const{a:i,b:c}=r,a=o;assertNotComplex$1([i,c],n);const l=a.data.get(i.dataId).values,d=a.data.get(c.dataId).values,f=s||i.dtype,[y,m]=e(i.shape,c.shape,l,d,f);return a.makeTensorInfo(m,f,y)}:({inputs:r,backend:o})=>{const{a:i,b:c}=r,a=o;if(i.dtype==="complex64"||c.dtype==="complex64"){const l=cast$1({inputs:{x:i},backend:a,attrs:{dtype:"complex64"}}),d=a.data.get(l.dataId),f=d.complexTensorInfos.real,y=d.complexTensorInfos.imag,m=a.data.get(f.dataId).values,h=a.data.get(y.dataId).values,g=cast$1({inputs:{x:c},backend:a,attrs:{dtype:"complex64"}}),x=a.data.get(g.dataId),w=x.complexTensorInfos.real,I=x.complexTensorInfos.imag,N=a.data.get(w.dataId).values,A=a.data.get(I.dataId).values,[T,P,O]=t(i.shape,c.shape,m,h,N,A),F=a.makeTensorInfo(O,"float32",T),G=a.makeTensorInfo(O,"float32",P),U=complex$1({inputs:{real:F,imag:G},backend:a});return a.disposeIntermediateTensorInfo(l),a.disposeIntermediateTensorInfo(g),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(G),U}else{const l=a.data.get(i.dataId).values,d=a.data.get(c.dataId).values,f=s||i.dtype,[y,m]=e(i.shape,c.shape,l,d,f);return a.makeTensorInfo(m,f,y)}}}function createComplexBinaryKernelImpl(n){return(e,t,s,r,o,i)=>{const c=assertAndGetBroadcastShape(e,t),a=sizeFromShape(c),l=c.length,d=computeStrides(c),f=getTypedArrayFromDType("float32",a),y=getTypedArrayFromDType("float32",a),m=getBroadcastDims$1(e,c),h=getBroadcastDims$1(t,c),g=mergeRealAndImagArrays(s,r),x=mergeRealAndImagArrays(o,i),w=e.length,I=computeStrides(e),N=t.length,A=computeStrides(t);if(m.length+h.length===0)for(let T=0;T<f.length;T++){const P=T%g.length,O=T%x.length,F=n(g[P*2],g[P*2+1],x[O*2],x[O*2+1]);f[T]=F.real,y[T]=F.imag}else for(let T=0;T<f.length;T++){const P=indexToLoc(T,l,d),O=P.slice(-w);m.forEach(ne=>O[ne]=0);const F=locToIndex(O,w,I),G=P.slice(-N);h.forEach(ne=>G[ne]=0);const U=locToIndex(G,N,A),Q=n(g[F*2],g[F*2+1],x[U*2],x[U*2+1]);f[T]=Q.real,y[T]=Q.imag}return[f,y,c]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const addImpl=createSimpleBinaryKernelImpl((n,e)=>n+e),addComplexImpl=createComplexBinaryKernelImpl((n,e,t,s)=>({real:n+t,imag:e+s})),add=binaryKernelFunc$1(Add$1,addImpl,addComplexImpl),addConfig$1={kernelName:Add$1,backendName:"cpu",kernelFunc:add};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincountImpl(n,e,t,s,r){const o=sizeFromShape(s),i=makeZerosTypedArray(r,t);for(let c=0;c<n.length;c++){const a=n[c];if(a<0)throw new Error("Input x must be non-negative!");a>=r||(o>0?i[a]+=e[c]:i[a]+=1)}return i}function bincountReduceImpl(n,e,t,s=!1){const r=n.shape[0],o=n.shape[1],i=buffer([r,t],e.dtype);for(let c=0;c<r;c++)for(let a=0;a<o;a++){const l=n.get(c,a);if(l<0)throw new Error("Input x must be non-negative!");l>=t||(s?i.set(1,c,l):e.size>0?i.set(i.get(c,l)+e.get(c,a),c,l):i.set(i.get(c,l)+1,c,l))}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createSimpleUnaryImpl(n){return(e,t,s)=>{const r=getTypedArrayFromDType(t,e.length);for(let o=0;o<e.length;++o)r[o]=n(e[o],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unaryKernelFunc$1(n,e,t){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;if(assertNotComplex$1(i,n),i.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");const c=o,a=c.data.get(i.dataId).values,l=sizeFromShape(i.shape),d=t||i.dtype,f=getArrayFromDType(d,l);for(let y=0;y<l;++y)f[y]=e(a[y],r);return c.makeTensorInfo(i.shape,d,f)}}function unaryKernelFuncFromImpl(n,e,t){return({inputs:s,attrs:r,backend:o})=>{const{x:i}=s;if(assertNotComplex$1(i,n),i.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");const c=o,a=c.data.get(i.dataId).values,l=i.dtype,d=e(a,l,r);return c.makeTensorInfo(i.shape,l,d)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ceilImpl=createSimpleUnaryImpl(n=>Math.ceil(n)),ceil$1=unaryKernelFuncFromImpl(Ceil,ceilImpl),ceilConfig$1={kernelName:Ceil,backendName:"cpu",kernelFunc:ceil$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concatImpl$1(n,e,t,s){const r=getArrayFromDType(t,sizeFromShape(e));if(s&&t!=="string"){let o=0;n.forEach(i=>{const c=sizeFromShape(i.shape);r.set(i.vals,o),o+=c})}else{let o=0;n.forEach(i=>{const c=t==="string"?fromUint8ToStringArray(i.vals):i.vals;let a=0;for(let l=0;l<i.shape[0];++l){const d=l*e[1]+o;for(let f=0;f<i.shape[1];++f)r[d+f]=c[a++]}o+=i.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expImpl=createSimpleUnaryImpl(n=>Math.exp(n)),exp$1=unaryKernelFuncFromImpl(Exp,expImpl),expConfig$1={kernelName:Exp,backendName:"cpu",kernelFunc:exp$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const expm1Impl=createSimpleUnaryImpl(n=>Math.expm1(n)),expm1$1=unaryKernelFuncFromImpl(Expm1,expm1Impl),expm1Config$1={kernelName:Expm1,backendName:"cpu",kernelFunc:expm1$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorImpl=createSimpleUnaryImpl(n=>Math.floor(n)),floor$1=unaryKernelFuncFromImpl(Floor,floorImpl),floorConfig$1={kernelName:Floor,backendName:"cpu",kernelFunc:floor$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherV2Impl(n,e,t){const s=buffer(t,n.dtype);for(let r=0;r<s.size;++r){const i=s.indexToLoc(r).slice(),c=i[0],a=i[2],l=e.locToIndex([c,a]);i[2]=e.values[l];const d=n.locToIndex(i);s.values[r]=n.values[d]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const greaterImpl=createSimpleBinaryKernelImpl((n,e)=>n>e?1:0),greater$1=binaryKernelFunc$1(Greater,greaterImpl,null,"bool"),greaterConfig$1={kernelName:Greater,backendName:"cpu",kernelFunc:greater$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lessImpl=createSimpleBinaryKernelImpl((n,e)=>n<e?1:0),less$1=binaryKernelFunc$1(Less,lessImpl,null,"bool"),lessConfig$1={kernelName:Less,backendName:"cpu",kernelFunc:less$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linSpaceImpl(n,e,t){const s=(e-n)/(t-1),r=makeZerosTypedArray(t,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logImpl=createSimpleUnaryImpl(n=>Math.log(n)),log$1=unaryKernelFuncFromImpl(Log,logImpl),logConfig$1={kernelName:Log,backendName:"cpu",kernelFunc:log$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxImpl$1(n,e,t,s){const r=getTypedArrayFromDType(s,sizeFromShape(t));for(let o=0;o<r.length;++o){const i=o*e;let c=n[i];for(let a=0;a<e;++a){const l=n[i+a];l>c&&(c=l)}r[o]=c}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maximumImpl=createSimpleBinaryKernelImpl((n,e)=>Math.max(n,e)),maximum$1=binaryKernelFunc$1(Maximum$1,maximumImpl),maximumConfig$1={kernelName:Maximum$1,backendName:"cpu",kernelFunc:maximum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const minimumImpl=createSimpleBinaryKernelImpl((n,e)=>Math.min(n,e)),minimum$1=binaryKernelFunc$1(Minimum$1,minimumImpl),minimumConfig$1={kernelName:Minimum$1,backendName:"cpu",kernelFunc:minimum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const multiplyImpl=createSimpleBinaryKernelImpl((n,e)=>n*e),multiplyComplexImpl=createComplexBinaryKernelImpl((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),multiply$1=binaryKernelFunc$1(Multiply$1,multiplyImpl,multiplyComplexImpl),multiplyConfig$1={kernelName:Multiply$1,backendName:"cpu",kernelFunc:multiply$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function negImpl(n,e,t){const s=createScalarValue(-1,t);return multiplyImpl([],e,s,n,t)}function neg$1(n){const{inputs:e,backend:t}=n,{x:s}=e;assertNotComplex$1(s,"neg");const r=t.data.get(s.dataId).values,[o,i]=negImpl(r,s.shape,s.dtype);return t.makeTensorInfo(i,s.dtype,o)}const negConfig$1={kernelName:Neg,backendName:"cpu",kernelFunc:neg$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const notEqualImpl=createSimpleBinaryKernelImpl((n,e)=>n!==e?1:0),notEqual$1=binaryKernelFunc$1(NotEqual,notEqualImpl,null,"bool"),notEqualConfig$1={kernelName:NotEqual,backendName:"cpu",kernelFunc:notEqual$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transposeImpl$1(n,e,t,s,r){const o=e.length,i=sizeFromShape(e),c=computeStrides(e),a=computeStrides(r),l=getTypedArrayFromDType(t,sizeFromShape(r));for(let d=0;d<i;++d){const f=indexToLoc(d,o,c),y=new Array(f.length);for(let h=0;h<y.length;h++)y[h]=f[s[h]];const m=locToIndex(y,o,a);l[m]=n[d]}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transpose$1(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{perm:o}=t;assertNotComplex$1(r,"transpose");const i=r.shape.length,c=new Array(i);for(let f=0;f<c.length;f++)c[f]=r.shape[o[f]];const a=s.data.get(r.dataId).values,l=transposeImpl$1(a,r.shape,r.dtype,o,c);return{dataId:s.write(l,c,r.dtype),shape:c,dtype:r.dtype}}const transposeConfig$1={kernelName:Transpose,backendName:"cpu",kernelFunc:transpose$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prodImpl(n,e,t,s){const[r,o]=computeOutAndReduceShapes(n,s),i=upcastType(e,"int32"),c=makeZerosTypedArray(sizeFromShape(r),i),a=sizeFromShape(o);for(let l=0;l<c.length;++l){const d=l*a;let f=1;for(let y=0;y<a;++y)f*=t[d+y];c[l]=f}return{outVals:c,outShape:r,outDtype:i}}function prod$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;assertNotComplex$1(r,"prod");const c=r.shape.length,a=parseAxisParam(o,r.shape),l=getAxesPermutation(a,c);let d=a,f=r;const y=[];l!=null&&(f=transpose$1({inputs:{x:r},backend:t,attrs:{perm:l}}),y.push(f),d=getInnerMostAxes(d.length,c));const m=t.data.get(f.dataId).values,{outVals:h,outShape:g,outDtype:x}=prodImpl(f.shape,f.dtype,m,d);let w=g;return i&&(w=expandShapeToKeepDim(g,a)),y.forEach(I=>t.disposeIntermediateTensorInfo(I)),t.makeTensorInfo(w,x,h)}const prodConfig$1={kernelName:Prod,backendName:"cpu",kernelFunc:prod$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rangeImpl(n,e,t,s){const r=n===e,o=n<e&&t<0,i=e<n&&t>1;if(r||o||i)return makeZerosTypedArray(0,s);const c=Math.abs(Math.ceil((e-n)/t)),a=makeZerosTypedArray(c,s);e<n&&t===1&&(t=-1),a[0]=n;for(let l=1;l<a.length;l++)a[l]=a[l-1]+t;return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rsqrtImpl=createSimpleUnaryImpl(n=>1/Math.sqrt(n)),rsqrt$1=unaryKernelFuncFromImpl(Rsqrt,rsqrtImpl),rsqrtConfig$1={kernelName:Rsqrt,backendName:"cpu",kernelFunc:rsqrt$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sliceImpl(n,e,t,s,r){const o=isSliceContinous(s,e,t),i=sizeFromShape(t),c=computeStrides(s);if(o){const f=computeFlatOffset(e,c);return r==="string"?n.slice(f,f+i):n.subarray(f,f+i)}const a=r==="string"?fromUint8ToStringArray(n):n,l=buffer(s,r,a),d=buffer(t,r);for(let f=0;f<d.size;++f){const y=d.indexToLoc(f),m=y.map((h,g)=>h+e[g]);d.set(l.get(...m),...y)}return r==="string"?fromStringArrayToUint8(d.values):d.values}function slice$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s;assertNotComplex$1(r,"slice");const[c,a]=parseSliceParams(r,o,i);assertParamsValid(r,c,a);const l=t.data.get(r.dataId).values,d=sliceImpl(l,c,a,r.shape,r.dtype);return t.makeTensorInfo(a,r.dtype,d)}const sliceConfig$1={kernelName:Slice,backendName:"cpu",kernelFunc:slice$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squaredDifferenceImpl=createSimpleBinaryKernelImpl((n,e)=>{const t=n-e;return t*t}),squaredDifference$1=binaryKernelFunc$1(SquaredDifference,squaredDifferenceImpl),squaredDifferenceConfig$1={kernelName:SquaredDifference,backendName:"cpu",kernelFunc:squaredDifference$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSliceImpl(n,e,t,s){const r=buffer(n,e.dtype);for(let o=0;o<r.size;o++){const i=r.indexToLoc(o),c=new Array(i.length);for(let a=0;a<c.length;a++)c[a]=i[a]*t[a]+s[a];r.set(e.get(...c),...i)}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const subImpl=createSimpleBinaryKernelImpl((n,e)=>n-e),subComplexImpl=createComplexBinaryKernelImpl((n,e,t,s)=>({real:n-t,imag:e-s})),sub$1=binaryKernelFunc$1(Sub,subImpl,subComplexImpl),subConfig$1={kernelName:Sub,backendName:"cpu",kernelFunc:sub$1};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tileImpl(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=buffer(t,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),i=new Array(n.rank);for(let a=0;a<i.length;a++)i[a]=o[a]%n.shape[a];const c=n.locToIndex(i);s.values[r]=n.values[c]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function topKImpl(n,e,t,s,r){const o=e[e.length-1],[i,c]=[n.length/o,o],a=getTypedArrayFromDType(t,i*s),l=getTypedArrayFromDType("int32",i*s);for(let f=0;f<i;f++){const y=f*c,m=n.subarray(y,y+c),h=[];for(let I=0;I<m.length;I++)h.push({value:m[I],index:I});h.sort((I,N)=>N.value-I.value);const g=f*s,x=a.subarray(g,g+s),w=l.subarray(g,g+s);for(let I=0;I<s;I++)x[I]=h[I].value,w[I]=h[I].index}const d=e.slice();return d[d.length-1]=s,[buffer(d,t,a),buffer(d,"int32",l)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uniqueImpl(n,e,t,s){const r=parseAxisParam(e,t)[0],o=[1,t[0],1];for(let h=0;h<r;h++)o[0]*=t[h];o[1]=t[r];for(let h=r+1;h<t.length;h++)o[2]*=t[h];const i={},c=new Int32Array(t[r]),a=new TensorBuffer(o,s,n),l=[],d=o[0]===1&&o[2]===1;for(let h=0;h<t[r];h++){let g;if(d)g=n[h].toString();else{const x=[];for(let w=0;w<o[0];w++)for(let I=0;I<o[2];I++)x.push(a.get(w,h,I));g=x.join(",")}if(i[g]!==void 0)c[h]=i[g];else{const x=Object.keys(i).length;i[g]=x,c[h]=x,l.push(h)}}const f=o.slice();f[1]=Object.keys(i).length;const y=new TensorBuffer(f,s);l.forEach((h,g)=>{for(let x=0;x<o[0];x++)for(let w=0;w<o[2];w++)y.set(a.get(x,h,w),x,g,w)});const m=t.slice();return m[r]=f[1],{outputValues:y.values,outputShape:m,indices:c}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const shared=Object.freeze(Object.defineProperty({__proto__:null,addImpl,bincountImpl,bincountReduceImpl,ceilImpl,concatImpl:concatImpl$1,expImpl,expm1Impl,floorImpl,gatherV2Impl,greaterImpl,lessImpl,linSpaceImpl,logImpl,maxImpl:maxImpl$1,maximumImpl,minimumImpl,multiplyImpl,negImpl,notEqualImpl,prodImpl,rangeImpl,rsqrtImpl,simpleAbsImpl,sliceImpl,squaredDifferenceImpl,stridedSliceImpl,subImpl,tileImpl,topKImpl,transposeImpl:transposeImpl$1,uniqueImpl},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const version$3="2.8.6";/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */registerBackend("cpu",()=>new MathBackendCPU,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const elu$1=unaryKernelFunc$1(Elu$1,n=>n>=0?n:Math.exp(n)-1),eluConfig$1={kernelName:Elu$1,backendName:"cpu",kernelFunc:elu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function leakyRelu$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s;assertNotComplex$1([r],"leakyRelu");const i=sizeFromShape(r.shape),c=t.data.get(r.dataId).values,a=getTypedArrayFromDType("float32",i);for(let l=0;l<c.length;l++)a[l]=c[l]<0?o*c[l]:c[l];return t.makeTensorInfo(r.shape,"float32",a)}const leakyReluConfig$1={kernelName:LeakyRelu,backendName:"cpu",kernelFunc:leakyRelu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const preluImpl=createSimpleBinaryKernelImpl((n,e)=>n<0?e*n:n);function prelu$1(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e;assertNotComplex$1([s,r],"prelu");const o=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,[c,a]=preluImpl(s.shape,r.shape,o,i,s.dtype);return t.makeTensorInfo(a,s.dtype,c)}const preluConfig$1={kernelName:Prelu,backendName:"cpu",kernelFunc:prelu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const relu$1=unaryKernelFunc$1(Relu$1,n=>Math.max(0,n)),reluConfig$1={kernelName:Relu$1,backendName:"cpu",kernelFunc:relu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const relu6$1=unaryKernelFunc$1(Relu6$1,n=>Math.min(Math.max(0,n),6)),relu6Config$1={kernelName:Relu6$1,backendName:"cpu",kernelFunc:relu6$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function applyActivation(n,e,t,s,r){if(t==="linear")return identity$1({inputs:{x:e},backend:n});if(t==="relu")return relu$1({inputs:{x:e},backend:n});if(t==="elu")return elu$1({inputs:{x:e},backend:n});if(t==="relu6")return relu6$1({inputs:{x:e},backend:n});if(t==="prelu")return prelu$1({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return leakyRelu$1({inputs:{x:e},backend:n,attrs:{alpha:r}});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reshape$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,i=sizeFromShape(r.shape),c=inferFromImplicitShape(o,i),a=sizeFromShape(c);assert$1(i===a,()=>`The new shape (${c}) has ${a} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),t.incRef(r.dataId);const l=t.data.get(r.dataId);if(l.complexTensorInfos!=null){const d=l.complexTensorInfos.real,f=l.complexTensorInfos.imag;d.shape=c,f.shape=c}return{dataId:r.dataId,shape:c,dtype:r.dtype}}const reshapeConfig$1={kernelName:Reshape$1,backendName:"cpu",kernelFunc:reshape$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchMatMul$1(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:c}=s;assertNotComplex$1([r,o],"matMul");const a=r.shape.length,l=o.shape.length,d=i?r.shape[a-2]:r.shape[a-1],f=c?o.shape[l-1]:o.shape[l-2],y=i?r.shape[a-1]:r.shape[a-2],m=c?o.shape[l-2]:o.shape[l-1],h=r.shape.slice(0,-2),g=o.shape.slice(0,-2),x=sizeFromShape(h),w=sizeFromShape(g),I=x===w||x===1||w===1;assert$1(a>=2&&l>=2&&I,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${h}) and (${g}).`);const A=(x>w?r.shape.slice(0,-2):o.shape.slice(0,-2)).concat([y,m]);assert$1(d===f,()=>`Error in matMul: inner shapes (${d}) and (${f}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${i} and transposeB=${c} must match.`);const T=i?[x,d,y]:[x,y,d],P=c?[w,m,f]:[w,f,m],O=reshape$1({inputs:{x:r},backend:t,attrs:{shape:T}}),F=reshape$1({inputs:{x:o},backend:t,attrs:{shape:P}}),G=i?O.shape[1]:O.shape[2],U=i?O.shape[2]:O.shape[1],Q=c?F.shape[1]:F.shape[2],ne=Math.max(x,w),J=t.data.get(O.dataId).values,oe=t.data.get(F.dataId).values,le=computeStrides(O.shape),ge=computeStrides(F.shape),[te,ce,ue]=i?[le[0],1,le[1]]:[le[0],le[1],1],[Te,Ce,Ne]=c?[1,ge[1],ge[0]]:[ge[1],1,ge[0]],Re=U*Q,Ae=buffer([ne,U,Q],O.dtype),we=Ae.values,Le=t.blockSize;for(let pe=0;pe<ne;pe++)for(let B=0;B<U;B+=Le)for(let D=0;D<Q;D+=Le)for(let H=0;H<G;H+=Le){const he=Math.min(B+Le,U),j=Math.min(D+Le,Q),ee=Math.min(H+Le,G);for(let ye=B;ye<he;ye++)for(let Oe=D;Oe<j;Oe++){let ze=0;for(let Xe=H;Xe<ee;Xe++){const ot=Math.min(pe,x-1)*te,st=Math.min(pe,w-1)*Ne,pt=J[ot+ye*ce+Xe*ue],gt=oe[Xe*Te+Oe*Ce+st];ze+=pt*gt}we[pe*Re+(ye*Q+Oe)]+=ze}}return t.disposeIntermediateTensorInfo(O),t.disposeIntermediateTensorInfo(F),t.makeTensorInfo(A,Ae.dtype,Ae.values)}const batchMatMulConfig$1={kernelName:BatchMatMul,backendName:"cpu",kernelFunc:batchMatMul$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _fusedMatMul$1(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:c}=e,{transposeA:a,transposeB:l,activation:d,leakyreluAlpha:f}=s;let y,m,h;const g=[];y=batchMatMul$1({inputs:{a:r,b:o},attrs:{transposeA:a,transposeB:l},backend:t}),i&&(m=add({inputs:{a:y,b:i},backend:t}),g.push(y),y=m),d&&(h=applyActivation(t,y,d,c,f),g.push(y),y=h);for(const w of g)t.disposeIntermediateTensorInfo(w);return y}const _fusedMatMulConfig$1={kernelName:_FusedMatMul,backendName:"cpu",kernelFunc:_fusedMatMul$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acos$1=unaryKernelFunc$1(Acos,n=>Math.acos(n)),acosConfig$1={kernelName:Acos,backendName:"cpu",kernelFunc:acos$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const acosh$1=unaryKernelFunc$1(Acosh,n=>Math.acosh(n)),acoshConfig$1={kernelName:Acosh,backendName:"cpu",kernelFunc:acosh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function addN$1(n){const{inputs:e,backend:t}=n,s=e;assertNotComplex$1(e,"addN");const r=s.map(c=>t.data.get(c.dataId).values),o=buffer(s[0].shape,s[0].dtype),i=o.values;for(let c=0;c<s.length;c++){const a=r[c];for(let l=0;l<i.length;l++)i[l]+=a[l]}return t.makeTensorInfo(o.shape,o.dtype,o.values)}const addNConfig$1={kernelName:AddN,backendName:"cpu",kernelFunc:addN$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function all$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;assertNotComplex$1(r,"all");const c=parseAxisParam(o,r.shape);let a=c;const l=getAxesPermutation(a,r.shape.length);let d=r;l!=null&&(d=transpose$1({inputs:{x:r},backend:t,attrs:{perm:l}}),a=getInnerMostAxes(a.length,r.shape.length)),assertAxesAreInnerMostDims("all",a,d.shape.length);const[f,y]=computeOutAndReduceShapes(d.shape,a),m=sizeFromShape(y),h=makeZerosTypedArray(sizeFromShape(f),d.dtype),g=t.data.get(d.dataId).values;for(let w=0;w<h.length;++w){const I=w*m;let N=g[I];for(let A=0;A<m;++A){const T=g[I+A];N=N&&T}h[w]=N}l!=null&&t.disposeIntermediateTensorInfo(d);const x=t.makeTensorInfo(f,d.dtype,h);if(i){const w=expandShapeToKeepDim(f,c),I=reshape$1({inputs:{x},backend:t,attrs:{shape:w}});return t.disposeIntermediateTensorInfo(x),I}return x}const allConfig$1={kernelName:All,backendName:"cpu",kernelFunc:all$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function any$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;assertNotComplex$1(r,"any");const c=parseAxisParam(o,r.shape);let a=c;const l=getAxesPermutation(a,r.shape.length);let d=r;l!=null&&(d=transpose$1({inputs:{x:r},backend:t,attrs:{perm:l}}),a=getInnerMostAxes(a.length,r.shape.length)),assertAxesAreInnerMostDims("any",a,d.shape.length);const[f,y]=computeOutAndReduceShapes(d.shape,a),m=sizeFromShape(y),h=makeZerosTypedArray(sizeFromShape(f),d.dtype),g=t.data.get(d.dataId).values;for(let w=0;w<h.length;++w){const I=w*m;let N=g[I];for(let A=0;A<m;++A){const T=g[I+A];N=N||T}h[w]=N}l!=null&&t.disposeIntermediateTensorInfo(d);const x=t.makeTensorInfo(f,d.dtype,h);if(i){const w=expandShapeToKeepDim(f,c),I=reshape$1({inputs:{x},backend:t,attrs:{shape:w}});return t.disposeIntermediateTensorInfo(x),I}return x}const anyConfig$1={kernelName:Any,backendName:"cpu",kernelFunc:any$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMax$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;assertNotComplex$1(r,"argMax");let i=parseAxisParam(o,r.shape);const c=getAxesPermutation(i,r.shape.length);let a=r;const l=[];c!=null&&(a=transpose$1({inputs:{x:r},backend:t,attrs:{perm:c}}),l.push(a),i=getInnerMostAxes(i.length,a.shape.length)),i=[i[0]],assertAxesAreInnerMostDims("argMax",i,a.shape.length);const[d,f]=computeOutAndReduceShapes(a.shape,i),y=sizeFromShape(d),m=makeZerosTypedArray(y,"int32"),h=sizeFromShape(f),g=t.data.get(a.dataId).values;for(let x=0;x<m.length;++x){const w=x*h;let I=g[w],N=0;for(let A=0;A<h;++A){const T=g[w+A];T>I&&(I=T,N=A)}m[x]=N}return l.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.makeTensorInfo(d,"int32",m)}const argMaxConfig$1={kernelName:ArgMax,backendName:"cpu",kernelFunc:argMax$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMin$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;assertNotComplex$1(r,"argMin");let i=parseAxisParam(o,r.shape);const c=getAxesPermutation(i,r.shape.length);let a=r;const l=[];c!=null&&(a=transpose$1({inputs:{x:r},backend:t,attrs:{perm:c}}),l.push(a),i=getInnerMostAxes(i.length,a.shape.length)),i=[i[0]],assertAxesAreInnerMostDims("argMin",i,a.shape.length);const[d,f]=computeOutAndReduceShapes(a.shape,i),y=sizeFromShape(d),m=makeZerosTypedArray(y,"int32"),h=sizeFromShape(f),g=t.data.get(a.dataId).values;for(let x=0;x<m.length;++x){const w=x*h;let I=g[w],N=0;for(let A=0;A<h;++A){const T=g[w+A];T<I&&(I=T,N=A)}m[x]=N}return l.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.makeTensorInfo(d,"int32",m)}const argMinConfig$1={kernelName:ArgMin,backendName:"cpu",kernelFunc:argMin$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asin$1=unaryKernelFunc$1(Asin,n=>Math.asin(n)),asinConfig$1={kernelName:Asin,backendName:"cpu",kernelFunc:asin$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const asinh$1=unaryKernelFunc$1(Asinh,n=>Math.asinh(n)),asinhConfig$1={kernelName:Asinh,backendName:"cpu",kernelFunc:asinh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atan$1=unaryKernelFunc$1(Atan,n=>Math.atan(n)),atanConfig$1={kernelName:Atan,backendName:"cpu",kernelFunc:atan$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atan2Impl=createSimpleBinaryKernelImpl((n,e)=>Math.atan2(n,e)),atan2$1=binaryKernelFunc$1(Atan2,atan2Impl),atan2Config$1={kernelName:Atan2,backendName:"cpu",kernelFunc:atan2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const atanh$1=unaryKernelFunc$1(Atanh,n=>Math.atanh(n)),atanhConfig$1={kernelName:Atanh,backendName:"cpu",kernelFunc:atanh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pool(n,e,t,s,r,o){const i=r.strideHeight,c=r.strideWidth,a=r.dilationHeight,l=r.dilationWidth,d=r.effectiveFilterHeight,f=r.effectiveFilterWidth,y=r.padInfo.top,m=r.padInfo.left,h=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=buffer(r.outShape,t),x=g.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3],I=r.outShape[2]*r.outShape[3],N=r.outShape[3];for(let A=0;A<r.batchSize;++A){const T=A*w,P=A*s[0];for(let O=0;O<r.inChannels;++O)for(let F=0;F<r.outHeight;++F){const G=F*i-y,U=Math.max(0,G),Q=Math.min(r.inHeight,d+G),ne=T+F*I;for(let J=0;J<r.outWidth;++J){const oe=J*c-m,le=Math.max(0,oe),ge=Math.min(r.inWidth,f+oe);let te=h,ce=0,ue=0;for(let Ce=U;Ce<Q;Ce+=a){const Ne=P+Ce*s[1];for(let Re=le;Re<ge;Re+=l){const Ae=Ne+Re*s[2],we=n[Ae+O];o==="max"&&we>te?te=we:o==="avg"&&(ce+=we,ue++)}if(isNaN(te))break}const Te=ne+J*N+O;x[Te]=o==="avg"?ce/ue:te}}}return g}function maxPoolPositions(n,e,t,s,r=!1,o=!1){const i=buffer(s.outShape,"int32"),c=s.strideHeight,a=s.strideWidth,l=s.dilationHeight,d=s.dilationWidth,f=s.effectiveFilterHeight,y=s.effectiveFilterWidth,m=s.padInfo.top,h=s.padInfo.left,g=buffer(e,t,n);for(let x=0;x<s.batchSize;++x)for(let w=0;w<s.inChannels;++w)for(let I=0;I<s.outHeight;++I){const N=I*c-m;let A=N;for(;A<0;)A+=l;const T=Math.min(s.inHeight,f+N);for(let P=0;P<s.outWidth;++P){const O=P*a-h;let F=O;for(;F<0;)F+=d;const G=Math.min(s.inWidth,y+O);let U=Number.NEGATIVE_INFINITY,Q=-1;for(let ne=A;ne<T;ne+=l){const J=ne-N;for(let oe=F;oe<G;oe+=d){const le=oe-O,ge=g.get(x,ne,oe,w);ge>U&&(U=ge,r?Q=o?((x*s.inHeight+ne)*s.inWidth+oe)*s.inChannels+w:(ne*s.inWidth+oe)*s.inChannels+w:Q=J*y+le)}}i.set(Q,x,I,P,w)}}return i}function pool3d(n,e,t,s,r,o){const i=r.strideDepth,c=r.strideHeight,a=r.strideWidth,l=r.dilationDepth,d=r.dilationHeight,f=r.dilationWidth,y=r.effectiveFilterDepth,m=r.effectiveFilterHeight,h=r.effectiveFilterWidth,g=r.padInfo.front,x=r.padInfo.top,w=r.padInfo.left,I=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,N=buffer(r.outShape,t),A=N.values,T=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],P=r.outShape[2]*r.outShape[3]*r.outShape[4],O=r.outShape[3]*r.outShape[4],F=r.outShape[4];for(let G=0;G<r.batchSize;++G){const U=G*T,Q=G*s[0];for(let ne=0;ne<r.inChannels;++ne)for(let J=0;J<r.outDepth;++J){const oe=J*i-g;let le=oe;for(;le<0;)le+=l;const ge=Math.min(r.inDepth,y+oe),te=U+J*P;for(let ce=0;ce<r.outHeight;++ce){const ue=ce*c-x;let Te=ue;for(;Te<0;)Te+=d;const Ce=Math.min(r.inHeight,m+ue),Ne=te+ce*O;for(let Re=0;Re<r.outWidth;++Re){const Ae=Re*a-w;let we=Ae;for(;we<0;)we+=f;const Le=Math.min(r.inWidth,h+Ae),pe=Ne+Re*F;let B=I,D=0,H=0;for(let j=le;j<ge;j+=l){const ee=Q+j*s[1];for(let ye=Te;ye<Ce;ye+=d){const Oe=ee+ye*s[2];for(let ze=we;ze<Le;ze+=f){const Xe=Oe+ze*s[3],ot=n[Xe+ne];if(o==="max"&&ot>B?B=ot:o==="avg"&&(D+=ot,H++),isNaN(B))break}if(isNaN(B))break}if(isNaN(B))break}const he=pe+ne;A[he]=o==="avg"?D/H:B}}}}return N}function maxPool3dPositions(n,e){const t=buffer(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,y=e.padInfo.front,m=e.padInfo.top,h=e.padInfo.left;for(let g=0;g<e.batchSize;++g)for(let x=0;x<e.inChannels;++x)for(let w=0;w<e.outDepth;++w){const I=w*s-y;let N=I;for(;N<0;)N+=i;const A=Math.min(e.inDepth,l+I);for(let T=0;T<e.outHeight;++T){const P=T*r-m;let O=P;for(;O<0;)O+=c;const F=Math.min(e.inHeight,d+P);for(let G=0;G<e.outWidth;++G){const U=G*o-h;let Q=U;for(;Q<0;)Q+=a;const ne=Math.min(e.inWidth,f+U);let J=Number.NEGATIVE_INFINITY,oe=-1;for(let le=N;le<A;le+=i){const ge=le-I;for(let te=O;te<F;te+=c){const ce=te-P;for(let ue=Q;ue<ne;ue+=a){const Te=ue-U,Ce=n.get(g,le,te,ue,x);Ce>=J&&(J=Ce,oe=ge*d*f+ce*d+Te)}}}t.set(oe,g,w,T,G,x)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;assertNotComplex$1(r,"avgPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:a}=s,l=1;assert$1(eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const d=computePool2DInfo(r.shape,o,i,l,c,a);let f;if(d.filterWidth===1&&d.filterHeight===1&&arraysEqual(d.inShape,d.outShape))f=identity$1({inputs:{x:r},backend:t});else{const y=t.data.get(r.dataId).values,m=computeStrides(r.shape),h=pool(y,r.shape,r.dtype,m,d,"avg");f=t.makeTensorInfo(d.outShape,r.dtype,h.values)}return f}const avgPoolConfig$1={kernelName:AvgPool,backendName:"cpu",kernelFunc:avgPool$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3D$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:c,dimRoundingMode:a,dataFormat:l,dilations:d}=s;assertNotComplex$1(r,"avgPool3d");let f=d;f==null&&(f=[1,1,1]);const y=computePool3DInfo(r.shape,o,i,f,c,a,l),m=t.data.get(r.dataId).values,h=pool3d(m,r.shape,r.dtype,computeStrides(r.shape),y,"avg");return t.makeTensorInfo(h.shape,"float32",h.values)}const avgPool3DConfig$1={kernelName:AvgPool3D,backendName:"cpu",kernelFunc:avgPool3D$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3DGrad$1(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:i,strides:c,pad:a,dilations:l,dimRoundingMode:d}=s;assertNotComplex$1([r,o],"avgPool3DGrad");const f=computePool3DInfo(o.shape,i,c,l,a,d),y=f.strideDepth,m=f.strideHeight,h=f.strideWidth,g=f.filterDepth,x=f.filterHeight,w=f.filterWidth,I=f.dilationDepth,N=f.dilationHeight,A=f.dilationWidth,T=f.effectiveFilterDepth,P=f.effectiveFilterHeight,O=f.effectiveFilterWidth,F=T-1-f.padInfo.front,G=O-1-f.padInfo.left,U=P-1-f.padInfo.top,Q=buffer(o.shape,"float32"),ne=1/(g*x*w),J=t.bufferSync(r);for(let oe=0;oe<f.batchSize;++oe)for(let le=0;le<f.inChannels;++le)for(let ge=0;ge<f.inDepth;++ge)for(let te=0;te<f.inHeight;++te)for(let ce=0;ce<f.inWidth;++ce){const ue=ge-F,Te=te-U,Ce=ce-G;let Ne=0;for(let Re=0;Re<T;Re+=I){const Ae=(ue+Re)/y;if(!(Ae<0||Ae>=f.outDepth||Math.floor(Ae)!==Ae))for(let we=0;we<P;we+=N){const Le=(Te+we)/m;if(!(Le<0||Le>=f.outHeight||Math.floor(Le)!==Le))for(let pe=0;pe<O;pe+=A){const B=(Ce+pe)/h;if(B<0||B>=f.outWidth||Math.floor(B)!==B)continue;const D=J.get(oe,Ae,Le,B,le);Ne+=D}}}Q.set(Ne*ne,oe,ge,te,ce,le)}return t.makeTensorInfo(Q.shape,Q.dtype,Q.values)}const avgPool3DGradConfig={kernelName:AvgPool3DGrad,backendName:"cpu",kernelFunc:avgPool3DGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPoolGrad$1(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;assertNotComplex$1([r,o],"avgPoolGrad");const{filterSize:c,strides:a,pad:l}=s,d=computePool2DInfo(i.shape,c,a,1,l),f=d.strideHeight,y=d.strideWidth,m=d.filterHeight,h=d.filterWidth,g=d.dilationHeight,x=d.dilationWidth,w=d.effectiveFilterHeight,I=d.effectiveFilterWidth,N=I-1-d.padInfo.left,A=w-1-d.padInfo.top,T=buffer(i.shape,"float32"),P=1/(m*h),O=t.data.get(r.dataId).values,F=buffer(r.shape,"float32",O);for(let G=0;G<d.batchSize;++G)for(let U=0;U<d.inChannels;++U)for(let Q=0;Q<d.inHeight;++Q)for(let ne=0;ne<d.inWidth;++ne){const J=Q-A,oe=ne-N;let le=0;for(let ge=0;ge<w;ge+=g){const te=(J+ge)/f;if(!(te<0||te>=d.outHeight||Math.floor(te)!==te))for(let ce=0;ce<I;ce+=x){const ue=(oe+ce)/y;if(ue<0||ue>=d.outWidth||Math.floor(ue)!==ue)continue;const Te=F.get(G,te,ue,U);le+=Te}}T.set(le*P,G,Q,ne,U)}return t.makeTensorInfo(T.shape,T.dtype,T.values)}const avgPoolGradConfig$1={kernelName:AvgPoolGrad,backendName:"cpu",kernelFunc:avgPoolGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchNorm$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,scale:o,offset:i,mean:c,variance:a}=e;assert$1(c.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),assert$1(i==null||c.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),assert$1(o==null||c.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),assertNotComplex$1([r,c,a,o,i],"batchNorm");let{varianceEpsilon:l}=s;l==null&&(l=.001);const d=t.data.get(r.dataId).values,f=t.data.get(c.dataId).values,y=t.data.get(a.dataId).values,m=o?t.data.get(o.dataId).values:new Float32Array([1]),h=i?t.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(d.length),x=h.length,w=m.length,I=y.length,N=f.length;let A=0,T=0,P=0,O=0;for(let F=0;F<d.length;++F)g[F]=h[A++]+(d[F]-f[T++])*m[P++]/Math.sqrt(y[O++]+l),A>=x&&(A=0),T>=N&&(T=0),P>=w&&(P=0),O>=I&&(O=0);return t.makeTensorInfo(r.shape,r.dtype,g)}const batchNormConfig$1={kernelName:FusedBatchNorm,backendName:"cpu",kernelFunc:batchNorm$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchToSpaceND$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;assertNotComplex$1([r],"batchToSpaceND");const c=o.reduce((w,I)=>w*I),a=getReshaped(r.shape,o,c),l=getPermuted(a.length,o.length),d=getReshapedPermuted(r.shape,o,c),f=getSliceBeginCoords(i,o.length),y=getSliceSize(d,i,o.length),m=reshape$1({inputs:{x:r},backend:t,attrs:{shape:a}}),h=transpose$1({inputs:{x:m},backend:t,attrs:{perm:l}}),g=reshape$1({inputs:{x:h},backend:t,attrs:{shape:d}}),x=slice$1({inputs:{x:g},backend:t,attrs:{begin:f,size:y}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),x}const batchToSpaceNDConfig$1={kernelName:BatchToSpaceND,backendName:"cpu",kernelFunc:batchToSpaceND$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincount$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,c=t.data.get(r.dataId).values,a=t.data.get(o.dataId).values,l=bincountImpl(c,a,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,l)}const bincountConfig$1={kernelName:Bincount,backendName:"cpu",kernelFunc:bincount$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const clip=unaryKernelFunc$1(ClipByValue,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),clipConfig={kernelName:ClipByValue,backendName:"cpu",kernelFunc:clip};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const complexAbs$1=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(sizeFromShape(e.shape)),r=t.data.get(e.dataId),o=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,c=t.data.get(o.dataId).values,a=t.data.get(i.dataId).values;for(let l=0;l<c.length;l++){const d=c[l],f=a[l];s[l]=Math.hypot(d,f)}return t.makeOutput(s,e.shape,"float32")},complexAbsConfig$1={kernelName:ComplexAbs,backendName:"cpu",kernelFunc:complexAbs$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function imag$1(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.imag,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const imagConfig$1={kernelName:Imag,backendName:"cpu",kernelFunc:imag$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concat$1(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=parseAxisParam(r,e[0].shape)[0];let i=computeOutShape$1(e.map(g=>g.shape),o);if(sizeFromShape(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const c=e.filter(g=>sizeFromShape(g.shape)>0);if(c.length===1)return identity$1({inputs:{x:c[0]},backend:t});const a=c.map(g=>g.shape);if(assertParamsConsistent(a,o),c[0].dtype==="complex64"){const g=c.map(A=>real$1({inputs:{input:A},backend:t})),x=c.map(A=>imag$1({inputs:{input:A},backend:t})),w=concat$1({inputs:g,backend:t,attrs:{axis:o}}),I=concat$1({inputs:x,backend:t,attrs:{axis:o}}),N=complex$1({inputs:{real:w,imag:I},backend:t});return g.forEach(A=>t.disposeIntermediateTensorInfo(A)),x.forEach(A=>t.disposeIntermediateTensorInfo(A)),t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(I),N}const l=c.map(g=>{const w=[-1,sizeFromShape(g.shape.slice(o))];return reshape$1({inputs:{x:g},backend:t,attrs:{shape:w}})}),d=l.map(g=>({vals:t.data.get(g.dataId).values,shape:g.shape}));i=computeOutShape$1(l.map(g=>g.shape),1);const f=l[0].shape[0]===1,y=concatImpl$1(d,i,e[0].dtype,f),m=computeOutShape$1(c.map(g=>g.shape),o),h=t.makeTensorInfo(m,e[0].dtype,y);return l.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}const concatConfig$1={kernelName:Concat,backendName:"cpu",kernelFunc:concat$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2D(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:c,dataFormat:a,dilations:l,dimRoundingMode:d}=s;assertNotComplex$1([r,o],"conv2d");const f=convertConv2DDataFormat(a),y=computeConv2DInfo(r.shape,o.shape,i,l,c,d,!1,f),m=y.filterHeight,h=y.filterWidth,g=y.dilationHeight,x=y.dilationWidth,w=y.padInfo.left,I=y.padInfo.top,N=y.dataFormat==="channelsLast",A=new TensorBuffer(y.outShape,r.dtype),T=computeStrides(r.shape),P=computeStrides(o.shape),O=T[0],F=N?T[1]:T[2],G=N?T[2]:1,U=N?1:T[1],Q=A.strides[0],ne=N?A.strides[1]:A.strides[2],J=N?A.strides[2]:1,oe=N?1:A.strides[1],le=t.data.get(r.dataId).values,ge=t.data.get(o.dataId).values,te=A.values;for(let ce=0;ce<y.batchSize;++ce){const ue=ce*O,Te=ce*Q;for(let Ce=0;Ce<y.outHeight;++Ce){const Ne=Te+Ce*ne,Re=Ce*y.strideHeight-I;for(let Ae=0;Ae<m;++Ae){const we=Re+Ae*g;if(we<0||we>=y.inHeight)continue;const Le=Ae*P[0],pe=ue+we*F;for(let B=0;B<y.outWidth;++B){const D=Ne+B*J,H=B*y.strideWidth-w;for(let he=0;he<h;++he){const j=H+he*x;if(j<0||j>=y.inWidth)continue;const ee=Le+he*P[1],ye=pe+j*G;let Oe=ee;for(let ze=0;ze<y.inChannels;++ze){const Xe=le[ye+ze*U];for(let ot=0;ot<y.outChannels;++ot)te[D+ot*oe]+=Xe*ge[Oe+ot];Oe+=y.outChannels}}}}}}return t.makeTensorInfo(A.shape,A.dtype,te)}const conv2DConfig$1={kernelName:Conv2D$1,backendName:"cpu",kernelFunc:conv2D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropFilter$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:c,dataFormat:a,dimRoundingMode:l,filterShape:d}=s;assertNotComplex$1([r,o],"conv2dBackpropFilter");const f=convertConv2DDataFormat(a),y=computeConv2DInfo(r.shape,d,i,1,c,l,!1,f),{strideHeight:m,strideWidth:h,filterHeight:g,filterWidth:x}=y,w=y.dataFormat==="channelsLast",I=new TensorBuffer(y.filterShape,"float32"),N=y.padInfo.left,A=y.padInfo.top,T=t.data.get(r.dataId).values,P=t.data.get(o.dataId).values,O=new TensorBuffer(r.shape,r.dtype,T),F=new TensorBuffer(o.shape,o.dtype,P);for(let G=0;G<g;++G){const U=Math.max(0,Math.ceil((A-G)/m)),Q=Math.min(y.outHeight,(y.inHeight+A-G)/m);for(let ne=0;ne<x;++ne){const J=Math.max(0,Math.ceil((N-ne)/h)),oe=Math.min(y.outWidth,(y.inWidth+N-ne)/h);for(let le=0;le<y.inChannels;++le)for(let ge=0;ge<y.outChannels;++ge){let te=0;for(let ce=0;ce<y.batchSize;++ce)for(let ue=U;ue<Q;++ue){const Te=G+ue*m-A;for(let Ce=J;Ce<oe;++Ce){const Ne=ne+Ce*h-N;w?te+=O.get(ce,Te,Ne,le)*F.get(ce,ue,Ce,ge):te+=O.get(ce,le,Te,Ne)*F.get(ce,ge,ue,Ce)}}I.set(te,G,ne,le,ge)}}}return t.makeTensorInfo(I.shape,I.dtype,I.values)}const conv2DBackpropFilterConfig$1={kernelName:Conv2DBackpropFilter,backendName:"cpu",kernelFunc:conv2DBackpropFilter$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropInput$1(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:c,pad:a,dataFormat:l,dimRoundingMode:d}=s;assertNotComplex$1([r,o],"conv2dBackpropInput");const f=computeStrides(o.shape),y=computeStrides(r.shape);let m=convertConv2DDataFormat(l);const h=computeConv2DInfo(i,o.shape,c,1,a,d,!1,m),g=new TensorBuffer(h.inShape,"float32"),x=g.values,w=t.data.get(r.dataId).values,I=t.data.get(o.dataId).values,[N,A,T]=f,{batchSize:P,filterHeight:O,filterWidth:F,inChannels:G,inHeight:U,inWidth:Q,outChannels:ne,outHeight:J,outWidth:oe,strideHeight:le,strideWidth:ge}=h;m=h.dataFormat;const te=O-1-h.padInfo.top,ce=F-1-h.padInfo.left,ue=m==="channelsLast",Te=g.strides[0],Ce=ue?g.strides[1]:g.strides[2],Ne=ue?g.strides[2]:1,Re=ue?1:g.strides[1],Ae=y[0],we=ue?y[1]:y[2],Le=ue?y[2]:1,pe=ue?1:y[1];for(let B=0;B<P;++B)for(let D=0;D<G;++D)for(let H=0;H<U;++H){const he=H-te,j=Math.max(0,Math.ceil(he/le)),ee=Math.min(J,(O+he)/le);for(let ye=0;ye<Q;++ye){const Oe=ye-ce,ze=Math.max(0,Math.ceil(Oe/ge)),Xe=Math.min(oe,(F+Oe)/ge);let ot=0;for(let pt=j;pt<ee;++pt){const gt=pt*le-he;for(let ht=ze;ht<Xe;++ht){const Tt=ht*ge-Oe,xt=Ae*B+we*pt+Le*ht,Pt=N*(O-1-gt)+A*(F-1-Tt)+T*D;for(let tn=0;tn<ne;++tn){const ln=w[xt+pe*tn],on=I[Pt+tn];ot+=ln*on}}}const st=Te*B+Ce*H+Ne*ye+Re*D;x[st]=ot}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const conv2DBackpropInputConfig$1={kernelName:Conv2DBackpropInput,backendName:"cpu",kernelFunc:conv2DBackpropInput$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3D$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:c,dilations:a}=s;assertNotComplex$1([r,o],"conv3d");const l=computeConv3DInfo(r.shape,o.shape,i,a,c),{filterDepth:d,filterHeight:f,filterWidth:y,dilationDepth:m,dilationHeight:h,dilationWidth:g,padInfo:x}=l,w=x.front,I=x.left,N=x.top,A=new TensorBuffer(l.outShape,r.dtype),T=t.data.get(r.dataId).values,P=t.data.get(o.dataId).values,O=A.values,F=computeStrides(r.shape),G=computeStrides(o.shape);for(let U=0;U<l.batchSize;++U){const Q=U*F[0],ne=U*A.strides[0];for(let J=0;J<l.outDepth;++J){const oe=ne+J*A.strides[1],le=J*l.strideDepth-w;for(let ge=0;ge<d;++ge){const te=le+ge*m;if(te<0||te>=l.inDepth)continue;const ce=ge*G[0],ue=Q+te*F[1];for(let Te=0;Te<l.outHeight;++Te){const Ce=oe+Te*A.strides[2],Ne=Te*l.strideHeight-N;for(let Re=0;Re<f;++Re){const Ae=Ne+Re*h;if(Ae<0||Ae>=l.inHeight)continue;const we=ce+Re*G[1],Le=ue+Ae*F[2];for(let pe=0;pe<l.outWidth;++pe){const B=Ce+pe*l.outChannels,D=pe*l.strideWidth-I;for(let H=0;H<y;++H){const he=D+H*g;if(he<0||he>=l.inWidth)continue;const j=we+H*G[2],ee=Le+he*l.inChannels;let ye=j;for(let Oe=0;Oe<l.inChannels;++Oe){const ze=T[ee+Oe];for(let Xe=0;Xe<l.outChannels;++Xe)O[B+Xe]+=ze*P[ye+Xe];ye+=l.outChannels}}}}}}}}return t.makeTensorInfo(A.shape,A.dtype,A.values)}const conv3DConfig$1={kernelName:Conv3D$1,backendName:"cpu",kernelFunc:conv3D$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropFilterV2$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:c,filterShape:a}=s;assertNotComplex$1([r,o],"conv3dBackpropFilterV2");const l=computeStrides(r.shape),d=computeStrides(o.shape),f=computeConv3DInfo(r.shape,a,i,1,c),y=f.strideDepth,m=f.strideHeight,h=f.strideWidth,g=f.filterDepth,x=f.filterHeight,w=f.filterWidth,I=new TensorBuffer(f.filterShape,"float32"),N=I.values,[A,T,P,O]=I.strides,F=t.data.get(o.dataId).values,[G,U,Q,ne]=d,J=t.data.get(r.dataId).values,[oe,le,ge,te]=l,ce=f.padInfo.front,ue=f.padInfo.left,Te=f.padInfo.top;for(let Ce=0;Ce<g;++Ce){const Ne=Math.max(0,Math.ceil((ce-Ce)/y)),Re=Math.min(f.outDepth,(f.inDepth+ce-Ce)/y),Ae=Ce*A;for(let we=0;we<x;++we){const Le=Math.max(0,Math.ceil((Te-we)/m)),pe=Math.min(f.outHeight,(f.inHeight+Te-we)/m),B=we*T+Ae;for(let D=0;D<w;++D){const H=Math.max(0,Math.ceil((ue-D)/h)),he=Math.min(f.outWidth,(f.inWidth+ue-D)/h),j=D*P+B;for(let ee=0;ee<f.inChannels;++ee){const ye=ee*O+j;for(let Oe=0;Oe<f.outChannels;++Oe){let ze=0;for(let Xe=0;Xe<f.batchSize;++Xe){const ot=Xe*oe,st=Xe*G;for(let pt=Ne;pt<Re;++pt){const ht=(Ce+pt*y-ce)*le+ot,Tt=pt*U+st;for(let xt=Le;xt<pe;++xt){const tn=(we+xt*m-Te)*ge+ht,ln=xt*Q+Tt;for(let on=H;on<he;++on){const zn=(D+on*h-ue)*te+tn,Kn=on*ne+ln;ze+=J[zn+ee]*F[Kn+Oe]}}}}N[ye+Oe]=ze}}}}}return t.makeTensorInfo(I.shape,I.dtype,I.values)}const conv3DBackpropFilterV2Config$1={kernelName:Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:conv3DBackpropFilterV2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropInputV2(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:i,strides:c,inputShape:a}=s;assertNotComplex$1([r],"conv3dBackpropInputV2");const l=computeStrides(r.shape),d=computeStrides(o.shape),f=computeConv3DInfo(a,o.shape,c,1,i),y=new TensorBuffer(f.inShape,"float32"),m=y.values,[h,g,x,w]=y.strides,I=t.data.get(r.dataId).values,[N,A,T,P]=l,O=t.data.get(o.dataId).values,[F,G,U,Q]=d,{batchSize:ne,filterDepth:J,filterHeight:oe,filterWidth:le,inChannels:ge,inDepth:te,inHeight:ce,inWidth:ue,outChannels:Te,outDepth:Ce,outHeight:Ne,outWidth:Re,strideDepth:Ae,strideHeight:we,strideWidth:Le}=f,pe=J-1-f.padInfo.front,B=oe-1-f.padInfo.top,D=le-1-f.padInfo.left;for(let H=0;H<ne;++H)for(let he=0;he<ge;++he)for(let j=0;j<te;++j){const ee=j-pe,ye=Math.max(0,Math.ceil(ee/Ae)),Oe=Math.min(Ce,(J+ee)/Ae);for(let ze=0;ze<ce;++ze){const Xe=ze-B,ot=Math.max(0,Math.ceil(Xe/we)),st=Math.min(Ne,(oe+Xe)/we);for(let pt=0;pt<ue;++pt){const gt=pt-D,ht=Math.max(0,Math.ceil(gt/Le)),Tt=Math.min(Re,(le+gt)/Le);let xt=0;for(let Pt=ye;Pt<Oe;++Pt){const tn=Pt*Ae-ee;for(let ln=ot;ln<st;++ln){const on=ln*we-Xe;for(let An=ht;An<Tt;++An){const zn=An*Le-gt,Kn=N*H+A*Pt+T*ln+P*An,Qn=F*(J-1-tn)+G*(oe-1-on)+U*(le-1-zn)+Q*he;for(let $s=0;$s<Te;++$s){const Ps=I[Kn+$s],Bn=O[Qn+$s];xt+=Ps*Bn}}}}m[h*H+g*j+x*ze+w*pt+he]=xt}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const conv3DBackpropInputV2Config={kernelName:Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:conv3DBackpropInputV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cos$1=unaryKernelFunc$1(Cos,n=>Math.cos(n)),cosConfig$1={kernelName:Cos,backendName:"cpu",kernelFunc:cos$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cosh$1=unaryKernelFunc$1(Cosh,n=>Math.cosh(n)),coshConfig$1={kernelName:Cosh,backendName:"cpu",kernelFunc:cosh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cropAndResize$1(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:c,method:a,extrapolationValue:l}=s,[d,f,y,m]=r.shape,h=o.shape[0],[g,x]=c,w=buffer([h,g,x,m],"float32"),I=t.data.get(o.dataId).values,N=t.data.get(i.dataId).values,A=t.data.get(r.dataId).values,T=computeStrides(r.shape),P=computeStrides(w.shape);for(let O=0;O<h;O++){const F=O*4,G=I[F],U=I[F+1],Q=I[F+2],ne=I[F+3],J=N[O];if(J>=d)continue;const oe=g>1?(Q-G)*(f-1)/(g-1):0,le=x>1?(ne-U)*(y-1)/(x-1):0;for(let ge=0;ge<g;ge++){const te=g>1?G*(f-1)+ge*oe:.5*(G+Q)*(f-1);if(te<0||te>f-1){for(let ce=0;ce<x;ce++)for(let ue=0;ue<m;ue++){const Te=ue+ce*P[2]+ge*P[1]+O*P[0];w.values[Te]=l}continue}if(a==="bilinear"){const ce=Math.floor(te),ue=Math.ceil(te),Te=te-ce;for(let Ce=0;Ce<x;Ce++){const Ne=x>1?U*(y-1)+Ce*le:.5*(U+ne)*(y-1);if(Ne<0||Ne>y-1){for(let Le=0;Le<m;Le++){const pe=Le+Ce*P[2]+ge*P[1]+O*P[0];w.values[pe]=l}continue}const Re=Math.floor(Ne),Ae=Math.ceil(Ne),we=Ne-Re;for(let Le=0;Le<m;Le++){let pe=Le+Re*T[2]+ce*T[1]+J*T[0];const B=A[pe];pe=Le+Ae*T[2]+ce*T[1]+J*T[0];const D=A[pe];pe=Le+Re*T[2]+ue*T[1]+J*T[0];const H=A[pe];pe=Le+Ae*T[2]+ue*T[1]+J*T[0];const he=A[pe],j=B+(D-B)*we,ee=H+(he-H)*we;pe=Le+Ce*P[2]+ge*P[1]+O*P[0],w.values[pe]=j+(ee-j)*Te}}}else for(let ce=0;ce<x;++ce){const ue=x>1?U*(y-1)+ce*le:.5*(U+ne)*(y-1);if(ue<0||ue>y-1){for(let Ne=0;Ne<m;Ne++){const Re=Ne+ce*P[2]+ge*P[1]+O*P[0];w.values[Re]=l}continue}const Te=Math.round(ue),Ce=Math.round(te);for(let Ne=0;Ne<m;Ne++){const Re=Ne+Te*T[2]+Ce*T[1]+J*T[0],Ae=Ne+ce*P[2]+ge*P[1]+O*P[0];w.values[Ae]=A[Re]}}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const cropAndResizeConfig$1={kernelName:CropAndResize,backendName:"cpu",kernelFunc:cropAndResize$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumsum$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:c}=s;assertNotComplex$1(r,"cumsum");const a=getAxesPermutation([o],r.shape.length);let l=r;a!=null&&(l=transpose$1({inputs:{x:r},backend:t,attrs:{perm:a}}));const d=getInnerMostAxes(1,r.shape.length)[0];if(d!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${d}`);const f=upcastType(l.dtype,"int32"),y=makeZerosTypedArray(sizeFromShape(l.shape),f),m=t.data.get(l.dataId).values,h=l.shape[l.shape.length-1],g=c?(w,I)=>w+h-I-1:(w,I)=>w+I;for(let w=0;w<m.length;w+=h)for(let I=0;I<h;I++){const N=g(w,I);if(I===0)y[N]=i?0:m[N];else{const A=g(w,I-1);y[N]=i?m[A]+y[A]:m[N]+y[A]}}const x=t.makeTensorInfo(l.shape,f,y);if(a!=null){const w=getUndoAxesPermutation(a),I=transpose$1({inputs:{x},backend:t,attrs:{perm:w}});return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(l),I}return x}const cumsumConfig$1={kernelName:Cumsum,backendName:"cpu",kernelFunc:cumsum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function denseBincount$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:c}=s;if(r.shape.length===1){const a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,d=bincountImpl(a,l,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,d)}else if(r.shape.length===2){const a=t.bufferSync(r),l=t.bufferSync(o),d=bincountReduceImpl(a,l,i,c);return t.makeTensorInfo(d.shape,o.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const denseBincountConfig$1={kernelName:DenseBincount,backendName:"cpu",kernelFunc:denseBincount$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthToSpace$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s;assert$1(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`),assert$1(o>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`);const c=r.shape[0],a=r.shape[1],l=r.shape[2],d=r.shape[3],f=a*o,y=l*o,m=d/(o*o),h=t.data.get(r.dataId).values,g=new Float32Array(c*f*y*m);let x=0;for(let w=0;w<c;++w)for(let I=0;I<f;++I){const N=Math.floor(I/o),A=I%o;for(let T=0;T<y;++T){const P=Math.floor(T/o),O=T%o,F=(A*o+O)*m;for(let G=0;G<m;++G){const Q=G+F+d*(P+l*(N+a*w));g[x++]=h[Q]}}}return t.makeTensorInfo([c,f,y,m],r.dtype,g)}const depthToSpaceConfig$1={kernelName:DepthToSpace,backendName:"cpu",kernelFunc:depthToSpace$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNative$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:c,dilations:a,dimRoundingMode:l}=s;assertNotComplex$1([r,o],"depthwiseConv2DNative");const d=computeStrides(r.shape),f=computeStrides(o.shape);let y=a;y==null&&(y=[1,1]),assert$1(eitherStridesOrDilationsAreOne(i,y),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${y}'`);const m=computeConv2DInfo(r.shape,o.shape,i,y,c,l,!0),{filterHeight:h,filterWidth:g,dilationHeight:x,dilationWidth:w,padInfo:I}=m,N=I.left,A=I.top,T=m.outChannels/m.inChannels,P=new TensorBuffer(m.outShape,r.dtype),O=t.data.get(r.dataId).values,F=t.data.get(o.dataId).values,G=P.values;for(let U=0;U<m.batchSize;++U){const Q=U*d[0],ne=U*P.strides[0];for(let J=0;J<m.outHeight;++J){const oe=ne+J*P.strides[1],le=J*m.strideHeight-N;for(let ge=0;ge<h;++ge){const te=le+ge*x;if(te<0||te>=m.inHeight)continue;const ce=ge*f[0],ue=Q+te*d[1];for(let Te=0;Te<m.outWidth;++Te){const Ce=oe+Te*P.strides[2],Ne=Te*m.strideWidth-A;for(let Re=0;Re<g;++Re){const Ae=Ne+Re*w;if(Ae<0||Ae>=m.inWidth)continue;const we=ce+Re*f[1],Le=ue+Ae*m.inChannels;let pe=Ce,B=we;for(let D=0;D<m.inChannels;++D){const H=O[Le+D];for(let he=0;he<T;++he)G[pe+he]+=H*F[B+he];pe+=T,B+=T}}}}}}return t.makeTensorInfo(P.shape,P.dtype,P.values)}const depthwiseConv2dNativeConfig$1={kernelName:DepthwiseConv2dNative,backendName:"cpu",kernelFunc:depthwiseConv2dNative$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropFilter$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:c,pad:a,dimRoundingMode:l,filterShape:d}=s;assertNotComplex$1([r,o],"depthwiseConv2dNativeBackpropFilter");const f=computeConv2DInfo(r.shape,d,i,c,a,l,!0),{strideHeight:y,strideWidth:m,filterHeight:h,filterWidth:g}=f,x=new TensorBuffer(f.filterShape,"float32"),w=f.padInfo.left,I=f.padInfo.top,N=f.outChannels/f.inChannels,A=t.data.get(r.dataId).values,T=new TensorBuffer(r.shape,r.dtype,A),P=t.data.get(o.dataId).values,O=new TensorBuffer(o.shape,o.dtype,P);for(let F=0;F<h;++F){const G=Math.max(0,Math.ceil((I-F)/y)),U=Math.min(f.outHeight,(f.inHeight+I-F)/y);for(let Q=0;Q<g;++Q){const ne=Math.max(0,Math.ceil((w-Q)/m)),J=Math.min(f.outWidth,(f.inWidth+w-Q)/m);for(let oe=0;oe<f.outChannels;++oe){const le=Math.trunc(oe/N),ge=oe%N;let te=0;for(let ce=0;ce<f.batchSize;++ce)for(let ue=G;ue<U;++ue){const Te=F+ue*y-I;for(let Ce=ne;Ce<J;++Ce){const Ne=Q+Ce*m-w;te+=T.get(ce,Te,Ne,le)*O.get(ce,ue,Ce,oe)}}x.set(te,F,Q,le,ge)}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const depthwiseConv2dNativeBackpropFilterConfig$1={kernelName:DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:depthwiseConv2dNativeBackpropFilter$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropInput$1(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:c,pad:a,dimRoundingMode:l,inputShape:d}=s;assertNotComplex$1([r,o],"depthwiseConv2DNativeBackpropInput");const f=computeStrides(r.shape),y=computeStrides(o.shape),m=computeConv2DInfo(d,o.shape,i,c,a,l,!0),h=new TensorBuffer(m.inShape,"float32"),g=h.values,[x,w,I]=h.strides,N=t.data.get(r.dataId).values,[A,T,P]=f,O=t.data.get(o.dataId).values,[F,G,U]=y,{batchSize:Q,filterHeight:ne,filterWidth:J,inChannels:oe,inHeight:le,inWidth:ge,outChannels:te,outHeight:ce,outWidth:ue,strideHeight:Te,strideWidth:Ce}=m,Ne=ne-1-m.padInfo.top,Re=J-1-m.padInfo.left,Ae=te/oe;for(let we=0;we<Q;++we)for(let Le=0;Le<oe;++Le)for(let pe=0;pe<le;++pe){const B=pe-Ne,D=Math.max(0,Math.ceil(B/Te)),H=Math.min(ce,(ne+B)/Te);for(let he=0;he<ge;++he){const j=he-Re,ee=Math.max(0,Math.ceil(j/Ce)),ye=Math.min(ue,(J+j)/Ce);let Oe=0;for(let ze=D;ze<H;++ze){const Xe=ze*Te-B;for(let ot=ee;ot<ye;++ot){const st=ot*Ce-j,pt=A*we+T*ze+P*ot,gt=F*(ne-1-Xe)+G*(J-1-st)+U*Le;for(let ht=0;ht<Ae;++ht){const Tt=Le*Ae+ht,xt=N[pt+Tt],Pt=O[gt+ht];Oe+=xt*Pt}}}g[x*we+w*pe+I*he+Le]=Oe}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}const depthwiseConv2dNativeBackpropInputConfig$1={kernelName:DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:depthwiseConv2dNativeBackpropInput$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function diag$1(n){const{inputs:e,backend:t}=n,{x:s}=e,r=sizeFromShape(s.shape),o=t.data.get(s.dataId).values,i=buffer([r,r],s.dtype),c=i.values;for(let l=0;l<o.length;l++)c[l*r+l]=o[l];const a=[...s.shape,...s.shape];return t.makeTensorInfo(a,i.dtype,i.values)}const diagConfig$1={kernelName:Diag,backendName:"cpu",kernelFunc:diag$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2dConfig={kernelName:Dilation2D,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r}=n,{strides:o,pad:i,dilations:c}=t,a=e,l=a.data.get(s.dataId).values,d=s.shape.length,f=a.data.get(r.dataId).values,y=r.shape.length,{batchSize:m,inHeight:h,inWidth:g,inChannels:x,outHeight:w,outWidth:I,padInfo:N,strideHeight:A,strideWidth:T,filterHeight:P,filterWidth:O,dilationHeight:F,dilationWidth:G,outShape:U}=computeDilation2DInfo(s.shape,r.shape,o,i,"NHWC",c),Q=sizeFromShape(U),ne=U.length,J=getArrayFromDType(s.dtype,Q);for(let le=0;le<m;++le)for(let ge=0;ge<w;++ge){const te=ge*A-N.top;for(let ce=0;ce<I;++ce){const ue=ce*T-N.left;for(let Te=0;Te<x;++Te){let Ce=Number.MIN_SAFE_INTEGER;for(let Re=0;Re<P;++Re){const Ae=te+Re*F;if(Ae>=0&&Ae<h)for(let we=0;we<O;++we){const Le=ue+we*G;if(Le>=0&&Le<g){const pe=locToIndex([le,Ae,Le,Te],d,computeStrides(s.shape)),B=locToIndex([Re,we,Te],y,computeStrides(r.shape)),D=l[pe]+f[B];D>Ce&&(Ce=D)}}}const Ne=locToIndex([le,ge,ce,Te],ne,computeStrides(U));J[Ne]=Ce}}}return{dataId:a.write(toTypedArray(J,s.dtype),U,s.dtype),shape:U,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2dBackpropFilterConfig={kernelName:Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:c,dilations:a}=t,l=e,d=toNestedArray(s.shape,l.data.get(s.dataId).values),f=toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:y,inHeight:m,inWidth:h,inChannels:g,outHeight:x,outWidth:w,padInfo:I,strideHeight:N,strideWidth:A,filterHeight:T,filterWidth:P,dilationHeight:O,dilationWidth:F,outShape:G}=computeDilation2DInfo(s.shape,r.shape,i,c,"NHWC",a);assert$1(o.rank===G.length,()=>`Error in ${Dilation2DBackpropFilter}, dy must have the same rank as output ${G.length}, but got ${o.rank}`);const U=toNestedArray(G,l.data.get(o.dataId).values),Q=makeZerosNestedTypedArray(r.shape,r.dtype);for(let J=0;J<y;++J)for(let oe=0;oe<x;++oe){const le=oe*N-I.top;for(let ge=0;ge<w;++ge){const te=ge*A-I.left;for(let ce=0;ce<g;++ce){let ue=Number.MIN_SAFE_INTEGER,Te=0,Ce=0;for(let Ne=0;Ne<T;++Ne){const Re=le+Ne*O;if(Re>=0&&Re<m)for(let Ae=0;Ae<P;++Ae){const we=te+Ae*F;if(we>=0&&we<h){const Le=d[J][Re][we][ce]+f[Ne][Ae][ce];Le>ue&&(ue=Le,Te=Ne,Ce=Ae)}}}Q[Te][Ce][ce]+=U[J][oe][ge][ce]}}}return{dataId:l.write(toTypedArray(Q,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dilation2dBackpropInputConfig={kernelName:Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:i,pad:c,dilations:a}=t,l=e,d=toNestedArray(s.shape,l.data.get(s.dataId).values),f=toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:y,inHeight:m,inWidth:h,inChannels:g,outHeight:x,outWidth:w,padInfo:I,strideHeight:N,strideWidth:A,filterHeight:T,filterWidth:P,dilationHeight:O,dilationWidth:F,outShape:G}=computeDilation2DInfo(s.shape,r.shape,i,c,"NHWC",a);assert$1(o.rank===G.length,()=>`Error in ${Dilation2DBackpropInput}, dy must have the same rank as output ${G.length}, but got ${o.rank}`);const U=toNestedArray(G,l.data.get(o.dataId).values),Q=makeZerosNestedTypedArray(s.shape,s.dtype);for(let J=0;J<y;++J)for(let oe=0;oe<x;++oe){const le=oe*N-I.top;for(let ge=0;ge<w;++ge){const te=ge*A-I.left;for(let ce=0;ce<g;++ce){let ue=Number.MIN_SAFE_INTEGER,Te=le<0?0:le,Ce=te<0?0:te;for(let Ne=0;Ne<T;++Ne){const Re=le+Ne*O;if(Re>=0&&Re<m)for(let Ae=0;Ae<P;++Ae){const we=te+Ae*F;if(we>=0&&we<h){const Le=d[J][Re][we][ce]+f[Ne][Ae][ce];Le>ue&&(ue=Le,Te=Re,Ce=we)}}}Q[J][Te][Ce][ce]+=U[J][oe][ge][ce]}}}return{dataId:l.write(toTypedArray(Q,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eluGrad$1(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e;assertNotComplex$1([s,r],"eluGrad");const o=new Float32Array(sizeFromShape(r.shape)),i=t.data.get(r.dataId).values,c=t.data.get(s.dataId).values;for(let a=0;a<i.length;++a){const l=i[a];l>=1?o[a]=c[a]:o[a]=c[a]*(l+1)}return t.makeTensorInfo(r.shape,"float32",o)}const eluGradConfig$1={kernelName:EluGrad,backendName:"cpu",kernelFunc:eluGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const equalImpl=createSimpleBinaryKernelImpl((n,e)=>n===e?1:0),equal$1=binaryKernelFunc$1(Equal,equalImpl,null,"bool"),equalConfig$1={kernelName:Equal,backendName:"cpu",kernelFunc:equal$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p=ERF_P,a1=ERF_A1,a2=ERF_A2,a3=ERF_A3,a4=ERF_A4,a5=ERF_A5,erf$1=unaryKernelFunc$1(Erf,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+p*t);return e*(1-((((a5*s+a4)*s+a3)*s+a2)*s+a1)*s*Math.exp(-t*t))}),erfConfig$1={kernelName:Erf,backendName:"cpu",kernelFunc:erf$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expandDims$1(n){const{inputs:e,backend:t,attrs:s}=n,{input:r}=e,{dim:o}=s,i=r.shape.length,c=r.shape.slice();let a=o;return o<0&&(assert$1(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),a=i+o+1),c.splice(a,0,1),reshape$1({inputs:{x:r},backend:t,attrs:{shape:c}})}const expandDimsConfig$1={kernelName:ExpandDims,backendName:"cpu",kernelFunc:expandDims$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const realDivImpl=createSimpleBinaryKernelImpl((n,e)=>n/e),div=binaryKernelFunc$1(RealDiv,realDivImpl),realDivConfig$1={kernelName:RealDiv,backendName:"cpu",kernelFunc:div};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fftBatch(n,e,t){const s=n.shape,r=s[0],o=s[1],i=t.data.get(n.dataId),c=i.complexTensorInfos.real,a=i.complexTensorInfos.imag,l=[r,o],d=sizeFromShape(l),f=getTypedArrayFromDType("float32",d),y=getTypedArrayFromDType("float32",d);for(let x=0;x<r;x++){const w=slice$1({inputs:{x:c},backend:t,attrs:{begin:[x,0],size:[1,o]}}),I=slice$1({inputs:{x:a},backend:t,attrs:{begin:[x,0],size:[1,o]}}),N=complex$1({inputs:{real:w,imag:I},backend:t}),{real:A,imag:T}=fftImpl$1(N,e,t),P=mergeRealAndImagArrays(A,T);for(let O=0;O<o;O++){const F=getComplexWithIndex(P,O);f[x*o+O]=F.real,y[x*o+O]=F.imag}t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(I),t.disposeIntermediateTensorInfo(N)}const m=t.makeTensorInfo(l,"float32",f),h=t.makeTensorInfo(l,"float32",y),g=complex$1({inputs:{real:m,imag:h},backend:t});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(h),g}function fftImpl$1(n,e,t){const s=sizeFromShape(n.shape),r=t.data.get(n.dataId),o=t.data.get(r.complexTensorInfos.real.dataId).values,i=t.data.get(r.complexTensorInfos.imag.dataId).values;if(isExponentOf2(s)){const c=fftRadix2(o,i,s,e,t),a=[n.shape[0],n.shape[1]];if(e){const l=t.makeTensorInfo(a,"float32",c.real),d=t.makeTensorInfo(a,"float32",c.imag),f=t.makeTensorInfo([],"float32",createScalarValue(s,"float32")),y=identity$1({inputs:{x:f},backend:t}),m=realDivConfig$1.kernelFunc({inputs:{a:l,b:f},backend:t}),h=realDivConfig$1.kernelFunc({inputs:{a:d,b:y},backend:t}),g=t.data.get(m.dataId).values,x=t.data.get(h.dataId).values;return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(h),{real:g,imag:x}}return c}else{const c=mergeRealAndImagArrays(o,i),a=fourierTransformByMatmul(c,s,e);return splitRealAndImagArrays(a)}}function isExponentOf2(n){return(n&n-1)===0}function fftRadix2(n,e,t,s,r){if(t===1)return{real:n,imag:e};const o=mergeRealAndImagArrays(n,e),i=t/2,c=complexWithEvenIndex(o),a=c.real,l=c.imag,d=[a.length],f=r.makeTensorInfo(d,"float32",a),y=r.makeTensorInfo(d,"float32",l),m=complex$1({inputs:{real:f,imag:y},backend:r}),h=complexWithOddIndex(o),g=h.real,x=h.imag,w=[g.length],I=r.makeTensorInfo(w,"float32",g),N=r.makeTensorInfo(w,"float32",x),A=complex$1({inputs:{real:I,imag:N},backend:r}),T=fftRadix2(a,l,i,s,r),P=T.real,O=T.imag,F=[P.length],G=r.makeTensorInfo(F,"float32",P),U=r.makeTensorInfo(F,"float32",O),Q=complex$1({inputs:{real:G,imag:U},backend:r}),ne=fftRadix2(g,x,i,s,r),J=ne.real,oe=ne.imag,le=[J.length],ge=r.makeTensorInfo(le,"float32",J),te=r.makeTensorInfo(le,"float32",oe),ce=complex$1({inputs:{real:ge,imag:te},backend:r}),ue=exponents(t,s),Te=[ue.real.length],Ce=r.makeTensorInfo(Te,"float32",ue.real),Ne=r.makeTensorInfo(Te,"float32",ue.imag),Re=complex$1({inputs:{real:Ce,imag:Ne},backend:r}),Ae=multiply$1({inputs:{a:Re,b:ce},backend:r}),we=add({inputs:{a:Q,b:Ae},backend:r}),Le=sub$1({inputs:{a:Q,b:Ae},backend:r}),pe=real$1({inputs:{input:we},backend:r}),B=real$1({inputs:{input:Le},backend:r}),D=imag$1({inputs:{input:we},backend:r}),H=imag$1({inputs:{input:Le},backend:r}),he=concat$1({inputs:[pe,B],backend:r,attrs:{axis:0}}),j=concat$1({inputs:[D,H],backend:r,attrs:{axis:0}}),ee=r.data.get(he.dataId).values,ye=r.data.get(j.dataId).values;return r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(I),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(Q),r.disposeIntermediateTensorInfo(ge),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(ce),r.disposeIntermediateTensorInfo(Ce),r.disposeIntermediateTensorInfo(Ne),r.disposeIntermediateTensorInfo(Re),r.disposeIntermediateTensorInfo(Ae),r.disposeIntermediateTensorInfo(we),r.disposeIntermediateTensorInfo(Le),r.disposeIntermediateTensorInfo(pe),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(he),r.disposeIntermediateTensorInfo(j),{real:ee,imag:ye}}function fourierTransformByMatmul(n,e,t){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let o=0,i=0;for(let c=0;c<e;c++){const a=exponent(r*c,e,t),l=getComplexWithIndex(n,c);o+=l.real*a.real-l.imag*a.imag,i+=l.real*a.imag+l.imag*a.real}t&&(o/=e,i/=e),assignToTypedArray(s,o,i,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fft$1(n){const{inputs:e,backend:t}=n,{input:s}=e,r=sizeFromShape(s.shape),o=s.shape[s.shape.length-1],i=r/o,c=reshape$1({inputs:{x:s},backend:t,attrs:{shape:[i,o]}}),a=fftBatch(c,!1,t),l=reshape$1({inputs:{x:a},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(a),l}const fftConfig$1={kernelName:FFT,backendName:"cpu",kernelFunc:fft$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fill$1(n){const{backend:e,attrs:t}=n,{shape:s,value:r,dtype:o}=t,i=o||inferDtype(r),c=getArrayFromDType(i,sizeFromShape(s));return fillValues(c,r,i),e.makeTensorInfo(s,i,c)}const fillConfig$1={kernelName:Fill,backendName:"cpu",kernelFunc:fill$1};function fillValues(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const flipLeftRightConfig$1={kernelName:FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,r=t,o=getTypedArrayFromDType(s.dtype,sizeFromShape(s.shape)),[i,c,a,l]=s.shape,d=r.data.get(s.dataId).values;for(let y=0;y<i;y++){const m=y*a*c*l;for(let h=0;h<c;h++){const g=h*(a*l);for(let x=0;x<a;x++){const w=x*l;for(let I=0;I<l;I++){const A=[i,h,x,I][2],T=Math.round(a-A),P=m+g+w+I;let O=d[P];if(T>=0&&T<a){const F=T*l,G=m+g+F+I;O=d[G]}o[P]=O}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const floorDivImpl=createSimpleBinaryKernelImpl((n,e)=>Math.floor(n/e)),floorDiv$1=binaryKernelFunc$1(FloorDiv,floorDivImpl,null,"int32"),floorDivConfig$1={kernelName:FloorDiv,backendName:"cpu",kernelFunc:floorDiv$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConv2D(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:c}=e,{strides:a,pad:l,dataFormat:d,dilations:f,dimRoundingMode:y,activation:m,leakyreluAlpha:h}=s;let g=conv2D({inputs:{x:r,filter:o},backend:t,attrs:{strides:a,pad:l,dataFormat:d,dilations:f,dimRoundingMode:y}});if(i){const x=g;g=add({inputs:{a:g,b:i},backend:t}),t.disposeIntermediateTensorInfo(x)}if(m){const x=g;g=applyActivation(t,g,m,c,h),t.disposeIntermediateTensorInfo(x)}return g}const fusedConv2DConfig$1={kernelName:FusedConv2D,backendName:"cpu",kernelFunc:fusedConv2D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedDepthwiseConv2D$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:c}=e,{strides:a,pad:l,dataFormat:d,dilations:f,dimRoundingMode:y,activation:m,leakyreluAlpha:h}=s;let g=depthwiseConv2dNative$1({inputs:{x:r,filter:o},backend:t,attrs:{strides:a,pad:l,dataFormat:d,dilations:f,dimRoundingMode:y}});if(i){const x=g;g=add({inputs:{a:g,b:i},backend:t}),t.disposeIntermediateTensorInfo(x)}if(m){const x=g;g=applyActivation(t,g,m,c,h),t.disposeIntermediateTensorInfo(x)}return g}const fusedDepthwiseConv2DConfig$1={kernelName:FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:fusedDepthwiseConv2D$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherNd$1(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=sizeFromShape(s.shape),i=r.shape,c=i[i.length-1],[a,l,d,f]=prepareAndValidate(s,r);if(l===0)return t.makeTensorInfo(a,s.dtype,[]);const y=buffer([l,d],s.dtype),m=t.data.get(r.dataId).values,h=t.data.get(s.dataId).values;for(let g=0;g<l;g++){const x=[];let w=0;for(let I=0;I<c;I++){const N=m[g*c+I];w+=N*f[I],x.push(N)}if(w<0||w>=o/d)throw new Error(`Invalid indices: ${x} does not index into ${s.shape}`);for(let I=0;I<d;I++)y.values[g*d+I]=h[w*d+I]}return t.makeTensorInfo(a,y.dtype,y.values)}const gatherNdConfig$1={kernelName:GatherNd,backendName:"cpu",kernelFunc:gatherNd$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherV2$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:c}=s;assertNotComplex$1([r,o],"gatherV2");let a=c;c==null&&(a=0);const l=sizeFromShape(o.shape),d=parseAxisParam(i,r.shape)[0],f=collectGatherOpShapeInfo(r,o,d,a),y=reshape$1({inputs:{x:r},backend:t,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),m=reshape$1({inputs:{x:o},backend:t,attrs:{shape:[f.batchSize,l/f.batchSize]}}),h=[f.batchSize,f.outerSize,l/f.batchSize,f.sliceSize],g=t.bufferSync(m),x=t.bufferSync(y),w=gatherV2Impl(x,g,h);return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(m),t.makeTensorInfo(f.outputShape,w.dtype,w.values)}const gatherV2Config$1={kernelName:GatherV2,backendName:"cpu",kernelFunc:gatherV2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const greaterEqualImpl=createSimpleBinaryKernelImpl((n,e)=>n>=e?1:0),greaterEqual$1=binaryKernelFunc$1(GreaterEqual,greaterEqualImpl,null,"bool"),greaterEqualConfig$1={kernelName:GreaterEqual,backendName:"cpu",kernelFunc:greaterEqual$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ifft$1(n){const{inputs:e,backend:t}=n,{input:s}=e,r=sizeFromShape(s.shape),o=s.shape[s.shape.length-1],i=r/o,c=reshape$1({inputs:{x:s},backend:t,attrs:{shape:[i,o]}}),a=fftBatch(c,!0,t),l=reshape$1({inputs:{x:a},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(a),l}const ifftConfig$1={kernelName:IFFT,backendName:"cpu",kernelFunc:ifft$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isFinite$2=unaryKernelFunc$1(IsFinite,n=>Number.isFinite(n)?1:0,"bool"),isFiniteConfig$1={kernelName:IsFinite,backendName:"cpu",kernelFunc:isFinite$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isInf$1=unaryKernelFunc$1(IsInf,n=>Math.abs(n)===1/0?1:0,"bool"),isInfConfig$1={kernelName:IsInf,backendName:"cpu",kernelFunc:isInf$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const isNaN$2=unaryKernelFunc$1(IsNan,n=>Number.isNaN(n)?1:0,"bool"),isNaNConfig$1={kernelName:IsNan,backendName:"cpu",kernelFunc:isNaN$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lessEqualImpl=createSimpleBinaryKernelImpl((n,e)=>n<=e?1:0),lessEqual$1=binaryKernelFunc$1(LessEqual,lessEqualImpl,null,"bool"),lessEqualConfig$1={kernelName:LessEqual,backendName:"cpu",kernelFunc:lessEqual$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linSpace$1(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=linSpaceImpl(s,r,o);return e.makeTensorInfo([i.length],"float32",i)}const linSpaceConfig$1={kernelName:LinSpace,backendName:"cpu",kernelFunc:linSpace$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const log1p$1=unaryKernelFunc$1(Log1p,n=>Math.log1p(n)),log1pConfig$1={kernelName:Log1p,backendName:"cpu",kernelFunc:log1p$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logicalAndImpl=createSimpleBinaryKernelImpl((n,e)=>n&&e),logicalAnd$1=binaryKernelFunc$1(LogicalAnd,logicalAndImpl,null,"bool"),logicalAndConfig$1={kernelName:LogicalAnd,backendName:"cpu",kernelFunc:logicalAnd$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logicalNot$1=unaryKernelFunc$1(LogicalNot,n=>n?0:1,"bool"),logicalNotConfig$1={kernelName:LogicalNot,backendName:"cpu",kernelFunc:logicalNot$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const logicalOrImpl=createSimpleBinaryKernelImpl((n,e)=>n||e),logicalOr$1=binaryKernelFunc$1(LogicalOr,logicalOrImpl,null,"bool"),logicalOrConfig$1={kernelName:LogicalOr,backendName:"cpu",kernelFunc:logicalOr$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lRN(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:c,beta:a}=s;assertNotComplex$1(r,"LRN");const l=r.shape[3],d=l-1,f=t.data.get(r.dataId).values,y=sizeFromShape(r.shape),m=new Float32Array(y);function h(g){const x=g%l;let w=g-x+Math.max(0,x-o);const I=g-x+Math.min(x+o,d);let N=0;for(;w<=I;w++){const A=f[w];N+=A*A}return N}for(let g=0;g<y;g++){const x=h(g),w=f[g]*Math.pow(i+c*x,-a);m[g]=w}return t.makeTensorInfo(r.shape,r.dtype,m)}const lRNConfig={kernelName:LRN,backendName:"cpu",kernelFunc:lRN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lRNGrad(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:c,bias:a,alpha:l,beta:d}=s;assertNotComplex$1(i,"LRNGrad");const f=sizeFromShape(i.shape),y=i.shape[3],m=t.data.get(i.dataId).values,h=t.data.get(r.dataId).values,g=t.data.get(o.dataId).values,x=new Float32Array(f),w=f;for(let I=0;I<w;I++){const N=I%y,A=I-N+Math.max(0,N-c),T=I-N+Math.min(y,N+c+1);let P=0;for(let O=A;O<T;O++)P+=Math.pow(h[O],2);P=l*P+a;for(let O=A;O<T;O++){let F=-2*l*d*h[O]*g[I]/P;I===O&&(F+=Math.pow(P,-d)),F*=m[I],x[O]+=F}}return t.makeTensorInfo(i.shape,r.dtype,x)}const lRNGradConfig={kernelName:LRNGrad,backendName:"cpu",kernelFunc:lRNGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function max$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s,c=t;let a=r.shape;const l=a.length,d=parseAxisParam(o,a);let f=d;const y=getAxesPermutation(f,l);let m=c.data.get(r.dataId).values;if(y!=null){const A=new Array(l);for(let T=0;T<A.length;T++)A[T]=a[y[T]];m=transposeImpl$1(m,a,r.dtype,y,A),f=getInnerMostAxes(f.length,l),a=A}assertNotComplex$1(r,"max"),assertAxesAreInnerMostDims("max",f,l);const[h,g]=computeOutAndReduceShapes(a,f),x=sizeFromShape(g),w=maxImpl$1(m,x,h,r.dtype),I=c.write(w,h,r.dtype);let N=h;return i&&(N=expandShapeToKeepDim(h,d)),{dataId:I,shape:N,dtype:r.dtype}}const maxConfig$1={kernelName:Max,backendName:"cpu",kernelFunc:max$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;assertNotComplex$1(r,"maxPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:a}=s,l=1;assert$1(eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const d=computePool2DInfo(r.shape,o,i,l,c,a);let f;if(d.filterWidth===1&&d.filterHeight===1&&arraysEqual(d.inShape,d.outShape))f=identity$1({inputs:{x:r},backend:t});else{const y=t.data.get(r.dataId).values,m=computeStrides(r.shape),h=pool(y,r.shape,r.dtype,m,d,"max");f=t.makeTensorInfo(d.outShape,r.dtype,h.values)}return f}const maxPoolConfig$1={kernelName:MaxPool,backendName:"cpu",kernelFunc:maxPool$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3D(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:c,dimRoundingMode:a,dataFormat:l,dilations:d}=s;assertNotComplex$1(r,"maxPool3d");let f=d;f==null&&(f=[1,1,1]);const y=computePool3DInfo(r.shape,o,i,f,c,a,l),m=t.data.get(r.dataId).values,h=pool3d(m,r.shape,r.dtype,computeStrides(r.shape),y,"max");return t.makeTensorInfo(h.shape,"float32",h.values)}const maxPool3DConfig$1={kernelName:MaxPool3D,backendName:"cpu",kernelFunc:maxPool3D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3DGrad$1(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:i,strides:c,pad:a,dilations:l,dimRoundingMode:d}=s;assertNotComplex$1([r,o],"maxPool3DGrad");const f=computePool3DInfo(o.shape,i,c,l,a,d),y=t.bufferSync(o),m=maxPool3dPositions(y,f),h=f.strideDepth,g=f.strideHeight,x=f.strideWidth,w=f.dilationDepth,I=f.dilationHeight,N=f.dilationWidth,A=f.effectiveFilterDepth,T=f.effectiveFilterHeight,P=f.effectiveFilterWidth,O=A-1-f.padInfo.front,F=P-1-f.padInfo.left,G=T-1-f.padInfo.top,U=buffer(o.shape,"float32"),Q=t.bufferSync(r);for(let ne=0;ne<f.batchSize;++ne)for(let J=0;J<f.inChannels;++J)for(let oe=0;oe<f.inDepth;++oe)for(let le=0;le<f.inHeight;++le)for(let ge=0;ge<f.inWidth;++ge){const te=oe-O,ce=le-G,ue=ge-F;let Te=0;for(let Ce=0;Ce<A;Ce+=w){const Ne=(te+Ce)/h;if(!(Ne<0||Ne>=f.outDepth||Math.floor(Ne)!==Ne))for(let Re=0;Re<T;Re+=I){const Ae=(ce+Re)/g;if(!(Ae<0||Ae>=f.outHeight||Math.floor(Ae)!==Ae))for(let we=0;we<P;we+=N){const Le=(ue+we)/x;if(Le<0||Le>=f.outWidth||Math.floor(Le)!==Le)continue;const pe=A*T*P-1-m.get(ne,Ne,Ae,Le,J),B=Ce*T*P+Re*P+we,D=pe===B?1:0;if(D===0)continue;const H=Q.get(ne,Ne,Ae,Le,J);Te+=H*D}}}U.set(Te,ne,oe,le,ge,J)}return t.makeTensorInfo(U.shape,U.dtype,U.values)}const maxPool3DGradConfig={kernelName:MaxPool3DGrad,backendName:"cpu",kernelFunc:maxPool3DGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolGrad$1(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,c=o;assertNotComplex$1([o,i],"maxPoolGrad");const{filterSize:a,strides:l,pad:d,dimRoundingMode:f}=s,y=computePool2DInfo(c.shape,a,l,1,d,f),m=t.data.get(c.dataId).values,h=buffer(y.outShape,c.dtype,maxPoolPositions(m,c.shape,c.dtype,y).values),g=y.strideHeight,x=y.strideWidth,w=y.dilationHeight,I=y.dilationWidth,N=y.effectiveFilterHeight,A=y.effectiveFilterWidth,T=A-1-y.padInfo.left,P=N-1-y.padInfo.top,O=buffer(c.shape,"float32"),F=t.data.get(r.dataId).values,G=buffer(r.shape,"float32",F);for(let U=0;U<y.batchSize;++U)for(let Q=0;Q<y.inChannels;++Q)for(let ne=0;ne<y.inHeight;++ne)for(let J=0;J<y.inWidth;++J){const oe=ne-P,le=J-T;let ge=0;for(let te=0;te<N;te+=w){const ce=(oe+te)/g;if(!(ce<0||ce>=y.outHeight||Math.floor(ce)!==ce))for(let ue=0;ue<A;ue+=I){const Te=(le+ue)/x;if(Te<0||Te>=y.outWidth||Math.floor(Te)!==Te)continue;const Ce=N*A-1-h.get(U,ce,Te,Q),Ne=te*A+ue,Re=Ce===Ne?1:0;if(Re===0)continue;const Ae=G.get(U,ce,Te,Q);ge+=Ae*Re}}O.set(ge,U,ne,J,Q)}return t.makeTensorInfo(O.shape,O.dtype,O.values)}const maxPoolGradConfig$1={kernelName:MaxPoolGrad,backendName:"cpu",kernelFunc:maxPoolGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolWithArgmaxImpl$1(n,e,t,s,r){const o=computeStrides(e),i=pool(n,e,t,o,r,"max"),c=maxPoolPositions(n,e,t,r,!0,s);return[i.values,c.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPoolWithArgmaxConfig$1={kernelName:MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:c}=e,a=t;assertNotComplex$1(s,"MaxPoolWithArgmax");const l=a.data.get(s.dataId).values,d=computePool2DInfo(s.shape,r,o,[1,1],i),[f,y]=maxPoolWithArgmaxImpl$1(l,s.shape,s.dtype,c,d),m=a.write(f,d.outShape,s.dtype),h=a.write(y,d.outShape,s.dtype);return[{dataId:m,shape:d.outShape,dtype:s.dtype},{dataId:h,shape:d.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sum$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;assertNotComplex$1(r,"sum");let c;r.dtype==="bool"?c=cast$1({inputs:{x:r},backend:t,attrs:{dtype:"int32"}}):c=identity$1({inputs:{x:r},backend:t});const a=c.shape.length,l=parseAxisParam(o,c.shape),d=getAxesPermutation(l,a);let f=l,y=c;d!=null&&(y=transpose$1({inputs:{x:c},backend:t,attrs:{perm:d}}),f=getInnerMostAxes(f.length,a)),assertAxesAreInnerMostDims("sum",f,y.shape.length);const[m,h]=computeOutAndReduceShapes(y.shape,f),g=upcastType(y.dtype,"int32");let x=zeros(t,m,g);const w=sizeFromShape(h),I=t.data.get(x.dataId).values,N=t.data.get(y.dataId).values;for(let A=0;A<I.length;++A){const T=A*w;let P=0;for(let O=0;O<w;++O)P+=N[T+O];I[A]=P}if(i){const A=expandShapeToKeepDim(x.shape,l),T=x;x=reshape$1({inputs:{x},backend:t,attrs:{shape:A}}),t.disposeIntermediateTensorInfo(T)}return t.disposeIntermediateTensorInfo(c),d!=null&&t.disposeIntermediateTensorInfo(y),x}const sumConfig$1={kernelName:Sum,backendName:"cpu",kernelFunc:sum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mean(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,c=parseAxisParam(o,r.shape),l=computeOutAndReduceShapes(r.shape,c)[1],d=sizeFromShape(l),f=[],y=t.makeTensorInfo([],"float32",new Float32Array([d]));f.push(y);const m=cast$1({inputs:{x:r},backend:t,attrs:{dtype:"float32"}});f.push(m);const h=div({inputs:{a:m,b:y},backend:t});f.push(h);const g=sum$1({inputs:{x:h},backend:t,attrs:{axis:o,keepDims:i}});return f.forEach(x=>t.disposeIntermediateTensorInfo(x)),g}const meanConfig$1={kernelName:Mean,backendName:"cpu",kernelFunc:mean};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function min$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;assertNotComplex$1(r,"min");const c=parseAxisParam(o,r.shape);let a=c;const l=getAxesPermutation(a,r.shape.length);let d=r;l!=null&&(d=transpose$1({inputs:{x:r},backend:t,attrs:{perm:l}}),a=getInnerMostAxes(a.length,r.shape.length)),assertAxesAreInnerMostDims("min",a,d.shape.length);const[f,y]=computeOutAndReduceShapes(d.shape,a),m=sizeFromShape(y),h=makeZerosTypedArray(sizeFromShape(f),d.dtype),g=t.data.get(d.dataId).values;for(let w=0;w<h.length;++w){const I=w*m;let N=g[I];for(let A=0;A<m;++A){const T=g[I+A];T<N&&(N=T)}h[w]=N}l!=null&&t.disposeIntermediateTensorInfo(d);const x=t.makeTensorInfo(f,d.dtype,h);if(i){const w=expandShapeToKeepDim(f,c),I=reshape$1({inputs:{x},backend:t,attrs:{shape:w}});return t.disposeIntermediateTensorInfo(x),I}return x}const minConfig$1={kernelName:Min,backendName:"cpu",kernelFunc:min$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mirrorPad(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,mode:i}=s;assertNotComplex$1(r,"mirrorPad");const c=o.map((N,A)=>N[0]+r.shape[A]+N[1]),a=o.map(N=>N[0]),l=o.map((N,A)=>N[0]+r.shape[A]),d=i==="reflect"?0:1,f=t.data.get(r.dataId).values,y=r.shape.length,m=computeStrides(r.shape),h=sizeFromShape(c),g=c.length,x=computeStrides(c),w=getTypedArrayFromDType(r.dtype,h);for(let N=0;N<h;N++){let A=indexToLoc(N,g,x);for(let P=0;P<g;P++)A[P]<a[P]?A[P]=a[P]*2-A[P]-d:A[P]>=l[P]&&(A[P]=(l[P]-1)*2-A[P]+d);A=A.map((P,O)=>P-a[O]);const T=locToIndex(A,y,m);w[N]=f[T]}return{dataId:t.write(w,c,r.dtype),shape:c,dtype:r.dtype}}const mirrorPadConfig$1={kernelName:MirrorPad,backendName:"cpu",kernelFunc:mirrorPad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const modImpl=createSimpleBinaryKernelImpl((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),mod$1=binaryKernelFunc$1(Mod,modImpl),modConfig$1={kernelName:Mod,backendName:"cpu",kernelFunc:mod$1};var alea$1={exports:{}},alea=alea$1.exports,hasRequiredAlea;function requireAlea(){return hasRequiredAlea||(hasRequiredAlea=1,function(n){(function(e,t,s){function r(a){var l=this,d=c();l.next=function(){var f=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=f-(l.c=f|0)},l.c=1,l.s0=d(" "),l.s1=d(" "),l.s2=d(" "),l.s0-=d(a),l.s0<0&&(l.s0+=1),l.s1-=d(a),l.s1<0&&(l.s1+=1),l.s2-=d(a),l.s2<0&&(l.s2+=1),d=null}function o(a,l){return l.c=a.c,l.s0=a.s0,l.s1=a.s1,l.s2=a.s2,l}function i(a,l){var d=new r(a),f=l&&l.state,y=d.next;return y.int32=function(){return d.next()*4294967296|0},y.double=function(){return y()+(y()*2097152|0)*11102230246251565e-32},y.quick=y,f&&(typeof f=="object"&&o(f,d),y.state=function(){return o(d,{})}),y}function c(){var a=4022871197,l=function(d){d=d.toString();for(var f=0;f<d.length;f++){a+=d.charCodeAt(f);var y=.02519603282416938*a;a=y>>>0,y-=a,y*=a,a=y>>>0,y-=a,a+=y*4294967296}return(a>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=i:this.alea=i})(alea,n)}(alea$1)),alea$1.exports}var xor128$1={exports:{}},xor128=xor128$1.exports,hasRequiredXor128;function requireXor128(){return hasRequiredXor128||(hasRequiredXor128=1,function(n){(function(e,t,s){function r(c){var a=this,l="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var f=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^f^f>>>8},c===(c|0)?a.x=c:l+=c;for(var d=0;d<l.length+64;d++)a.x^=l.charCodeAt(d)|0,a.next()}function o(c,a){return a.x=c.x,a.y=c.y,a.z=c.z,a.w=c.w,a}function i(c,a){var l=new r(c),d=a&&a.state,f=function(){return(l.next()>>>0)/4294967296};return f.double=function(){do var y=l.next()>>>11,m=(l.next()>>>0)/4294967296,h=(y+m)/(1<<21);while(h===0);return h},f.int32=l.next,f.quick=f,d&&(typeof d=="object"&&o(d,l),f.state=function(){return o(l,{})}),f}t&&t.exports?t.exports=i:this.xor128=i})(xor128,n)}(xor128$1)),xor128$1.exports}var xorwow$1={exports:{}},xorwow=xorwow$1.exports,hasRequiredXorwow;function requireXorwow(){return hasRequiredXorwow||(hasRequiredXorwow=1,function(n){(function(e,t,s){function r(c){var a=this,l="";a.next=function(){var f=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(f^f<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,c===(c|0)?a.x=c:l+=c;for(var d=0;d<l.length+64;d++)a.x^=l.charCodeAt(d)|0,d==l.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function o(c,a){return a.x=c.x,a.y=c.y,a.z=c.z,a.w=c.w,a.v=c.v,a.d=c.d,a}function i(c,a){var l=new r(c),d=a&&a.state,f=function(){return(l.next()>>>0)/4294967296};return f.double=function(){do var y=l.next()>>>11,m=(l.next()>>>0)/4294967296,h=(y+m)/(1<<21);while(h===0);return h},f.int32=l.next,f.quick=f,d&&(typeof d=="object"&&o(d,l),f.state=function(){return o(l,{})}),f}t&&t.exports?t.exports=i:this.xorwow=i})(xorwow,n)}(xorwow$1)),xorwow$1.exports}var xorshift7$1={exports:{}},xorshift7=xorshift7$1.exports,hasRequiredXorshift7;function requireXorshift7(){return hasRequiredXorshift7||(hasRequiredXorshift7=1,function(n){(function(e,t,s){function r(c){var a=this;a.next=function(){var d=a.x,f=a.i,y,m;return y=d[f],y^=y>>>7,m=y^y<<24,y=d[f+1&7],m^=y^y>>>10,y=d[f+3&7],m^=y^y>>>3,y=d[f+4&7],m^=y^y<<7,y=d[f+7&7],y=y^y<<13,m^=y^y<<9,d[f]=m,a.i=f+1&7,m};function l(d,f){var y,m=[];if(f===(f|0))m[0]=f;else for(f=""+f,y=0;y<f.length;++y)m[y&7]=m[y&7]<<15^f.charCodeAt(y)+m[y+1&7]<<13;for(;m.length<8;)m.push(0);for(y=0;y<8&&m[y]===0;++y);for(y==8?m[7]=-1:m[y],d.x=m,d.i=0,y=256;y>0;--y)d.next()}l(a,c)}function o(c,a){return a.x=c.x.slice(),a.i=c.i,a}function i(c,a){c==null&&(c=+new Date);var l=new r(c),d=a&&a.state,f=function(){return(l.next()>>>0)/4294967296};return f.double=function(){do var y=l.next()>>>11,m=(l.next()>>>0)/4294967296,h=(y+m)/(1<<21);while(h===0);return h},f.int32=l.next,f.quick=f,d&&(d.x&&o(d,l),f.state=function(){return o(l,{})}),f}t&&t.exports?t.exports=i:this.xorshift7=i})(xorshift7,n)}(xorshift7$1)),xorshift7$1.exports}var xor4096$1={exports:{}},xor4096=xor4096$1.exports,hasRequiredXor4096;function requireXor4096(){return hasRequiredXor4096||(hasRequiredXor4096=1,function(n){(function(e,t,s){function r(c){var a=this;a.next=function(){var d=a.w,f=a.X,y=a.i,m,h;return a.w=d=d+1640531527|0,h=f[y+34&127],m=f[y=y+1&127],h^=h<<13,m^=m<<17,h^=h>>>15,m^=m>>>12,h=f[y]=h^m,a.i=y,h+(d^d>>>16)|0};function l(d,f){var y,m,h,g,x,w=[],I=128;for(f===(f|0)?(m=f,f=null):(f=f+"\0",m=0,I=Math.max(I,f.length)),h=0,g=-32;g<I;++g)f&&(m^=f.charCodeAt((g+32)%f.length)),g===0&&(x=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,g>=0&&(x=x+1640531527|0,y=w[g&127]^=m+x,h=y==0?h+1:0);for(h>=128&&(w[(f&&f.length||0)&127]=-1),h=127,g=4*128;g>0;--g)m=w[h+34&127],y=w[h=h+1&127],m^=m<<13,y^=y<<17,m^=m>>>15,y^=y>>>12,w[h]=m^y;d.w=x,d.X=w,d.i=h}l(a,c)}function o(c,a){return a.i=c.i,a.w=c.w,a.X=c.X.slice(),a}function i(c,a){c==null&&(c=+new Date);var l=new r(c),d=a&&a.state,f=function(){return(l.next()>>>0)/4294967296};return f.double=function(){do var y=l.next()>>>11,m=(l.next()>>>0)/4294967296,h=(y+m)/(1<<21);while(h===0);return h},f.int32=l.next,f.quick=f,d&&(d.X&&o(d,l),f.state=function(){return o(l,{})}),f}t&&t.exports?t.exports=i:this.xor4096=i})(xor4096,n)}(xor4096$1)),xor4096$1.exports}var tychei$1={exports:{}},tychei=tychei$1.exports,hasRequiredTychei;function requireTychei(){return hasRequiredTychei||(hasRequiredTychei=1,function(n){(function(e,t,s){function r(c){var a=this,l="";a.next=function(){var f=a.b,y=a.c,m=a.d,h=a.a;return f=f<<25^f>>>7^y,y=y-m|0,m=m<<24^m>>>8^h,h=h-f|0,a.b=f=f<<20^f>>>12^y,a.c=y=y-m|0,a.d=m<<16^y>>>16^h,a.a=h-f|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,c===Math.floor(c)?(a.a=c/4294967296|0,a.b=c|0):l+=c;for(var d=0;d<l.length+20;d++)a.b^=l.charCodeAt(d)|0,a.next()}function o(c,a){return a.a=c.a,a.b=c.b,a.c=c.c,a.d=c.d,a}function i(c,a){var l=new r(c),d=a&&a.state,f=function(){return(l.next()>>>0)/4294967296};return f.double=function(){do var y=l.next()>>>11,m=(l.next()>>>0)/4294967296,h=(y+m)/(1<<21);while(h===0);return h},f.int32=l.next,f.quick=f,d&&(typeof d=="object"&&o(d,l),f.state=function(){return o(l,{})}),f}t&&t.exports?t.exports=i:this.tychei=i})(tychei,n)}(tychei$1)),tychei$1.exports}var seedrandom$1={exports:{}},hasRequiredSeedrandom$1;function requireSeedrandom$1(){return hasRequiredSeedrandom$1||(hasRequiredSeedrandom$1=1,function(n){(function(e,t){var s=this,r=256,o=6,i=52,c="random",a=t.pow(r,o),l=t.pow(2,i),d=l*2,f=r-1,y;function m(A,T,P){var O=[];T=T==!0?{entropy:!0}:T||{};var F=w(x(T.entropy?[A,N(e)]:A??I(),3),O),G=new h(O),U=function(){for(var Q=G.g(o),ne=a,J=0;Q<l;)Q=(Q+J)*r,ne*=r,J=G.g(1);for(;Q>=d;)Q/=2,ne/=2,J>>>=1;return(Q+J)/ne};return U.int32=function(){return G.g(4)|0},U.quick=function(){return G.g(4)/4294967296},U.double=U,w(N(G.S),e),(T.pass||P||function(Q,ne,J,oe){return oe&&(oe.S&&g(oe,G),Q.state=function(){return g(G,{})}),J?(t[c]=Q,ne):Q})(U,F,"global"in T?T.global:this==t,T.state)}t["seed"+c]=m;function h(A){var T,P=A.length,O=this,F=0,G=O.i=O.j=0,U=O.S=[];for(P||(A=[P++]);F<r;)U[F]=F++;for(F=0;F<r;F++)U[F]=U[G=f&G+A[F%P]+(T=U[F])],U[G]=T;(O.g=function(Q){for(var ne,J=0,oe=O.i,le=O.j,ge=O.S;Q--;)ne=ge[oe=f&oe+1],J=J*r+ge[f&(ge[oe]=ge[le=f&le+ne])+(ge[le]=ne)];return O.i=oe,O.j=le,J})(r)}function g(A,T){return T.i=A.i,T.j=A.j,T.S=A.S.slice(),T}function x(A,T){var P=[],O=typeof A,F;if(T&&O=="object")for(F in A)try{P.push(x(A[F],T-1))}catch{}return P.length?P:O=="string"?A:A+"\0"}function w(A,T){for(var P=A+"",O,F=0;F<P.length;)T[f&F]=f&(O^=T[f&F]*19)+P.charCodeAt(F++);return N(T)}function I(){try{var A;return y&&(A=y.randomBytes)?A=A(r):(A=new Uint8Array(r),(s.crypto||s.msCrypto).getRandomValues(A)),N(A)}catch{var T=s.navigator,P=T&&T.plugins;return[+new Date,s,P,s.screen,N(e)]}}function N(A){return String.fromCharCode.apply(0,A)}if(w(t.random(),e),n.exports){n.exports=m;try{y=require$$0$1}catch{}}})([],Math)}(seedrandom$1)),seedrandom$1.exports}var seedrandom,hasRequiredSeedrandom;function requireSeedrandom(){if(hasRequiredSeedrandom)return seedrandom;hasRequiredSeedrandom=1;var n=requireAlea(),e=requireXor128(),t=requireXorwow(),s=requireXorshift7(),r=requireXor4096(),o=requireTychei(),i=requireSeedrandom$1();return i.alea=n,i.xor128=e,i.xorwow=t,i.xorshift7=s,i.xor4096=r,i.tychei=o,seedrandom=i,seedrandom}var seedrandomExports=requireSeedrandom();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmax$1(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=r.shape.length;let c=o;if(c===-1&&(c=i-1),c!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${c}`);const a=parseAxisParam([c],r.shape),l=max$1({inputs:{x:r},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),d=expandShapeToKeepDim(l.shape,a),f=reshape$1({inputs:{x:l},backend:t,attrs:{shape:d}}),y=sub$1({inputs:{a:r,b:f},backend:t}),m=exp$1({inputs:{x:y},backend:t}),h=sum$1({inputs:{x:m},backend:t,attrs:{axis:a,keepDims:!1}}),g=reshape$1({inputs:{x:h},backend:t,attrs:{shape:d}}),x=div({inputs:{a:m,b:g},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(g),x}const softmaxConfig$1={kernelName:Softmax$2,backendName:"cpu",kernelFunc:softmax$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function multinomial$1(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:c}=s;assertNotComplex$1(r,"multinomial");const a=c?r:softmax$1({inputs:{logits:r},backend:t,attrs:{dim:-1}}),l=a.shape[0],d=a.shape[1],f=t.data.get(a.dataId).values,y=[l,o],m=makeZerosTypedArray(sizeFromShape(y),"int32");for(let h=0;h<l;++h){const g=h*d,x=new Float32Array(d-1);x[0]=f[g];for(let N=1;N<x.length;++N)x[N]=x[N-1]+f[g+N];const w=seedrandomExports.alea(i.toString()),I=h*o;for(let N=0;N<o;++N){const A=w();m[I+N]=x.length;for(let T=0;T<x.length;T++)if(A<x[T]){m[I+N]=T;break}}}return c||t.disposeIntermediateTensorInfo(a),t.makeTensorInfo(y,"int32",m)}const multinomialConfig$1={kernelName:Multinomial,backendName:"cpu",kernelFunc:multinomial$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV3Impl$1=nonMaxSuppressionV3Impl$2;function nonMaxSuppressionV3$1(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:a}=s;assertNotComplex$1(r,"NonMaxSuppression");const l=t.data.get(r.dataId).values,d=t.data.get(o.dataId).values,{selectedIndices:f}=nonMaxSuppressionV3Impl$1(l,d,i,c,a);return t.makeTensorInfo([f.length],"int32",new Int32Array(f))}const nonMaxSuppressionV3Config$1={kernelName:NonMaxSuppressionV3,backendName:"cpu",kernelFunc:nonMaxSuppressionV3$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV4Impl$1=nonMaxSuppressionV4Impl$2;function nonMaxSuppressionV4$1(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:a,padToMaxOutputSize:l}=s;assertNotComplex$1(r,"NonMaxSuppressionPadded");const d=t.data.get(r.dataId).values,f=t.data.get(o.dataId).values,{selectedIndices:y,validOutputs:m}=nonMaxSuppressionV4Impl$1(d,f,i,c,a,l);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([],"int32",new Int32Array([m]))]}const nonMaxSuppressionV4Config$1={kernelName:NonMaxSuppressionV4,backendName:"cpu",kernelFunc:nonMaxSuppressionV4$1};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV5Impl$1=nonMaxSuppressionV5Impl$2;function nonMaxSuppressionV5$1(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:a,softNmsSigma:l}=s;assertNotComplex$1(r,"NonMaxSuppressionWithScore");const d=t.data.get(r.dataId).values,f=t.data.get(o.dataId).values,y=i,m=c,h=a,g=l,{selectedIndices:x,selectedScores:w}=nonMaxSuppressionV5Impl$1(d,f,y,m,h,g);return[t.makeTensorInfo([x.length],"int32",new Int32Array(x)),t.makeTensorInfo([w.length],"float32",new Float32Array(w))]}const nonMaxSuppressionV5Config$1={kernelName:NonMaxSuppressionV5,backendName:"cpu",kernelFunc:nonMaxSuppressionV5$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oneHot$1(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{depth:o,onValue:i,offValue:c}=s;assertNotComplex$1(r,"oneHot");const a=sizeFromShape(r.shape),l=new Float32Array(a*o);l.fill(c);const d=t.data.get(r.dataId).values;for(let f=0;f<a;++f)d[f]>=0&&d[f]<o&&(l[f*o+d[f]]=i);return t.makeTensorInfo([...r.shape,o],"int32",l)}const oneHotConfig$1={kernelName:OneHot,backendName:"cpu",kernelFunc:oneHot$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zerosLike$1(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=real$1({inputs:{input:s},backend:t}),o=zerosLike$1({inputs:{x:r},backend:t}),i=imag$1({inputs:{input:s},backend:t}),c=zerosLike$1({inputs:{x:i},backend:t}),a=complex$1({inputs:{real:o,imag:c},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),a}else return fill$1({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const zerosLikeConfig$1={kernelName:ZerosLike,backendName:"cpu",kernelFunc:zerosLike$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function onesLike$1(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=real$1({inputs:{input:s},backend:t}),o=onesLike$1({inputs:{x:r},backend:t}),i=imag$1({inputs:{input:s},backend:t}),c=zerosLike$1({inputs:{x:i},backend:t}),a=complex$1({inputs:{real:o,imag:c},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),a}else return fill$1({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const onesLikeConfig$1={kernelName:OnesLike,backendName:"cpu",kernelFunc:onesLike$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pack$1(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return expandDims$1({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(d=>{assertShapesMatch(o,d.shape,"All tensors passed to stack must have matching shapes"),assert$1(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],a=e.map(d=>{const f=expandDims$1({inputs:{input:d},backend:t,attrs:{dim:r}});return c.push(f),f}),l=concat$1({inputs:a,backend:t,attrs:{axis:r}});return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),l}const packConfig$1={kernelName:Pack,backendName:"cpu",kernelFunc:pack$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function padV2$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s;assertNotComplex$1(r,"pad");const c=o.map((I,N)=>I[0]+r.shape[N]+I[1]),a=o.map(I=>I[0]),l=t.data.get(r.dataId).values,d=sizeFromShape(r.shape),f=r.shape.length,y=computeStrides(r.shape),m=sizeFromShape(c),h=c.length,g=computeStrides(c),x=getTypedArrayFromDType(r.dtype,m);i!==0&&x.fill(i);for(let I=0;I<d;I++){const A=indexToLoc(I,f,y).map((P,O)=>P+a[O]),T=locToIndex(A,h,g);x[T]=l[I]}return{dataId:t.write(x,c,r.dtype),shape:c,dtype:r.dtype}}const padV2Config$1={kernelName:PadV2,backendName:"cpu",kernelFunc:padV2$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const powImpl=createSimpleBinaryKernelImpl((n,e)=>Math.pow(n,e)),pow$1=binaryKernelFunc$1(Pow,powImpl),powConfig$1={kernelName:Pow,backendName:"cpu",kernelFunc:pow$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function range$1(n){const{backend:e,attrs:t}=n,{start:s,stop:r,dtype:o,step:i}=t,c=rangeImpl(s,r,i,o);return e.makeTensorInfo([c.length],o,c)}const rangeConfig$1={kernelName:Range,backendName:"cpu",kernelFunc:range$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const reciprocal$1=unaryKernelFunc$1(Reciprocal,n=>1/n),reciprocalConfig$1={kernelName:Reciprocal,backendName:"cpu",kernelFunc:reciprocal$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinear$1(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:c}=s;assertNotComplex$1(r,"resizeBilinear");const a=computeStrides(r.shape),[l,d]=c,[f,y,m,h]=r.shape,g=t.data.get(r.dataId).values,x=new Float32Array(sizeFromShape([f,l,d,h])),w=[o&&l>1?y-1:y,o&&d>1?m-1:m],I=[o&&l>1?l-1:l,o&&d>1?d-1:d];let N=0;const A=w[0]/I[0],T=w[1]/I[1];for(let P=0;P<f;P++)for(let O=0;O<l;O++){let F;i?F=A*(O+.5)-.5:F=A*O;const G=Math.max(0,Math.floor(F)),U=F-G,Q=Math.min(y-1,Math.ceil(F)),ne=P*a[0]+G*a[1],J=P*a[0]+Q*a[1];for(let oe=0;oe<d;oe++){let le;i?le=T*(oe+.5)-.5:le=T*oe;const ge=Math.max(0,Math.floor(le)),te=le-ge,ce=Math.min(m-1,Math.ceil(le)),ue=ne+ge*a[2],Te=J+ge*a[2],Ce=ne+ce*a[2],Ne=J+ce*a[2];for(let Re=0;Re<h;Re++){const Ae=g[ue+Re],we=g[Te+Re],Le=g[Ce+Re],pe=g[Ne+Re],B=Ae+(Le-Ae)*te,D=we+(pe-we)*te,H=B+(D-B)*U;x[N++]=H}}}return t.makeTensorInfo([f,l,d,h],"float32",x)}const resizeBilinearConfig$1={kernelName:ResizeBilinear,backendName:"cpu",kernelFunc:resizeBilinear$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinearGrad$1(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s;assertNotComplex$1([o,r],"resizeBilinearGrad");const c=computeStrides(r.shape),[a,l,d,f]=r.shape,[,y,m]=o.shape,h=new Float32Array(a*l*d*f),g=[i&&y>1?l-1:l,i&&m>1?d-1:d],x=[i&&y>1?y-1:y,i&&m>1?m-1:m],w=g[0]/x[0],I=g[1]/x[1],N=t.data.get(o.dataId).values;let A=0;for(let T=0;T<a;T++){const P=T*c[0];for(let O=0;O<y;O++){const F=O*w,G=Math.floor(F),U=Math.min(Math.ceil(F),l-1),Q=P+G*c[1],ne=P+U*c[1],J=F-G,oe=1-J;for(let le=0;le<m;le++){const ge=le*I,te=Math.floor(ge),ce=Math.min(Math.ceil(ge),d-1),ue=ge-te,Te=1-ue,Ce=Q+te*c[2],Ne=Q+ce*c[2],Re=ne+te*c[2],Ae=ne+ce*c[2],we=oe*Te,Le=oe*ue,pe=J*Te,B=J*ue;for(let D=0;D<f;D++){const H=N[A++];h[Ce+D]+=H*we,h[Ne+D]+=H*Le,h[Re+D]+=H*pe,h[Ae+D]+=H*B}}}}return t.makeTensorInfo([a,d,l,f],"float32",h)}const resizeBilinearGradConfig$1={kernelName:ResizeBilinearGrad,backendName:"cpu",kernelFunc:resizeBilinearGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighbor$1(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:c}=s;assertNotComplex$1(r,"resizeNearestNeighbor");const a=computeStrides(r.shape),[l,d]=c,[f,y,m,h]=r.shape,g=t.data.get(r.dataId).values,x=new Float32Array(f*l*d*h),w=[o&&l>1?y-1:y,o&&d>1?m-1:m],I=[o&&l>1?l-1:l,o&&d>1?d-1:d],N=w[0]/I[0],A=w[1]/I[1];let T=0;for(let P=0;P<f;P++){const O=P*a[0];for(let F=0;F<l;F++){const G=i?N*(F+.5):N*F;let U=Math.min(y-1,o?Math.round(G):Math.floor(G));i&&(U=Math.max(0,U));const Q=O+U*a[1];for(let ne=0;ne<d;ne++){const J=i?A*(ne+.5):A*ne;let oe=Math.min(m-1,o?Math.round(J):Math.floor(J));i&&(oe=Math.max(0,oe));const le=Q+oe*a[2];for(let ge=0;ge<h;ge++){const te=g[le+ge];x[T++]=te}}}}return t.makeTensorInfo([f,l,d,h],r.dtype,x)}const resizeNearestNeighborConfig$1={kernelName:ResizeNearestNeighbor,backendName:"cpu",kernelFunc:resizeNearestNeighbor$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighborGrad$1(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s;assertNotComplex$1([o,r],"resizeNearestNeighborGrad");const c=computeStrides(r.shape),a=computeStrides(o.shape),[l,d,f,y]=r.shape,[,m,h]=o.shape,g=new Float32Array(l*d*f*y),x=t.data.get(o.dataId).values,w=[i&&m>1?d-1:d,i&&h>1?f-1:f],I=[i&&m>1?m-1:m,i&&h>1?h-1:h],N=w[0]/I[0],A=w[1]/I[1],T=1/N,P=1/A,O=Math.ceil(T)*2+2,F=Math.ceil(P)*2+2;for(let G=0;G<l;G++){const U=G*c[0];for(let Q=0;Q<d;Q++){const ne=U+Q*c[1],J=Math.floor(Q*T),oe=Math.floor(J-O/2);for(let le=0;le<f;le++){const ge=ne+le*c[2],te=Math.floor(le*P),ce=Math.floor(te-F/2);for(let ue=0;ue<y;ue++){let Te=0;for(let Ce=0;Ce<O;Ce++){const Ne=Ce+oe;if(Ne<0||Ne>=m)continue;const Re=U+Ne*a[1],Ae=Ne*N,we=Math.min(d-1,i?Math.round(Ae):Math.floor(Ae));if(Q===we)for(let Le=0;Le<F;Le++){const pe=Le+ce;if(pe<0||pe>=h)continue;const B=Re+pe*a[2],D=pe*A,H=Math.min(f-1,i?Math.round(D):Math.floor(D));le===H&&(Te+=x[B+ue])}}g[ge+ue]=Te}}}}return t.makeTensorInfo(r.shape,r.dtype,g)}const resizeNearestNeighborGradConfig$1={kernelName:ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:resizeNearestNeighborGrad$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s;assertNotComplex$1(r,"reverse");const i=r.shape.length,c=parseAxisParam(o,r.shape);if(i===0)return identity$1({inputs:{x:r},backend:t});const a=new TensorBuffer(r.shape,r.dtype),l=t.bufferSync(r);for(let d=0;d<a.size;d++){const f=a.indexToLoc(d),y=f.slice();c.forEach(m=>y[m]=r.shape[m]-1-y[m]),a.set(l.get(...y),...f)}return t.makeTensorInfo(a.shape,a.dtype,a.values)}const reverseConfig$1={kernelName:Reverse,backendName:"cpu",kernelFunc:reverse$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rotateWithOffsetConfig$1={kernelName:RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,c=t,a=getTypedArrayFromDType(s.dtype,sizeFromShape(s.shape)),[l,d,f,y]=s.shape,[m,h]=getImageCenter(i,d,f),g=255,x=Math.sin(r),w=Math.cos(r),I=c.data.get(s.dataId).values;for(let A=0;A<l;A++){const T=A*f*d*y;for(let P=0;P<d;P++){const O=P*(f*y);for(let F=0;F<f;F++){const G=F*y;for(let U=0;U<y;U++){const Q=[l,P,F,U],ne=Q[2],J=Q[1];let oe=(ne-m)*w-(J-h)*x,le=(ne-m)*x+(J-h)*w;oe=Math.round(oe+m),le=Math.round(le+h);let ge=o;if(typeof o!="number"&&(U===3?ge=g:ge=o[U]),oe>=0&&oe<f&&le>=0&&le<d){const ce=le*(f*y),ue=oe*y,Te=T+ce+ue+U;ge=I[Te]}const te=T+O+G+U;a[te]=ge}}}}return{dataId:c.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const round$1=unaryKernelFunc$1(Round,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),roundConfig$1={kernelName:Round,backendName:"cpu",kernelFunc:round$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterImpl(n,e,t,s,r,o,i,c,a,l){const d=[s/r,r],f=n.values,y=e.values;if(s===0)return buffer(t,e.dtype);const m=buffer(d,e.dtype);m.values.fill(a);for(let h=0;h<o;h++){const g=[];let x=0;for(let w=0;w<i;w++){const I=f[h*i+w];g.push(I),x+=I*c[w]}if(x<0||x>=s/r)throw new Error(`Invalid indices: ${g} does not index into ${t}`);for(let w=0;w<r;w++)l?m.values[x*r+w]+=y[h*r+w]:m.values[x*r+w]=e.rank===0?y[0]:y[h*r+w]}return m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterNd$1(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:c,numUpdates:a,sliceSize:l,strides:d,outputSize:f}=calculateShapes(o,r,i),y=!0,m=t.bufferSync(r),h=t.bufferSync(o),g=scatterImpl(m,h,i,f,l,a,c,d,0,y);return t.makeTensorInfo(i,g.dtype,g.values)}const scatterNdConfig$1={kernelName:ScatterNd,backendName:"cpu",kernelFunc:scatterNd$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function select$1(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e;assertNotComplex$1([s,r,o],"select");const i=s.shape.length,c=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,d=upcastType(r.dtype,o.dtype),f=makeZerosTypedArray(sizeFromShape(r.shape),d);let y=0;const m=i===0||i>1||r.shape.length===1?1:sizeFromShape(r.shape.slice(1));for(let h=0;h<c.length;h++)for(let g=0;g<m;g++)c[h]===1?f[y++]=a[h]:f[y++]=l[h];return t.makeTensorInfo(r.shape,d,f)}const selectConfig$1={kernelName:Select,backendName:"cpu",kernelFunc:select$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const scaleAlpha=SELU_SCALEALPHA,scale=SELU_SCALE,selu$1=unaryKernelFunc$1(Selu$1,n=>n>=0?scale*n:scaleAlpha*(Math.exp(n)-1)),seluConfig$1={kernelName:Selu$1,backendName:"cpu",kernelFunc:selu$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sigmoid$1=unaryKernelFunc$1(Sigmoid$1,n=>1/(1+Math.exp(-n))),sigmoidConfig$1={kernelName:Sigmoid$1,backendName:"cpu",kernelFunc:sigmoid$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sign$1=unaryKernelFunc$1(Sign,n=>n<0?-1:n>0?1:0),signConfig$1={kernelName:Sign,backendName:"cpu",kernelFunc:sign$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sin$1=unaryKernelFunc$1(Sin,n=>Math.sin(n)),sinConfig$1={kernelName:Sin,backendName:"cpu",kernelFunc:sin$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sinh$1=unaryKernelFunc$1(Sinh,n=>Math.sinh(n)),sinhConfig$1={kernelName:Sinh,backendName:"cpu",kernelFunc:sinh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const epsilon=11920928955078125e-23,threshold=Math.log(epsilon)+2,softplus$1=unaryKernelFunc$1(Softplus$1,n=>{const e=n>-threshold,t=n<threshold,s=Math.exp(n);let r;return t?r=s:e?r=n:r=Math.log(1+s),r}),softplusConfig$1={kernelName:Softplus$1,backendName:"cpu",kernelFunc:softplus$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function spaceToBatchND$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;assertNotComplex$1([r],"spaceToBatchND");const c=sizeFromShape(o),a=[[0,0]];a.push(...i);for(let P=1+o.length;P<r.shape.length;++P)a.push([0,0]);const l=padV2Config$1.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:a,constantValue:0}}),d=getReshaped(l.shape,o,c,!1),f=getPermuted(d.length,o.length,!1),y=getReshapedPermuted(l.shape,o,c,!1),g=reshape$1({inputs:{x:l},backend:t,attrs:{shape:d}}),I=transpose$1({inputs:{x:g},backend:t,attrs:{perm:f}}),T=reshape$1({inputs:{x:I},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(I),T}const spaceToBatchNDConfig$1={kernelName:SpaceToBatchND,backendName:"cpu",kernelFunc:spaceToBatchND$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseToDense$1(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:c}=s,{sliceRank:a,numUpdates:l,sliceSize:d,strides:f,outputSize:y}=calculateShapes(o,r,c),m=!1,h=t.bufferSync(r),g=t.bufferSync(o),x=t.data.get(i.dataId).values[0],w=scatterImpl(h,g,c,y,d,l,a,f,x,m);return t.makeTensorInfo(c,w.dtype,w.values)}const sparseToDenseConfig$1={kernelName:SparseToDense,backendName:"cpu",kernelFunc:sparseToDense$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function splitV$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,c=parseAxisParam(i,r.shape)[0],a=prepareSplitSize(r,o,c),l=new Array(r.shape.length).fill(0),d=r.shape.slice();return a.map(f=>{const y=[...d];y[c]=f;const m=slice$1({inputs:{x:r},backend:t,attrs:{begin:l,size:y}});return l[c]+=f,m})}const splitVConfig$1={kernelName:SplitV,backendName:"cpu",kernelFunc:splitV$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sqrt$1=unaryKernelFunc$1(Sqrt,n=>Math.sqrt(n)),sqrtConfig$1={kernelName:Sqrt,backendName:"cpu",kernelFunc:sqrt$1};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const squareConfig$1={kernelName:Square,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;assertNotComplex$1(t,"square");const r=s.data.get(t.dataId).values,o=new Float32Array(r.length);for(let c=0;c<r.length;++c){const a=r[c];o[c]=a*a}return{dataId:s.write(o,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const step$1=unaryKernelFunc$1(Step,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),stepConfig$1={kernelName:Step,backendName:"cpu",kernelFunc:step$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSlice$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:c,beginMask:a,endMask:l,ellipsisMask:d,newAxisMask:f,shrinkAxisMask:y}=s;assertNotComplex$1(r,"stridedSlice");const{nonStrided:m,$begin:h,$strides:g,size:x,newShape:w,outShape:I}=sliceInfo(r.shape,o,i,c,a,l,d,f,y),N=reshape$1({inputs:{x:r},backend:t,attrs:{shape:w}});let A;if(m){const P=slice$1({inputs:{x:N},backend:t,attrs:{begin:h,size:x}});A=reshape$1({inputs:{x:P},backend:t,attrs:{shape:I}}),t.disposeIntermediateTensorInfo(P)}else if(I.some(P=>P===0))A=t.makeTensorInfo(I,r.dtype,[]);else{const P=t.bufferSync(N),O=stridedSliceImpl(I,P,g,h);A=t.makeTensorInfo(O.shape,O.dtype,O.values)}const T=reshape$1({inputs:{x:A},backend:t,attrs:{shape:I}});return t.disposeIntermediateTensorInfo(N),t.disposeIntermediateTensorInfo(A),T}const stridedSliceConfig$1={kernelName:StridedSlice,backendName:"cpu",kernelFunc:stridedSlice$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tan$1=unaryKernelFunc$1(Tan,n=>Math.tan(n)),tanConfig$1={kernelName:Tan,backendName:"cpu",kernelFunc:tan$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tanh$1=unaryKernelFunc$1(Tanh$1,n=>Math.tanh(n)),tanhConfig$1={kernelName:Tanh$1,backendName:"cpu",kernelFunc:tanh$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tile$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;assertNotComplex$1(r,"tile");const i=tileImpl(t.bufferSync(r),o);return t.makeTensorInfo(i.shape,i.dtype,i.values)}const tileConfig$1={kernelName:Tile,backendName:"cpu",kernelFunc:tile$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function topK$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s;assertNotComplex$1(r,"topk");const c=t.data.get(r.dataId).values,[a,l]=topKImpl(c,r.shape,r.dtype,o);return[t.makeTensorInfo(a.shape,a.dtype,a.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}const topKConfig$1={kernelName:TopK,backendName:"cpu",kernelFunc:topK$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unique$1(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;assertNotComplex$1(o,"unique");const i=s.data.get(o.dataId).values,{outputValues:c,outputShape:a,indices:l}=uniqueImpl(i,r,o.shape,o.dtype);return[s.makeTensorInfo(a,o.dtype,c),s.makeTensorInfo([l.length],"int32",l)]}const uniqueConfig$1={kernelName:Unique,backendName:"cpu",kernelFunc:unique$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unpack$1(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r.shape.length,c=r.shape[o],a=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==o&&(a[l++]=r.shape[m]);const d=new Array(i).fill(0),f=r.shape.slice();f[o]=1;const y=new Array(c);for(let m=0;m<y.length;m++){d[o]=m;const h=slice$1({inputs:{x:r},backend:t,attrs:{begin:d,size:f}});y[m]=reshape$1({inputs:{x:h},backend:t,attrs:{shape:a}}),t.disposeIntermediateTensorInfo(h)}return y}const unpackConfig$1={kernelName:Unpack,backendName:"cpu",kernelFunc:unpack$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unsortedSegmentSum$1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s;assertNotComplex$1(r,"unsortedSegmentSum");const c=r.shape.length,a=o.shape.length,l=[],d=[],f=c-a;let y=o;for(let h=0;h<f;++h){const g=expandDims$1({inputs:{input:y},backend:t,attrs:{dim:h+1}});y=g,d.push(g)}for(let h=0;h<i;++h){const g=createScalarValue(h,"int32"),x=t.makeTensorInfo([],"int32",g),w=equal$1({inputs:{a:x,b:y},backend:t}),I=cast$1({inputs:{x:w},backend:t,attrs:{dtype:"float32"}}),N=multiply$1({inputs:{a:I,b:r},backend:t}),A=sum$1({inputs:{x:N},backend:t,attrs:{axis:0,keepDims:!1}});l.push(A),d.push(x),d.push(w),d.push(I),d.push(N),d.push(A)}const m=pack$1({inputs:l,backend:t,attrs:{axis:0}});return d.forEach(h=>t.disposeIntermediateTensorInfo(h)),m}const unsortedSegmentSumConfig$1={kernelName:UnsortedSegmentSum,backendName:"cpu",kernelFunc:unsortedSegmentSum$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernelConfigs$1=[_fusedMatMulConfig$1,absConfig$1,acosConfig$1,acoshConfig$1,addConfig$1,addNConfig$1,allConfig$1,anyConfig$1,argMaxConfig$1,argMinConfig$1,asinConfig$1,asinhConfig$1,atanConfig$1,atan2Config$1,atanhConfig$1,avgPoolConfig$1,avgPool3DConfig$1,avgPool3DGradConfig,avgPoolGradConfig$1,batchMatMulConfig$1,batchNormConfig$1,batchToSpaceNDConfig$1,bincountConfig$1,castConfig$1,ceilConfig$1,clipConfig,complexConfig$1,complexAbsConfig$1,concatConfig$1,conv2DBackpropFilterConfig$1,conv2DBackpropInputConfig$1,conv2DConfig$1,conv3DBackpropFilterV2Config$1,conv3DBackpropInputV2Config,conv3DConfig$1,cosConfig$1,coshConfig$1,cropAndResizeConfig$1,cumsumConfig$1,denseBincountConfig$1,depthToSpaceConfig$1,depthwiseConv2dNativeConfig$1,depthwiseConv2dNativeBackpropFilterConfig$1,depthwiseConv2dNativeBackpropInputConfig$1,diagConfig$1,dilation2dConfig,dilation2dBackpropInputConfig,dilation2dBackpropFilterConfig,realDivConfig$1,eluConfig$1,eluGradConfig$1,equalConfig$1,erfConfig$1,expConfig$1,expandDimsConfig$1,expm1Config$1,fftConfig$1,fillConfig$1,flipLeftRightConfig$1,floorConfig$1,floorDivConfig$1,fusedConv2DConfig$1,fusedDepthwiseConv2DConfig$1,gatherNdConfig$1,gatherV2Config$1,greaterConfig$1,greaterEqualConfig$1,identityConfig$1,ifftConfig$1,imagConfig$1,isFiniteConfig$1,isInfConfig$1,isNaNConfig$1,leakyReluConfig$1,lessConfig$1,lessEqualConfig$1,linSpaceConfig$1,logConfig$1,log1pConfig$1,logicalAndConfig$1,logicalNotConfig$1,logicalOrConfig$1,lRNConfig,lRNGradConfig,maximumConfig$1,maxPoolConfig$1,maxPool3DConfig$1,maxPool3DGradConfig,maxPoolGradConfig$1,maxPoolWithArgmaxConfig$1,maxConfig$1,meanConfig$1,minConfig$1,minimumConfig$1,mirrorPadConfig$1,modConfig$1,multinomialConfig$1,multiplyConfig$1,negConfig$1,nonMaxSuppressionV3Config$1,nonMaxSuppressionV4Config$1,nonMaxSuppressionV5Config$1,notEqualConfig$1,oneHotConfig$1,onesLikeConfig$1,packConfig$1,padV2Config$1,powConfig$1,preluConfig$1,prodConfig$1,rangeConfig$1,realConfig$1,reciprocalConfig$1,reluConfig$1,relu6Config$1,reshapeConfig$1,resizeBilinearConfig$1,resizeBilinearGradConfig$1,resizeNearestNeighborConfig$1,resizeNearestNeighborGradConfig$1,reverseConfig$1,rotateWithOffsetConfig$1,roundConfig$1,rsqrtConfig$1,scatterNdConfig$1,selectConfig$1,seluConfig$1,sigmoidConfig$1,signConfig$1,sinConfig$1,sinhConfig$1,sliceConfig$1,softmaxConfig$1,softplusConfig$1,spaceToBatchNDConfig$1,sparseToDenseConfig$1,splitVConfig$1,sqrtConfig$1,squareConfig$1,squaredDifferenceConfig$1,stepConfig$1,stridedSliceConfig$1,subConfig$1,sumConfig$1,tanConfig$1,tanhConfig$1,tileConfig$1,topKConfig$1,transposeConfig$1,uniqueConfig$1,unpackConfig$1,unsortedSegmentSumConfig$1,zerosLikeConfig$1];for(const n of kernelConfigs$1)registerKernel(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const contexts={},WEBGL_ATTRIBUTES={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function setWebGLContext(n,e){contexts[n]=e}function getWebGLContext(n){if(!(n in contexts)){const t=getWebGLRenderingContext(n);if(t!==null)contexts[n]=t;else return console.log("Could not get context for WebGL version",n),null}const e=contexts[n];return e.isContextLost()?(delete contexts[n],getWebGLContext(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),contexts[n])}function createCanvas(n){if(typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function getWebGLRenderingContext(n){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=createCanvas(n);return e.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete contexts[n]},!1),n===1?e.getContext("webgl",WEBGL_ATTRIBUTES)||e.getContext("experimental-webgl",WEBGL_ATTRIBUTES):e.getContext("webgl2",WEBGL_ATTRIBUTES)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var PackingScheme;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(PackingScheme||(PackingScheme={}));var TextureUsage;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(TextureUsage||(TextureUsage={}));var PhysicalTextureType;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(PhysicalTextureType||(PhysicalTextureType={}));function getUnpackedMatrixTextureShapeWidthHeight(n,e){return[e,n]}function getUnpackedArraySizeFromMatrixSize(n,e){return n*e}function getDenseTexShape(n){const e=sizeFromShape(n),t=Math.ceil(e/4);return sizeToSquarishShape(t)}function getPackedMatrixTextureShapeWidthHeight(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function getPackedRGBAArraySizeFromMatrixShape(n,e){const[t,s]=getPackedMatrixTextureShapeWidthHeight(n,e);return t*s*4}function getTextureConfig(n,e){const t=n;let s,r,o,i,c,a,l,d,f,y;return env().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,o=t.RGBA16F,i=t.RGBA32F,c=t.RED,l=4,d=1,f=t.HALF_FLOAT,y=t.FLOAT):(s=n.RGBA,r=n.RGBA,o=n.RGBA,i=t.RGBA,c=n.RGBA,l=4,d=4,f=e!=null?e.HALF_FLOAT_OES:null,y=n.FLOAT),a=n.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:c,downloadTextureFormat:a,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:f,textureTypeFloat:y}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function callAndCheck(n,e){const t=e();return env().getBool("DEBUG")&&checkWebGLError(n),t}function checkWebGLError(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+getWebGLErrorMessage(n,e))}const MIN_FLOAT16=596e-10,MAX_FLOAT16=65504;function canBeRepresented(n){return!!(env().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||MIN_FLOAT16<Math.abs(n)&&Math.abs(n)<MAX_FLOAT16)}function getWebGLErrorMessage(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function getExtensionOrThrow(n,e){return throwIfNull(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function createVertexShader$1(n,e){const t=throwIfNull(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(callAndCheck(n,()=>n.shaderSource(t,e)),callAndCheck(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function createFragmentShader(n,e){const t=throwIfNull(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(callAndCheck(n,()=>n.shaderSource(t,e)),callAndCheck(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw logShaderSourceAndInfoLog(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const lineNumberRegex=/ERROR: [0-9]+:([0-9]+):/g;function logShaderSourceAndInfoLog(n,e){const t=lineNumberRegex.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],r=n.split(`
`),o=r.length.toString().length+2,i=r.map((f,y)=>rightPad((y+1).toString(),o)+f);let c=0;for(let f=0;f<i.length;f++)c=Math.max(i[f].length,c);const a=i.slice(0,s-1),l=i.slice(s-1,s),d=i.slice(s);console.log(a.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${rightPad(l[0],c)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join(`
`))}function createProgram(n){return throwIfNull(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function linkProgram(n,e){if(callAndCheck(n,()=>n.linkProgram(e)),n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function validateProgram(n,e){if(callAndCheck(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function createStaticVertexBuffer(n,e){const t=throwIfNull(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return callAndCheck(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),callAndCheck(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function createStaticIndexBuffer(n,e){const t=throwIfNull(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return callAndCheck(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),callAndCheck(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function createTexture(n){return throwIfNull(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function validateTextureSize(n,e){const t=env().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function createFramebuffer(n){return throwIfNull(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function bindVertexBufferToProgramAttribute(n,e,t,s,r,o,i){const c=n.getAttribLocation(e,t);return c===-1?!1:(callAndCheck(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),callAndCheck(n,()=>n.vertexAttribPointer(c,r,n.FLOAT,!1,o,i)),callAndCheck(n,()=>n.enableVertexAttribArray(c)),!0)}function bindTextureUnit(n,e,t){validateTextureUnit(n,t),callAndCheck(n,()=>n.activeTexture(n.TEXTURE0+t)),callAndCheck(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function getProgramUniformLocationOrThrow(n,e,t){return throwIfNull(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function getProgramUniformLocation(n,e,t){return n.getUniformLocation(e,t)}function bindTextureToProgramUniformSampler(n,e,t,s){callAndCheck(n,()=>bindTextureUnit(n,e,s)),callAndCheck(n,()=>n.uniform1i(t,s))}function bindColorTextureToFramebuffer(n,e,t){callAndCheck(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),callAndCheck(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function unbindColorTextureFromFramebuffer(n,e){callAndCheck(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),callAndCheck(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function validateFramebuffer(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+getFramebufferErrorMessage(n,e))}function getFramebufferErrorMessage(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function throwIfNull(n,e,t){const s=callAndCheck(n,()=>e());if(s==null)throw new Error(t);return s}function validateTextureUnit(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}function getBatchDim(n,e=2){return sizeFromShape(n.slice(0,n.length-e))}function getRowsCols(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function getShapeAs3D(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[getBatchDim(n),...getRowsCols(n)]),e}function getTextureShapeFromLogicalShape(n,e=!1){let t=env().getNumber("WEBGL_MAX_TEXTURE_SIZE");e&&(t=t*2,n=n.map((r,o)=>o>=n.length-2?nearestLargerEven(n[o]):n[o]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=squeezeShape(n).newShape);let s=sizeFromShape(n);if(n.length<=1&&s<=t)return[1,s];if(n.length===2&&n[0]<=t&&n[1]<=t)return n;if(n.length===3&&n[0]*n[1]<=t&&n[2]<=t)return[n[0]*n[1],n[2]];if(n.length===3&&n[0]<=t&&n[1]*n[2]<=t)return[n[0],n[1]*n[2]];if(n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t)return[n[0]*n[1]*n[2],n[3]];if(n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t)return[n[0],n[1]*n[2]*n[3]];if(e){const r=getBatchDim(n);let o=2,i=2;return n.length&&([o,i]=getRowsCols(n)),s=r*(o/2)*(i/2),sizeToSquarishShape(s).map(c=>c*2)}return sizeToSquarishShape(s)}function isEven(n){return n%2===0}function isReshapeFree(n,e){if(n=n.slice(-2),e=e.slice(-2),arraysEqual(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n.slice(-1)[0],s=e.slice(-1)[0];if(t===s||isEven(t)&&isEven(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&isEven(n[0])&&isEven(e[0])}let MAX_TEXTURE_SIZE,MAX_TEXTURES_IN_SHADER;function getWebGLMaxTextureSize(n){if(MAX_TEXTURE_SIZE==null){const e=getWebGLContext(n);MAX_TEXTURE_SIZE=e.getParameter(e.MAX_TEXTURE_SIZE)}return MAX_TEXTURE_SIZE}function getMaxTexturesInShader(n){if(MAX_TEXTURES_IN_SHADER==null){const e=getWebGLContext(n);MAX_TEXTURES_IN_SHADER=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,MAX_TEXTURES_IN_SHADER)}function getWebGLDisjointQueryTimerVersion(n){if(n===0)return 0;let e;const t=getWebGLContext(n);return hasExtension(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:hasExtension(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function hasExtension(n,e){return n.getExtension(e)!=null}function isWebGLVersionEnabled(n){try{if(getWebGLContext(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function isCapableOfRenderingToFloatTexture(n){if(n===0)return!1;const e=getWebGLContext(n);if(n===1){if(!hasExtension(e,"OES_texture_float"))return!1}else if(!hasExtension(e,"EXT_color_buffer_float"))return!1;return createFloatTextureAndBindToFramebuffer(e)}function isDownloadFloatTextureEnabled(n){if(n===0)return!1;const e=getWebGLContext(n);if(n===1){if(!hasExtension(e,"OES_texture_float")||!hasExtension(e,"WEBGL_color_buffer_float"))return!1}else{if(hasExtension(e,"EXT_color_buffer_float"))return createFloatTextureAndBindToFramebuffer(e);const s="EXT_color_buffer_half_float";if(hasExtension(e,s)){const r=e.getExtension(s);return createHalfFloatTextureAndBindToFramebuffer(e,r)}return!1}return createFloatTextureAndBindToFramebuffer(e)}function createFloatTextureAndBindToFramebuffer(n){const e=getTextureConfig(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),i}function createHalfFloatTextureAndBindToFramebuffer(n,e){const t=getTextureConfig(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const c=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),c}function isWebGLFenceEnabled(n){return n!==2?!1:getWebGLContext(n).fenceSync!=null}function assertNotComplex(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&assert$1(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ENV=env();ENV.registerFlag("HAS_WEBGL",()=>ENV.getNumber("WEBGL_VERSION")>0);ENV.registerFlag("WEBGL_VERSION",()=>isWebGLVersionEnabled(2)?2:isWebGLVersionEnabled(1)?1:0);ENV.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ENV.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ENV.get("WEBGL_VERSION")===2);ENV.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ENV.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ENV.registerFlag("WEBGL_PACK",()=>ENV.getBool("HAS_WEBGL"));ENV.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_CLIP",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1);ENV.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_PACK_REDUCE",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_LAZILY_UNPACK",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_CONV_IM2COL",()=>ENV.getBool("WEBGL_PACK"));ENV.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>getWebGLMaxTextureSize(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>getMaxTexturesInShader(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=ENV.getNumber("WEBGL_VERSION");return n===0?0:getWebGLDisjointQueryTimerVersion(n)});ENV.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ENV.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!isMobile());ENV.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>isCapableOfRenderingToFloatTexture(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ENV.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ENV.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ENV.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>isDownloadFloatTextureEnabled(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_FENCE_API_ENABLED",()=>isWebGLFenceEnabled(ENV.getNumber("WEBGL_VERSION")));ENV.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ENV.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ENV.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getGlslDifferences(){let n,e,t,s,r,o,i,c,a,l;return env().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",o="outputColor",i="out vec4 outputColor;",c=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,a="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",o="gl_FragColor",i="",c=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,a=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:o,defineOutput:i,defineSpecialNaN:c,defineSpecialInf:a,defineRound:l}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getLogicalCoordinatesFromFlatIndex(n,e,t="index"){const s=computeStrides(e);return s.map((r,o)=>{const i=`int ${n[o]} = ${t} / ${r}`,c=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`;return`${i}; ${c};`}).join("")}function getFlatIndexFrom3D(n){const e=computeStrides(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}const ENCODE_FLOAT_SNIPPET=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DecodeMatrixProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=PackingScheme.DENSE;const t=getDenseTexShape(e),s=getGlslDifferences();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${getLogicalCoordinatesFromFlatIndex(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DecodeMatrixPackedProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=PackingScheme.DENSE;const t=getDenseTexShape(e),s=getGlslDifferences();this.outputShape=e,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${getLogicalCoordinatesFromFlatIndex(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${t[0]}, ${t[1]}));
        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeFloatProgram{constructor(e){this.variableNames=["A"],this.outTexUsage=TextureUsage.DOWNLOAD;const t=getGlslDifferences();this.outputShape=e,this.userCode=`
      ${ENCODE_FLOAT_SNIPPET}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeFloatPackedProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=TextureUsage.DOWNLOAD;const t=getGlslDifferences();this.outputShape=e,this.userCode=`
      ${ENCODE_FLOAT_SNIPPET}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeMatrixProgram{constructor(e,t,s=!1){this.variableNames=["A"];const r=getGlslDifferences(),[o,i]=t;this.outputShape=e;let c="result";s&&(c="floor(result * 255. + 0.5)"),this.userCode=`
      ${getFlatIndexFrom3D(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / ${i};
        int c = imod(flatIndex, ${i});
        vec2 uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${o}.0);
        vec4 values = ${r.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${r.output} = vec4(${c}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EncodeMatrixPackedProgram{constructor(e,t,s=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=getGlslDifferences(),[o,i]=t;this.outputShape=e;let c="",a="result";s&&(a="floor(result * 255. + 0.5)");for(let l=0;l<=1;l++)for(let d=0;d<=1;d++){const f=l*2+d;c+=`
          localCoords = coords;
          if(localCoords[2] + ${d} < ${e[2]}) {
            localCoords[2] += ${d};
            if(localCoords[1] + ${l} < ${e[1]}) {
              localCoords[1] += ${l};

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / ${i};
              c = imod(flatIndex, ${i});
              uv = (vec2(c, r) + halfCR) / vec2(${i}.0, ${o}.0);
              values = ${r.texture2D}(A, uv);

              if(offset == 0) {
                result[${f}] = values[0];
              } else if(offset == 1) {
                result[${f}] = values[1];
              } else if(offset == 2) {
                result[${f}] = values[2];
              } else {
                result[${f}] = values[3];
              }
            }
          }
        `}this.userCode=`
      ${getFlatIndexFrom3D(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        ${c}

        ${r.output} = ${a};
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function createVertexShader(n){const e=getGlslDifferences(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return createVertexShader$1(n,t)}function createVertexBuffer(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return createStaticVertexBuffer(n,e)}function createIndexBuffer(n){const e=new Uint16Array([0,1,2,2,1,3]);return createStaticIndexBuffer(n,e)}function createAndConfigureTexture(n,e,t,s,r,o){validateTextureSize(e,t);const i=createTexture(n),c=n.TEXTURE_2D;return callAndCheck(n,()=>n.bindTexture(c,i)),callAndCheck(n,()=>n.texParameteri(c,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),callAndCheck(n,()=>n.texParameteri(c,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),callAndCheck(n,()=>n.texParameteri(c,n.TEXTURE_MIN_FILTER,n.NEAREST)),callAndCheck(n,()=>n.texParameteri(c,n.TEXTURE_MAG_FILTER,n.NEAREST)),callAndCheck(n,()=>n.texImage2D(c,0,s,e,t,0,r,o,null)),callAndCheck(n,()=>n.bindTexture(n.TEXTURE_2D,null)),i}function getInternalFormatForFloat32MatrixTexture(n){return n.internalFormatFloat}function createFloat32MatrixTexture(n,e,t,s){const[r,o]=getUnpackedMatrixTextureShapeWidthHeight(e,t);return createAndConfigureTexture(n,r,o,getInternalFormatForFloat32MatrixTexture(s),s.textureFormatFloat,n.FLOAT)}function getInternalFormatForFloat16MatrixTexture(n){return n.internalFormatHalfFloat}function createFloat16MatrixTexture(n,e,t,s){const[r,o]=getUnpackedMatrixTextureShapeWidthHeight(e,t);return createAndConfigureTexture(n,r,o,getInternalFormatForFloat16MatrixTexture(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function getInternalFormatForUnsignedBytesMatrixTexture(n){return n.downloadTextureFormat}function createUnsignedBytesMatrixTexture(n,e,t,s){const[r,o]=getUnpackedMatrixTextureShapeWidthHeight(e,t);return createAndConfigureTexture(n,r,o,getInternalFormatForUnsignedBytesMatrixTexture(s),n.RGBA,n.UNSIGNED_BYTE)}function getInternalFormatForPackedMatrixTexture(n){return n.internalFormatPackedFloat}function createPackedMatrixTexture(n,e,t,s){const[r,o]=getPackedMatrixTextureShapeWidthHeight(e,t);return createAndConfigureTexture(n,r,o,getInternalFormatForPackedMatrixTexture(s),n.RGBA,n.FLOAT)}function getInternalFormatForFloat16PackedMatrixTexture(n){return n.internalFormatPackedHalfFloat}function createFloat16PackedMatrixTexture(n,e,t,s){const[r,o]=getPackedMatrixTextureShapeWidthHeight(e,t);return createAndConfigureTexture(n,r,o,getInternalFormatForFloat16PackedMatrixTexture(s),n.RGBA,s.textureTypeHalfFloat)}function bindVertexProgramAttributeStreams(n,e,t){return callAndCheck(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),bindVertexBufferToProgramAttribute(n,e,"clipSpacePos",t,3,20,0)&&bindVertexBufferToProgramAttribute(n,e,"uv",t,2,20,12)}function uploadDenseMatrixToTexture(n,e,t,s,r,o){callAndCheck(n,()=>n.bindTexture(n.TEXTURE_2D,e));let i,c,a;r instanceof Uint8Array?(i=new Uint8Array(t*s*4),c=n.UNSIGNED_BYTE,a=n.RGBA):(i=new Float32Array(t*s*4),c=n.FLOAT,a=o.internalFormatPackedFloat),i.set(r),callAndCheck(n,()=>n.texImage2D(n.TEXTURE_2D,0,a,t,s,0,n.RGBA,c,i)),callAndCheck(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function uploadPixelDataToTexture(n,e,t){callAndCheck(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?callAndCheck(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):callAndCheck(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),callAndCheck(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function createBufferFromOutputTexture(n,e,t,s){const r=n.createBuffer();callAndCheck(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const c=4*4*e*t;return callAndCheck(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,c,n.STREAM_READ)),callAndCheck(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),callAndCheck(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function downloadFloat32MatrixFromBuffer(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function downloadByteEncodedFloatMatrixFromOutputTexture(n,e,t,s){const[r,o]=getUnpackedMatrixTextureShapeWidthHeight(e,t),i=4,c=new Uint8Array(getUnpackedArraySizeFromMatrixSize(e*t,i));return callAndCheck(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,c)),new Float32Array(c.buffer)}function downloadPackedMatrixFromBuffer(n,e,t,s,r,o,i,c){const a=n,l=new Float32Array(getPackedRGBAArraySizeFromMatrixShape(o,i));return a.bindBuffer(a.PIXEL_PACK_BUFFER,e),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,l),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),l}function downloadMatrixFromPackedOutputTexture(n,e,t){const s=new Float32Array(e*t*4);return callAndCheck(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GPGPUContext{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=env().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,setWebGLContext(t,e)):this.gl=getWebGLContext(t);let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(env().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=getExtensionOrThrow(this.gl,o),hasExtension(this.gl,i))this.textureHalfFloatExtension=getExtensionOrThrow(this.gl,i);else if(env().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),hasExtension(this.gl,r))this.colorBufferHalfFloatExtension=getExtensionOrThrow(this.gl,r);else if(env().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",hasExtension(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(hasExtension(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=createVertexBuffer(this.gl),this.indexBuffer=createIndexBuffer(this.gl),this.framebuffer=createFramebuffer(this.gl),this.textureConfig=getTextureConfig(this.gl,this.textureHalfFloatExtension)}get debug(){return env().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;callAndCheck(e,()=>e.finish()),callAndCheck(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),callAndCheck(e,()=>e.deleteFramebuffer(this.framebuffer)),callAndCheck(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),callAndCheck(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),callAndCheck(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),createFloat32MatrixTexture(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),createFloat16MatrixTexture(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),createUnsignedBytesMatrixTexture(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),uploadPixelDataToTexture(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),uploadDenseMatrixToTexture(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),createFloat16PackedMatrixTexture(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),createPackedMatrixTexture(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(unbindColorTextureFromFramebuffer(this.gl,this.framebuffer),this.outputTexture=null),callAndCheck(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>downloadByteEncodedFloatMatrixFromOutputTexture(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,o,i){return downloadPackedMatrixFromBuffer(this.gl,e,t,s,r,o,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return downloadFloat32MatrixFromBuffer(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=createBufferFromOutputTexture(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(env().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const i=r.clientWaitSync(o,0,0);return i===r.ALREADY_SIGNALED||i===r.CONDITION_SATISFIED},t=o}else env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>downloadMatrixFromPackedOutputTexture(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl,s=createFragmentShader(t,e),r=createVertexShader(t),o=createProgram(t);return callAndCheck(t,()=>t.attachShader(o,r)),callAndCheck(t,()=>t.attachShader(o,s)),linkProgram(t,o),this.debug&&validateProgram(t,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=bindVertexProgramAttributeStreams(t,this.program,this.vertexBuffer)),o}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&callAndCheck(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&validateProgram(this.gl,this.program),callAndCheck(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?getProgramUniformLocationOrThrow(this.gl,e,t):getProgramUniformLocation(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),callAndCheck(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),bindTextureToProgramUniformSampler(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,o]=getPackedMatrixTextureShapeWidthHeight(t,s);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&validateProgram(this.gl,this.program),validateFramebuffer(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),callAndCheck(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),callAndCheck(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=getExtensionOrThrow(this.gl,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await repeatedTry(()=>this.disposed||this.isQueryAvailable(e,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=linearSearchLastTrue(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),bindColorTextureToFramebuffer(this.gl,e,this.framebuffer),this.debug&&validateFramebuffer(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(bindColorTextureToFramebuffer(this.gl,this.outputTexture,this.framebuffer),this.debug&&validateFramebuffer(this.gl)):unbindColorTextureFromFramebuffer(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;bindColorTextureToFramebuffer(r,e,this.framebuffer),this.debug&&validateFramebuffer(r),this.outputTexture=e,callAndCheck(r,()=>r.viewport(0,0,t,s)),callAndCheck(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),callAndCheck(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function linearSearchLastTrue(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims}=backend_util;function makeShader(n,e,t,s){const r=[];n.forEach(h=>{const g=sizeFromShape(h.shapeInfo.logicalShape);h.shapeInfo.isUniform?r.push(`uniform float ${h.name}${g>1?`[${g}]`:""};`):(r.push(`uniform sampler2D ${h.name};`),r.push(`uniform int offset${h.name};`))});const o=r.join(`
`),i=n.map(h=>getInputSamplingSnippet(h,e,s)).join(`
`),c=e.texShape,a=getGlslDifferences(),l=getFloatTextureSampleSnippet(a);let d,f,y=getShaderPrefix(a);return e.isPacked?(d=getPackedOutputSamplingSnippet(e.logicalShape,c),f=getFloatTextureSetRGBASnippet(a)):(d=getOutputSamplingSnippet(e.logicalShape,c),f=getFloatTextureSetRSnippet(a)),s&&(y+=SHADER_PACKED_PREFIX),[y,l,f,o,d,i,t].join(`
`)}function getSamplerFromInInfo(n){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return getSamplerScalar(n);case 1:return getSampler1D(n);case 2:return getSampler2D(n);case 3:return getSampler3D(n);case 4:return getSampler4D(n);case 5:return getSampler5D(n);case 6:return getSampler6D(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function getPackedSamplerFromInInfo(n){switch(n.shapeInfo.logicalShape.length){case 0:return getPackedSamplerScalar(n);case 1:return getPackedSampler1D(n);case 2:return getPackedSampler2D(n);case 3:return getPackedSampler3D(n);default:return getPackedSamplerND(n)}}function getInputSamplingSnippet(n,e,t=!1){let s="";t?s+=getPackedSamplerFromInInfo(n):s+=getSamplerFromInInfo(n);const r=n.shapeInfo.logicalShape,o=e.logicalShape;return r.length<=o.length&&(t?s+=getPackedSamplerAtOutputCoords(n,e):s+=getSamplerAtOutputCoords(n,e)),s}function getPackedOutputSamplingSnippet(n,e){switch(n.length){case 0:return getOutputScalarCoords();case 1:return getOutputPacked1DCoords(n,e);case 2:return getOutputPacked2DCoords(n,e);case 3:return getOutputPacked3DCoords(n,e);default:return getOutputPackedNDCoords(n,e)}}function getOutputSamplingSnippet(n,e){switch(n.length){case 0:return getOutputScalarCoords();case 1:return getOutput1DCoords(n,e);case 2:return getOutput2DCoords(n,e);case 3:return getOutput3DCoords(n,e);case 4:return getOutput4DCoords(n,e);case 5:return getOutput5DCoords(n,e);case 6:return getOutput6DCoords(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function getFloatTextureSampleSnippet(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function getFloatTextureSetRSnippet(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function getFloatTextureSetRGBASnippet(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function getShaderPrefix(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${SAMPLE_1D_SNIPPET}
    ${SAMPLE_2D_SNIPPET}
    ${SAMPLE_3D_SNIPPET}
  `}const SAMPLE_1D_SNIPPET=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SAMPLE_2D_SNIPPET=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SAMPLE_3D_SNIPPET=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,SHADER_PACKED_PREFIX=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function getOutputScalarCoords(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function getOutputPacked1DCoords(n,e){const t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return t[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${t[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return 2 * (resTexRC.x * ${t[1]} + resTexRC.y);
    }
  `}function getOutput1DCoords(n,e){return e[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function getOutputPacked3DCoords(n,e){const t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[2]/2),r=s*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function getOutput3DCoords(n,e){const t=getLogicalCoordinatesFromFlatIndex(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${t}
      return ivec3(r, c, d);
    }
  `}function getOutputPackedNDCoords(n,e){const t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[n.length-1]/2),r=s*Math.ceil(n[n.length-2]/2);let o=r,i="",c="b, r, c";for(let a=2;a<n.length-1;a++)o*=n[n.length-a-1],i=`
      int b${a} = index / ${o};
      index -= b${a} * ${o};
    `+i,c=`b${a}, `+c;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${i}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${n.length}(${c});
    }
  `}function getOutput4DCoords(n,e){const t=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${t}
      return ivec4(r, c, d, d2);
    }
  `}function getOutput5DCoords(n,e){const t=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function getOutput6DCoords(n,e){const t=getLogicalCoordinatesFromFlatIndex(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function getOutputPacked2DCoords(n,e){const t=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(arraysEqual(n,e))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `;const s=Math.ceil(n[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function getOutput2DCoords(n,e){return arraysEqual(n,e)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function getFlatOffsetUniformName(n){return`offset${n}`}function getPackedSamplerScalar(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=getGlslDifferences();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function getSamplerScalar(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${t}() {return ${e};}`;const[s,r]=n.shapeInfo.texShape;if(s===1&&r===1)return`
      float ${t}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const[o,i]=n.shapeInfo.texShape,c=getFlatOffsetUniformName(e);return`
    float ${t}() {
      vec2 uv = uvFromFlat(${o}, ${i}, ${c});
      return sampleTexture(${e}, uv);
    }
  `}function getPackedSampler1D(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=n.shapeInfo.texShape,r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=getGlslDifferences();return`
    vec4 ${t}(int index) {
      vec2 uv = packedUVfrom1D(
        ${r[0]}, ${r[1]}, index);
      return ${o.texture2D}(${e}, uv);
    }
  `}function getSampler1D(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`
      float ${t}(int index) {
        ${getUniformSampler(n)}
      }
    `;const s=n.shapeInfo.texShape,r=s[0],o=s[1];if(o===1&&r===1)return`
      float ${t}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const i=getFlatOffsetUniformName(e);return o===1?`
      float ${t}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${r}.0);
        return sampleTexture(${e}, uv);
      }
    `:r===1?`
      float ${t}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
    float ${t}(int index) {
      vec2 uv = uvFromFlat(${r}, ${o}, index + ${i});
      return sampleTexture(${e}, uv);
    }
  `}function getPackedSampler2D(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,o=r[0],i=r[1],c=getGlslDifferences();if(r!=null&&arraysEqual(e,r))return`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);

        return ${c.texture2D}(${t}, uv);
      }
    `;const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],l=Math.ceil(e[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${a[0]}, ${a[1]}, row, col);
      return ${c.texture2D}(${t}, uv);
    }
  `}function getSampler2D(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape;if(r!=null&&arraysEqual(e,r)){const f=r[0],y=r[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${y}.0, ${f}.0);
      return sampleTexture(${t}, uv);
    }
  `}const{newShape:o,keptDims:i}=squeezeShape(e),c=o;if(c.length<e.length){const f=squeezeInputInfo(n,c),y=["row","col"];return`
      ${getSamplerFromInInfo(f)}
      float ${s}(int row, int col) {
        return ${s}(${getSqueezedParams(y,i)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${getUniformSampler(n)}
      }
    `;const a=r[0],l=r[1],d=getFlatOffsetUniformName(t);return l===1?`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${a}.0);
      return sampleTexture(${t}, uv);
    }
  `:a===1?`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${t}, uv);
    }
  `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${d};
    vec2 uv = uvFromFlat(${a}, ${l}, index);
    return sampleTexture(${t}, uv);
  }
`}function getPackedSampler3D(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(e[0]===1){const f=e.slice(1),y=[1,2],m=squeezeInputInfo(n,f),h=["b","row","col"];return`
        ${getPackedSamplerFromInInfo(m)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${getSqueezedParams(h,y)});
        }
      `}const i=o[0],c=o[1],a=Math.ceil(e[2]/2),l=a*Math.ceil(e[1]/2),d=getGlslDifferences();return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${i}, ${c}, ${l}, ${a}, b, row, col);
      return ${d.texture2D}(${t}, uv);
    }
  `}function getSampler3D(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[1]*e[2],o=e[2],{newShape:i,keptDims:c}=squeezeShape(e),a=i;if(a.length<e.length){const h=squeezeInputInfo(n,a),g=["row","col","depth"];return`
        ${getSamplerFromInInfo(h)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${getSqueezedParams(g,c)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${o}, 1)));
        ${getUniformSampler(n)}
      }
    `;const l=n.shapeInfo.texShape,d=l[0],f=l[1],y=n.shapeInfo.flatOffset;if(f===r&&y==null)return`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${f}.0, ${d}.0);
          return sampleTexture(${t}, uv);
        }
      `;if(f===o&&y==null)return`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${f}.0, ${d}.0);
      return sampleTexture(${t}, uv);
    }
  `;const m=getFlatOffsetUniformName(t);return`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${o} + depth + ${m};
        vec2 uv = uvFromFlat(${d}, ${f}, index);
        return sampleTexture(${t}, uv);
      }
  `}function getPackedSamplerND(n){const e=n.shapeInfo.logicalShape,t=e.length,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=i[0],a=i[1],l=Math.ceil(e[t-1]/2);let d=l*Math.ceil(e[t-2]/2),f="int b, int row, int col",y=`b * ${d} + (row / 2) * ${l} + (col / 2)`;for(let h=2;h<t-1;h++)f=`int b${h}, `+f,d*=e[t-h-1],y=`b${h} * ${d} + `+y;const m=getGlslDifferences();return`
    vec4 ${r}(${f}) {
      int index = ${y};
      int texR = index / ${a};
      int texC = index - texR * ${a};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}, ${c});
      return ${m.texture2D}(${s}, uv);
    }
  `}function getSampler4D(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[3],o=e[2]*r,i=e[1]*o,{newShape:c,keptDims:a}=squeezeShape(e);if(c.length<e.length){const h=squeezeInputInfo(n,c),g=["row","col","depth","depth2"];return`
      ${getSamplerFromInInfo(h)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${getSqueezedParams(g,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${o}, ${r}, 1)));
        ${getUniformSampler(n)}
      }
    `;const l=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,f=d[0],y=d[1];if(y===i&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(y===r&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=getFlatOffsetUniformName(t);return`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${o} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${f}, ${y}, index + ${m});
      return sampleTexture(${t}, uv);
    }
  `}function getSampler5D(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],o=e[3]*r,i=e[2]*o,c=e[1]*i,{newShape:a,keptDims:l}=squeezeShape(e);if(a.length<e.length){const g=squeezeInputInfo(n,a),x=["row","col","depth","depth2","depth3"];return`
      ${getSamplerFromInInfo(g)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${getSqueezedParams(x,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${i}, ${o}, ${r})) +
          depth3;
        ${getUniformSampler(n)}
      }
    `;const d=n.shapeInfo.flatOffset,f=n.shapeInfo.texShape,y=f[0],m=f[1];if(m===c&&d==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${y}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(m===r&&d==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${y}.0);
        return sampleTexture(${t}, uv);
      }
    `;const h=getFlatOffsetUniformName(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${i} + depth * ${o} +
          depth2 * ${r} + depth3 + ${h};
      vec2 uv = uvFromFlat(${y}, ${m}, index);
      return sampleTexture(${t}, uv);
    }
  `}function getSampler6D(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:o}=squeezeShape(e);if(r.length<e.length){const x=squeezeInputInfo(n,r),w=["row","col","depth","depth2","depth3","depth4"];return`
      ${getSamplerFromInInfo(x)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${getSqueezedParams(w,o)});
      }
    `}const i=e[5],c=e[4]*i,a=e[3]*c,l=e[2]*a,d=e[1]*l;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${d}, ${l}, ${a}, ${c})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${getUniformSampler(n)}
      }
    `;const f=n.shapeInfo.flatOffset,y=n.shapeInfo.texShape,m=y[0],h=y[1];if(h===d&&f==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${a}, ${c}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(h===i&&f==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;const g=getFlatOffsetUniformName(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${d} + col * ${l} + depth * ${a} +
          depth2 * ${c} + depth3 * ${i} + depth4 + ${g};
      vec2 uv = uvFromFlat(${m}, ${h}, index);
      return sampleTexture(${t}, uv);
    }
  `}function getUniformSampler(n){const e=n.name,t=sizeFromShape(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function getPackedSamplerAtOutputCoords(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,i=e.logicalShape.length,c=getBroadcastDims(n.shapeInfo.logicalShape,e.logicalShape),a=getCoordsDataType(i),l=i-o;let d;const f=["x","y","z","w","u","v"];o===0?d="":i<2&&c.length>=1?d="coords = 0;":d=c.map(I=>`coords.${f[I+l]} = 0;`).join(`
`);let y="";i<2&&o>0?y="coords":y=n.shapeInfo.logicalShape.map((I,N)=>`coords.${f[N+l]}`).join(", ");let m="return outputValue;";const g=sizeFromShape(n.shapeInfo.logicalShape)===1,w=sizeFromShape(e.logicalShape)===1;if(o===1&&!g&&!w)m=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!w)i===1?m=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:m=`
        return vec4(outputValue.x);
      `;else if(c.length){const I=o-2,N=o-1;c.indexOf(I)>-1&&c.indexOf(N)>-1?m="return vec4(outputValue.x);":c.indexOf(I)>-1?m="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(N)>-1&&(m="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${a} coords = getOutputCoords();
      ${d}
      vec4 outputValue = get${s}(${y});
      ${m}
    }
  `}function getSamplerAtOutputCoords(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=e.texShape,i=n.shapeInfo.texShape,c=n.shapeInfo.logicalShape.length,a=e.logicalShape.length;if(!n.shapeInfo.isUniform&&c===a&&n.shapeInfo.flatOffset==null&&arraysEqual(i,o))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const l=getCoordsDataType(a),d=getBroadcastDims(n.shapeInfo.logicalShape,e.logicalShape),f=a-c;let y;const m=["x","y","z","w","u","v"];c===0?y="":a<2&&d.length>=1?y="coords = 0;":y=d.map(g=>`coords.${m[g+f]} = 0;`).join(`
`);let h="";return a<2&&c>0?h="coords":h=n.shapeInfo.logicalShape.map((g,x)=>`coords.${m[x+f]}`).join(", "),`
    float ${r}() {
      ${l} coords = getOutputCoords();
      ${y}
      return get${s}(${h});
    }
  `}function getCoordsDataType(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function squeezeInputInfo(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function getSqueezedParams(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function compileProgram(n,e,t,s){const r=e.userCode,o=t.map((m,h)=>{const g={logicalShape:m.shape,texShape:m.isUniform?null:m.texData.texShape,isUniform:m.isUniform,isPacked:m.isUniform?!1:m.texData.isPacked,flatOffset:null};return m.texData!=null&&m.texData.slice!=null&&m.texData.slice.flatOffset>0&&(g.flatOffset=m.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:g}}),i=o.map(m=>m.shapeInfo),c={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=makeShader(o,c,r,e.packedInputs),l=n.createProgram(a);let d=null;const f=n.getUniformLocation(l,"NAN",!1);env().getNumber("WEBGL_VERSION")===1&&(d=n.getUniformLocation(l,"INFINITY",!1));const y={};for(let m=0;m<e.variableNames.length;m++){const h=e.variableNames[m],g=!1;y[h]=n.getUniformLocation(l,h,g),y[`offset${h}`]=n.getUniformLocation(l,`offset${h}`,g)}return{program:e,source:a,webGLProgram:l,uniformLocations:y,inShapeInfos:i,outShapeInfo:c,infLoc:d,nanLoc:f}}function validateBinaryAndProgram(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,o=e[s],i=o.shape;if(!arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(t.isUniform&&o.isUniform)return;const c=t.texShape,a=o.isUniform?null:o.texData.texShape;if(!arraysEqual(c,a))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${c} and ${a} must match`)})}function runProgram(n,e,t,s,r){validateBinaryAndProgram(e.inShapeInfos,t),validateBinaryAndProgram([e.outShapeInfo],[s]);const o=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o,i[0],i[1]):n.setOutputMatrixTexture(o,i[0],i[1]),n.setProgram(e.webGLProgram),env().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN),t.forEach((c,a)=>{const l=e.program.variableNames[a],d=e.uniformLocations[l],f=e.uniformLocations[`offset${l}`];if(d!=null){if(c.isUniform){if(sizeFromShape(c.shape)<2)n.gl.uniform1f(d,c.uniformValues[0]);else{let y=c.uniformValues;y instanceof Float32Array||(y=new Float32Array(y)),n.gl.uniform1fv(d,y)}return}c.texData.slice!=null&&f!=null&&n.gl.uniform1i(f,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture,d,a)}}),r!=null&&r(n,e.webGLProgram),n.executeProgram()}function makeShaderKey(n,e,t){let s="";e.concat(t).forEach(i=>{const c=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0,a=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${a}_${c}`});const r=n.userCode;let o=n.constructor.name;return o+="_"+s+"_"+r,o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:addImplCPU,bincountImpl:bincountImplCPU,bincountReduceImpl:bincountReduceImplCPU,ceilImpl:ceilImplCPU,concatImpl:concatImplCPU,expImpl:expImplCPU,expm1Impl:expm1ImplCPU,floorImpl:floorImplCPU,gatherV2Impl:gatherV2ImplCPU,greaterImpl:greaterImplCPU,lessImpl:lessImplCPU,linSpaceImpl:linSpaceImplCPU,logImpl:logImplCPU,maxImpl:maxImplCPU,maximumImpl:maximumImplCPU,minimumImpl:minimumImplCPU,multiplyImpl:multiplyImplCPU,negImpl:negImplCPU,prodImpl:prodImplCPU,rangeImpl:rangeImplCPU,rsqrtImpl:rsqrtImplCPU,simpleAbsImpl:simpleAbsImplCPU,sliceImpl:sliceImplCPU,stridedSliceImpl:stridedSliceImplCPU,subImpl:subImplCPU,tileImpl:tileImplCPU,topKImpl:topKImplCPU,transposeImpl:transposeImplCPU,uniqueImpl:uniqueImplCPU}=shared;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getVecChannels(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function getChannels(n,e){return e===1?[n]:getVecChannels(n,e)}function getSourceCoords$2(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PackProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(t===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const s=getChannels("rc",t),r=getCoordsDataType(t),o=getOutOfBoundsCondition(t,e,s),i=getSetup(t,e[e.length-1],e[e.length-2],s),c=getOutput(e,s);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${c}));
          }
        }
      `}}}function getSourceCoordsArr(n,e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let i=2;i<n;i++)o=`${e[e.length-1-i]},`+o;t.push(o)}return t}function getOutOfBoundsCondition(n,e,t){if(n===1)return`rc > ${e[0]}`;let s="";for(let r=n-2;r<n;r++)s+=`${t[r]} >= ${e[r]}`,r<n-1&&(s+="||");return s}function getSetup(n,e,t,s){if(n===1)return"";const r=s.slice(-2);return`
    int r = ${r[0]};
    int c = ${r[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${e};
    bool rEdge = rp1 >= ${t};
  `}function getOutput(n,e){const t=n.length,s=getSourceCoordsArr(t,e);return t===1?`getA(rc),
            rc + 1 >= ${n[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${s[0]}),
          cEdge ? 0. : getA(${s[1]}),
          rEdge ? 0. : getA(${s[2]}),
          rEdge || cEdge ? 0. : getA(${s[3]})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReshapePackedProgram{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${getReshapedInputCoords(t)}
      ${getFlatIndexFrom3D(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${e[1]};
        int cols = ${e[2]};

        ${s}

        setOutput(result);
      }
    `}}function getReshapedInputCoords(n){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${getLogicalCoordinatesFromFlatIndex(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TextureManager{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,s){const r=getPhysicalFromLogicalTextureType(t,s),o=getKeyFromTextureShape(e,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const i=computeBytes(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const a=this.freeTextures[o].shift();return this.usedTextures[o].push(a),a}let c;return r===PhysicalTextureType.PACKED_2X2_FLOAT32?c=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===PhysicalTextureType.PACKED_2X2_FLOAT16?c=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===PhysicalTextureType.UNPACKED_FLOAT32?c=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===PhysicalTextureType.UNPACKED_FLOAT16?c=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE&&(c=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(c),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),c}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const o=getPhysicalFromLogicalTextureType(s,r),i=getKeyFromTextureShape(t,o,r);i in this.freeTextures||(this.freeTextures[i]=[]);const c=computeBytes(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),a=env().get("WEBGL_DELETE_TEXTURE_THRESHOLD");a!==-1&&this._numBytesAllocated>a?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=c):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=c),this.numUsedTextures--;const l=this.usedTextures[i],d=l.indexOf(e);if(d<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(d,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function numBytesForInternalFormat(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}function computeBytes(n,e,t,s,r){const o=internalFormatForPhysicalTexType(e,s);let i;if(r){const[a,l]=getPackedMatrixTextureShapeWidthHeight(n[0],n[1]);i=a*l}else{const[a,l]=getUnpackedMatrixTextureShapeWidthHeight(n[0],n[1]);i=a*l}const c=numBytesForInternalFormat(t,o);return i*c}function internalFormatForPhysicalTexType(n,e){switch(n){case PhysicalTextureType.PACKED_2X2_FLOAT32:return getInternalFormatForPackedMatrixTexture(e);case PhysicalTextureType.PACKED_2X2_FLOAT16:return getInternalFormatForFloat16PackedMatrixTexture(e);case PhysicalTextureType.UNPACKED_FLOAT32:return getInternalFormatForFloat32MatrixTexture(e);case PhysicalTextureType.UNPACKED_FLOAT16:return getInternalFormatForFloat16MatrixTexture(e);case PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE:return getInternalFormatForUnsignedBytesMatrixTexture(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function getPhysicalTextureForRendering(n){return env().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?PhysicalTextureType.PACKED_2X2_FLOAT32:PhysicalTextureType.UNPACKED_FLOAT32:n?PhysicalTextureType.PACKED_2X2_FLOAT16:PhysicalTextureType.UNPACKED_FLOAT16}function getPhysicalFromLogicalTextureType(n,e){if(n===TextureUsage.UPLOAD)return PhysicalTextureType.PACKED_2X2_FLOAT32;if(n===TextureUsage.RENDER||n==null)return getPhysicalTextureForRendering(e);if(n===TextureUsage.DOWNLOAD||n===TextureUsage.PIXELS)return PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function getKeyFromTextureShape(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UnaryOpProgram{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const CHECK_NAN_SNIPPET$2="if (isnan(x)) return x;",LINEAR$1="return x;",ABS$1="return abs(x);",ELU$2="return (x >= 0.0) ? x : (exp(x) - 1.0);",RELU$2=CHECK_NAN_SNIPPET$2+`
  return (x < 0.0) ? 0.0 : x;
`,RELU6$2=CHECK_NAN_SNIPPET$2+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,CLONE="return x;";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LINEAR="return x;",ELU$1=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,RELU$1=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,RELU6$1=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;class UnaryOpPackedProgram{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UnpackProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,s=getChannels("rc",t),r=getCoordsDataType(t),o=getSourceCoords$2(t,s),i=s.slice(-2),c=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${c}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const whereImpl=whereImpl$2,EPSILON_FLOAT32=1e-7,EPSILON_FLOAT16=1e-4,binaryCaches={};function getBinaryCache(n){return n in binaryCaches||(binaryCaches[n]={}),binaryCaches[n]}const CPU_HANDOFF_SIZE_THRESHOLD=128,BEFORE_PAGING_CONSTANT=600;function numMBBeforeWarning(){return env().global.screen==null?1024:env().global.screen.height*env().global.screen.width*window.devicePixelRatio*BEFORE_PAGING_CONSTANT/1024/1024}class MathBackendWebGL extends KernelBackend{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!env().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(e==null){const t=getWebGLContext(env().getNumber("WEBGL_VERSION"));this.binaryCache=getBinaryCache(env().getNumber("WEBGL_VERSION")),this.gpgpu=new GPGPUContext(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;this.textureManager=new TextureManager(this.gpgpu),this.numMBBeforeWarning=numMBBeforeWarning(),this.texData=new DataStorage(this,engine())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,s){if((env().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||env().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:TextureUsage.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}decComplexRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.complexParentRefCount>0&&t.refCount--}}move(e,t,s,r){if(env().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:TextureUsage.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.texData.has(t)){const s=this.texData.get(t);s.refCount--,s.refCount<1&&this.disposeData(t)}}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:o,slice:i,shape:c,isPacked:a}=t;if(i!=null){let y;a?y=new UnaryOpPackedProgram(c,CLONE):y=new UnaryOpProgram(c,CLONE);const m=this.runWebGLProgram(y,[{dataId:e,shape:c,dtype:r}],r),h=this.readSync(m.dataId);return this.disposeIntermediateTensorInfo(m),h}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const l=this.activeTimers!=null;let d;l&&(d=now());let f;if(r==="complex64"){const y=this.readSync(o.real.dataId),m=this.readSync(o.imag.dataId);f=mergeRealAndImagArrays(y,m)}else f=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=now()-d),this.convertAndCacheOnCPU(e,f)}async read(e){if(this.pendingRead.has(e)){const h=this.pendingRead.get(e);return new Promise(g=>h.push(g))}const t=this.texData.get(e),{values:s,shape:r,slice:o,dtype:i,complexTensorInfos:c,isPacked:a}=t;if(o!=null){let h;a?h=new UnaryOpPackedProgram(r,CLONE):h=new UnaryOpProgram(r,CLONE);const g=this.runWebGLProgram(h,[{dataId:e,shape:r,dtype:i}],i),x=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),x}if(s!=null)return this.convertAndCacheOnCPU(e);if(!env().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&env().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,d;if(i!=="complex64"&&env().get("WEBGL_BUFFER_SUPPORTED")){d=this.decode(e);const h=this.texData.get(d.dataId);l=this.gpgpu.createBufferFromTexture(h.texture,...getDenseTexShape(r))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let f;if(i==="complex64"){const h=await Promise.all([this.read(c.real.dataId),this.read(c.imag.dataId)]),g=h[0],x=h[1];f=mergeRealAndImagArrays(g,x)}else if(l==null)f=this.getValuesFromTexture(e);else{const h=sizeFromShape(r);f=this.gpgpu.downloadFloat32MatrixFromBuffer(l,h)}d!=null&&this.disposeIntermediateTensorInfo(d);const y=this.convertAndCacheOnCPU(e,f),m=this.pendingRead.get(e);return this.pendingRead.delete(e),m.forEach(h=>h(y)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),y}bufferSync(e){const t=this.readSync(e.dataId);let s=t;if(e.dtype==="string")try{s=t.map(r=>decodeString(r))}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return buffer(e.shape,e.dtype,s)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!canBeRepresented(s))throw env().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),o=sizeFromShape(t);if(env().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const y=this.decode(e),m=this.texData.get(y.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(m.texture,...getDenseTexShape(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(y),h}const i=env().getBool("WEBGL_PACK")&&r===!0,c=i?getShapeAs3D(t):t,a=i?new EncodeFloatPackedProgram(c):new EncodeFloatProgram(c),l=this.runWebGLProgram(a,[{shape:c,dtype:s,dataId:e}],"float32"),d=this.texData.get(l.dataId),f=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(d.texture,d.texShape[0],d.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(l),f}async time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=flatten$2(this.activeTimers.map(a=>a.query)).filter(a=>a!=null),i=flatten$2(this.activeTimers.map(a=>a.name)).filter(a=>a!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const c={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const a=await Promise.all(o);c.kernelMs=sum$3(a),c.getExtraProfileInfo=()=>a.map((l,d)=>({name:i[d],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else c.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,c}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:now(),endMs:null}}endTimer(e){return env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=now(),e)}async getQueryTime(e){if(env().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e)){this.pendingDisposal.add(e),this.pendingDeletes++;return}if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0){this.texData.get(e).refCount--;return}this.releaseGPUData(e);const{complexTensorInfos:t}=this.texData.get(e);t!=null&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:o,isPacked:i,slice:c}=this.texData.get(e),a=c&&c.origDataId||e,l=this.dataRefCount.get(a);l>1?this.dataRefCount.set(a,l-1):(this.dataRefCount.delete(a),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,o,i)));const d=this.texData.get(e);d.texture=null,d.texShape=null,d.isPacked=!1,d.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return env().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=engine().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=CPU_HANDOFF_SIZE_THRESHOLD){const s=this.getCPUBackend();return!env().getBool("IS_TEST")&&!this.warnedAboutCPUBackend&&s==null&&(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),s!=null&&e.every(r=>this.texData.get(r.dataId).texture==null&&sizeFromShape(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return whereImpl(e.shape,t)}packedUnaryOp(e,t,s){const r=new UnaryOpPackedProgram(e.shape,t);return this.compileAndRun(r,[e],s)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const s=simpleAbsImplCPU(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(env().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,ABS$1,e.dtype);const t=new UnaryOpProgram(e.shape,ABS$1);return this.compileAndRun(t,[e])}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&isString(s[0])){const o=s.map(i=>encodeString(i));r=this.write(o,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){const{dataId:r}=this.makeTensorInfo(e,t,s);return engine().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new UnpackProgram(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new PackProgram(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[getBatchDim(e.shape),...getRowsCols(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},o=[getBatchDim(t),...getRowsCols(t)],i=new ReshapePackedProgram(o,s),a=this.runWebGLProgram(i,[r],e.dtype,null,!0);return{dataId:a.dataId,shape:t,dtype:a.dtype}}decode(e){const t=this.texData.get(e),{isPacked:s,shape:r,dtype:o}=t,i=getShapeAs3D(r);let c;s?c=new DecodeMatrixPackedProgram(i):c=new DecodeMatrixProgram(i);const l=this.runWebGLProgram(c,[{shape:i,dtype:o,dataId:e}],o,null,!0);return{dtype:o,shape:r,dataId:l.dataId}}runWebGLProgram(e,t,s,r,o=!1){const i=this.makeTensorInfo(e.outputShape,s),c=this.texData.get(i.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===PackingScheme.DENSE){const g=getDenseTexShape(e.outputShape);c.texShape=g.map(x=>x*2)}if(e.outTexUsage!=null&&(c.usage=e.outTexUsage),sizeFromShape(i.shape)===0)return c.values=getTypedArrayFromDType(i.dtype,0),i;const a=[],l=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(g.dataId);if(x.texture==null){if(!e.packedInputs&&sizeFromShape(g.shape)<=env().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=g.shape)}else if(!!x.isPacked!=!!e.packedInputs)g=x.isPacked?this.unpackTensor(g):this.packTensor(g),a.push(g),x=this.texData.get(g.dataId);else if(x.isPacked&&!isReshapeFree(x.shape,g.shape)){const w=g,I=g.shape;g.shape=x.shape,g=this.packedReshape(g,I),a.push(g),x=this.texData.get(g.dataId),w.shape=I}return this.uploadToGPU(g.dataId),{shape:g.shape,texData:x,isUniform:!1}});this.uploadToGPU(i.dataId);const d={shape:i.shape,texData:c,isUniform:!1},f=makeShaderKey(e,l,d),y=this.getAndSaveBinary(f,()=>compileProgram(this.gpgpu,e,l,d)),m=this.activeTimers!=null;let h;if(m&&(h=this.startTimer()),runProgram(this.gpgpu,y,l,d,r),a.forEach(g=>this.disposeIntermediateTensorInfo(g)),m&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)})),!env().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&o===!1){const g=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),g}return i}compileAndRun(e,t,s,r,o=!1){s=s||t[0].dtype;const i=this.runWebGLProgram(e,t,s,r,o);return engine().makeTensorFromDataId(i.dataId,i.shape,i.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(env().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=tidy(()=>{if(!env().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=env().getBool("DEBUG");env().set("DEBUG",!1);const t=this.abs(scalar(1e-8)).dataSync()[0];if(env().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?EPSILON_FLOAT32:EPSILON_FLOAT16}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:o,texture:i,usage:c,isPacked:a}=t;if(i!=null)return;const l=this.activeTimers!=null;let d;l&&(d=now());let f=t.texShape;if(f==null&&(f=getTextureShapeFromLogicalShape(s,a),t.texShape=f),o!=null){const y=getShapeAs3D(s);let m,h=f[1],g=f[0];const x=o instanceof Uint8Array;a?([h,g]=getPackedMatrixTextureShapeWidthHeight(f[0],f[1]),m=new EncodeMatrixPackedProgram(y,[g,h],x)):m=new EncodeMatrixProgram(y,[g,h],x);const w=this.makeTensorInfo([g,h],r);x?this.texData.get(w.dataId).usage=TextureUsage.PIXELS:this.texData.get(w.dataId).usage=TextureUsage.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(w.dataId),h,g,o);const N=this.runWebGLProgram(m,[w],r,null,!0),A=this.texData.get(N.dataId);t.texture=A.texture,t.texShape=A.texShape,t.isPacked=A.isPacked,t.usage=A.usage,this.disposeIntermediateTensorInfo(w),this.texData.delete(N.dataId),t.values=null,l&&(this.uploadWaitMs+=now()-d)}else{const y=this.acquireTexture(f,c,r,a);t.texture=y}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return this.releaseGPUData(e),t!=null&&(s.values=float32ToTypedArray(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*bytesPerElement(t)}}function float32ToTypedArray(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/** @license See the LICENSE file. */const version$2="2.8.6";/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */isBrowser()&&registerBackend("webgl",()=>new MathBackendWebGL,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHECK_NAN_SNIPPET$1=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class BinaryOpProgram{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=assertAndGetBroadcastShape(t,s),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHECK_NAN_SNIPPET=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;class BinaryOpPackedProgram{constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=assertAndGetBroadcastShape(t,s);const o=this.outputShape.length;let i="";if(r)if(o===0||sizeFromShape(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${getCoordsDataType(o)} coords = getOutputCoords();
        `,o===1)i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const a=getChannels("coords",o);i+=`
            bool nextRowOutOfBounds =
              (${a[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${a[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function identity(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const identityConfig={kernelName:Identity$1,backendName:"webgl",kernelFunc:identity};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function complex(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.makeTensorInfo(s.shape,"complex64"),i=t.texData.get(o.dataId),c=identity({inputs:{x:s},backend:t}),a=t.texData.get(c.dataId);a.complexParentRefCount++;const l=identity({inputs:{x:r},backend:t}),d=t.texData.get(l.dataId);return d.complexParentRefCount++,i.complexTensorInfos={real:c,imag:l},o}const complexConfig={kernelName:Complex,backendName:"webgl",kernelFunc:complex};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LEAKYRELU="return (a < 0.) ? b * a : a;",LEAKYRELU_PACKED=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function leakyRelu(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s,i=t.makeTensorInfo([],"float32",createScalarValue(o,"float32")),c=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BinaryOpPackedProgram(LEAKYRELU_PACKED,r.shape,i.shape):new BinaryOpProgram(LEAKYRELU,r.shape,i.shape),a=t.runWebGLProgram(c,[r,i],r.dtype);return t.disposeIntermediateTensorInfo(i),a}const leakyReluConfig={kernelName:LeakyRelu,backendName:"webgl",kernelFunc:leakyRelu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PRELU="return (a < 0.) ? b * a : a;",PRELU_PACKED=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function prelu(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,o=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BinaryOpPackedProgram(PRELU_PACKED,s.shape,r.shape):new BinaryOpProgram(PRELU,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],s.dtype)}const preluConfig={kernelName:Prelu,backendName:"webgl",kernelFunc:prelu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CHECK_NAN_SNIPPET_UNARY="if (isnan(x)) return x;",CHECK_NAN_SNIPPET_BINARY=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,CHECK_NAN_SNIPPET_BINARY_PACKED=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function unaryKernelFunc({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:o})=>{const{x:i}=r,c=o,a=s||i.dtype;if(c.shouldExecuteOnCPU([i])&&t!=null){const f=c.texData.get(i.dataId),y=t(f.values,a);return c.makeTensorInfo(i.shape,a,y)}const l=env().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let d;return l?d=new UnaryOpPackedProgram(i.shape,e):d=new UnaryOpProgram(i.shape,n),c.runWebGLProgram(d,[i],a)}}function binaryKernelFunc({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:i,backend:c})=>{const{a,b:l}=i,d=c;if(s&&a.dtype==="complex64"){const h=d.texData.get(a.dataId),g=d.texData.get(l.dataId),[x,w]=[[h.complexTensorInfos.real,g.complexTensorInfos.real],[h.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(N=>{const[A,T]=N,P={dataId:A.dataId,dtype:A.dtype,shape:a.shape},O={dataId:T.dataId,dtype:T.dtype,shape:l.shape},F=new BinaryOpProgram(n,a.shape,l.shape);return d.runWebGLProgram(F,[P,O],upcastType(A.dtype,T.dtype))}),I=complex({inputs:{real:x,imag:w},backend:d});return d.disposeIntermediateTensorInfo(x),d.disposeIntermediateTensorInfo(w),I}const f=o||upcastType(a.dtype,l.dtype);if(d.shouldExecuteOnCPU([a,l])&&r!=null){const h=d.texData.get(a.dataId),g=d.texData.get(l.dataId),[x,w]=r(a.shape,l.shape,h.values,g.values,f),I=d.makeTensorInfo(w,f),N=d.texData.get(I.dataId);return N.values=x,I}const y=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let m;return y?m=new BinaryOpPackedProgram(e,a.shape,l.shape,t):m=new BinaryOpProgram(n,a.shape,l.shape),d.runWebGLProgram(m,[a,l],f)}}function mapActivationToShaderProgram(n,e=!1){if(n==="linear")return e?LINEAR:LINEAR$1;if(n==="relu")return e?RELU$1:RELU$2;if(n==="elu")return e?ELU$1:ELU$2;if(n==="relu6")return e?RELU6$1:RELU6$2;if(n==="prelu")return e?PRELU_PACKED:PRELU;if(n==="leakyrelu")return e?LEAKYRELU_PACKED:LEAKYRELU;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MatMulPackedProgram{constructor(e,t,s,r=!1,o=!1,i=!1,c=null,a=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const d=r?e[1]:e[2],f=Math.ceil(d/2),y=r?"i * 2, rc.y":"rc.y, i * 2",m=o?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let x="",w="";c&&(a?x=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${c}
        }`:l?x=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${c}
        }`:x=`vec4 activation(vec4 x) {
          ${c}
        }`,w="result = activation(result);");const I=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let N="rc.x",A="rc.x";e[0]<t[0]?N=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(A=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${x}

      const float sharedDimension = ${f}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${f}; i++) {
          int batchA = ${N};
          int batchB = ${A};
          vec4 a = getMatrixA(batchA, ${y});
          vec4 b = getMatrixB(batchB, ${m});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${g[0]});
          result += (${h[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${I}

        ${w}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const COMPLEX_MULTIPLY={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class BinaryOpComplexProgram{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=assertAndGetBroadcastShape(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MUL="return a * b;";function multiply(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){const c=t.texData.get(s.dataId),a=t.texData.get(r.dataId),l=new BinaryOpComplexProgram(COMPLEX_MULTIPLY.REAL,s.shape,r.shape),d=new BinaryOpComplexProgram(COMPLEX_MULTIPLY.IMAG,s.shape,r.shape),f=[{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:s.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:r.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:r.shape}],y=t.runWebGLProgram(l,f,"float32"),m=t.runWebGLProgram(d,f,"float32"),h=complex({inputs:{real:y,imag:m},backend:t});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(m),h}if(t.shouldExecuteOnCPU([s,r])){const c=t.texData.get(s.dataId),a=t.texData.get(r.dataId),[l,d]=multiplyImplCPU(s.shape,r.shape,c.values,a.values,o),f=t.makeTensorInfo(d,o),y=t.texData.get(f.dataId);return y.values=l,f}let i;return env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new BinaryOpPackedProgram(MUL,s.shape,r.shape):i=new BinaryOpProgram(MUL,s.shape,r.shape),t.runWebGLProgram(i,[s,r],o)}const multiplyConfig={kernelName:Multiply$1,backendName:"webgl",kernelFunc:multiply};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function packedReshape(n,e,t){const s=[getBatchDim(n.shape),...getRowsCols(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[getBatchDim(e),...getRowsCols(e)],i=new ReshapePackedProgram(o,s),a=t.runWebGLProgram(i,[r],n.dtype,null,!0);return{dataId:a.dataId,shape:e,dtype:a.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reshape(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,i=t,c=sizeFromShape(r.shape),a=inferFromImplicitShape(o,c),l=sizeFromShape(a);assert$1(c===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${r.shape}) has ${c} elements. The new shape and old shape must have the same number of elements.`);const d=i.texData.get(r.dataId);return d.isPacked&&!isReshapeFree(r.shape,a)&&!(d.texture!==null&&isReshapeFree(d.shape,a))?packedReshape(r,a,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:a,dtype:r.dtype})}const reshapeConfig={kernelName:Reshape$1,backendName:"webgl",kernelFunc:reshape};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MeanProgram{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=e;this.outputShape=[r,i];const c=Math.floor(s/4)*4,a=s%4;let l="sumValue += dot(values, ones);";if(t!=null){const f=1/t;l=`sumValue += dot(values * ${isInt(f)?f.toPrecision(2):f}, ones);`}let d="";o%s>0&&(d=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${c};
        if (${a===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${a===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${a===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReduceProgram{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:i}=e;this.outputShape=[r,i];let c="0.0",a="";t==="prod"?c="1.0":t==="min"?(c="1.0 / 1e-20",a="min"):t==="max"&&(c="-1.0 / 1e-20",a="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?l="sumValue":t==="prod"?l="prodValue":t==="all"?l="allValue":t==="any"&&(l="anyValue");const d=Math.floor(s/4)*4,f=s%4;let y=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${a}(values, minMaxValue);
      }
    `,m="vec4";t==="all"?(c="1.0",y=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,m="bvec4"):t==="any"&&(c="0.0",y=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,m="bvec4");let h="";o%s>0&&(h=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${c};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${c});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${d}; i += 4) {
          int inIdx = inOffset + i;
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${y}
        }

        int inIdx = inOffset + ${d};
        if (${f===1}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${y}
        } else if (${f===2}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${y}
        } else if (${f===3}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${y}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function getReductionStages(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=computeOptimalWindowSize(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function reduce(n,e,t,s){const r=getReductionStages(n.shape);let o=n;for(let i=0;i<r.length;i++){const{inSize:c,windowSize:a,outSize:l}=r[i];let d,f;t==="mean"?d=i===0?new MeanProgram({windowSize:a,inSize:c,batchSize:n.shape[0],outSize:l},c):new MeanProgram({windowSize:a,inSize:c,batchSize:n.shape[0],outSize:l}):d=new ReduceProgram({windowSize:a,inSize:c,batchSize:n.shape[0],outSize:l},t),f=o,o=s.runWebGLProgram(d,[o],e),f.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(f)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TransposeProgram{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[t[i]];this.outputShape=s,this.rank=s.length;const r=getCoordsDataType(this.rank),o=getSwitchedCoords(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function getSwitchedCoords(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TransposePackedProgram{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let d=0;d<s.length;d++)s[d]=e[t[d]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=getCoordsDataType(this.rank),o=getVecChannels("rc",this.rank),i=new Array(this.rank);for(let d=0;d<t.length;d++)i[t[d]]=o[d];const c=`vec2(${i.slice(-2).join()})`,a=`++${o[this.rank-1]} < ${s[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${c})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${a}) {
        result[1] = ${l};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${l};
        if(${a}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transposeImpl(n,e,t){const s=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TransposePackedProgram(n.shape,e):new TransposeProgram(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sumImpl(n,e,t,s){const r=e,o=n.shape.length,i=parseAxisParam(r,n.shape);let c=i;const a=getAxesPermutation(c,o),l=a!=null;let d=n;l&&(d=transposeImpl(n,a,s),c=getInnerMostAxes(c.length,o)),assertAxesAreInnerMostDims("sum",c,o);const[f,y]=computeOutAndReduceShapes(d.shape,c);let m=f;t&&(m=expandShapeToKeepDim(f,i));const h=sizeFromShape(y),x=sizeFromShape(n.shape)/h,w=reshape({inputs:{x:d},attrs:{shape:[x,h]},backend:s}),I=sumOutType(n.dtype),N=reduce(w,I,"sum",s),A=reshape({inputs:{x:N},attrs:{shape:m},backend:s});return s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(N),l&&s.disposeIntermediateTensorInfo(d),A}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sum(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s;return sumImpl(r,o,i,t)}const sumConfig={kernelName:Sum,backendName:"webgl",kernelFunc:sum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function transpose(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:o}=s,i=t,c=r.shape.length,a=new Array(c);for(let d=0;d<a.length;d++)a[d]=r.shape[o[d]];let l;if(i.shouldExecuteOnCPU([r])){const f=i.texData.get(r.dataId).values,y=transposeImplCPU(f,r.shape,r.dtype,o,a);l=i.makeTensorInfo(a,r.dtype);const m=i.texData.get(l.dataId);m.values=y}else l=transposeImpl(r,o,i);return l}const transposeConfig={kernelName:Transpose,backendName:"webgl",kernelFunc:transpose};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MATMUL_SHARED_DIM_THRESHOLD=1e3;function batchMatMulImpl({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:a=null}){const l=n.shape.length,d=e.shape.length,f=t?n.shape[l-2]:n.shape[l-1],y=s?e.shape[d-1]:e.shape[d-2],m=t?n.shape[l-1]:n.shape[l-2],h=s?e.shape[d-2]:e.shape[d-1],g=n.shape.slice(0,-2),x=e.shape.slice(0,-2),w=sizeFromShape(g),I=sizeFromShape(x),N=w===I||w===1||I===1;assert$1(l>=2&&d>=2&&N,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${x}).`);const T=(w>I?n.shape.slice(0,-2):e.shape.slice(0,-2)).concat([m,h]);assert$1(f===y,()=>`Error in matMul: inner shapes (${f}) and (${y}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const P=t?[w,f,m]:[w,m,f],O=s?[I,h,y]:[I,y,h],F=reshape({inputs:{x:n},backend:r,attrs:{shape:P}}),G=reshape({inputs:{x:e},backend:r,attrs:{shape:O}}),U=[F,G],Q=Math.max(w,I),ne=t?F.shape[1]:F.shape[2],J=o!=null,oe=i!=null,le=a==="leakyrelu",ge=a!=null?mapActivationToShaderProgram(a,!0):null,te=J||oe||le||ge!=null;let ce;if((m===1||h===1)&&ne>MATMUL_SHARED_DIM_THRESHOLD&&te===!1){let Te=F,Ce=G;t&&(Te=transpose({inputs:{x:F},backend:r,attrs:{perm:[0,2,1]}}),U.push(Te)),s&&(Ce=transpose({inputs:{x:G},backend:r,attrs:{perm:[0,2,1]}}),U.push(Ce));const Ne=h!==1,Re=h===1;let Ae=Te;Ne&&(Ae=reshape({inputs:{x:Te},backend:r,attrs:{shape:[Q,ne,1]}}),U.push(Ae));const we=h===1?2:1;let Le=Ce;Re&&(Le=reshape({inputs:{x:Ce},backend:r,attrs:{shape:[Q,1,ne]}}),U.push(Le));const pe=multiply({inputs:{a:Ae,b:Le},backend:r});ce=sum({inputs:{x:pe},backend:r,attrs:{axis:we,keepDims:!0}}),U.push(pe)}else{const Te=upcastType(n.dtype,e.dtype),Ce=new MatMulPackedProgram(P,O,[Q,m,h],t,s,J,ge,oe,le),Ne=[F,G];if(o!=null&&Ne.push(o),oe&&Ne.push(i),le){const Re=r.makeTensorInfo([],"float32",createScalarValue(c,"float32"));Ne.push(Re),U.push(Re)}ce=r.runWebGLProgram(Ce,Ne,Te)}const ue=reshape({inputs:{x:ce},backend:r,attrs:{shape:T}});U.push(ce);for(const Te of U)r.disposeIntermediateTensorInfo(Te);return ue}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _fusedMatMul(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:i,preluActivationWeights:c}=e,{transposeA:a,transposeB:l,activation:d,leakyreluAlpha:f}=s;return batchMatMulImpl({a:r,b:o,transposeA:a,transposeB:l,backend:t,bias:i,preluActivationWeights:c,leakyreluAlpha:f,activation:d})}const _fusedMatMulConfig={kernelName:_FusedMatMul,backendName:"webgl",kernelFunc:_fusedMatMul};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ABS="return abs(x);";function abs(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=t.texData.get(s.dataId),i=simpleAbsImplCPU(o.values);return t.makeTensorInfo(s.shape,s.dtype,i)}let r;return env().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new UnaryOpPackedProgram(s.shape,ABS):r=new UnaryOpProgram(s.shape,ABS),t.runWebGLProgram(r,[s],s.dtype)}const absConfig={kernelName:Abs,backendName:"webgl",kernelFunc:abs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ACOS=CHECK_NAN_SNIPPET$2+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,acos=unaryKernelFunc({opSnippet:ACOS}),acosConfig={kernelName:Acos,backendName:"webgl",kernelFunc:acos};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ACOSH=CHECK_NAN_SNIPPET$2+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,acosh=unaryKernelFunc({opSnippet:ACOSH}),acoshConfig={kernelName:Acosh,backendName:"webgl",kernelFunc:acosh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ADD="return a + b;",addKernelFunc=binaryKernelFunc({opSnippet:ADD,packedOpSnippet:ADD,supportsComplex:!0,cpuKernelImpl:addImplCPU}),addConfig={kernelName:Add$1,backendName:"webgl",kernelFunc:addKernelFunc};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AddNProgram{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AddNPackedProgram{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,i)=>`T${i}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function addN(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return identity({inputs:{x:s[0]},backend:t});if(s.length>env().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const a=Math.floor(s.length/2),l=addN({inputs:s.slice(0,a),backend:t}),d=addN({inputs:s.slice(a),backend:t});return addN({inputs:[l,d],backend:t})}const r=s.map(a=>a.dtype).reduce((a,l)=>upcastType(a,l)),o=s.map(a=>a.shape),c=env().getBool("WEBGL_PACK")?new AddNPackedProgram(s[0].shape,o):new AddNProgram(s[0].shape,o);return t.runWebGLProgram(c,s,r)}const addNConfig={kernelName:AddN,backendName:"webgl",kernelFunc:addN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function all(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,c=r.shape.length,a=parseAxisParam(o,r.shape);let l=a;const d=getAxesPermutation(l,c);let f=r;d!=null&&(f=transpose({inputs:{x:r},backend:t,attrs:{perm:d}}),l=getInnerMostAxes(l.length,c)),assertAxesAreInnerMostDims("all",l,c);const[y,m]=computeOutAndReduceShapes(f.shape,l),h=sizeFromShape(m),g=reshape({inputs:{x:f},backend:t,attrs:{shape:[-1,h]}}),x=reduce(g,g.dtype,"all",t);let w;if(i){const I=expandShapeToKeepDim(y,a);w=reshape({inputs:{x},backend:t,attrs:{shape:I}})}else w=reshape({inputs:{x},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),d!=null&&t.disposeIntermediateTensorInfo(f),w}const allConfig={kernelName:All,backendName:"webgl",kernelFunc:all};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function any(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,c=r.shape.length,a=parseAxisParam(o,r.shape);let l=a;const d=getAxesPermutation(l,c);let f=r;d!=null&&(f=transpose({inputs:{x:r},backend:t,attrs:{perm:d}}),l=getInnerMostAxes(l.length,c)),assertAxesAreInnerMostDims("any",l,c);const[y,m]=computeOutAndReduceShapes(f.shape,l),h=sizeFromShape(m),g=reshape({inputs:{x:f},backend:t,attrs:{shape:[-1,h]}}),x=reduce(g,g.dtype,"any",t);let w;if(i){const I=expandShapeToKeepDim(y,a);w=reshape({inputs:{x},backend:t,attrs:{shape:I}})}else w=reshape({inputs:{x},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),d!=null&&t.disposeIntermediateTensorInfo(f),w}const anyConfig={kernelName:Any,backendName:"webgl",kernelFunc:any};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ArgMinMaxProgram{constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:i}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,i];const c=t==="max"?">":"<",a=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${a};
          float candidate = getA(batch, inIdx);
          if (candidate ${c} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ArgMinMaxPackedProgram{constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,assert$1(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],i=Math.ceil(o/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const c=this.outputShape,a=c.length,l=getCoordsDataType(a),d=getChannels("coords",a);let f,y;if(i===1){y=a+1;const F=getCoordsDataType(y);f=`
        ${F} sourceLocR = ${F}(${d.join()}, 0);
        ++${d[a-1]};
        ${F} sourceLocG = ${F}(${d.join()}, 0);
        ++${d[a-2]};
        ${F} sourceLocA = ${F}(${d.join()}, 0);
        --${d[a-1]};
        ${F} sourceLocB = ${F}(${d.join()}, 0);
        --${d[a-2]};`}else y=a,f=`
        ${l} sourceLocR = coords;
        ++${d[a-1]};
        ${l} sourceLocG = coords;
        ++${d[a-2]};
        ${l} sourceLocA = coords;
        --${d[a-1]};
        ${l} sourceLocB = coords;
        --${d[a-2]};`;const m=["x","y","z","w","u","v"].slice(0,y),h="."+m[y-1],g=m.map(F=>"int "+F),x=getChannels("sourceLocR",y-1).concat("inIdx.r"),w=getChannels("sourceLocG",y-1).concat("inIdx.g"),I=getChannels("sourceLocB",y-1).concat("inIdx.b"),N=getChannels("sourceLocA",y-1).concat("inIdx.a"),A=s==="max"?"greaterThan":"lessThan",T=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${w.join()}),
                             getBestIndicesAChannel(${I.join()}),
                             getBestIndicesAChannel(${N.join()})));`,P=`vec4(
            getAChannel(${x.join()}),
            hasNextCol ? getAChannel(${w.join()}) : 0.,
            hasNextRow ? getAChannel(${I.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${N.join()}) : 0.)`,O=r?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${m.join()}),
                                          vec2(${m.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${m.join()}),
                               vec2(${m.slice(-2).join()}));
      }
      ${O}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${d[a-1]} < ${c[a-1]-1};
        bool hasNextRow = ${d[a-2]} < ${c[a-2]-1};
        ${f}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${P};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${T}
          vec4 candidate = ${P};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${A}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argReduce(n,e,t,s=null){let r=e.shape[0],o=e.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const i=computeOptimalWindowSize(o),c={windowSize:i,inSize:o,batchSize:r,outSize:Math.ceil(o/i)},a=new ArgMinMaxProgram(c,t,s==null),l=[e];s!=null&&l.push(s);const d=n.runWebGLProgram(a,l,"int32");if(d.shape[1]===1)return d;const f=argReduce(n,e,t,d);return n.disposeIntermediateTensorInfo(d),f}function argReducePacked(n,e,t,s=null){const r=s!=null?s.shape:e.shape,o=r[r.length-1],i=computeOptimalWindowSize(o),c=new ArgMinMaxPackedProgram(r,i,t,s==null),a=s==null?[e]:[e,s],l=n.runWebGLProgram(c,a,"int32");if(l.shape.length===e.shape.length){const d=argReducePacked(n,e,t,l);return n.disposeIntermediateTensorInfo(l),d}return l}function argMinMaxReduce(n,e,t,s){const r=[t];if(assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!env().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],[i,c]=computeOutAndReduceShapes(e.shape,r),a=sizeFromShape(c),l=reshape({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}});o.push(l);const d=argReduce(n,l,s);o.push(d);const f=reshape({inputs:{x:d},backend:n,attrs:{shape:i}});return o.forEach(y=>n.disposeIntermediateTensorInfo(y)),f}return argReducePacked(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMax(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=parseAxisParam(o,r.shape);const c=getAxesPermutation(i,r.shape.length);let a=r;const l=[];c!=null&&(a=transpose({inputs:{x:r},backend:t,attrs:{perm:c}}),l.push(a),i=getInnerMostAxes(i.length,a.shape.length)),assertAxesAreInnerMostDims("argMax",[i[0]],a.shape.length);const d=argMinMaxReduce(t,a,i[0],"max");return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}const argMaxConfig={kernelName:ArgMax,backendName:"webgl",kernelFunc:argMax};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function argMin(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let i=parseAxisParam(o,r.shape);const c=getAxesPermutation(i,r.shape.length);let a=r;const l=[];c!=null&&(a=transpose({inputs:{x:r},backend:t,attrs:{perm:c}}),l.push(a),i=getInnerMostAxes(i.length,a.shape.length)),assertAxesAreInnerMostDims("argMin",[i[0]],a.shape.length);const d=argMinMaxReduce(t,a,i[0],"min");return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),d}const argMinConfig={kernelName:ArgMin,backendName:"webgl",kernelFunc:argMin};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ASIN=CHECK_NAN_SNIPPET$2+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,asin=unaryKernelFunc({opSnippet:ASIN}),asinConfig={kernelName:Asin,backendName:"webgl",kernelFunc:asin};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ASINH=CHECK_NAN_SNIPPET$2+"return log(x + sqrt(x * x + 1.0));",asinh=unaryKernelFunc({opSnippet:ASINH}),asinhConfig={kernelName:Asinh,backendName:"webgl",kernelFunc:asinh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ATAN=CHECK_NAN_SNIPPET$2+`
  return atan(x);
`,atan=unaryKernelFunc({opSnippet:ATAN}),atanConfig={kernelName:Atan,backendName:"webgl",kernelFunc:atan};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ATAN2=CHECK_NAN_SNIPPET_BINARY+`
  return atan(a, b);
`,ATAN2_PACKED=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+CHECK_NAN_SNIPPET_BINARY_PACKED+`
  return result;
`,atan2=binaryKernelFunc({opSnippet:ATAN2,packedOpSnippet:ATAN2_PACKED}),atan2Config={kernelName:Atan2,backendName:"webgl",kernelFunc:atan2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ATANH=CHECK_NAN_SNIPPET$2+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,atanh=unaryKernelFunc({opSnippet:ATANH}),atanhConfig={kernelName:Atanh,backendName:"webgl",kernelFunc:atanh};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pool2DProgram{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,c=e.strideHeight,a=e.strideWidth,l=e.dilationHeight,d=e.dilationWidth,f=e.effectiveFilterHeight,y=e.effectiveFilterWidth,m=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const g=t==="avg",x=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,w=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let I="0.0";if(g||(I="-1.0 / 1e-20"),s){const F=">=";this.userCode=`
        const ivec2 strides = ivec2(${c}, ${a});
        const ivec2 pads = ivec2(${m}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${f};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${y};
                wC += ${d}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${F} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?x:w:`wR * ${y} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const N="max";let A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(A="avgValue / count");const T=Math.floor(i/4)*4,P=i%4,O=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${N}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${c}, ${a});
      const ivec2 pads = ivec2(${m}, ${h});
      const float initializationValue = ${I};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${I});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${f};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${T}; wC += 4) {
            int xC = xCCorner + wC * ${d};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              getValue(batch, xR, xC + 2 * ${d}, d),
              getValue(batch, xR, xC + 3 * ${d}, d)
            );

            ${O}
          }

          int xC = xCCorner + ${T};
          if (${P===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${O}
          } else if (${P===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              initializationValue,
              initializationValue
            );

            ${O}
          } else if (${P===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              getValue(batch, xR, xC + 2 * ${d}, d),
              initializationValue
            );

            ${O}
          }
        }
        setOutput(${A});
      }
    `}}class Pool3DProgram{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,c=e.strideDepth,a=e.strideHeight,l=e.strideWidth,d=e.dilationDepth,f=e.dilationHeight,y=e.dilationWidth,m=e.effectiveFilterDepth,h=e.effectiveFilterHeight,g=e.effectiveFilterWidth,x=e.padInfo.front,w=e.padInfo.top,I=e.padInfo.left;this.outputShape=e.outShape;const N=t==="avg";let A="0.0";if(N||(A="-1.0 / 1e-20"),s){const U=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${c}, ${a}, ${l});
        const ivec3 pads = ivec3(${x}, ${w}, ${I});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${m};
              wD += ${d}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${f}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${y}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${U} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const T="max";let P=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(P="avgValue / count");const O=Math.floor(i/4)*4,F=i%4,G=`
      if (${N}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${T}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${c}, ${a}, ${l});
      const ivec3 pads = ivec3(${x}, ${w}, ${I});
      const float initializationValue = ${A};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${A});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${d}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${f}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${O}; wC += 4) {
              int xC = xCCorner + wC * ${y};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${y}, ch),
                getValue(batch, xD, xR, xC + 2 * ${y}, ch),
                getValue(batch, xD, xR, xC + 3 * ${y}, ch)
              );

              ${G}
            }

            int xC = xCCorner + ${O};
            if (${F===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${G}
            } else if (${F===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${y}, ch),
                initializationValue,
                initializationValue
              );

              ${G}
            } else if (${F===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${y}, ch),
                getValue(batch, xD, xR, xC + 2 * ${y}, ch),
                initializationValue
              );

              ${G}
            }
          }
          setOutput(${P});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;assertNotComplex(r,"avgPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:a}=s,l=1;assert$1(eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const d=computePool2DInfo(r.shape,o,i,l,c,a);if(d.filterWidth===1&&d.filterHeight===1&&arraysEqual(d.inShape,d.outShape))return identity({inputs:{x:r},backend:t});const f=new Pool2DProgram(d,"avg",!1);return t.runWebGLProgram(f,[r],"float32")}const avgPoolConfig={kernelName:AvgPool,backendName:"webgl",kernelFunc:avgPool};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3D(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:c,dimRoundingMode:a,dataFormat:l}=s,d=[1,1,1],f=computePool3DInfo(r.shape,o,i,d,c,a,l),y=new Pool3DProgram(f,"avg",!1);return t.runWebGLProgram(y,[r],"float32")}const avgPool3DConfig={kernelName:AvgPool3D,backendName:"webgl",kernelFunc:avgPool3D};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AvgPool2DBackpropProgram{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=e.dilationHeight,c=e.dilationWidth,a=e.effectiveFilterHeight,l=e.effectiveFilterWidth,d=a-1-e.padInfo.top,f=l-1-e.padInfo.left,y=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${d}, ${f});
      const float avgMultiplier = float(${y});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${c}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class AvgPool3DBackpropProgram{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,c=e.strideWidth,a=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,f=e.effectiveFilterDepth,y=e.effectiveFilterHeight,m=e.effectiveFilterWidth,h=f-1-e.padInfo.front,g=y-1-e.padInfo.top,x=m-1-e.padInfo.left,w=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${g}, ${x});
      const float avgMultiplier = float(${w});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${y};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${m};
                wC += ${d}) {
              float dyC = float(dyCCorner + wC) / ${c}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPool3DGrad(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:c,strides:a,pad:l,dimRoundingMode:d}=s,f=[1,1,1],y=computePool3DInfo(i.shape,c,a,f,l,d),m=new AvgPool3DBackpropProgram(y);return t.runWebGLProgram(m,[r],i.dtype)}const avgPoolGrad3DConfig={kernelName:AvgPool3DGrad,backendName:"webgl",kernelFunc:avgPool3DGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function avgPoolGrad(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o;assertNotComplex([r,o],"avgPoolGrad");const{filterSize:c,strides:a,pad:l}=s,d=computePool2DInfo(i.shape,c,a,1,l),f=new AvgPool2DBackpropProgram(d);return t.runWebGLProgram(f,[r],i.dtype)}const avgPoolGradConfig={kernelName:AvgPoolGrad,backendName:"webgl",kernelFunc:avgPoolGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function batchMatMul(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:i,transposeB:c}=s;return batchMatMulImpl({a:r,b:o,transposeA:i,transposeB:c,backend:t})}const batchMatMulConfig={kernelName:BatchMatMul,backendName:"webgl",kernelFunc:batchMatMul};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BatchNormProgram{constructor(e,t,s,r,o,i){this.outputShape=[],this.variableNames=["x","mean","variance"],assertAndGetBroadcastShape(e,t),assertAndGetBroadcastShape(e,s);let c="0.0";r!=null&&(assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),c="getOffsetAtOutCoords()");let a="1.0";o!=null&&(assertAndGetBroadcastShape(e,o),this.variableNames.push("scale"),a="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${c};
        float scale = ${a};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BatchNormPackedProgram{constructor(e,t,s,r,o,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],assertAndGetBroadcastShape(e,t),assertAndGetBroadcastShape(e,s);let c="vec4(0.0)";r!=null&&(assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),c="getOffsetAtOutCoords()");let a="vec4(1.0)";o!=null&&(assertAndGetBroadcastShape(e,o),this.variableNames.push("scale"),a="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${c};
        vec4 scale = ${a};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchNorm=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:o,offset:i,scale:c}=n;assert$1(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),assert$1(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),assert$1(c==null||r.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:a}=t;a==null&&(a=.001);const l=[s,r,o];let d=null;i!=null&&(d=i.shape,l.push(i));let f=null;c!=null&&(f=c.shape,l.push(c));const y=env().getBool("WEBGL_PACK_NORMALIZATION")?new BatchNormPackedProgram(s.shape,r.shape,o.shape,d,f,a):new BatchNormProgram(s.shape,r.shape,o.shape,d,f,a);return e.runWebGLProgram(y,l,l[0].dtype)},batchNormConfig={kernelName:FusedBatchNorm,backendName:"webgl",kernelFunc:batchNorm};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SliceProgram{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=getCoordsDataType(this.rank),s=`uniform int start[${this.rank}];`,r=getCoords$1(this.rank);let o;const i=e.map((c,a)=>`sourceLoc.${coords[a]} = start[${a}] + coords.${coords[a]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      ${s}
      void main() {
        ${o}
        setOutput(getSource(${r}));
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,s)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(s,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}}const coords=["x","y","z","w","u","v"];function getCoords$1(n){if(n===1)return"sourceLoc";if(n<=6)return coords.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SlicePackedProgram{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=getCoordsDataType(this.rank),s=getChannels("coords",this.rank),r=getChannels("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${o})`,c=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${i};
        --${r[this.rank-1]};
      }
    `,a=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${i};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((d,f)=>`start[${f}]`).join()});`:e.map((d,f)=>`${r[f]} = ${s[f]} + start[${f}];`).join(`
`);this.userCode=`
      uniform int start[${this.rank}];
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${c}
        ${a}
        setOutput(result);
      }
    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,s)=>{this.startLoc==null&&(this.startLoc=t.getUniformLocationNoThrow(s,"start"),this.startLoc==null)||t.gl.uniform1iv(this.startLoc,e)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function shallowSlice(n,e,t,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(t,n.dtype),i=s.texData.get(o.dataId);Object.assign(i,r),i.complexParentRefCount=0,i.refCount=1,i.shape=t,i.dtype=n.dtype;let c=computeFlatOffset(e,computeStrides(n.shape));r.slice&&(c+=r.slice.flatOffset),i.slice={flatOffset:c,origDataId:r.slice&&r.slice.origDataId||n.dataId};const a=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,a+1),o}function slice(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:i}=s,[c,a]=parseSliceParams(r,o,i);if(assertParamsValid(r,c,a),sizeFromShape(a)===0)return t.makeTensorInfo(a,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const f=t.texData.get(r.dataId),y=sliceImplCPU(f.values,c,a,r.shape,r.dtype);return t.makeTensorInfo(a,r.dtype,y)}const{isPacked:l}=t.texData.get(r.dataId),d=isSliceContinous(r.shape,c,a);if(l||!d){const f=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SlicePackedProgram(a):new SliceProgram(a),y=f.getCustomSetupFunc(c);return t.runWebGLProgram(f,[r],r.dtype,y)}return t.uploadToGPU(r.dataId),shallowSlice(r,c,a,t)}const sliceConfig={kernelName:Slice,backendName:"webgl",kernelFunc:slice};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const batchToSpaceND=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:i}=s;assert$1(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const c=o.reduce((I,N)=>I*N),a=getReshaped(r.shape,o,c),l=getPermuted(a.length,o.length),d=getReshapedPermuted(r.shape,o,c),f=getSliceBeginCoords(i,o.length),y=getSliceSize(d,i,o.length),m=[],h=reshape({inputs:{x:r},backend:t,attrs:{shape:a}}),g=transpose({inputs:{x:h},backend:t,attrs:{perm:l}}),x=reshape({inputs:{x:g},backend:t,attrs:{shape:d}}),w=slice({inputs:{x},backend:t,attrs:{begin:f,size:y}});return m.push(h),m.push(g),m.push(x),m.forEach(I=>t.disposeIntermediateTensorInfo(I)),w},batchToSpaceNDConfig={kernelName:BatchToSpaceND,backendName:"webgl",kernelFunc:batchToSpaceND};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bincount(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i}=s,c=t.readSync(r.dataId),a=t.readSync(o.dataId),l=bincountImplCPU(c,a,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,l)}const bincountConfig={kernelName:Bincount,backendName:"webgl",kernelFunc:bincount};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NOT_EQUAL="return float(a != b);",notEqual=binaryKernelFunc({opSnippet:NOT_EQUAL,dtype:"bool"}),notEqualConfig={kernelName:NotEqual,backendName:"webgl",kernelFunc:notEqual};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function real(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return identity({inputs:{x:r.complexTensorInfos.real},backend:t})}const realConfig={kernelName:Real,backendName:"webgl",kernelFunc:real};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TO_INT="return float(int(x));";function int(n,e){const t=new UnaryOpProgram(n.shape,TO_INT),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cast(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return identity({inputs:{x:r},backend:t});const i=zeros$2(r.shape),c=cast({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),a=complex({inputs:{real:c,imag:i},backend:t});return i.dispose(),t.disposeIntermediateTensorInfo(c),a}if(r.dtype==="complex64"){const i=real({inputs:{input:r},backend:t}),c=cast({inputs:{x:i},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(i),c}if(!hasEncodingLoss(r.dtype,o)){const i=identity({inputs:{x:r},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(o==="int32")return int(r,t);if(o==="bool"){const i=t.makeTensorInfo([],"bool",getTypedArrayFromDType("bool",1)),a=notEqual({inputs:{a:r,b:i},backend:t});return t.disposeIntermediateTensorInfo(i),a}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const castConfig={kernelName:Cast,backendName:"webgl",kernelFunc:cast};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CEIL="return ceil(x);",ceil=unaryKernelFunc({opSnippet:CEIL,packedOpSnippet:CEIL,cpuKernelImpl:ceilImplCPU}),ceilConfig={kernelName:Ceil,backendName:"webgl",kernelFunc:ceil};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ClipProgram{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}getCustomSetupFunc(e,t){return(s,r)=>{this.minLoc==null&&(this.minLoc=s.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=s.getUniformLocationNoThrow(r,"maxVal")),s.gl.uniform1f(this.minLoc,e),s.gl.uniform1f(this.maxLoc,t)}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ClipPackedProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}getCustomSetupFunc(e,t){return(s,r)=>{this.minLoc==null&&(this.minLoc=s.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=s.getUniformLocationNoThrow(r,"maxVal")),s.gl.uniform1f(this.minLoc,e),s.gl.uniform1f(this.maxLoc,t)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function clipByValue(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:o,clipValueMax:i}=s;let c;env().getBool("WEBGL_PACK_CLIP")?c=new ClipPackedProgram(r.shape):c=new ClipProgram(r.shape);const a=c.getCustomSetupFunc(o,i);return t.runWebGLProgram(c,[r],r.dtype,a)}const clipByValueConfig={kernelName:ClipByValue,backendName:"webgl",kernelFunc:clipByValue};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ComplexAbsProgram{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function makeComplexComponentTensorInfo(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function complexAbs(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),o=new ComplexAbsProgram(s.shape),i=[makeComplexComponentTensorInfo(s,r.complexTensorInfos.real),makeComplexComponentTensorInfo(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(o,i,i[0].dtype)}const complexAbsConfig={kernelName:ComplexAbs,backendName:"webgl",kernelFunc:complexAbs};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ConcatProgram{constructor(e){this.outputShape=[],this.outputShape=computeOutShape$1(e,1),this.variableNames=e.map((i,c)=>`T${c}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const c=t[i-1];s.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${c}));`)}const r=t.length,o=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ConcatPackedProgram{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=computeOutShape$1(e,t);const s=this.outputShape,r=s.length,o=getCoordsDataType(r),i=getChannels("coords",r),c=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((g,x)=>`T${x}`);const a=new Array(e.length-1);a[0]=e[0][t];for(let g=1;g<a.length;g++)a[g]=a[g-1]+e[g][t];const l=c[t],d=c.slice(-2),f=c.join();let y=`if (${l} < ${a[0]}) {
        return getChannel(
            getT0(${f}), vec2(${d.join()}));
        }`;for(let g=1;g<a.length;g++){const x=a[g-1];y+=`
        if (${l} < ${a[g]}  && ${l} >= ${a[g-1]}) {
          return getChannel(
            getT${g}(${shiftedChannels(c,l,x)}),
            vec2(${shiftedChannels(d,l,x)}));
        }`}const m=a.length,h=a[a.length-1];y+=`
        return getChannel(
          getT${m}(${shiftedChannels(c,l,h)}),
          vec2(${shiftedChannels(d,l,h)}));`,this.userCode=`
      float getValue(${c.map(g=>"int "+g)}) {
        ${y}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[r-1]} = ${i[r-1]} + 1;
        if (${i[r-1]} < ${s[r-1]}) {
          result.g = getValue(${i});
        }

        ${i[r-2]} = ${i[r-2]} + 1;
        if (${i[r-2]} < ${s[r-2]}) {
          result.a = getValue(${i});
        }

        ${i[r-1]} = ${i[r-1]} - 1;
        if (${i[r-2]} < ${s[r-2]} &&
            ${i[r-1]} < ${s[r-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function shiftedChannels(n,e,t){const s=n.indexOf(e);return n.map((o,i)=>i===s?`${o} - ${t}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function imag(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return identity({inputs:{x:r.complexTensorInfos.imag},backend:t})}const imagConfig={kernelName:Imag,backendName:"webgl",kernelFunc:imag};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concatImpl(n,e,t){const s=n[0].dtype;if(s==="complex64"){const l=n.map(h=>real({inputs:{input:h},backend:t})),d=n.map(h=>imag({inputs:{input:h},backend:t})),f=concatImpl(l,e,t),y=concatImpl(d,e,t),m=complex({inputs:{real:f,imag:y},backend:t});return l.forEach(h=>t.disposeIntermediateTensorInfo(h)),d.forEach(h=>t.disposeIntermediateTensorInfo(h)),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),m}if(s==="string"){const{tensors2D:l,outShape:d}=computeTensors2D(n,e,t),f=l.map(x=>({vals:t.readSync(x.dataId),shape:x.shape})),y=l[0].shape[0]===1,m=concatImplCPU(f,d,s,y),h=computeOutShape$1(n.map(x=>x.shape),e),g=t.makeTensorInfo(h,s,m);return l.forEach(x=>t.disposeIntermediateTensorInfo(x)),g}if(n.length>env().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(n.length/2),d=concatImpl(n.slice(0,l),e,t),f=concatImpl(n.slice(l),e,t),y=concatImpl([d,f],e,t);return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),y}if(env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&n[0].shape.length>1){const l=new ConcatPackedProgram(n.map(d=>d.shape),e);return t.runWebGLProgram(l,n,s)}const{tensors2D:r,outShape:o}=computeTensors2D(n,e,t),i=new ConcatProgram(r.map(l=>l.shape)),c=t.runWebGLProgram(i,r,s);r.forEach(l=>t.disposeIntermediateTensorInfo(l));const a=reshape({inputs:{x:c},attrs:{shape:o},backend:t});return t.disposeIntermediateTensorInfo(c),a}function computeTensors2D(n,e,t){const s=computeOutShape$1(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>reshape({inputs:{x:o},attrs:{shape:[-1,sizeFromShape(o.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function concat(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=parseAxisParam(r,e[0].shape)[0],i=computeOutShape$1(e.map(l=>l.shape),o);if(sizeFromShape(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const c=e.filter(l=>sizeFromShape(l.shape)>0);if(c.length===1)return identity({inputs:{x:c[0]},backend:t});const a=c.map(l=>l.shape);return assertParamsConsistent(a,o),concatImpl(c,o,t)}const concatConfig={kernelName:Concat,backendName:"webgl",kernelFunc:concat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Conv2DProgram{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,c=e.padInfo.left,a=e.strideHeight,l=e.strideWidth,d=e.dilationHeight,f=e.dilationWidth,y=e.filterHeight,m=e.filterWidth,h=Math.floor(e.inChannels/4)*4,g=e.inChannels%4,x=e.dataFormat==="channelsLast",w=x?1:2,I=x?2:3,N=x?3:1;let A="",T="";s&&(r?A=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?A=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:A=`
          float activation(float x) {
            ${s}
          }
        `,T="result = activation(result);");const P=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${A}

      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${i}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${N}];

        ivec2 xRCCorner =
            ivec2(coords[${w}], coords[${I}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${y}; wR++) {
          int xR = xRCorner + wR * ${d};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${m}; wC++) {
            int xC = xCCorner + wC * ${f};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${x}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${x}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${x}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${x}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${P}
        ${T}
        setOutput(result);
      }
    `}}class Conv3DProgram{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,i=e.strideHeight,c=e.strideWidth,a=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,f=e.filterDepth,y=e.filterHeight,m=e.filterWidth,h=Math.floor(e.inChannels/4)*4,g=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${i}, ${c});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${f}; wF++) {
          int xF = xFCorner + wF * ${a};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${y}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m}; wC++) {
              int xC = xCCorner + wC * ${d};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Im2ColPackedProgram{constructor(e,t,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:o,strideWidth:i,strideHeight:c,padInfo:a,outWidth:l,dilationWidth:d,dilationHeight:f,dataFormat:y}=s,{left:m,top:h}=a,g=o*r,x=getGlslDifferences(),w=y==="channelsLast",I=w?0:1,N=w?1:2;let A="";for(let T=0;T<=1;T++)for(let P=0;P<=1;P++)A+=`
          blockIndex = rc.y + ${P};
          pos = rc.x + ${T};

          if(blockIndex < ${e[1]} && pos < ${e[0]}) {
            offsetY = int(blockIndex / (${l})) * ${c} - ${h};
            d0 = offsetY + ${f} * (pos / ${g});

            if(d0 < ${t[I]} && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), ${l}.) * ${i}. - ${m}.);
              d1 = offsetX + ${d} * (int(mod(float(pos), ${g}.) / ${o}.));

              if(d1 < ${t[N]} && d1 >= 0) {

                ch = int(mod(float(pos), ${o}.));

                if (${w}) {
                  innerDims = vec2(d1, ch);
                  result[${T*2+P}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${T*2+P}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${A}

        ${x.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2dByMatMul({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}){const a=n.shape,l=s.texData.get(n.dataId),d=t.inChannels,f=a[0]*a[1]*a[2],y=t.outChannels,m=t.dataFormat==="channelsLast",h=!1,g=!1;let x;const w=[],I=(f===1||y===1)&&d>MATMUL_SHARED_DIM_THRESHOLD,N=a[2]%2!==0&&!!l.isPacked;if(I||!env().getBool("WEBGL_LAZILY_UNPACK")||!env().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!N){const A=m?a[0]*a[1]*a[2]:a[0]*a[2]*a[3],T=reshape({inputs:{x:n},backend:s,attrs:{shape:[1,A,t.inChannels]}}),P=reshape({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),O=batchMatMulImpl({a:T,b:P,transposeA:h,transposeB:g,backend:s,bias:r,activation:c,preluActivationWeights:o,leakyreluAlpha:i});x=reshape({inputs:{x:O},backend:s,attrs:{shape:t.outShape}}),w.push(T),w.push(P),w.push(O)}else{const A=m?a[0]*a[1]*(a[2]+1):a[0]*a[2]*(a[3]+1),T={dataId:n.dataId,shape:[1,A,t.inChannels],dtype:n.dtype},P=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,assert$1(isReshapeFree(l.shape,T.shape),()=>`packed reshape ${l.shape} to ${T.shape} isn't free`);const O=reshape({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});w.push(O);const F=batchMatMulImpl({a:T,b:O,backend:s,transposeA:h,transposeB:g,bias:r,activation:c,preluActivationWeights:o,leakyreluAlpha:i}),G=s.texData.get(F.dataId);assert$1(G.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=P,G.shape=t.outShape,x=identity({inputs:{x:F},backend:s}),x.shape=t.outShape,w.push(F)}for(const A of w)s.disposeIntermediateTensorInfo(A);return x}function conv2dWithIm2Row({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}){const{filterWidth:a,filterHeight:l,inChannels:d,outWidth:f,outHeight:y,dataFormat:m}=t,h=m==="channelsLast",g=a*l*d,x=y*f,w=[g,x],I=!0,N=!1,A=[],T=reshape({inputs:{x:n},backend:s,attrs:{shape:n.shape.slice(1)}}),P=reshape({inputs:{x:e},backend:s,attrs:{shape:[1,g,sizeFromShape(e.shape)/g]}});A.push(T),A.push(P);const O=new Im2ColPackedProgram(w,T.shape,t),F=s.runWebGLProgram(O,[T],"float32"),G=reshape({inputs:{x:F},backend:s,attrs:{shape:[1,w[0],w[1]]}});A.push(F),A.push(G);const U=r!=null,Q=o!=null,ne=c==="leakyrelu",J=c?mapActivationToShaderProgram(c,!0):null,oe=new MatMulPackedProgram(G.shape,P.shape,[1,x,t.outChannels],I,N,U,J,Q,ne),le=[G,P];if(r&&le.push(r),Q&&le.push(o),ne){const ue=s.makeTensorInfo([],"float32",createScalarValue(i,"float32"));le.push(ue),A.push(ue)}const ge=s.runWebGLProgram(oe,le,"float32"),te=h?[1,y,f,t.outChannels]:[1,t.outChannels,y,f],ce=reshape({inputs:{x:ge},backend:s,attrs:{shape:te}});A.push(ge);for(const ue of A)s.disposeIntermediateTensorInfo(ue);return ce}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2d(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:c,dataFormat:a,dilations:l,dimRoundingMode:d}=s,f=convertConv2DDataFormat(a),y=computeConv2DInfo(r.shape,o.shape,i,l,c,d,!1,f);let m;if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))m=conv2dByMatMul({x:r,filter:o,convInfo:y,backend:t});else if(env().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)m=conv2dWithIm2Row({x:r,filter:o,convInfo:y,backend:t});else{const g=new Conv2DProgram(y);m=t.runWebGLProgram(g,[r,o],"float32")}const h=reshape({inputs:{x:m},backend:t,attrs:{shape:y.outShape}});return t.disposeIntermediateTensorInfo(m),h}const conv2DConfig={kernelName:Conv2D$1,backendName:"webgl",kernelFunc:conv2d};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Conv2DDerFilterProgram{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${i}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Conv2DDerInputProgram{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=e.dataFormat==="channelsLast",c=t-1-e.padInfo.top,a=s-1-e.padInfo.left,l=i?1:2,d=i?2:3,f=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${c}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${f}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${d}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Conv3DDerFilterProgram{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,i=e.padInfo.top,c=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${c};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Conv3DDerInputProgram{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,i=e.strideHeight,c=e.strideWidth,a=t-1-e.padInfo.front,l=s-1-e.padInfo.top,d=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${a}, ${l}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${c}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropFilter(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:c,dataFormat:a,dimRoundingMode:l,filterShape:d}=s,f=convertConv2DDataFormat(a),y=computeConv2DInfo(r.shape,d,i,1,c,l,!1,f),m=new Conv2DDerFilterProgram(y);return t.runWebGLProgram(m,[r,o],"float32")}const conv2DBackpropFilterConfig={kernelName:Conv2DBackpropFilter,backendName:"webgl",kernelFunc:conv2DBackpropFilter};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv2DBackpropInput(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:i,strides:c,pad:a,dataFormat:l,dimRoundingMode:d}=s,f=convertConv2DDataFormat(l),y=computeConv2DInfo(i,o.shape,c,1,a,d,!1,f),m=new Conv2DDerInputProgram(y);return t.runWebGLProgram(m,[r,o],"float32")}const conv2DBackpropInputConfig={kernelName:Conv2DBackpropInput,backendName:"webgl",kernelFunc:conv2DBackpropInput};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3D(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:c,dilations:a}=s,l=computeConv3DInfo(r.shape,o.shape,i,a,c),d=new Conv3DProgram(l);return t.runWebGLProgram(d,[r,o],"float32")}const conv3DConfig={kernelName:Conv3D$1,backendName:"webgl",kernelFunc:conv3D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropFilterV2(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,pad:c,filterShape:a}=s,l=computeConv3DInfo(r.shape,a,i,1,c),d=new Conv3DDerFilterProgram(l);return t.runWebGLProgram(d,[r,o],"float32")}const conv3DBackpropFilterV2Config={kernelName:Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:conv3DBackpropFilterV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function conv3DBackpropInput(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:i,strides:c,inputShape:a}=s,l=computeConv3DInfo(a,o.shape,c,1,i),d=new Conv3DDerInputProgram(l);return t.runWebGLProgram(d,[r,o],"float32")}const conv3DBackpropInputConfig={kernelName:Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:conv3DBackpropInput};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const COS=CHECK_NAN_SNIPPET_UNARY+`
  return cos(x);
`,cos=unaryKernelFunc({opSnippet:COS}),cosConfig={kernelName:Cos,backendName:"webgl",kernelFunc:cos};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const COSH=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,cosh=unaryKernelFunc({opSnippet:COSH}),coshConfig={kernelName:Cosh,backendName:"webgl",kernelFunc:cosh};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CropAndResizeProgram{constructor(e,t,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,c,a,l]=e,[d]=t,[f,y]=s;this.outputShape=[d,f,y,l];const m=r==="bilinear"?1:0,[h,g]=[`${c-1}.0`,`${a-1}.0`],[x,w,I]=f>1?[`${(c-1)/(f-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[N,A,T]=y>1?[`${(a-1)/(y-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${x});
      const float width_ratio = float(${N});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${w};
        float width_scale = ${A};

        float in_y = ${I};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${T};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${m} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cropAndResize=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:i}=e,{cropSize:c,method:a,extrapolationValue:l}=s,d=new CropAndResizeProgram(r.shape,o.shape,c,a,l);return t.runWebGLProgram(d,[r,o,i],"float32")},cropAndResizeConfig={kernelName:CropAndResize,backendName:"webgl",kernelFunc:cropAndResize};class CumSumProgram{constructor(e,t,s){this.variableNames=["x"],this.outputShape=e;const r=e.length,o=t?"0.0":`getX(${getCoords(r,"coords")})`,i=e[e.length-1];let c="",a="";t?(c=s?`end != ${i-1}`:"end != 0",a=s?"end + 1":"end - 1"):(c=s?`end + pow2 < ${i}`:"end >= pow2",a=s?"end + pow2":"end - pow2"),this.userCode=`
      uniform float index;
      void main() {
        ${getCoordsDataType(r)} coords = getOutputCoords();
        int end = ${getFinalCoord(r,"coords")};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${a};
          ${getFinalCoord(r,"coords")} = idx;
          val += getX(${getCoords(r,"coords")});
        }
        setOutput(val);
      }
    `}getCustomSetupFunc(e){return(t,s)=>{this.index==null&&(this.index=t.getUniformLocation(s,"index")),t.gl.uniform1f(this.index,e)}}}function getCoords(n,e){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${n} is not yet supported`)}function getFinalCoord(n,e){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw Error(`Cumulative sum for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cumsum(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:i,reverse:c}=s,a=r.shape.length,l=getAxesPermutation([o],a);let d=r;l!=null&&(d=transpose({inputs:{x:r},backend:t,attrs:{perm:l}}));const f=getInnerMostAxes(1,a)[0];if(f!==a-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${o}`);const y=d.shape[f];let m=identity({inputs:{x:d},backend:t});for(let h=0;h<=Math.ceil(Math.log2(y))-1;h++){const g=new CumSumProgram(d.shape,!1,c),x=g.getCustomSetupFunc(h),w=m;m=t.runWebGLProgram(g,[m],m.dtype,x),t.disposeIntermediateTensorInfo(w)}if(i){const h=new CumSumProgram(d.shape,i,c),g=m;m=t.runWebGLProgram(h,[m],m.dtype),t.disposeIntermediateTensorInfo(g)}if(l!=null){const h=getUndoAxesPermutation(l),g=transpose({inputs:{x:m},backend:t,attrs:{perm:h}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(d),g}return m}const cumsumConfig={kernelName:Cumsum,backendName:"webgl",kernelFunc:cumsum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function denseBincount(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:i,binaryOutput:c}=s;if(r.shape.length===1){const a=t.readSync(r.dataId),l=t.readSync(o.dataId),d=bincountImplCPU(a,l,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,d)}else if(r.shape.length===2){const a=t.bufferSync(r),l=t.bufferSync(o),d=bincountReduceImplCPU(a,l,i,c);return t.makeTensorInfo(d.shape,o.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const denseBincountConfig={kernelName:DenseBincount,backendName:"webgl",kernelFunc:denseBincount};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthToSpaceProgram{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthToSpace(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:i}=s;assert$1(o>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`);const c=r.shape[0],a=i==="NHWC"?r.shape[1]:r.shape[2],l=i==="NHWC"?r.shape[2]:r.shape[3],d=i==="NHWC"?r.shape[3]:r.shape[1],f=a*o,y=l*o,m=d/(o*o),h=i==="NHWC"?[c,f,y,m]:[c,m,f,y],g=new DepthToSpaceProgram(h,o,i);return t.runWebGLProgram(g,[r],r.dtype)}const depthToSpaceConfig={kernelName:DepthToSpace,backendName:"webgl",kernelFunc:depthToSpace};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthwiseConv2DProgram{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.inHeight,c=e.inWidth,a=e.padInfo.top,l=e.padInfo.left,d=e.strideHeight,f=e.strideWidth,y=e.dilationHeight,m=e.dilationWidth,h=e.filterHeight,g=e.filterWidth,x=e.outChannels/e.inChannels;let w="",I="";s&&(r?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:w=`
          float activation(float x) {
            ${s}
          }
        `,I="result = activation(result);");const N=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${d}, ${f});
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${x};
        int q = d2 - d1 * ${x};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${y};

          if (xR < 0 || xR >= ${i}) {
            continue;
          }

          for (int wC = 0; wC < ${g}; wC++) {
            int xC = xCCorner + wC * ${m};

            if (xC < 0 || xC >= ${c}) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${N}
        ${I}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthwiseConvPacked2DProgram{constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const i=e.inHeight,c=e.inWidth,a=e.padInfo.top,l=e.padInfo.left,d=e.strideHeight,f=e.strideWidth,y=e.dilationHeight,m=e.dilationWidth,h=e.filterHeight,g=e.filterWidth,x=g;let w="int xR; int xC; int xCOffset;";for(let T=0;T<h;T++)for(let P=0;P<g;P++)w+=`
          vec4 xTexelR${T}C${P*2} = vec4(0.);
          vec4 wR${T}C${P} = vec4(0.);
          vec4 xR${T}C${P} = vec4(0.);`;for(let T=0;T<h;T++)for(let P=0;P<x;P++){const O=P*2;if(w+=`
          xR = xRCorner + ${T*y};
          xC = xCCorner + ${O*m};
        `,f===1){if(O<g&&(l%2===1?w+=`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < ${i} && xCOffset >= 0 && xCOffset < ${c}) {
                  xTexelR${T}C${O} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${c}) {
                    xTexelR${T}C${O}.zw = vec2(0.);
                  }
                } else {
                  xTexelR${T}C${O} = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < ${i} && xCOffset >= 0 && xCOffset < ${c}) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${c}) {
                    previous.zw = vec2(0.);
                  }

                  xR${T}C${O} = vec4(previous.zw, xTexelR${T}C${O}.xy);
                } else {
                  xR${T}C${O} = vec4(0, 0, xTexelR${T}C${O}.xy);
                }
              `:w+=`
                if(xR >= 0 && xR < ${i} && xC >= 0 && xC < ${c}) {
                  xTexelR${T}C${O} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${T}C${O} = vec4(0.);
                }

                xR${T}C${O} = xTexelR${T}C${O};
              `,O+1<g)){const F=l%2===0?nearestLargerEven(m):m;m%2===0&&l%2===1||m%2!==0&&l%2!==1?(w+=`
                  xCOffset = xC + ${l%2} + ${F};

                  if(xR >= 0 && xR < ${i} &&
                    xCOffset >= 0 && xCOffset < ${c}) {
                    xTexelR${T}C${O+2} = getX(batch, xR, xCOffset, d1);
                  }
                `,m>1&&(w+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < ${i} &&
                      xCOffset >= 0 && xCOffset < ${c}) {
                      xTexelR${T}C${O} = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR${T}C${O} = vec4(0.);
                    }
                  `),w+=`
                  xR${T}C${O+1} = vec4(
                    xTexelR${T}C${O}.zw, xTexelR${T}C${O+2}.xy);
                `):w+=`
                  xCOffset = xC + ${F};

                  if(xR >= 0 && xR < ${i} &&
                    xCOffset >= 0 && xCOffset < ${c}) {
                    xTexelR${T}C${O+2} = getX(batch, xR, xCOffset, d1);
                  }

                  xR${T}C${O+1} = xTexelR${T}C${O+2};
                `}}else O<g&&(w+=`
              if(xR >= 0 && xR < ${i}) {
            `,l%2===1?(w+=`
                xCOffset = xC + 1 - ${f};
                if(xCOffset >= 0 && xCOffset < ${c}) {
                  xTexelR${T}C${O} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${T}C${O} = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < ${c}) {
                  xTexelR${T}C${O+2} = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR${T}C${O+2} = vec4(0.);
                }

                xR${T}C${O} = vec4(
                  xTexelR${T}C${O}.zw, xTexelR${T}C${O+2}.zw);
              `,O+1<g&&(w+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + ${f};
                  if(xCOffset >= 0 && xCOffset < ${c}) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR${T}C${O+1} = vec4(xTexelR${T}C${O+2}.xy, final.xy);
                `)):(w+=`
                if(xC >= 0 && xC < ${c}) {
                  xTexelR${T}C${O} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${T}C${O} = vec4(0.);
                }

                xCOffset = xC + ${f};
                if(xCOffset >= 0 && xCOffset < ${c}) {
                  xTexelR${T}C${O+2} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${T}C${O+2} = vec4(0.);
                }

                xR${T}C${O} = vec4(
                  xTexelR${T}C${O}.xy, xTexelR${T}C${O+2}.xy);
              `,O+1<g&&(w+=`
                  xR${T}C${O+1} = vec4(
                    xTexelR${T}C${O}.zw, xTexelR${T}C${O+2}.zw);
                `)),w+="}");O<g&&(w+=`
            vec4 wTexelR${T}C${O} = getW(${T}, ${O}, d1, q);
            wR${T}C${O} = vec4(wTexelR${T}C${O}.xz, wTexelR${T}C${O}.xz);
          `,O+1<g&&(w+=`
              vec4 wTexelR${T}C${O+1} = getW(${T}, ${O+1}, d1, q);
              wR${T}C${O+1} =
                vec4(wTexelR${T}C${O+1}.xz, wTexelR${T}C${O+1}.xz);`))}for(let T=0;T<h;T++)for(let P=0;P<g;P++)w+=`dotProd += xR${T}C${P} * wR${T}C${P};`;let I="",N="";s&&(r?I=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?I=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:I=`vec4 activation(vec4 x) {
          ${s}
        }`,N="result = activation(result);");const A=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${I}

      const ivec2 strides = ivec2(${d}, ${f});
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        ${w}

        vec4 result = dotProd;
        ${A}
        ${N}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNative(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:c,dilations:a,dimRoundingMode:l}=s;let d=a;d==null&&(d=[1,1]),assert$1(eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);const f=computeConv2DInfo(r.shape,o.shape,i,d,c,l,!0);let y;return env().getBool("WEBGL_PACK_DEPTHWISECONV")&&f.strideWidth<=2&&f.outChannels/f.inChannels===1?y=new DepthwiseConvPacked2DProgram(f):y=new DepthwiseConv2DProgram(f),t.runWebGLProgram(y,[r,o],"float32")}const depthwiseConv2dNativeConfig={kernelName:DepthwiseConv2dNative,backendName:"webgl",kernelFunc:depthwiseConv2dNative};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DepthwiseConv2DDerFilterProgram{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class DepthwiseConv2DDerInputProgram{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.top,c=s-1-e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${a}; dm++) {
              int d2 = d1 * ${a} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropFilter(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:i,dilations:c,pad:a,dimRoundingMode:l,filterShape:d}=s,f=computeConv2DInfo(r.shape,d,i,c,a,l,!0),y=new DepthwiseConv2DDerFilterProgram(f);return t.runWebGLProgram(y,[r,o],"float32")}const depthwiseConv2dNativeBackpropFilterConfig={kernelName:DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:depthwiseConv2dNativeBackpropFilter};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function depthwiseConv2dNativeBackpropInput(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:i,dilations:c,pad:a,dimRoundingMode:l,inputShape:d}=s,f=computeConv2DInfo(d,o.shape,i,c,a,l,!0),y=new DepthwiseConv2DDerInputProgram(f);return t.runWebGLProgram(y,[r,o],"float32")}const depthwiseConv2dNativeBackpropInputConfig={kernelName:DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:depthwiseConv2dNativeBackpropInput};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DiagProgram{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function diag(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],o=sizeFromShape(s.shape),i=reshape({inputs:{x:s},backend:t,attrs:{shape:[o]}}),c=new DiagProgram(o),a=t.runWebGLProgram(c,[i],i.dtype),l=reshape({inputs:{x:a},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),l}const diagConfig={kernelName:Diag,backendName:"webgl",kernelFunc:diag};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dilation2DProgram{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:o,strideWidth:i,filterHeight:c,filterWidth:a,dilationHeight:l,dilationWidth:d}=e,{top:f,left:y}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${f}, ${y});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${c}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${a}; w++) {
              int wIn = wBeg + w * ${d};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dilation2D(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:i,pad:c,dilations:a}=s,l=computeDilation2DInfo(r.shape,o.shape,i,c,"NHWC",a);let d;const f=new Dilation2DProgram(l);d=t.runWebGLProgram(f,[r,o],"float32");const y=reshape({inputs:{x:d},backend:t,attrs:{shape:l.outShape}});return t.disposeIntermediateTensorInfo(d),y}const dilation2DConfig={kernelName:Dilation2D,backendName:"webgl",kernelFunc:dilation2D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ELU="return (x >= 0.0) ? x : (exp(x) - 1.0);",ELU_PACKED=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,elu=unaryKernelFunc({opSnippet:ELU,packedOpSnippet:ELU_PACKED}),eluConfig={kernelName:Elu$1,backendName:"webgl",kernelFunc:elu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ELU_DER="return (b >= 1.0) ? a : a * (b + 1.0);",ELU_DER_PACKED=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,eluGrad=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,o=env().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BinaryOpPackedProgram(ELU_DER_PACKED,s.shape,r.shape):new BinaryOpProgram(ELU_DER,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],s.dtype)},eluGradConfig={kernelName:EluGrad,backendName:"webgl",kernelFunc:eluGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PACKED_EQUAL=`
  return vec4(equal(a, b));
`,EQUAL="return float(a == b);",equal=binaryKernelFunc({opSnippet:EQUAL,packedOpSnippet:PACKED_EQUAL,dtype:"bool"}),equalConfig={kernelName:Equal,backendName:"webgl",kernelFunc:equal};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ERF=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${ERF_P};
  float a1 = ${ERF_A1};
  float a2 = ${ERF_A2};
  float a3 = ${ERF_A3};
  float a4 = ${ERF_A4};
  float a5 = ${ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,erf=unaryKernelFunc({opSnippet:ERF}),erfConfig={kernelName:Erf,backendName:"webgl",kernelFunc:erf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EXP="return exp(x);",exp=unaryKernelFunc({opSnippet:EXP,packedOpSnippet:EXP,cpuKernelImpl:expImplCPU}),expConfig={kernelName:Exp,backendName:"webgl",kernelFunc:exp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function expandDims(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:o}=e,i=o.shape.length,c=o.shape.slice();let a=r;return r<0&&(assert$1(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),a=i+r+1),c.splice(a,0,1),reshape({inputs:{x:o},backend:s,attrs:{shape:c}})}const expandDimsConfig={kernelName:ExpandDims,backendName:"webgl",kernelFunc:expandDims};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EXPM1="return exp(x) - 1.0;",expm1=unaryKernelFunc({opSnippet:EXPM1,packedOpSnippet:EXPM1,cpuKernelImpl:expm1ImplCPU}),expm1Config={kernelName:Expm1,backendName:"webgl",kernelFunc:expm1};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FFTProgram{constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${r}.0`:"1.0";let c;if(e==="real")c="return real * expR - imag * expI;";else if(e==="imag")c="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${c}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fftImpl(n,e,t){const s=t.texData.get(n.dataId),r=sizeFromShape(n.shape),o=n.shape[n.shape.length-1],i=r/o,c=reshape({inputs:{x:n},backend:t,attrs:{shape:[i,o]}}),a=c.shape,l=new FFTProgram("real",a,e),d=new FFTProgram("imag",a,e),f=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:a},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:a}],y=t.runWebGLProgram(l,f,"float32"),m=t.runWebGLProgram(d,f,"float32"),h=complex({inputs:{real:y,imag:m},backend:t});t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(m);const g=reshape({inputs:{x:h},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fft(n){const{inputs:e,backend:t}=n,{input:s}=e;return fftImpl(s,!1,t)}const fftConfig={kernelName:FFT,backendName:"webgl",kernelFunc:fft};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FillProgram{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}getCustomSetupFunc(e){return(t,s)=>{this.valueLoc==null&&(this.valueLoc=t.getUniformLocationNoThrow(s,"value")),t.gl.uniform1f(this.valueLoc,e)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fill(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:o}=t;if(o=o||inferDtype(r),o==="string"){const i=getArrayFromDType(o,sizeFromShape(s));return i.fill(r),e.makeTensorInfo(s,o,i)}else{const i=new FillProgram(s,r),c=i.getCustomSetupFunc(r);return e.runWebGLProgram(i,[],o,c)}}const fillConfig={kernelName:Fill,backendName:"webgl",kernelFunc:fill};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FlipLeftRightProgram{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const flipLeftRightConfig={kernelName:FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new FlipLeftRightProgram(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FLOOR="return floor(x);",floor=unaryKernelFunc({opSnippet:FLOOR,packedOpSnippet:FLOOR,cpuKernelImpl:floorImplCPU}),floorConfig={kernelName:Floor,backendName:"webgl",kernelFunc:floor};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const INT_DIV=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,INT_DIV_PACKED=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,floorDiv=binaryKernelFunc({opSnippet:INT_DIV,packedOpSnippet:INT_DIV_PACKED,dtype:"int32"}),floorDivConfig={kernelName:FloorDiv,backendName:"webgl",kernelFunc:floorDiv};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FromPixelsProgram{constructor(e){this.variableNames=["A"];const t=getGlslDifferences(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FromPixelsPackedProgram{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=getGlslDifferences(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fromPixelsConfig={kernelName:FromPixels,backendName:"webgl",kernelFunc:fromPixels};let fromPixels2DContext;function fromPixels(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:o}=s,i=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,c=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,a=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,[l,d]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],f=[d,l],y=[d,l,o];(c||i||a)&&(fromPixels2DContext==null&&(fromPixels2DContext=document.createElement("canvas").getContext("2d")),fromPixels2DContext.canvas.width=l,fromPixels2DContext.canvas.height=d,fromPixels2DContext.drawImage(r,0,0,l,d),r=fromPixels2DContext.canvas);const m=t.makeTensorInfo(f,"int32");t.texData.get(m.dataId).usage=TextureUsage.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(m.dataId),r);const h=env().getBool("WEBGL_PACK")?new FromPixelsPackedProgram(y):new FromPixelsProgram(y),g=t.runWebGLProgram(h,[m],"int32");return t.disposeData(m.dataId),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedConv2d(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:c}=e,{strides:a,pad:l,dataFormat:d,dilations:f,dimRoundingMode:y,activation:m,leakyreluAlpha:h}=s,g=convertConv2DDataFormat(d),x=computeConv2DInfo(r.shape,o.shape,a,f,l,y,!1,g);let w;const I=[];if(x.filterHeight===1&&x.filterWidth===1&&x.dilationHeight===1&&x.dilationWidth===1&&x.strideHeight===1&&x.strideWidth===1&&(x.padInfo.type==="SAME"||x.padInfo.type==="VALID"))w=conv2dByMatMul({x:r,filter:o,convInfo:x,backend:t,bias:i,activation:m,preluActivationWeights:c,leakyreluAlpha:h});else if(env().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)w=conv2dWithIm2Row({x:r,filter:o,convInfo:x,backend:t,bias:i,activation:m,preluActivationWeights:c,leakyreluAlpha:h});else{const A=i!=null,T=c!=null,P=m==="leakyrelu",O=m?mapActivationToShaderProgram(m,!1):null,F=new Conv2DProgram(x,A,O,T,P),G=[r,o];if(i&&G.push(i),c&&G.push(c),P){const U=t.makeTensorInfo([],"float32",createScalarValue(h,"float32"));G.push(U),I.push(U)}w=t.runWebGLProgram(F,G,"float32")}const N=reshape({inputs:{x:w},backend:t,attrs:{shape:x.outShape}});return I.push(w),I.forEach(A=>t.disposeIntermediateTensorInfo(A)),N}const fusedConv2DConfig={kernelName:FusedConv2D,backendName:"webgl",kernelFunc:fusedConv2d};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fusedDepthwiseConv2D(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:i,preluActivationWeights:c}=e,{strides:a,pad:l,dilations:d,dimRoundingMode:f,activation:y,leakyreluAlpha:m}=s,h=[];let g=d;g==null&&(g=[1,1]),assert$1(eitherStridesOrDilationsAreOne(a,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${g}'`);const x=computeConv2DInfo(r.shape,o.shape,a,g,l,f,!0),w=env().getBool("WEBGL_PACK_DEPTHWISECONV")&&x.strideWidth<=2&&x.outChannels/x.inChannels===1,I=y?mapActivationToShaderProgram(y,w):null,N=[r,o],A=i!=null,T=c!=null,P=y==="leakyrelu";if(A&&N.push(i),T&&N.push(c),P){const G=t.makeTensorInfo([],"float32",createScalarValue(m,"float32"));N.push(G),h.push(G)}let O;w?O=new DepthwiseConvPacked2DProgram(x,A,I,T,P):O=new DepthwiseConv2DProgram(x,A,I,T,P);const F=t.runWebGLProgram(O,N,"float32");return h.forEach(G=>t.disposeIntermediateTensorInfo(G)),F}const fusedDepthwiseConv2DConfig={kernelName:FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:fusedDepthwiseConv2D};class GatherNDProgram{constructor(e,t,s){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=s;const r=getCoordsDataType(t.length),o=getCoordsDataType(s.length),i=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${r} strides = ${r}(${this.strides});
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${i};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherNd(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=r.shape,i=o[o.length-1],[c,a,l,d]=prepareAndValidate(s,r),f=reshape({inputs:{x:r},backend:t,attrs:{shape:[a,i]}}),y=reshape({inputs:{x:s},backend:t,attrs:{shape:[sizeFromShape(s.shape)/l,l]}}),m=new GatherNDProgram(i,d,[a,l]),h=t.runWebGLProgram(m,[y,f],y.dtype),g=reshape({inputs:{x:h},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(h),g}const gatherNdConfig={kernelName:GatherNd,backendName:"webgl",kernelFunc:gatherNd};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GatherProgram{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=getCoordsDataType(this.rank),r=getSourceCoords$1(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function getSourceCoords$1(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(`${t[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gatherV2(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:i,batchDims:c}=s,a=parseAxisParam(i,r.shape)[0],l=collectGatherOpShapeInfo(r,o,a,c),d=sizeFromShape(o.shape),f=[],y=reshape({inputs:{x:r},backend:t,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),m=reshape({inputs:{x:o},backend:t,attrs:{shape:[l.batchSize,d/l.batchSize]}});f.push(y),f.push(m);const h=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(t.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const I=t.bufferSync(m),N=t.bufferSync(y),A=gatherV2ImplCPU(N,I,h);return f.forEach(T=>t.disposeIntermediateTensorInfo(T)),t.makeTensorInfo(l.outputShape,A.dtype,A.values)}const g=new GatherProgram(y.shape,h),x=t.runWebGLProgram(g,[y,m],y.dtype);f.push(x);const w=reshape({inputs:{x},backend:t,attrs:{shape:l.outputShape}});return f.forEach(I=>t.disposeIntermediateTensorInfo(I)),w}const gatherV2Config={kernelName:GatherV2,backendName:"webgl",kernelFunc:gatherV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GREATER="return float(a > b);",GREATER_PACKED=`
  return vec4(greaterThan(a, b));
`,greater=binaryKernelFunc({opSnippet:GREATER,packedOpSnippet:GREATER_PACKED,cpuKernelImpl:greaterImplCPU,dtype:"bool"}),greaterConfig={kernelName:Greater,backendName:"webgl",kernelFunc:greater};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GREATER_EQUAL="return float(a >= b);",GREATER_EQUAL_PACKED=`
  return vec4(greaterThanEqual(a, b));
`,greaterEqual=binaryKernelFunc({opSnippet:GREATER_EQUAL,packedOpSnippet:GREATER_EQUAL_PACKED,dtype:"bool"}),greaterEqualConfig={kernelName:GreaterEqual,backendName:"webgl",kernelFunc:greaterEqual};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ifft(n){const{inputs:e,backend:t}=n,{input:s}=e;return fftImpl(s,!0,t)}const ifftConfig={kernelName:IFFT,backendName:"webgl",kernelFunc:ifft};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS_FINITE="return float(!isnan(x) && !isinf(x));",isFinite$1=unaryKernelFunc({opSnippet:IS_FINITE,dtype:"bool"}),isFiniteConfig={kernelName:IsFinite,backendName:"webgl",kernelFunc:isFinite$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS_INF="return float(isinf(x));",isInf=unaryKernelFunc({opSnippet:IS_INF,dtype:"bool"}),isInfConfig={kernelName:IsInf,backendName:"webgl",kernelFunc:isInf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS_NAN="return float(isnan(x));",isNaN$1=unaryKernelFunc({opSnippet:IS_NAN,dtype:"bool"}),isNaNConfig={kernelName:IsNan,backendName:"webgl",kernelFunc:isNaN$1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LESS="return float(a < b);",LESS_PACKED=`
  return vec4(lessThan(a, b));
`,less=binaryKernelFunc({opSnippet:LESS,packedOpSnippet:LESS_PACKED,cpuKernelImpl:lessImplCPU,dtype:"bool"}),lessConfig={kernelName:Less,backendName:"webgl",kernelFunc:less};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LESS_EQUAL="return float(a <= b);",LESS_EQUAL_PACKED=`
  return vec4(lessThanEqual(a, b));
`,lessEqual=binaryKernelFunc({opSnippet:LESS_EQUAL,packedOpSnippet:LESS_EQUAL_PACKED,dtype:"bool"}),lessEqualConfig={kernelName:LessEqual,backendName:"webgl",kernelFunc:lessEqual};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function linSpace(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,i=linSpaceImplCPU(s,r,o);return e.makeTensorInfo([i.length],"float32",i)}const linSpaceConfig={kernelName:LinSpace,backendName:"webgl",kernelFunc:linSpace};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOG=`if (x < 0.0) return NAN;
  return log(x);`,LOG_PACKED=`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,log=unaryKernelFunc({opSnippet:LOG,packedOpSnippet:LOG_PACKED,cpuKernelImpl:logImplCPU}),logConfig={kernelName:Log,backendName:"webgl",kernelFunc:log};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOG1P="return log(1.0 + x);",log1p=unaryKernelFunc({opSnippet:LOG1P}),log1pConfig={kernelName:Log1p,backendName:"webgl",kernelFunc:log1p};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOGICAL_AND="return float(a >= 1.0 && b >= 1.0);",LOGICAL_AND_PACKED=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,logicalAnd=binaryKernelFunc({opSnippet:LOGICAL_AND,packedOpSnippet:LOGICAL_AND_PACKED,dtype:"bool"}),logicalAndConfig={kernelName:LogicalAnd,backendName:"webgl",kernelFunc:logicalAnd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOGICAL_NOT="return float(!(x >= 1.0));",logicalNot=unaryKernelFunc({opSnippet:LOGICAL_NOT}),logicalNotConfig={kernelName:LogicalNot,backendName:"webgl",kernelFunc:logicalNot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LOGICAL_OR="return float(a >= 1.0 || b >= 1.0);",LOGICAL_OR_PACKED=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,logicalOr=binaryKernelFunc({opSnippet:LOGICAL_OR,packedOpSnippet:LOGICAL_OR_PACKED,dtype:"bool"}),logicalOrConfig={kernelName:LogicalOr,backendName:"webgl",kernelFunc:logicalOr};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LRNProgram{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[];const i=t,c=e[3]-1;this.outputShape=e;let a;const l=`float(${s}) + float(${r}) * sum`;o===.5?a=`inversesqrt(${l})`:o===1?a=`1.0/(${l})`:a=`exp(log(${l}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${c}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${a};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LRNPackedProgram{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,c=e[3]-1;this.outputShape=e;let a;const l=`float(${s}) + float(${r}) * sum`;o===.5?a=`inversesqrt(${l})`:o===1?a=`1.0/(${l})`:a=`exp(log(${l}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${c}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrn=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:i,alpha:c,beta:a}=s,l=env().getBool("WEBGL_PACK_NORMALIZATION")?new LRNPackedProgram(r.shape,o,i,c,a):new LRNProgram(r.shape,o,i,c,a);return t.runWebGLProgram(l,[r],r.dtype)},LRNConfig={kernelName:LRN,backendName:"webgl",kernelFunc:lrn};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LRNGradProgram{constructor(e,t,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrnGrad=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:i}=e,{depthRadius:c,bias:a,alpha:l,beta:d}=s,f=new LRNGradProgram(r.shape,c,a,l,d);return t.runWebGLProgram(f,[r,o,i],r.dtype)},LRNGradConfig={kernelName:LRNGrad,backendName:"webgl",kernelFunc:lrnGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxImpl(n,e,t,s){const r=sizeFromShape(e),i=sizeFromShape(n.shape)/r,c=reshape({inputs:{x:n},attrs:{shape:[i,r]},backend:s}),a=reduce(c,n.dtype,"max",s),l=reshape({inputs:{x:a},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo(a),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function max(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:i}=s,c=r.shape.length,a=parseAxisParam(o,r.shape);let l=a;const d=getAxesPermutation(l,c),f=d!=null,y=t.shouldExecuteOnCPU([r]);let m=r;if(f){if(y){const N=t.texData.get(m.dataId).values,A=new Array(c);for(let O=0;O<A.length;O++)A[O]=r.shape[d[O]];const T=transposeImplCPU(N,r.shape,r.dtype,d,A);m=t.makeTensorInfo(A,r.dtype);const P=t.texData.get(m.dataId);P.values=T}else m=transposeImpl(r,d,t);l=getInnerMostAxes(l.length,c)}assertAxesAreInnerMostDims("max",l,c);const[h,g]=computeOutAndReduceShapes(m.shape,l);let x=h;i&&(x=expandShapeToKeepDim(h,a));let w;if(y){const N=t.texData.get(m.dataId).values,A=maxImplCPU(N,sizeFromShape(g),x,r.dtype);w=t.makeTensorInfo(x,r.dtype);const T=t.texData.get(w.dataId);T.values=A}else w=maxImpl(m,g,x,t);return f&&t.disposeIntermediateTensorInfo(m),w}const maxConfig={kernelName:Max,backendName:"webgl",kernelFunc:max};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MAXIMUM=CHECK_NAN_SNIPPET$1+`
  return max(a, b);
`,MAXIMUM_PACKED=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+CHECK_NAN_SNIPPET+`
  return result;
`,maximum=binaryKernelFunc({opSnippet:MAXIMUM,packedOpSnippet:MAXIMUM_PACKED,cpuKernelImpl:maximumImplCPU}),maximumConfig={kernelName:Maximum$1,backendName:"webgl",kernelFunc:maximum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;assertNotComplex(r,"maxPool");const{filterSize:o,strides:i,pad:c,dimRoundingMode:a}=s,l=1;assert$1(eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const d=computePool2DInfo(r.shape,o,i,l,c,a);if(d.filterWidth===1&&d.filterHeight===1&&arraysEqual(d.inShape,d.outShape))return identity({inputs:{x:r},backend:t});const f=new Pool2DProgram(d,"max",!1);return t.runWebGLProgram(f,[r],r.dtype)}const maxPoolConfig={kernelName:MaxPool,backendName:"webgl",kernelFunc:maxPool};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3d(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:i,pad:c,dataFormat:a,dimRoundingMode:l}=s,d=[1,1,1],f=computePool3DInfo(r.shape,o,i,d,c,l,a),y=new Pool3DProgram(f,"max",!1);return t.runWebGLProgram(y,[r],r.dtype)}const maxPool3DConfig={kernelName:MaxPool3D,backendName:"webgl",kernelFunc:maxPool3d};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MaxPool2DBackpropProgram{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,i=e.effectiveFilterWidth,c=o-1-e.padInfo.top,a=i-1-e.padInfo.left,l=o*i-1;this.userCode=`
      const ivec2 pads = ivec2(${c}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class MaxPool3DBackpropProgram{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,i=e.dilationHeight,c=e.dilationWidth,a=e.effectiveFilterDepth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=a-1-e.padInfo.front,y=l-1-e.padInfo.top,m=d-1-e.padInfo.left,h=a*l*d-1;this.userCode=`
      const ivec3 pads = ivec3(${f}, ${y}, ${m});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${a};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${d} +
                  wR * ${d} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPool3DGrad(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,i=o,{filterSize:c,strides:a,pad:l,dimRoundingMode:d}=s,f=[1,1,1],y=computePool3DInfo(i.shape,c,a,f,l,d),m=new Pool3DProgram(y,"max",!0),h=t.runWebGLProgram(m,[i],i.dtype),g=new MaxPool3DBackpropProgram(y),x=t.runWebGLProgram(g,[r,h],i.dtype);return t.disposeIntermediateTensorInfo(h),x}const maxPoolGrad3DConfig={kernelName:MaxPool3DGrad,backendName:"webgl",kernelFunc:maxPool3DGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolGrad(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:i}=e,c=o;assertNotComplex([o,i],"maxPoolGrad");const{filterSize:a,strides:l,pad:d,dimRoundingMode:f}=s,y=computePool2DInfo(c.shape,a,l,1,d,f),m=!0,h=new Pool2DProgram(y,"max",m),g=t.runWebGLProgram(h,[c],c.dtype),x=new MaxPool2DBackpropProgram(y),w=t.runWebGLProgram(x,[r,g],c.dtype);return t.disposeIntermediateTensorInfo(g),w}const maxPoolGradConfig={kernelName:MaxPoolGrad,backendName:"webgl",kernelFunc:maxPoolGrad};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function maxPoolWithArgmaxImpl(n,e,t,s){let r=new Pool2DProgram(t,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");r=new Pool2DProgram(t,"max",!0,!0,e);const i=s.runWebGLProgram(r,[n],"float32");return[o,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const maxPoolWithArgmaxConfig={kernelName:MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:i,includeBatchInIndex:c}=e,a=t;assert$1(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const l=[1,1];assert$1(eitherStridesOrDilationsAreOne(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const d=computePool2DInfo(s.shape,r,o,l,i),[f,y]=maxPoolWithArgmaxImpl(s,c,d,a);return[f,y]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function meanImpl(n,e,t,s){const r=sizeFromShape(e),i=sizeFromShape(n.shape)/r,c=reshape({inputs:{x:n},attrs:{shape:[i,r]},backend:s}),a=reduce(c,"float32","mean",s),l=reshape({inputs:{x:a},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo(a),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const meanConfig={kernelName:Mean,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:o}=e,i=t,c=s.shape.length,a=parseAxisParam(o,s.shape);let l=a;const d=getAxesPermutation(l,c),f=d!=null,y=i.shouldExecuteOnCPU([s]),m=[];let h=s;if(f){if(y){const A=i.texData.get(h.dataId).values,T=new Array(c);for(let F=0;F<T.length;F++)T[F]=s.shape[d[F]];const P=transposeImplCPU(A,s.shape,s.dtype,d,T);h=i.makeTensorInfo(T,s.dtype);const O=i.texData.get(h.dataId);O.values=P}else h=transposeImpl(s,d,i);m.push(h),l=getInnerMostAxes(l.length,c)}assertAxesAreInnerMostDims("sum",l,c);const[g,x]=computeOutAndReduceShapes(h.shape,l);let w=g;r&&(w=expandShapeToKeepDim(g,a));const I=meanImpl(h,x,w,i);for(const N of m)i.disposeIntermediateTensorInfo(N);return I}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function min(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,c=r.shape.length,a=parseAxisParam(o,r.shape);let l=a;const d=getAxesPermutation(l,c);let f=r;d!=null&&(f=transpose({inputs:{x:r},backend:t,attrs:{perm:d}}),l=getInnerMostAxes(l.length,r.shape.length)),assertAxesAreInnerMostDims("min",l,c);const[y,m]=computeOutAndReduceShapes(f.shape,l),h=sizeFromShape(m),g=reshape({inputs:{x:f},backend:t,attrs:{shape:[-1,h]}}),x=reduce(g,g.dtype,"min",t);let w;if(i){const I=expandShapeToKeepDim(y,a);w=reshape({inputs:{x},backend:t,attrs:{shape:I}})}else w=reshape({inputs:{x},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),d!=null&&t.disposeIntermediateTensorInfo(f),w}const minConfig={kernelName:Min,backendName:"webgl",kernelFunc:min};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MINIMUM=CHECK_NAN_SNIPPET$1+`
  return min(a, b);
`,MINIMUM_PACKED=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+CHECK_NAN_SNIPPET+`
  return result;
`,minimum=binaryKernelFunc({opSnippet:MINIMUM,packedOpSnippet:MINIMUM_PACKED,cpuKernelImpl:minimumImplCPU}),minimumConfig={kernelName:Minimum$1,backendName:"webgl",kernelFunc:minimum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MirrorPadProgram{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((d,f)=>d[0]+e[f]+d[1]);const r=e.length,o=getCoordsDataType(r),i=t.map(d=>d[0]).join(","),c=t.map((d,f)=>d[0]+e[f]).join(","),a=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${i};
        int end = ${c};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${c});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MirrorPadPackedProgram{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,g)=>h[0]+e[g]+h[1]);const r=e.length,o=getCoordsDataType(r),i=t.map(h=>h[0]).join(","),c=t.map((h,g)=>h[0]+e[g]).join(","),a=getChannels("rc",r),l=getChannels("source",r),d=`${a[r-1]} < ${this.outputShape[r-1]}`,f=r===1?"source":`vec2(${l.slice(-2).join()})`,y=s==="reflect"?0:1;let m="";if(r===1){const h=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${y};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${y};
        }
        source -= start;
      `;m=`
        ${o} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${f});
        ${a[r-1]} += 1;
        if(${d}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${f});
        }
      `}else{const h=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${y}) +
                gte * ((end - 1) * 2 - source + ${y});
        source -= start;
      `;m=`
        ${o} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${l.join()}), ${f});
        ${a[r-1]} += 1;
        if(${d}) {
          ${h}
          result[1] = getChannel(getX(${l.join()}), ${f});
        }
        rc = outputLoc;
        ${a[r-2]} += 1;
        if(${a[r-2]} < ${this.outputShape[r-2]}) {
          ${h}
          result[2] = getChannel(getX(${l.join()}), ${f});
          ${a[r-1]} += 1;
          if(${d}) {
            ${h}
            result[3] = getChannel(getX(${l.join()}), ${f});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${c});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mirrorPadKernelFunc=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:o}=t,i=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new MirrorPadPackedProgram(s.shape,r,o):new MirrorPadProgram(s.shape,r,o);return e.runWebGLProgram(i,[s],s.dtype)},mirrorPadConfig={kernelName:MirrorPad,backendName:"webgl",kernelFunc:mirrorPadKernelFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MOD=`if (b == 0.0) return NAN;
  return mod(a, b);`,MOD_PACKED=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+CHECK_NAN_SNIPPET+`
  return result;
`,mod=binaryKernelFunc({opSnippet:MOD,packedOpSnippet:MOD_PACKED}),modConfig={kernelName:Mod,backendName:"webgl",kernelFunc:mod};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MultinomialProgram{constructor(e,t,s){this.variableNames=["probs"],this.outputShape=[e,s],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}getCustomSetupFunc(e){return(t,s)=>{this.seedLoc==null&&(this.seedLoc=t.getUniformLocation(s,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DIV=`
if (a == b) {
  return 1.0;
};
return a / b;`,DIV_PACKED=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,realDiv=binaryKernelFunc({opSnippet:DIV,packedOpSnippet:DIV_PACKED,checkOutOfBounds:!0}),realDivConfig={kernelName:RealDiv,backendName:"webgl",kernelFunc:realDiv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SUB="return a - b;",sub=binaryKernelFunc({opSnippet:SUB,packedOpSnippet:SUB,supportsComplex:!0,cpuKernelImpl:subImplCPU}),subConfig={kernelName:Sub,backendName:"webgl",kernelFunc:sub};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function softmax(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,i=parseAxisParam([o],r.shape),c=max({inputs:{x:r},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),a=expandShapeToKeepDim(c.shape,i),l=reshape({inputs:{x:c},backend:t,attrs:{shape:a}}),d=sub({inputs:{a:r,b:l},backend:t}),f=exp({inputs:{x:d},backend:t}),y=sum({inputs:{x:f},backend:t,attrs:{axis:i,keepDims:!1}}),m=reshape({inputs:{x:y},backend:t,attrs:{shape:a}}),h=realDiv({inputs:{a:f,b:m},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(m),h}const softmaxConfig={kernelName:Softmax$2,backendName:"webgl",kernelFunc:softmax};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function multinomial(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:i,normalized:c}=s,a=c?r:softmax({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),l=a.shape[0],d=a.shape[1],f=new MultinomialProgram(l,d,o),y=f.getCustomSetupFunc(i),m=t.runWebGLProgram(f,[a],"int32",y);return c||t.disposeIntermediateTensorInfo(a),m}const multinomialConfig={kernelName:Multinomial,backendName:"webgl",kernelFunc:multinomial};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NEG="return -x;";function neg(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const o=t.texData.get(s.dataId),[i,c]=negImplCPU(o.values,s.shape,s.dtype);return t.makeTensorInfo(c,s.dtype,i)}let r;return env().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new UnaryOpPackedProgram(s.shape,NEG):r=new UnaryOpProgram(s.shape,NEG),t.runWebGLProgram(r,[s],s.dtype)}const negConfig={kernelName:Neg,backendName:"webgl",kernelFunc:neg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV3Impl=nonMaxSuppressionV3Impl$2;function nonMaxSuppressionV3(n){warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:a}=s,l=t.readSync(r.dataId),d=t.readSync(o.dataId),{selectedIndices:f}=nonMaxSuppressionV3Impl(l,d,i,c,a);return t.makeTensorInfo([f.length],"int32",new Int32Array(f))}const nonMaxSuppressionV3Config={kernelName:NonMaxSuppressionV3,backendName:"webgl",kernelFunc:nonMaxSuppressionV3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV4Impl=nonMaxSuppressionV4Impl$2;function nonMaxSuppressionV4(n){warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:a,padToMaxOutputSize:l}=s,d=t.readSync(r.dataId),f=t.readSync(o.dataId),{selectedIndices:y,validOutputs:m}=nonMaxSuppressionV4Impl(d,f,i,c,a,l);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([],"int32",new Int32Array([m]))]}const nonMaxSuppressionV4Config={kernelName:NonMaxSuppressionV4,backendName:"webgl",kernelFunc:nonMaxSuppressionV4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nonMaxSuppressionV5Impl=nonMaxSuppressionV5Impl$2;function nonMaxSuppressionV5(n){warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:a,softNmsSigma:l}=s,d=t.readSync(r.dataId),f=t.readSync(o.dataId),y=i,m=c,h=a,g=l,{selectedIndices:x,selectedScores:w}=nonMaxSuppressionV5Impl(d,f,y,m,h,g);return[t.makeTensorInfo([x.length],"int32",new Int32Array(x)),t.makeTensorInfo([w.length],"float32",new Float32Array(w))]}const nonMaxSuppressionV5Config={kernelName:NonMaxSuppressionV5,backendName:"webgl",kernelFunc:nonMaxSuppressionV5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OneHotProgram{constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oneHot=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{depth:o,onValue:i,offValue:c}=s,a=sizeFromShape(r.shape),l=new OneHotProgram(a,o,i,c),d=reshape({inputs:{x:r},backend:t,attrs:{shape:[a]}}),f=t.runWebGLProgram(l,[d],r.dtype);t.disposeIntermediateTensorInfo(d);const y=[...r.shape,o],m=reshape({inputs:{x:f},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(f),m},oneHotConfig={kernelName:OneHot,backendName:"webgl",kernelFunc:oneHot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zerosLike(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=real({inputs:{input:s},backend:t}),o=zerosLike({inputs:{x:r},backend:t}),i=imag({inputs:{input:s},backend:t}),c=zerosLike({inputs:{x:i},backend:t}),a=complex({inputs:{real:o,imag:c},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),a}else return fill({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const zerosLikeConfig={kernelName:ZerosLike,backendName:"webgl",kernelFunc:zerosLike};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function onesLike(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=real({inputs:{input:s},backend:t}),o=onesLike({inputs:{x:r},backend:t}),i=imag({inputs:{input:s},backend:t}),c=zerosLike({inputs:{x:i},backend:t}),a=complex({inputs:{real:o,imag:c},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),a}else return fill({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const onesLikeConfig={kernelName:OnesLike,backendName:"webgl",kernelFunc:onesLike};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pack(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return expandDims({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,i=e[0].dtype;e.forEach(d=>{assertShapesMatch(o,d.shape,"All tensors passed to stack must have matching shapes"),assert$1(i===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],a=e.map(d=>{const f=expandDims({inputs:{input:d},backend:t,attrs:{dim:r}});return c.push(f),f}),l=concat({inputs:a,backend:t,attrs:{axis:r}});return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),l}const packConfig={kernelName:Pack,backendName:"webgl",kernelFunc:pack};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PadProgram{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((l,d)=>l[0]+e[d]+l[1]);const r=e.length,o=getCoordsDataType(r),i=t.map(l=>l[0]).join(","),c=t.map((l,d)=>l[0]+e[d]).join(","),a=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${i};
        int end = ${c};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(float(${s}));
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${c});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(float(${s}));
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${a}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PadPackedProgram{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((g,x)=>g[0]+e[x]+g[1]);const r=e.length,o=getCoordsDataType(r),i=t.map(g=>g[0]).join(","),c=t.map((g,x)=>g[0]+e[x]).join(","),a=getChannels("rc",r),l=getChannels("source",r),d=`${a[r-1]} < ${this.outputShape[r-1]}`,f=r===1?"source":`vec2(${l.slice(-2).join()})`,y=[`${o} rc = outputLoc;`,`${a[r-1]} += 1;
       if(${d}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${a[r-2]} += 1;
       if(${a[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${a[r-1]} += 1;
         if(${d}) {`],m=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let g=0,x=r===1?2:4;g<x;g++)h+=`
        ${y[g]}
        if (${m}) {
          result[${g}] = float(${s});
        } else {
          ${o} source = rc - start;
          result[${g}] = getChannel(getX(${l.join()}), ${f});
        }
      `;h+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${c});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const padV2=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:i}=s,c=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new PadPackedProgram(r.shape,o,i):new PadProgram(r.shape,o,i);return t.runWebGLProgram(c,[r],r.dtype)},padV2Config={kernelName:PadV2,backendName:"webgl",kernelFunc:padV2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const POW=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,POW_PACKED=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+CHECK_NAN_SNIPPET+`
  return result;
`,pow=binaryKernelFunc({opSnippet:POW,packedOpSnippet:POW_PACKED}),powConfig={kernelName:Pow,backendName:"webgl",kernelFunc:pow};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function prod(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:i}=s,c=r.shape.length,a=[],l=parseAxisParam(o,r.shape);let d=l;const f=getAxesPermutation(d,c);let y=r;f!=null&&(y=transpose({inputs:{x:r},backend:t,attrs:{perm:f}}),d=getInnerMostAxes(d.length,c),a.push(y)),assertAxesAreInnerMostDims("prod",d,c);let m;if(t.shouldExecuteOnCPU([y])){const h=t.texData.get(y.dataId).values,{outVals:g,outShape:x,outDtype:w}=prodImplCPU(y.shape,y.dtype,h,d);m=t.makeTensorInfo(x,w,g)}else{const[h,g]=computeOutAndReduceShapes(y.shape,d),x=sizeFromShape(g),w=reshape({inputs:{x:y},backend:t,attrs:{shape:[-1,x]}}),I=sumOutType(r.dtype),N=reduce(w,I,"prod",t);m=reshape({inputs:{x:N},backend:t,attrs:{shape:h}}),a.push(w),a.push(N)}if(i){a.push(m);const h=expandShapeToKeepDim(m.shape,l);m=reshape({inputs:{x:m},backend:t,attrs:{shape:h}})}return a.forEach(h=>t.disposeIntermediateTensorInfo(h)),m}const prodConfig={kernelName:Prod,backendName:"webgl",kernelFunc:prod};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const range=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:o,dtype:i}=t,c=rangeImplCPU(s,r,o,i);return e.makeTensorInfo([c.length],i,c)},rangeConfig={kernelName:Range,backendName:"webgl",kernelFunc:range};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RECIPROCAL="return 1.0 / x;",reciprocal=unaryKernelFunc({opSnippet:RECIPROCAL}),reciprocalConfig={kernelName:Reciprocal,backendName:"webgl",kernelFunc:reciprocal};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RELU=CHECK_NAN_SNIPPET$2+`
  return (x < 0.0) ? 0.0 : x;
`,RELU_PACKED=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,relu=unaryKernelFunc({opSnippet:RELU,packedOpSnippet:RELU_PACKED}),reluConfig={kernelName:Relu$1,backendName:"webgl",kernelFunc:relu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RELU6=CHECK_NAN_SNIPPET$2+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,RELU6_PACKED=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,relu6=unaryKernelFunc({opSnippet:RELU6,packedOpSnippet:RELU6_PACKED}),relu6Config={kernelName:Relu6$1,backendName:"webgl",kernelFunc:relu6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeBilinearProgram{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,c,a,l]=e;this.outputShape=[i,t,s,l];const d=[r&&t>1?c-1:c,r&&s>1?a-1:a],f=[r&&t>1?t-1:t,r&&s>1?s-1:s];let y;o?y="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":y="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/f[0]},
          ${d[1]/f[1]});
      const vec2 inputShapeRC = vec2(${c}.0, ${a}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${y};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeBilinearPackedProgram{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,c,a,l]=e;this.outputShape=[i,t,s,l];const d=[r&&t>1?c-1:c,r&&s>1?a-1:a],f=[r&&t>1?t-1:t,r&&s>1?s-1:s];let y;o?y="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":y="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/f[0]},
          ${d[1]/f[1]},
          ${d[1]/f[1]});
      const vec3 inputShapeRC = vec3(${c}.0, ${a}.0,
                                     ${a}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${y};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinear(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:c}=s,[a,l]=c,d=env().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ResizeBilinearPackedProgram(r.shape,a,l,o,i):new ResizeBilinearProgram(r.shape,a,l,o,i);return t.runWebGLProgram(d,[r],"float32")}const resizeBilinearConfig={kernelName:ResizeBilinear,backendName:"webgl",kernelFunc:resizeBilinear};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeBilinearBackpropProgram{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,i,c]=e,a=[s&&i>1?r-1:r,s&&c>1?o-1:o],l=[s&&i>1?i-1:i,s&&c>1?c-1:c],d=a[0]/l[0],f=a[1]/l[1],y=1/d,m=1/f,h=Math.ceil(y)*2+2,g=Math.ceil(m)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${d});
        const float widthScale = float(${f});

        const float invHeightScale = float(${y});
        const float invWidthScale = float(${m});

        const int winHeight = int(${h});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${c}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeBilinearGrad(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,c=new ResizeBilinearBackpropProgram(o.shape,r.shape,i);return t.runWebGLProgram(c,[o],o.dtype)}const resizeBilinearGradConfig={kernelName:ResizeBilinearGrad,backendName:"webgl",kernelFunc:resizeBilinearGrad};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeNearestNeighborProgram{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[i,c,a,l]=e;this.outputShape=[i,t,s,l];const d=[r&&t>1?c-1:c,r&&s>1?a-1:a],f=[r&&t>1?t-1:t,r&&s>1?s-1:s],y=r?"0.5":"0.0";let m;o?m="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/f[0]},
          ${d[1]/f[1]});
      const vec2 inputShapeRC = vec2(${c}.0, ${a}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${y})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighbor(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:i,size:c}=s,[a,l]=c,d=new ResizeNearestNeighborProgram(r.shape,a,l,o,i);return t.runWebGLProgram(d,[r],r.dtype)}const resizeNearestNeighborConfig={kernelName:ResizeNearestNeighbor,backendName:"webgl",kernelFunc:resizeNearestNeighbor};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ResizeNearestNeigborBackpropProgram{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,i,c]=e,a=[s&&i>1?r-1:r,s&&c>1?o-1:o],l=[s&&i>1?i-1:i,s&&c>1?c-1:c],d=a[0]/l[0],f=a[1]/l[1],y=1/d,m=1/f,h=Math.ceil(y)*2+2,g=Math.ceil(m)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${d});
        const float widthScale = float(${f});

        const float invHeightScale = float(${y});
        const float invWidthScale = float(${m});

        const int winHeight = int(${h});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${c}) {
              continue;
            }

            float sourceFracRow =
              float(${a[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${a[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function resizeNearestNeighborGrad(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:i}=s,c=new ResizeNearestNeigborBackpropProgram(o.shape,r.shape,i);return t.runWebGLProgram(c,[o],o.dtype)}const resizeNearestNeighborGradConfig={kernelName:ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:resizeNearestNeighborGrad};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReverseProgram{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=c=>t.indexOf(c)!==-1&&e[c]!==1?`${e[c]} - coords[${c}] - 1`:`coords[${c}]`,o=e.map((c,a)=>r(a)).join(","),i=getCoordsDataType(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ReversePackedProgram{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=getChannels("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,c=getCoordsDataType(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${c} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${a(r.slice())};
          if(${o}){
            result.g = ${l(r.slice())};
          }
          if(${i}) {
            result.b = ${d(r.slice())};
            if(${o}) {
              result.a = ${f(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function a(h){return y(h)}function l(h){return h[s-1]="("+h[s-1]+" + 1)",y(h)}function d(h){return h[s-2]="("+h[s-2]+" + 1)",y(h)}function f(h){return h[s-1]="("+h[s-1]+" + 1)",h[s-2]="("+h[s-2]+" + 1)",y(h)}function y(h){const g=e.map((I,N)=>m(N,h)),x=g.join(","),w=g.slice(-2).join(",");return`getChannel(getX(${x}), vec2(${w}))`}function m(h,g){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${g[h]} - 1`:`${g[h]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function reverse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s,i=r.shape.length,c=parseAxisParam(o,r.shape);if(i===0)return identity({inputs:{x:r},backend:t});const a=env().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ReversePackedProgram(r.shape,c):new ReverseProgram(r.shape,c);return t.runWebGLProgram(a,[r],r.dtype)}const reverseConfig={kernelName:Reverse,backendName:"webgl",kernelFunc:reverse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RotateProgram{constructor(e,t,s,r){this.variableNames=["Image"],this.outputShape=[];const o=e[1],i=e[2],c=Math.sin(t).toFixed(3),a=Math.cos(t).toFixed(3);this.outputShape=e;const[l,d]=getImageCenter(r,o,i),f=l.toFixed(3),y=d.toFixed(3);let m="";typeof s=="number"?m=`float outputValue = ${s.toFixed(2)};`:m=`
        vec3 fill = vec3(${s.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - ${f}) * ${a} - (float(y) - ${y}) * ${c};
          float coordYFloat = (float(x) - ${f}) * ${c} + (float(y) - ${y}) * ${a};
          int coordX = int(round(coordXFloat + ${f}));
          int coordY = int(round(coordYFloat + ${y}));
          ${m}
          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${o}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rotateWithOffsetConfig={kernelName:RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:i}=e,c=t,a=new RotateProgram(s.shape,r,o,i);return c.runWebGLProgram(a,[s],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ROUND=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,round=unaryKernelFunc({opSnippet:ROUND}),roundConfig={kernelName:Round,backendName:"webgl",kernelFunc:round};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RSQRT="return inversesqrt(x);",rsqrt=unaryKernelFunc({opSnippet:RSQRT,cpuKernelImpl:rsqrtImplCPU}),rsqrtConfig={kernelName:Rsqrt,backendName:"webgl",kernelFunc:rsqrt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ScatterProgram{constructor(e,t,s,r,o,i,c=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const a=getCoordsDataType(o.length),l=getCoordsDataType(i.length);let d="";s===1?d="i":s===2&&(d="i, j");const f=`getIndices(${d})`;let y="";r===1?y="i":r===2&&(y="i, coords[1]");const m=`getUpdates(${y})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${a} strides = ${a}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${f});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${m};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function scatterNd(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:i}=s,{sliceRank:c,numUpdates:a,sliceSize:l,strides:d,outputSize:f}=calculateShapes(o,r,i),y=[f/l,l];if(f===0)return t.makeTensorInfo(i,r.dtype);const m=reshape({inputs:{x:r},backend:t,attrs:{shape:[a,c]}}),h=reshape({inputs:{x:o},backend:t,attrs:{shape:[a,l]}}),g=t.makeTensorInfo([],"float32",new Float32Array([0])),x=new ScatterProgram(a,c,m.shape.length,h.shape.length,d,y),w=t.runWebGLProgram(x,[h,m,g],h.dtype),I=reshape({inputs:{x:w},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(g),I}const scatterNdConfig={kernelName:ScatterNd,backendName:"webgl",kernelFunc:scatterNd};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SelectProgram{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const c=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],l=[];for(let d=0;d<t.length;d++)l.push(`${c[d]}`),d<e&&a.push(`${c[d]}`);r=a.join(),o=l.join()}const i=getCoordsDataType(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function select(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e,i=new SelectProgram(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(i,[s,r,o],upcastType(r.dtype,o.dtype))}const selectConfig={kernelName:Select,backendName:"webgl",kernelFunc:select};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SELU=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${SELU_SCALEALPHA};
  float scale = ${SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,selu=unaryKernelFunc({opSnippet:SELU}),seluConfig={kernelName:Selu$1,backendName:"webgl",kernelFunc:selu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SIGMOID="return 1.0 / (1.0 + exp(-1.0 * x));",sigmoid=unaryKernelFunc({opSnippet:SIGMOID}),sigmoidConfig={kernelName:Sigmoid$1,backendName:"webgl",kernelFunc:sigmoid};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SIGN=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,sign=unaryKernelFunc({opSnippet:SIGN}),signConfig={kernelName:Sign,backendName:"webgl",kernelFunc:sign};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SIN=CHECK_NAN_SNIPPET_UNARY+`
  return sin(x);
`,sin=unaryKernelFunc({opSnippet:SIN}),sinConfig={kernelName:Sin,backendName:"webgl",kernelFunc:sin};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SINH=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,sinh=unaryKernelFunc({opSnippet:SINH}),sinhConfig={kernelName:Sinh,backendName:"webgl",kernelFunc:sinh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SOFTPLUS=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,softplus=unaryKernelFunc({opSnippet:SOFTPLUS}),softplusConfig={kernelName:Softplus$1,backendName:"webgl",kernelFunc:softplus};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const spaceToBatchND=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:i}=s;assert$1(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const c=o.reduce((w,I)=>w*I),a=[[0,0]];a.push(...i);for(let w=1+o.length;w<r.shape.length;++w)a.push([0,0]);const l=[],d=padV2({inputs:{x:r},backend:t,attrs:{paddings:a,constantValue:0}}),f=getReshaped(d.shape,o,c,!1),y=getPermuted(f.length,o.length,!1),m=getReshapedPermuted(d.shape,o,c,!1),h=reshape({inputs:{x:d},backend:t,attrs:{shape:f}}),g=transpose({inputs:{x:h},backend:t,attrs:{perm:y}}),x=reshape({inputs:{x:g},backend:t,attrs:{shape:m}});return l.push(d),l.push(h),l.push(g),l.forEach(w=>t.disposeIntermediateTensorInfo(w)),x},spaceToBatchNDConfig={kernelName:SpaceToBatchND,backendName:"webgl",kernelFunc:spaceToBatchND};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sparseToDense(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:i}=e,{outputShape:c}=s,{sliceRank:a,numUpdates:l,strides:d,outputSize:f}=calculateShapes(o,r,c),y=!1,m=new ScatterProgram(l,a,r.shape.length,o.shape.length,d,[f,1],y),h=t.runWebGLProgram(m,[o,r,i],o.dtype),g=reshape({inputs:{x:h},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),g}const sparseToDenseConfig={kernelName:SparseToDense,backendName:"webgl",kernelFunc:sparseToDense};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function splitV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:i}=s,c=parseAxisParam(i,r.shape)[0],a=prepareSplitSize(r,o,c),l=r.shape.length,d=new Array(l).fill(0),f=r.shape.slice();return a.map(y=>{const m=[...f];m[c]=y;const h=slice({inputs:{x:r},backend:t,attrs:{begin:d,size:m}});return d[c]+=y,h})}const splitVConfig={kernelName:SplitV,backendName:"webgl",kernelFunc:splitV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQRT="return sqrt(x);",sqrt=unaryKernelFunc({opSnippet:SQRT}),sqrtConfig={kernelName:Sqrt,backendName:"webgl",kernelFunc:sqrt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQUARE="return x * x;",square=unaryKernelFunc({opSnippet:SQUARE}),squareConfig={kernelName:Square,backendName:"webgl",kernelFunc:square};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SQUARED_DIFFERENCE="return (a - b) * (a - b);",squaredDifference=binaryKernelFunc({opSnippet:SQUARED_DIFFERENCE,packedOpSnippet:SQUARED_DIFFERENCE}),squaredDifferenceConfig={kernelName:SquaredDifference,backendName:"webgl",kernelFunc:squaredDifference};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function step({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=CHECK_NAN_SNIPPET$2+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new UnaryOpProgram(s.shape,r);return t.runWebGLProgram(o,[s],s.dtype)}const stepConfig={kernelName:Step,backendName:"webgl",kernelFunc:step};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class StridedSliceProgram{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=getCoordsDataType(s.length),i=getCoordsDataType(s.length);let c="";if(r===1)c="coords * strides + begin";else{let a=0;c=s.map((l,d)=>(a++,s.length===1?`coords * strides[${d}] + begin[${d}]`:`coords[${a-1}] * strides[${d}] + begin[${d}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${c}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stridedSlice(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:i,strides:c,beginMask:a,endMask:l,ellipsisMask:d,newAxisMask:f,shrinkAxisMask:y}=s,{nonStrided:m,$begin:h,$strides:g,size:x,newShape:w,outShape:I}=sliceInfo(r.shape,o,i,c,a,l,d,f,y),N=reshape({inputs:{x:r},backend:t,attrs:{shape:w}});let A;if(m){const P=slice({inputs:{x:N},backend:t,attrs:{begin:h,size:x}});A=reshape({inputs:{x:P},backend:t,attrs:{shape:I}}),t.disposeIntermediateTensorInfo(P)}else if(I.some(P=>P===0))A=t.makeTensorInfo(I,r.dtype,[]);else if(t.shouldExecuteOnCPU([N])){const F=t.texData.get(N.dataId).values,G=buffer(N.shape,N.dtype,F),U=stridedSliceImplCPU(I,G,g,h);A=t.makeTensorInfo(I,N.dtype,U.values)}else{const O=new StridedSliceProgram(h,g,I);A=t.runWebGLProgram(O,[N],N.dtype)}const T=reshape({inputs:{x:A},backend:t,attrs:{shape:I}});return t.disposeIntermediateTensorInfo(N),t.disposeIntermediateTensorInfo(A),T}const stridedSliceConfig={kernelName:StridedSlice,backendName:"webgl",kernelFunc:stridedSlice};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TAN="return tan(x);",tan=unaryKernelFunc({opSnippet:TAN}),tanConfig={kernelName:Tan,backendName:"webgl",kernelFunc:tan};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TANH=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,tanh=unaryKernelFunc({opSnippet:TANH}),tanhConfig={kernelName:Tanh$1,backendName:"webgl",kernelFunc:tanh};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TileProgram{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let i=0;i<s.length;i++)s[i]=e[i]*t[i];this.outputShape=s,this.rank=s.length;const r=getCoordsDataType(this.rank),o=getSourceCoords(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function getSourceCoords(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tile(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;if(r.dtype==="string"){const l=t.readSync(r.dataId).map(y=>decodeString(y)),d=buffer(r.shape,r.dtype,l),f=tileImplCPU(d,o);return t.makeTensorInfo(f.shape,f.dtype,f.values)}const i=new TileProgram(r.shape,o);return t.runWebGLProgram(i,[r],r.dtype)}const tileConfig={kernelName:Tile,backendName:"webgl",kernelFunc:tile};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function topK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:i}=s,c=t.readSync(r.dataId),[a,l]=topKImplCPU(c,r.shape,r.dtype,o,i);return[t.makeTensorInfo(a.shape,a.dtype,a.values),t.makeTensorInfo(l.shape,l.dtype,l.values)]}const topKConfig={kernelName:TopK,backendName:"webgl",kernelFunc:topK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unique(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;assertNotComplex(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(o.dataId),{outputValues:c,outputShape:a,indices:l}=uniqueImplCPU(i,r,o.shape,o.dtype);return[s.makeTensorInfo(a,o.dtype,c),s.makeTensorInfo([l.length],"int32",l)]}const uniqueConfig={kernelName:Unique,backendName:"webgl",kernelFunc:unique};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unpack(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const i=r,c=i.shape.length,a=r.shape[o],l=new Array(c-1);let d=0;for(let g=0;g<c;g++)g!==o&&(l[d++]=i.shape[g]);const f=[],y=new Array(c).fill(0),m=i.shape.slice();m[o]=1;const h=new Array(a);for(let g=0;g<h.length;g++){y[o]=g;const x=slice({inputs:{x:i},backend:t,attrs:{begin:y,size:m}}),w=reshape({inputs:{x},backend:t,attrs:{shape:l}});h[g]=w,f.push(x)}return f.forEach(g=>t.disposeIntermediateTensorInfo(g)),h}const unpackConfig={kernelName:Unpack,backendName:"webgl",kernelFunc:unpack};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SegmentOpProgram{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,o=e.inSize,i=e.numSegments,c=i*Math.ceil(o/s);this.outputShape=[r,c];const a="0.0",l="sumValue",d=Math.floor(s/4)*4,f=s%4,y=`
        sumValue += dot(values, segFilter);
    `;let m="";o%s>0&&(m=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let h="";o%s>0&&(h=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${a};

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${d}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${y}
        }

        int inIdx = inOffset + ${d};
        if (${f===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${y}
        } else if (${f===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${y}
        } else if (${f===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${y}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unsortedSegmentSum(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:i}=s,c=r.shape.length,a=[];let l=0;const d=getAxesPermutation([l],c);let f=r;d!=null&&(f=transpose({inputs:{x:r},backend:t,attrs:{perm:d}}),a.push(f),l=getInnerMostAxes(1,c)[0]);const y=computeOutShape(f.shape,l,i),m=sizeFromShape([f.shape[l]]),h=reshape({inputs:{x:f},backend:t,attrs:{shape:[-1,m]}});a.push(h);const g=sumOutType(r.dtype),x=(A,T,P,O,F)=>{const G=A.shape[0],U=A.shape[1],Q=segOpComputeOptimalWindowSize(U,F),ne={windowSize:Q,inSize:U,batchSize:G,numSegments:F},J=new SegmentOpProgram(ne,T),oe=t.compileAndRun(J,[A,P],O);if(a.push(oe),oe.shape[1]===F)return oe;const le=range({backend:t,attrs:{start:0,stop:F,step:1,dtype:"float32"}}),ge=tile({inputs:{x:le},backend:t,attrs:{reps:[U/Q]}});return a.push(le),a.push(ge),x(oe,T,ge,O,F)},w=x(h,"unsortedSegmentSum",o,g,i),I=reshape({inputs:{x:w},backend:t,attrs:{shape:y}});let N=I;if(d!=null){a.push(I);const A=getUndoAxesPermutation(d);N=transpose({inputs:{x:N},backend:t,attrs:{perm:A}})}return a.forEach(A=>t.disposeIntermediateTensorInfo(A)),N}const unsortedSegmentSumConfig={kernelName:UnsortedSegmentSum,backendName:"webgl",kernelFunc:unsortedSegmentSum};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kernelConfigs=[LRNConfig,LRNGradConfig,_fusedMatMulConfig,absConfig,acosConfig,acoshConfig,addConfig,addNConfig,allConfig,anyConfig,argMaxConfig,argMinConfig,asinConfig,asinhConfig,atan2Config,atanConfig,atanhConfig,avgPool3DConfig,avgPoolConfig,avgPoolGrad3DConfig,avgPoolGradConfig,batchMatMulConfig,batchNormConfig,batchToSpaceNDConfig,bincountConfig,castConfig,ceilConfig,clipByValueConfig,complexAbsConfig,complexConfig,concatConfig,conv2DBackpropFilterConfig,conv2DBackpropInputConfig,conv2DConfig,conv3DBackpropFilterV2Config,conv3DBackpropInputConfig,conv3DConfig,cosConfig,coshConfig,cropAndResizeConfig,cumsumConfig,denseBincountConfig,depthToSpaceConfig,depthwiseConv2dNativeBackpropFilterConfig,depthwiseConv2dNativeBackpropInputConfig,depthwiseConv2dNativeConfig,diagConfig,dilation2DConfig,eluConfig,eluGradConfig,equalConfig,erfConfig,expConfig,expandDimsConfig,expm1Config,fftConfig,fillConfig,flipLeftRightConfig,floorConfig,floorDivConfig,fromPixelsConfig,fusedConv2DConfig,fusedDepthwiseConv2DConfig,gatherNdConfig,gatherV2Config,greaterConfig,greaterEqualConfig,identityConfig,ifftConfig,imagConfig,isFiniteConfig,isInfConfig,isNaNConfig,leakyReluConfig,lessConfig,lessEqualConfig,linSpaceConfig,log1pConfig,logConfig,logicalAndConfig,logicalNotConfig,logicalOrConfig,maxConfig,maxPool3DConfig,maxPoolConfig,maxPoolGrad3DConfig,maxPoolGradConfig,maxPoolWithArgmaxConfig,maximumConfig,meanConfig,minConfig,minimumConfig,mirrorPadConfig,modConfig,multinomialConfig,multiplyConfig,negConfig,nonMaxSuppressionV3Config,nonMaxSuppressionV4Config,nonMaxSuppressionV5Config,notEqualConfig,oneHotConfig,onesLikeConfig,packConfig,padV2Config,powConfig,preluConfig,prodConfig,rangeConfig,realConfig,realDivConfig,reciprocalConfig,relu6Config,reluConfig,reshapeConfig,resizeBilinearConfig,resizeBilinearGradConfig,resizeNearestNeighborConfig,resizeNearestNeighborGradConfig,reverseConfig,rotateWithOffsetConfig,roundConfig,rsqrtConfig,scatterNdConfig,selectConfig,seluConfig,sigmoidConfig,signConfig,sinConfig,sinhConfig,sliceConfig,softmaxConfig,softplusConfig,spaceToBatchNDConfig,sparseToDenseConfig,splitVConfig,sqrtConfig,squareConfig,squaredDifferenceConfig,stepConfig,stridedSliceConfig,subConfig,sumConfig,tanConfig,tanhConfig,tileConfig,topKConfig,transposeConfig,uniqueConfig,unpackConfig,unsortedSegmentSumConfig,zerosLikeConfig];for(const n of kernelConfigs)registerKernel(n);/** @license See the LICENSE file. */const version$1="2.8.6";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const version={"tfjs-core":version$7,"tfjs-backend-cpu":version$3,"tfjs-backend-webgl":version$2,"tfjs-data":version$4,"tfjs-layers":version$6,"tfjs-converter":version$5,tfjs:version$1},dist=Object.freeze(Object.defineProperty({__proto__:null,Abs,Acos,Acosh,AdadeltaOptimizer,AdagradOptimizer,AdamOptimizer,AdamaxOptimizer,Add:Add$1,AddN,All,Any,ArgMax,ArgMin,Asin,Asinh,Atan,Atan2,Atanh,AvgPool,AvgPool3D,AvgPool3DGrad,AvgPoolGrad,BatchMatMul,BatchToSpaceND,Bincount,BroadcastTo,Callback,CallbackList,Cast,Ceil,ClipByValue,Complex,ComplexAbs,Concat,Conv2D:Conv2D$1,Conv2DBackpropFilter,Conv2DBackpropInput,Conv3D:Conv3D$1,Conv3DBackpropFilterV2,Conv3DBackpropInputV2,Cos,Cosh,CropAndResize,Cumsum,CustomCallback,DataStorage,DenseBincount,DepthToSpace,DepthwiseConv2dNative,DepthwiseConv2dNativeBackpropFilter,DepthwiseConv2dNativeBackpropInput,Diag,Dilation2D,Dilation2DBackpropFilter,Dilation2DBackpropInput,get ENV(){return ENV$2},EarlyStopping,Elu:Elu$1,EluGrad,Environment,Equal,Erf,Exp,ExpandDims,Expm1,FFT,Fill,FlipLeftRight,Floor,FloorDiv,FromPixels,FusedBatchNorm,FusedConv2D,FusedDepthwiseConv2D,GatherNd,GatherV2,GraphModel,Greater,GreaterEqual,History,IFFT,Identity:Identity$1,Imag,InputSpec,IsFinite,IsInf,IsNan,KernelBackend,LRN,LRNGrad,LayerVariable,LayersModel,LeakyRelu,Less,LessEqual,LinSpace,Log,Log1p,LogSoftmax:LogSoftmax$1,LogicalAnd,LogicalNot,LogicalOr,Max,MaxPool,MaxPool3D,MaxPool3DGrad,MaxPoolGrad,MaxPoolWithArgmax,Maximum:Maximum$1,Mean,Min,Minimum:Minimum$1,MirrorPad,Mod,MomentumOptimizer,Multinomial,Multiply:Multiply$1,Neg,NonMaxSuppressionV3,NonMaxSuppressionV4,NonMaxSuppressionV5,NotEqual,OP_SCOPE_SUFFIX,OneHot,OnesLike,Optimizer,Pack,PadV2,Pool,Pow,Prelu,Prod,RMSPropOptimizer,RNN,Range,get Rank(){return Rank},Real,RealDiv,Reciprocal,get Reduction(){return Reduction},Relu:Relu$1,Relu6:Relu6$1,Reshape:Reshape$1,ResizeBilinear,ResizeBilinearGrad,ResizeNearestNeighbor,ResizeNearestNeighborGrad,Reverse,RotateWithOffset,Round,Rsqrt,SGDOptimizer,ScatterNd,Select,Selu:Selu$1,Sequential,Sigmoid:Sigmoid$1,Sign,Sin,Sinh,Slice,Softmax:Softmax$2,Softplus:Softplus$1,SpaceToBatchND,SparseToDense,SplitV,Sqrt,Square,SquaredDifference,Step,StridedSlice,Sub,Sum,SymbolicTensor,Tan,Tanh:Tanh$1,Tensor,TensorBuffer,Tile,TopK,Transpose,Unique,Unpack,UnsortedSegmentSum,Variable,ZerosLike,_FusedMatMul,abs:abs$2,acos:acos$2,acosh:acosh$2,add:add$2,addN:addN$2,addStrict,all:all$2,any:any$2,argMax:argMax$2,argMin:argMin$2,asin:asin$2,asinh:asinh$2,atan:atan$2,atan2:atan2$2,atanh:atanh$2,avgPool:avgPool$2,avgPool3d:avgPool3d$1,backend,backend_util,basicLSTMCell,batchNorm:batchNorm$2,batchNorm2d,batchNorm3d,batchNorm4d,batchToSpaceND:batchToSpaceND$2,bincount:bincount$2,booleanMaskAsync,broadcastTo,browser,buffer,callbacks,cast:cast$3,ceil:ceil$2,clipByValue:clipByValue$1,clone,complex:complex$2,concat:concat$2,concat1d,concat2d,concat3d,concat4d,constraints:exports_constraints,conv1d:conv1d$1,conv2d:conv2d$3,conv2dTranspose:conv2dTranspose$1,conv3d:conv3d$1,conv3dTranspose,copyRegisteredKernels,cos:cos$2,cosh:cosh$2,cosineWindow,cumsum:cumsum$2,customGrad,data:index,denseBincount:denseBincount$2,deprecationWarn,depthToSpace:depthToSpace$2,depthwiseConv2d:depthwiseConv2d$3,deregisterOp,device_util,diag:diag$2,dilation2d,disableDeprecationWarnings,dispose,disposeVariables,div:div$1,divNoNan,divStrict,dot:dot$2,dropout:dropout$2,elu:elu$4,enableDebugMode,enableProdMode,enclosingPowerOfTwo,engine,env,equal:equal$2,equalStrict,erf:erf$2,exp:exp$2,expandDims:expandDims$3,expm1:expm1$2,eye,fft:fft$2,fill:fill$2,findBackend,findBackendFactory,floor:floor$2,floorDiv:floorDiv$2,fused:fused_ops,gather:gather$1,gatherND,gather_util:gather_nd_util,getBackend,getGradient,getKernel,getKernelsForBackend,grad,grads,greater:greater$3,greaterEqual:greaterEqual$2,greaterEqualStrict,greaterStrict,ifft:ifft$2,imag:imag$2,image:image$1,inTopKAsync,initializers:exports_initializers,input,io,irfft,isFinite:isFinite$3,isInf:isInf$2,isNaN:isNaN$3,keep,kernel_impls,layers:exports_layers,leakyRelu:leakyRelu$2,less:less$3,lessEqual:lessEqual$2,lessEqualStrict,lessStrict,linalg,linspace,loadGraphModel,loadLayersModel,localResponseNormalization,log:log$3,log1p:log1p$2,logSigmoid,logSoftmax,logSumExp,logicalAnd:logicalAnd$2,logicalNot:logicalNot$2,logicalOr:logicalOr$2,logicalXor,losses,matMul:matMul$1,math,max:max$3,maxPool:maxPool$2,maxPool3d:maxPool3d$1,maxPoolWithArgmax,maximum:maximum$3,maximumStrict,mean:mean$1,memory,metrics:exports_metrics,min:min$3,minimum:minimum$3,minimumStrict,mirrorPad:mirrorPad$1,mod:mod$2,modStrict,model,models:exports_models,moments,movingAverage,mul,mulStrict,multiRNNCell,multinomial:multinomial$2,neg:neg$2,nextFrame,norm,notEqual:notEqual$2,notEqualStrict,oneHot:oneHot$2,ones:ones$1,onesLike:onesLike$2,op,outerProduct,pad,pad1d,pad2d,pad3d,pad4d,pool:pool$1,pow:pow$2,powStrict,prelu:prelu$3,print,prod:prod$2,profile,rand,randomGamma,randomNormal:randomNormal$2,randomUniform:randomUniform$1,range:range$3,ready,real:real$2,reciprocal:reciprocal$2,registerBackend,registerCallbackConstructor,registerGradient,registerKernel,registerOp,regularizers:exports_regularizers,relu:relu$2,relu6:relu6$2,removeBackend,reshape:reshape$3,reverse:reverse$2,reverse1d,reverse2d,reverse3d,reverse4d,rfft,round:round$2,rsqrt:rsqrt$2,scalar,scatterND,scatter_util:scatter_nd_util,selu:selu$2,separableConv2d:separableConv2d$1,sequential,serialization,setBackend,setPlatform,setdiff1dAsync,sigmoid:sigmoid$2,sign:sign$2,signal,sin:sin$2,sinh:sinh$2,slice:slice$2,slice1d,slice2d,slice3d,slice4d,slice_util,softmax:softmax$3,softplus:softplus$2,spaceToBatchND:spaceToBatchND$2,sparseToDense:sparseToDense$2,spectral:spectral$1,split:split$1,sqrt:sqrt$2,square:square$2,squaredDifference:squaredDifference$2,squaredDifferenceStrict,squeeze,stack,step:step$2,stridedSlice:stridedSlice$2,sub:sub$2,subStrict,sum:sum$2,sumOutType,tan:tan$2,tanh:tanh$2,tensor,tensor1d,tensor2d,tensor3d,tensor4d,tensor5d,tensor6d,tensor_util,test_util,tidy,tile:tile$3,time,topk,train,transpose:transpose$2,truncatedNormal:truncatedNormal$1,unique:unique$3,unregisterGradient,unregisterKernel,unsortedSegmentSum:unsortedSegmentSum$2,unstack,upcastType,util,valueAndGrad,valueAndGrads,variable,variableGrads,version,version_converter:version$5,version_core:version$7,version_layers:version$6,where,whereAsync,zeros:zeros$2,zerosLike:zerosLike$2},Symbol.toStringTag,{value:"Module"})),require$$0=getAugmentedNamespace(dist);var Tone$1={exports:{}};/*! For license information please see Tone.js.LICENSE.txt */var Tone=Tone$1.exports,hasRequiredTone;function requireTone(){return hasRequiredTone||(hasRequiredTone=1,function(n,e){(function(t,s){n.exports=s()})(typeof self<"u"?self:Tone,()=>(()=>{var t={382:function(i,c,a){(function(l,d,f,y){var m=function(te,ce,ue){return{endTime:ce,insertTime:ue,type:"exponentialRampToValue",value:te}},h=function(te,ce,ue){return{endTime:ce,insertTime:ue,type:"linearRampToValue",value:te}},g=function(te,ce){return{startTime:ce,type:"setValue",value:te}},x=function(te,ce,ue){return{duration:ue,startTime:ce,type:"setValueCurve",values:te}},w=function(te,ce,ue){var Te=ue.startTime,Ce=ue.target,Ne=ue.timeConstant;return Ce+(ce-Ce)*Math.exp((Te-te)/Ne)},I=function(te){return te.type==="exponentialRampToValue"},N=function(te){return te.type==="linearRampToValue"},A=function(te){return I(te)||N(te)},T=function(te){return te.type==="setValue"},P=function(te){return te.type==="setValueCurve"},O=function te(ce,ue,Te,Ce){var Ne=ce[ue];return Ne===void 0?Ce:A(Ne)||T(Ne)?Ne.value:P(Ne)?Ne.values[Ne.values.length-1]:w(Te,te(ce,ue-1,Ne.startTime,Ce),Ne)},F=function(te,ce,ue,Te,Ce){return ue===void 0?[Te.insertTime,Ce]:A(ue)?[ue.endTime,ue.value]:T(ue)?[ue.startTime,ue.value]:P(ue)?[ue.startTime+ue.duration,ue.values[ue.values.length-1]]:[ue.startTime,O(te,ce-1,ue.startTime,Ce)]},G=function(te){return te.type==="cancelAndHold"},U=function(te){return te.type==="cancelScheduledValues"},Q=function(te){return G(te)||U(te)?te.cancelTime:I(te)||N(te)?te.endTime:te.startTime},ne=function(te,ce,ue,Te){var Ce=Te.endTime,Ne=Te.value;return ue===Ne?Ne:0<ue&&0<Ne||ue<0&&Ne<0?ue*Math.pow(Ne/ue,(te-ce)/(Ce-ce)):0},J=function(te,ce,ue,Te){return ue+(te-ce)/(Te.endTime-ce)*(Te.value-ue)},oe=function(te,ce){var ue=ce.duration,Te=ce.startTime,Ce=ce.values;return function(Ne,Re){var Ae=Math.floor(Re),we=Math.ceil(Re);return Ae===we?Ne[Ae]:(1-(Re-Ae))*Ne[Ae]+(1-(we-Re))*Ne[we]}(Ce,(te-Te)/ue*(Ce.length-1))},le=function(te){return te.type==="setTarget"},ge=function(){return y(function te(ce){f(this,te),this._automationEvents=[],this._currenTime=0,this._defaultValue=ce},[{key:Symbol.iterator,value:function(){return this._automationEvents[Symbol.iterator]()}},{key:"add",value:function(te){var ce=Q(te);if(G(te)||U(te)){var ue=this._automationEvents.findIndex(function(ze){return U(te)&&P(ze)?ze.startTime+ze.duration>=ce:Q(ze)>=ce}),Te=this._automationEvents[ue];if(ue!==-1&&(this._automationEvents=this._automationEvents.slice(0,ue)),G(te)){var Ce=this._automationEvents[this._automationEvents.length-1];if(Te!==void 0&&A(Te)){if(Ce!==void 0&&le(Ce))throw new Error("The internal list is malformed.");var Ne=Ce===void 0?Te.insertTime:P(Ce)?Ce.startTime+Ce.duration:Q(Ce),Re=Ce===void 0?this._defaultValue:P(Ce)?Ce.values[Ce.values.length-1]:Ce.value,Ae=I(Te)?ne(ce,Ne,Re,Te):J(ce,Ne,Re,Te),we=I(Te)?m(Ae,ce,this._currenTime):h(Ae,ce,this._currenTime);this._automationEvents.push(we)}if(Ce!==void 0&&le(Ce)&&this._automationEvents.push(g(this.getValue(ce),ce)),Ce!==void 0&&P(Ce)&&Ce.startTime+Ce.duration>ce){var Le=ce-Ce.startTime,pe=(Ce.values.length-1)/Ce.duration,B=Math.max(2,1+Math.ceil(Le*pe)),D=Le/(B-1)*pe,H=Ce.values.slice(0,B);if(D<1)for(var he=1;he<B;he+=1){var j=D*he%1;H[he]=Ce.values[he-1]*(1-j)+Ce.values[he]*j}this._automationEvents[this._automationEvents.length-1]=x(H,Ce.startTime,Le)}}}else{var ee=this._automationEvents.findIndex(function(ze){return Q(ze)>ce}),ye=ee===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[ee-1];if(ye!==void 0&&P(ye)&&Q(ye)+ye.duration>ce)return!1;var Oe=I(te)?m(te.value,te.endTime,this._currenTime):N(te)?h(te.value,ce,this._currenTime):te;if(ee===-1)this._automationEvents.push(Oe);else{if(P(te)&&ce+te.duration>Q(this._automationEvents[ee]))return!1;this._automationEvents.splice(ee,0,Oe)}}return!0}},{key:"flush",value:function(te){var ce=this._automationEvents.findIndex(function(Ce){return Q(Ce)>te});if(ce>1){var ue=this._automationEvents.slice(ce-1),Te=ue[0];le(Te)&&ue.unshift(g(O(this._automationEvents,ce-2,Te.startTime,this._defaultValue),Te.startTime)),this._automationEvents=ue}}},{key:"getValue",value:function(te){if(this._automationEvents.length===0)return this._defaultValue;var ce=this._automationEvents.findIndex(function(H){return Q(H)>te}),ue=this._automationEvents[ce],Te=(ce===-1?this._automationEvents.length:ce)-1,Ce=this._automationEvents[Te];if(Ce!==void 0&&le(Ce)&&(ue===void 0||!A(ue)||ue.insertTime>te))return w(te,O(this._automationEvents,Te-1,Ce.startTime,this._defaultValue),Ce);if(Ce!==void 0&&T(Ce)&&(ue===void 0||!A(ue)))return Ce.value;if(Ce!==void 0&&P(Ce)&&(ue===void 0||!A(ue)||Ce.startTime+Ce.duration>te))return te<Ce.startTime+Ce.duration?oe(te,Ce):Ce.values[Ce.values.length-1];if(Ce!==void 0&&A(Ce)&&(ue===void 0||!A(ue)))return Ce.value;if(ue!==void 0&&I(ue)){var Ne=F(this._automationEvents,Te,Ce,ue,this._defaultValue),Re=d(Ne,2),Ae=Re[0],we=Re[1];return ne(te,Ae,we,ue)}if(ue!==void 0&&N(ue)){var Le=F(this._automationEvents,Te,Ce,ue,this._defaultValue),pe=d(Le,2),B=pe[0],D=pe[1];return J(te,B,D,ue)}return this._defaultValue}}])}();l.AutomationEventList=ge,l.createCancelAndHoldAutomationEvent=function(te){return{cancelTime:te,type:"cancelAndHold"}},l.createCancelScheduledValuesAutomationEvent=function(te){return{cancelTime:te,type:"cancelScheduledValues"}},l.createExponentialRampToValueAutomationEvent=function(te,ce){return{endTime:ce,type:"exponentialRampToValue",value:te}},l.createLinearRampToValueAutomationEvent=function(te,ce){return{endTime:ce,type:"linearRampToValue",value:te}},l.createSetTargetAutomationEvent=function(te,ce,ue){return{startTime:ce,target:te,timeConstant:ue,type:"setTarget"}},l.createSetValueAutomationEvent=g,l.createSetValueCurveAutomationEvent=x})(c,a(424),a(690),a(728))},897:i=>{i.exports=function(c,a){(a==null||a>c.length)&&(a=c.length);for(var l=0,d=new Array(a);l<a;l++)d[l]=c[l];return d},i.exports.__esModule=!0,i.exports.default=i.exports},372:i=>{i.exports=function(c){if(Array.isArray(c))return c},i.exports.__esModule=!0,i.exports.default=i.exports},690:i=>{i.exports=function(c,a){if(!(c instanceof a))throw new TypeError("Cannot call a class as a function")},i.exports.__esModule=!0,i.exports.default=i.exports},728:(i,c,a)=>{var l=a(62);function d(f,y){for(var m=0;m<y.length;m++){var h=y[m];h.enumerable=h.enumerable||!1,h.configurable=!0,"value"in h&&(h.writable=!0),Object.defineProperty(f,l(h.key),h)}}i.exports=function(f,y,m){return y&&d(f.prototype,y),m&&d(f,m),Object.defineProperty(f,"prototype",{writable:!1}),f},i.exports.__esModule=!0,i.exports.default=i.exports},872:i=>{i.exports=function(c,a){var l=c==null?null:typeof Symbol<"u"&&c[Symbol.iterator]||c["@@iterator"];if(l!=null){var d,f,y,m,h=[],g=!0,x=!1;try{if(y=(l=l.call(c)).next,a===0){if(Object(l)!==l)return;g=!1}else for(;!(g=(d=y.call(l)).done)&&(h.push(d.value),h.length!==a);g=!0);}catch(w){x=!0,f=w}finally{try{if(!g&&l.return!=null&&(m=l.return(),Object(m)!==m))return}finally{if(x)throw f}}return h}},i.exports.__esModule=!0,i.exports.default=i.exports},218:i=>{i.exports=function(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)},i.exports.__esModule=!0,i.exports.default=i.exports},424:(i,c,a)=>{var l=a(372),d=a(872),f=a(116),y=a(218);i.exports=function(m,h){return l(m)||d(m,h)||f(m,h)||y()},i.exports.__esModule=!0,i.exports.default=i.exports},36:(i,c,a)=>{var l=a(698).default;i.exports=function(d,f){if(l(d)!="object"||!d)return d;var y=d[Symbol.toPrimitive];if(y!==void 0){var m=y.call(d,f||"default");if(l(m)!="object")return m;throw new TypeError("@@toPrimitive must return a primitive value.")}return(f==="string"?String:Number)(d)},i.exports.__esModule=!0,i.exports.default=i.exports},62:(i,c,a)=>{var l=a(698).default,d=a(36);i.exports=function(f){var y=d(f,"string");return l(y)=="symbol"?y:y+""},i.exports.__esModule=!0,i.exports.default=i.exports},698:i=>{function c(a){return i.exports=c=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(l){return typeof l}:function(l){return l&&typeof Symbol=="function"&&l.constructor===Symbol&&l!==Symbol.prototype?"symbol":typeof l},i.exports.__esModule=!0,i.exports.default=i.exports,c(a)}i.exports=c,i.exports.__esModule=!0,i.exports.default=i.exports},116:(i,c,a)=>{var l=a(897);i.exports=function(d,f){if(d){if(typeof d=="string")return l(d,f);var y=Object.prototype.toString.call(d).slice(8,-1);return y==="Object"&&d.constructor&&(y=d.constructor.name),y==="Map"||y==="Set"?Array.from(d):y==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(y)?l(d,f):void 0}},i.exports.__esModule=!0,i.exports.default=i.exports}},s={};function r(i){var c=s[i];if(c!==void 0)return c.exports;var a=s[i]={exports:{}};return t[i].call(a.exports,a,a.exports,r),a.exports}r.d=(i,c)=>{for(var a in c)r.o(c,a)&&!r.o(i,a)&&Object.defineProperty(i,a,{enumerable:!0,get:c[a]})},r.o=(i,c)=>Object.prototype.hasOwnProperty.call(i,c),r.r=i=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(i,"__esModule",{value:!0})};var o={};return(()=>{r.r(o),r.d(o,{AMOscillator:()=>ea,AMSynth:()=>nu,Abs:()=>lu,Add:()=>$i,AmplitudeEnvelope:()=>ki,Analyser:()=>Gs,AudioToGain:()=>fc,AutoFilter:()=>C,AutoPanner:()=>k,AutoWah:()=>q,BaseContext:()=>Ea,BiquadFilter:()=>sa,BitCrusher:()=>se,Buffer:()=>Xu,BufferSource:()=>Qu,Buffers:()=>Yu,Channel:()=>ar,Chebyshev:()=>$e,Chorus:()=>$t,Clock:()=>Js,Compressor:()=>er,Context:()=>Mo,Convolver:()=>pa,CrossFade:()=>Ei,DCMeter:()=>lo,Delay:()=>Bs,Destination:()=>Bu,Distortion:()=>Et,Draw:()=>Gu,DuoSynth:()=>xc,EQ3:()=>da,Emitter:()=>Fo,Envelope:()=>js,FFT:()=>pr,FMOscillator:()=>Si,FMSynth:()=>vc,FatOscillator:()=>ta,FeedbackCombFilter:()=>ia,FeedbackDelay:()=>mn,Filter:()=>Tr,Follower:()=>L,Freeverb:()=>Mn,Frequency:()=>St,FrequencyClass:()=>kt,FrequencyEnvelope:()=>ra,FrequencyShifter:()=>gn,Gain:()=>Ut,GainToAudio:()=>hu,Gate:()=>si,GrainPlayer:()=>gc,GreaterThan:()=>Ra,GreaterThanZero:()=>yc,IntervalTimeline:()=>au,JCReverb:()=>is,LFO:()=>or,Limiter:()=>Oi,Listener:()=>ju,Loop:()=>la,LowpassCombFilter:()=>ca,Master:()=>Vu,MembraneSynth:()=>oa,Merge:()=>Ke,MetalSynth:()=>wc,Meter:()=>ir,MidSideCompressor:()=>_c,MidSideMerge:()=>Wr,MidSideSplit:()=>Rs,Midi:()=>xu,MidiClass:()=>Qi,Mono:()=>Hr,MonoSynth:()=>ni,MultibandCompressor:()=>Ic,MultibandSplit:()=>Kr,Multiply:()=>cs,Negate:()=>tu,Noise:()=>co,NoiseSynth:()=>Sc,Offline:()=>Qc,OfflineContext:()=>E,OmniOscillator:()=>To,OnePoleFilter:()=>aa,Oscillator:()=>as,PWMOscillator:()=>Ci,PanVol:()=>ho,Panner:()=>$,Panner3D:()=>Ai,Param:()=>Vt,Part:()=>ha,Pattern:()=>Cc,Phaser:()=>Os,PingPongDelay:()=>Cr,PitchShift:()=>fs,Player:()=>_i,Players:()=>mc,PluckSynth:()=>Pa,PolySynth:()=>Tc,Pow:()=>xi,PulseOscillator:()=>Ti,Recorder:()=>Io,Reverb:()=>uo,Sampler:()=>ua,Scale:()=>Co,ScaleExp:()=>Da,Sequence:()=>$c,Signal:()=>Xt,Solo:()=>Yn,Split:()=>Fe,StateTimeline:()=>dn,StereoWidener:()=>Pr,Subtract:()=>Ii,SyncedSignal:()=>Su,Synth:()=>Vo,Ticks:()=>vu,TicksClass:()=>ds,Time:()=>mt,TimeClass:()=>Ue,Timeline:()=>Cn,ToneAudioBuffer:()=>v,ToneAudioBuffers:()=>Yi,ToneAudioNode:()=>vt,ToneBufferSource:()=>zo,ToneEvent:()=>Ur,ToneOscillatorNode:()=>Zi,Transport:()=>Lu,TransportTime:()=>Wt,TransportTimeClass:()=>at,Tremolo:()=>$r,Unit:()=>c,UserMedia:()=>Ji,Vibrato:()=>Fr,Volume:()=>wo,WaveShaper:()=>Rr,Waveform:()=>_o,Zero:()=>Oa,connect:()=>bn,connectSeries:()=>fn,connectSignal:()=>gs,context:()=>Hu,dbToGain:()=>ie,debug:()=>i,defaultArg:()=>wr,disconnect:()=>Xn,fanIn:()=>sr,ftom:()=>ke,gainToDb:()=>fe,getContext:()=>W,getDestination:()=>qu,getDraw:()=>Wu,getListener:()=>Uu,getTransport:()=>zu,immediate:()=>Mu,intervalToFrequencyRatio:()=>Se,isArray:()=>As,isBoolean:()=>mi,isDefined:()=>wn,isFunction:()=>ac,isNote:()=>gi,isNumber:()=>Ns,isObject:()=>oo,isString:()=>Nr,isUndef:()=>nr,loaded:()=>Ku,mtof:()=>Ve,now:()=>iu,optionsFromArguments:()=>We,setContext:()=>K,start:()=>re,supported:()=>Hc,version:()=>a});var i={};r.r(i),r.d(i,{assert:()=>en,assertContextRunning:()=>$a,assertRange:()=>Ls,assertUsedScheduleTime:()=>lc,enterScheduledCallback:()=>_a,log:()=>hc,setLogger:()=>Kc,warn:()=>ei});var c={};r.r(c);const a="14.9.17";var l=r(382);const d=new WeakSet,f=new WeakMap,y=new WeakMap,m=new WeakMap,h=new WeakMap,g=new WeakMap,x=new WeakMap,w=new WeakMap,I=new WeakMap,N=new WeakMap,A={construct:()=>A},T=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,P=(z,u)=>{const b=[];let _=z.replace(/^[\s]+/,""),M=_.match(T);for(;M!==null;){const Y=M[1].slice(1,-1),ae=M[0].replace(/([\s]+)?;?$/,"").replace(Y,new URL(Y,u).toString());b.push(ae),_=_.slice(M[0].length).replace(/^[\s]+/,""),M=_.match(T)}return[b.join(";"),_]},O=z=>{if(z!==void 0&&!Array.isArray(z))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},F=z=>{if(!(u=>{try{new new Proxy(u,A)}catch{return!1}return!0})(z))throw new TypeError("The given value for processorCtor should be a constructor.");if(z.prototype===null||typeof z.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},G=(z,u)=>{const b=z.get(u);if(b===void 0)throw new Error("A value with the given key could not be found.");return b},U=(z,u)=>{const b=Array.from(z).filter(u);if(b.length>1)throw Error("More than one element was found.");if(b.length===0)throw Error("No element was found.");const[_]=b;return z.delete(_),_},Q=(z,u,b,_)=>{const M=G(z,u),Y=U(M,ae=>ae[0]===b&&ae[1]===_);return M.size===0&&z.delete(u),Y},ne=z=>G(x,z),J=z=>{if(d.has(z))throw new Error("The AudioNode is already stored.");d.add(z),ne(z).forEach(u=>u(!0))},oe=z=>"port"in z,le=z=>{if(!d.has(z))throw new Error("The AudioNode is not stored.");d.delete(z),ne(z).forEach(u=>u(!1))},ge=(z,u)=>{!oe(z)&&u.every(b=>b.size===0)&&le(z)},te={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},ce=(z,u)=>z.context===u,ue=z=>{try{z.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},Te=()=>new DOMException("","IndexSizeError"),Ce=z=>{var u;z.getChannelData=(u=z.getChannelData,b=>{try{return u.call(z,b)}catch(_){throw _.code===12?Te():_}})},Ne={numberOfChannels:1},Re=-34028234663852886e22,Ae=34028234663852886e22,we=z=>d.has(z),Le={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},pe=z=>G(f,z),B=z=>G(m,z),D=(z,u)=>{const{activeInputs:b}=pe(z);b.forEach(M=>M.forEach(([Y])=>{u.includes(z)||D(Y,[...u,z])}));const _=(M=>"playbackRate"in M)(z)?[z.playbackRate]:oe(z)?Array.from(z.parameters.values()):(M=>"frequency"in M&&"gain"in M)(z)?[z.Q,z.detune,z.frequency,z.gain]:(M=>"offset"in M)(z)?[z.offset]:(M=>!("frequency"in M)&&"gain"in M)(z)?[z.gain]:(M=>"detune"in M&&"frequency"in M)(z)?[z.detune,z.frequency]:(M=>"pan"in M)(z)?[z.pan]:[];for(const M of _){const Y=B(M);Y!==void 0&&Y.activeInputs.forEach(([ae])=>D(ae,u))}we(z)&&le(z)},H=z=>{D(z.destination,[])},he=z=>"context"in z,j=z=>he(z[0]),ee=(z,u,b,_)=>{for(const M of z)if(b(M)){if(_)return!1;throw Error("The set contains at least one similar element.")}return z.add(u),!0},ye=(z,u,[b,_],M)=>{ee(z,[u,b,_],Y=>Y[0]===u&&Y[1]===b,M)},Oe=(z,[u,b,_],M)=>{const Y=z.get(u);Y===void 0?z.set(u,new Set([[b,_]])):ee(Y,[b,_],ae=>ae[0]===b,M)},ze=z=>"inputs"in z,Xe=(z,u,b,_)=>{if(ze(u)){const M=u.inputs[_];return z.connect(M,b,0),[M,b,0]}return z.connect(u,b,_),[u,b,_]},ot=(z,u,b)=>{for(const _ of z)if(_[0]===u&&_[1]===b)return z.delete(_),_;return null},st=(z,u)=>{if(!ne(z).delete(u))throw new Error("Missing the expected event listener.")},pt=(z,u,b)=>{const _=G(z,u),M=U(_,Y=>Y[0]===b);return _.size===0&&z.delete(u),M},gt=(z,u,b,_)=>{ze(u)?z.disconnect(u.inputs[_],b,0):z.disconnect(u,b,_)},ht=z=>G(y,z),Tt=z=>G(h,z),xt=z=>w.has(z),Pt=z=>!d.has(z),tn=(z,u)=>new Promise(b=>{if(u!==null)b(!0);else{const _=z.createScriptProcessor(256,1,1),M=z.createGain(),Y=z.createBuffer(1,2,44100),ae=Y.getChannelData(0);ae[0]=1,ae[1]=1;const de=z.createBufferSource();de.buffer=Y,de.loop=!0,de.connect(_).connect(z.destination),de.connect(M),de.disconnect(M),_.onaudioprocess=xe=>{const ve=xe.inputBuffer.getChannelData(0);Array.prototype.some.call(ve,_e=>_e===1)?b(!0):b(!1),de.stop(),_.onaudioprocess=null,de.disconnect(_),_.disconnect(z.destination)},de.start()}}),ln=(z,u)=>{const b=new Map;for(const _ of z)for(const M of _){const Y=b.get(M);b.set(M,Y===void 0?1:Y+1)}b.forEach((_,M)=>u(M,_))},on=z=>"context"in z,An=z=>{const u=new Map;z.connect=(b=>(_,M=0,Y=0)=>{const ae=on(_)?b(_,M,Y):b(_,M),de=u.get(_);return de===void 0?u.set(_,[{input:Y,output:M}]):de.every(xe=>xe.input!==Y||xe.output!==M)&&de.push({input:Y,output:M}),ae})(z.connect.bind(z)),z.disconnect=(b=>(_,M,Y)=>{if(b.apply(z),_===void 0)u.clear();else if(typeof _=="number")for(const[ae,de]of u){const xe=de.filter(ve=>ve.output!==_);xe.length===0?u.delete(ae):u.set(ae,xe)}else if(u.has(_))if(M===void 0)u.delete(_);else{const ae=u.get(_);if(ae!==void 0){const de=ae.filter(xe=>xe.output!==M&&(xe.input!==Y||Y===void 0));de.length===0?u.delete(_):u.set(_,de)}}for(const[ae,de]of u)de.forEach(xe=>{on(ae)?z.connect(ae,xe.output,xe.input):z.connect(ae,xe.output)})})(z.disconnect)},zn=(z,u,b,_,M)=>{const[Y,ae]=((de,xe,ve,_e)=>{const{activeInputs:Ee,passiveInputs:qe}=pe(xe),je=ot(Ee[_e],de,ve);return je===null?[Q(qe,de,ve,_e)[2],!1]:[je[2],!0]})(z,b,_,M);if(Y!==null&&(st(z,Y),!ae||u||xt(z)||gt(ht(z),ht(b),_,M)),we(b)){const{activeInputs:de}=pe(b);ge(b,de)}},Kn=(z,u,b,_)=>{const[M,Y]=((ae,de,xe)=>{const{activeInputs:ve,passiveInputs:_e}=B(de),Ee=ot(ve,ae,xe);return Ee===null?[pt(_e,ae,xe)[1],!1]:[Ee[2],!0]})(z,b,_);M!==null&&(st(z,M),!Y||u||xt(z)||ht(z).disconnect(Tt(b),_))};class Qn{constructor(u){this._map=new Map(u)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(u,b=null){return this._map.forEach((_,M)=>u.call(b,_,M,this))}get(u){return this._map.get(u)}has(u){return this._map.has(u)}keys(){return this._map.keys()}values(){return this._map.values()}}const $s={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}};function Ps(z,u,b,_,M){if(typeof z.copyFromChannel=="function")u[b].byteLength===0&&(u[b]=new Float32Array(128)),z.copyFromChannel(u[b],_,M);else{const Y=z.getChannelData(_);if(u[b].byteLength===0)u[b]=Y.slice(M,M+128);else{const ae=new Float32Array(Y.buffer,M*Float32Array.BYTES_PER_ELEMENT,128);u[b].set(ae)}}}const Bn=(z,u,b,_,M)=>{typeof z.copyToChannel=="function"?u[b].byteLength!==0&&z.copyToChannel(u[b],_,M):u[b].byteLength!==0&&z.getChannelData(_).set(u[b],M)},Rn=(z,u)=>{const b=[];for(let _=0;_<z;_+=1){const M=[],Y=typeof u=="number"?u:u[_];for(let ae=0;ae<Y;ae+=1)M.push(new Float32Array(128));b.push(M)}return b},gr=async(z,u,b,_,M,Y,ae)=>{const de=u===null?128*Math.ceil(z.context.length/128):u.length,xe=_.channelCount*_.numberOfInputs,ve=M.reduce((He,ct)=>He+ct,0),_e=ve===0?null:b.createBuffer(ve,de,b.sampleRate);if(Y===void 0)throw new Error("Missing the processor constructor.");const Ee=pe(z),qe=await((He,ct)=>{const rt=G(N,He),Qe=ht(ct);return G(rt,Qe)})(b,z),je=Rn(_.numberOfInputs,_.channelCount),et=Rn(_.numberOfOutputs,M),Je=Array.from(z.parameters.keys()).reduce((He,ct)=>({...He,[ct]:new Float32Array(128)}),{});for(let He=0;He<de;He+=128){if(_.numberOfInputs>0&&u!==null)for(let ct=0;ct<_.numberOfInputs;ct+=1)for(let rt=0;rt<_.channelCount;rt+=1)Ps(u,je[ct],rt,rt,He);Y.parameterDescriptors!==void 0&&u!==null&&Y.parameterDescriptors.forEach(({name:ct},rt)=>{Ps(u,Je,ct,xe+rt,He)});for(let ct=0;ct<_.numberOfInputs;ct+=1)for(let rt=0;rt<M[ct];rt+=1)et[ct][rt].byteLength===0&&(et[ct][rt]=new Float32Array(128));try{const ct=je.map((Qe,It)=>Ee.activeInputs[It].size===0?[]:Qe),rt=ae(He/b.sampleRate,b.sampleRate,()=>qe.process(ct,et,Je));if(_e!==null)for(let Qe=0,It=0;Qe<_.numberOfOutputs;Qe+=1){for(let At=0;At<M[Qe];At+=1)Bn(_e,et[Qe],At,It+At,He);It+=M[Qe]}if(!rt)break}catch(ct){z.dispatchEvent(new ErrorEvent("processorerror",{colno:ct.colno,filename:ct.filename,lineno:ct.lineno,message:ct.message}));break}}return _e},qs={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},yr={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},Mr={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},ts={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},Gn={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},_r=z=>{const{port1:u,port2:b}=new MessageChannel;return new Promise(_=>{const M=()=>{b.onmessage=null,u.close(),b.close(),_()};b.onmessage=()=>M();try{u.postMessage(z,[z])}catch{}finally{M()}})},Ws={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},cr=(z,u,b)=>{const _=u[b];if(_===void 0)throw z();return _},br={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},ft={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},Ze=()=>new DOMException("","InvalidStateError"),Ct=()=>new DOMException("","InvalidAccessError"),Ge={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},jt=(z,u,b,_,M,Y,ae,de,xe,ve,_e)=>{const Ee=ve.length;let qe=de;for(let je=0;je<Ee;je+=1){let et=b[0]*ve[je];for(let Je=1;Je<M;Je+=1){const He=qe-Je&xe-1;et+=b[Je]*Y[He],et-=z[Je]*ae[He]}for(let Je=M;Je<_;Je+=1)et+=b[Je]*Y[qe-Je&xe-1];for(let Je=M;Je<u;Je+=1)et-=z[Je]*ae[qe-Je&xe-1];Y[qe]=ve[je],ae[qe]=et,qe=qe+1&xe-1,_e[je]=et}return qe},sn={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},hn=z=>{const u=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const b=z.decodeAudioData(u.buffer,()=>{});return b!==void 0&&(b.catch(()=>{}),!0)}catch{}return!1},Jt=(z,u,b)=>{const _=u[b];_!==void 0&&_!==z[b]&&(z[b]=_)},In=(z,u)=>{Jt(z,u,"channelCount"),Jt(z,u,"channelCountMode"),Jt(z,u,"channelInterpretation")},Hn=z=>typeof z.getFloatTimeDomainData=="function",me=(z,u,b)=>{const _=u[b];_!==void 0&&_!==z[b].value&&(z[b].value=_)},Ie=z=>{z.start=(u=>(b=0,_=0,M)=>{if(typeof M=="number"&&M<0||_<0||b<0)throw new RangeError("The parameters can't be negative.");u.call(z,b,_,M)})(z.start)},Pe=z=>{var u;z.stop=(u=z.stop,(b=0)=>{if(b<0)throw new RangeError("The parameter can't be negative.");u.call(z,b)})},Ye=(z,u)=>z===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(z*u))))),yt=(z,u)=>{const b=z.createBiquadFilter();return In(b,u),me(b,u,"Q"),me(b,u,"detune"),me(b,u,"frequency"),me(b,u,"gain"),Jt(b,u,"type"),b},_t=(z,u)=>{const b=z.createChannelSplitter(u.numberOfOutputs);return In(b,u),(_=>{const M=_.numberOfOutputs;Object.defineProperty(_,"channelCount",{get:()=>M,set:Y=>{if(Y!==M)throw Ze()}}),Object.defineProperty(_,"channelCountMode",{get:()=>"explicit",set:Y=>{if(Y!=="explicit")throw Ze()}}),Object.defineProperty(_,"channelInterpretation",{get:()=>"discrete",set:Y=>{if(Y!=="discrete")throw Ze()}})})(b),b},Bt=(z,u)=>(z.connect=u.connect.bind(u),z.disconnect=u.disconnect.bind(u),z),Zt=(z,u)=>{const b=z.createDelay(u.maxDelayTime);return In(b,u),me(b,u,"delayTime"),b},un=(z,u)=>{const b=z.createGain();return In(b,u),me(b,u,"gain"),b};function pn(z,u){const b=u[0]*u[0]+u[1]*u[1];return[(z[0]*u[0]+z[1]*u[1])/b,(z[1]*u[0]-z[0]*u[1])/b]}function Ht(z,u){let b=[0,0];for(let Y=z.length-1;Y>=0;Y-=1)M=u,b=[(_=b)[0]*M[0]-_[1]*M[1],_[0]*M[1]+_[1]*M[0]],b[0]+=z[Y];var _,M;return b}const Gt=(z,u,b,_)=>z.createScriptProcessor(u,b,_),Tn=()=>new DOMException("","NotSupportedError"),ns={numberOfChannels:1},Hs={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},Ri={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},Di={disableNormalization:!1},Ks={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},_s=()=>new DOMException("","UnknownError"),tr={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},Xs=(z,u,b)=>z.copyFromChannel===void 0?z.getChannelData(b)[0]:(z.copyFromChannel(u,b),u[0]),ur=z=>{if(z===null)return!1;const u=z.length;return u%2!=0?z[Math.floor(u/2)]!==0:z[u/2-1]+z[u/2]!==0},ss=(z,u,b,_)=>{let M=z;for(;!M.hasOwnProperty(u);)M=Object.getPrototypeOf(M);const{get:Y,set:ae}=Object.getOwnPropertyDescriptor(M,u);Object.defineProperty(z,u,{get:b(Y),set:_(ae)})},qo=(z,u,b)=>{try{z.setValueAtTime(u,b)}catch(_){if(_.code!==9)throw _;qo(z,u,b+1e-7)}},po=z=>{const u=z.createOscillator();try{u.start(-1)}catch(b){return b instanceof RangeError}return!1},ii=z=>{const u=z.createBuffer(1,1,44100),b=z.createBufferSource();b.buffer=u,b.start(),b.stop();try{return b.stop(),!0}catch{return!1}},kn=z=>{const u=z.createOscillator();try{u.stop(-1)}catch(b){return b instanceof RangeError}return!1},Jn=()=>{try{new DOMException}catch{return!1}return!0},Qr=()=>new Promise(z=>{const u=new ArrayBuffer(0),{port1:b,port2:_}=new MessageChannel;b.onmessage=({data:M})=>z(M!==null),_.postMessage(u,[u])}),jo=(z,u)=>{const b=u.createGain();z.connect(b);const _=(M=>()=>{M.call(z,b),z.removeEventListener("ended",_)})(z.disconnect);z.addEventListener("ended",_),Bt(z,b),z.stop=(M=>{let Y=!1;return(ae=0)=>{if(Y)try{M.call(z,ae)}catch{b.gain.setValueAtTime(0,ae)}else M.call(z,ae),Y=!0}})(z.stop)},Ot=(z,u)=>b=>{const _={value:z};return Object.defineProperties(b,{currentTarget:_,target:_}),typeof u=="function"?u.call(z,b):u.handleEvent.call(z,b)},Pi=(z=>(u,b,[_,M,Y],ae)=>{z(u[M],[b,_,Y],de=>de[0]===b&&de[1]===_,ae)})(ee),Jr=(z=>(u,b,[_,M,Y],ae)=>{const de=u.get(_);de===void 0?u.set(_,new Set([[M,b,Y]])):z(de,[M,b,Y],xe=>xe[0]===M&&xe[1]===b,ae)})(ee),Fi=(z=>(u,b,_,M)=>z(u[M],Y=>Y[0]===b&&Y[1]===_))(U),Mi=new WeakMap,Li=(z=>u=>{var b;return(b=z.get(u))!==null&&b!==void 0?b:0})(Mi),Fs=(Ir=new Map,xr=new WeakMap,(z,u)=>{const b=xr.get(z);if(b!==void 0)return b;const _=Ir.get(z);if(_!==void 0)return _;try{const M=u();return M instanceof Promise?(Ir.set(z,M),M.catch(()=>!1).then(Y=>(Ir.delete(z),xr.set(z,Y),Y))):(xr.set(z,M),M)}catch{return xr.set(z,!1),!1}});var Ir,xr;const ms=typeof window>"u"?null:window,Uo=((z,u)=>(b,_)=>{const M=b.createAnalyser();if(In(M,_),!(_.maxDecibels>_.minDecibels))throw u();return Jt(M,_,"fftSize"),Jt(M,_,"maxDecibels"),Jt(M,_,"minDecibels"),Jt(M,_,"smoothingTimeConstant"),z(Hn,()=>Hn(M))||(Y=>{Y.getFloatTimeDomainData=ae=>{const de=new Uint8Array(ae.length);Y.getByteTimeDomainData(de);const xe=Math.max(de.length,Y.fftSize);for(let ve=0;ve<xe;ve+=1)ae[ve]=.0078125*(de[ve]-128);return ae}})(M),M})(Fs,Te),xn=(z=>u=>{const b=z(u);if(b.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return b.renderer})(pe),xs=((z,u,b)=>async(_,M,Y)=>{const ae=z(_);await Promise.all(ae.activeInputs.map((de,xe)=>Array.from(de).map(async([ve,_e])=>{const Ee=u(ve),qe=await Ee.render(ve,M),je=_.context.destination;b(ve)||_===je&&b(_)||qe.connect(Y,_e,xe)})).reduce((de,xe)=>[...de,...xe],[]))})(pe,xn,xt),zi=((z,u,b)=>()=>{const _=new WeakMap;return{render(M,Y){const ae=_.get(Y);return ae!==void 0?Promise.resolve(ae):(async(de,xe)=>{let ve=u(de);if(!ce(ve,xe)){const _e={channelCount:ve.channelCount,channelCountMode:ve.channelCountMode,channelInterpretation:ve.channelInterpretation,fftSize:ve.fftSize,maxDecibels:ve.maxDecibels,minDecibels:ve.minDecibels,smoothingTimeConstant:ve.smoothingTimeConstant};ve=z(xe,_e)}return _.set(xe,ve),await b(de,xe,ve),ve})(M,Y)}}})(Uo,ht,xs),Vn=(Zr=g,z=>{const u=Zr.get(z);if(u===void 0)throw Ze();return u});var Zr;const ls=(z=>z===null?null:z.hasOwnProperty("OfflineAudioContext")?z.OfflineAudioContext:z.hasOwnProperty("webkitOfflineAudioContext")?z.webkitOfflineAudioContext:null)(ms),Kt=(z=>u=>z!==null&&u instanceof z)(ls),eo=new WeakMap,Go=(z=>class{constructor(u){this._nativeEventTarget=u,this._listeners=new WeakMap}addEventListener(u,b,_){if(b!==null){let M=this._listeners.get(b);M===void 0&&(M=z(this,b),typeof b=="function"&&this._listeners.set(b,M)),this._nativeEventTarget.addEventListener(u,M,_)}}dispatchEvent(u){return this._nativeEventTarget.dispatchEvent(u)}removeEventListener(u,b,_){const M=b===null?void 0:this._listeners.get(b);this._nativeEventTarget.removeEventListener(u,M===void 0?null:M,_)}})(Ot),Lr=(z=>z===null?null:z.hasOwnProperty("AudioContext")?z.AudioContext:z.hasOwnProperty("webkitAudioContext")?z.webkitAudioContext:null)(ms),hs=(z=>u=>z!==null&&u instanceof z)(Lr),Wn=(z=>u=>z!==null&&typeof z.AudioNode=="function"&&u instanceof z.AudioNode)(ms),lr=(z=>u=>z!==null&&typeof z.AudioParam=="function"&&u instanceof z.AudioParam)(ms),Dn=(z=>z===null?null:z.hasOwnProperty("AudioWorkletNode")?z.AudioWorkletNode:null)(ms),rs=((z,u,b,_,M,Y,ae,de,xe,ve,_e,Ee,qe,je,et,Je)=>class extends ve{constructor(He,ct,rt,Qe){super(rt),this._context=He,this._nativeAudioNode=rt;const It=_e(He);Ee(It)&&b(tn,()=>tn(It,Je))!==!0&&An(rt),y.set(this,rt),x.set(this,new Set),He.state!=="closed"&&ct&&J(this),z(this,Qe,rt)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(He){this._nativeAudioNode.channelCount=He}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(He){this._nativeAudioNode.channelCountMode=He}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(He){this._nativeAudioNode.channelInterpretation=He}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(He,ct=0,rt=0){if(ct<0||ct>=this._nativeAudioNode.numberOfOutputs)throw M();const Qe=_e(this._context),It=et(Qe);if(qe(He)||je(He))throw Y();if(he(He)){const lt=ht(He);try{const wt=Xe(this._nativeAudioNode,lt,ct,rt),ut=Pt(this);(It||ut)&&this._nativeAudioNode.disconnect(...wt),this.context.state!=="closed"&&!ut&&Pt(He)&&J(He)}catch(wt){throw wt.code===12?Y():wt}if(u(this,He,ct,rt,It)){const wt=xe([this],He);ln(wt,_(It))}return He}const At=Tt(He);if(At.name==="playbackRate"&&At.maxValue===1024)throw ae();try{this._nativeAudioNode.connect(At,ct),(It||Pt(this))&&this._nativeAudioNode.disconnect(At,ct)}catch(lt){throw lt.code===12?Y():lt}if(((lt,wt,ut,Rt)=>{const{activeInputs:bt,passiveInputs:Nt}=B(wt),{outputs:Lt}=pe(lt),zt=ne(lt),yn=rn=>{const nn=ht(lt),Sn=Tt(wt);if(rn){const Qt=pt(Nt,lt,ut);ye(bt,lt,Qt,!1),Rt||xt(lt)||nn.connect(Sn,ut)}else{const Qt=(($n,Fn,jn)=>U($n,ys=>ys[0]===Fn&&ys[1]===jn))(bt,lt,ut);Oe(Nt,Qt,!1),Rt||xt(lt)||nn.disconnect(Sn,ut)}};return!!ee(Lt,[wt,ut],rn=>rn[0]===wt&&rn[1]===ut,!0)&&(zt.add(yn),we(lt)?ye(bt,lt,[ut,yn],!0):Oe(Nt,[lt,ut,yn],!0),!0)})(this,He,ct,It)){const lt=xe([this],He);ln(lt,_(It))}}disconnect(He,ct,rt){let Qe;const It=_e(this._context),At=et(It);if(He===void 0)Qe=((lt,wt)=>{const ut=pe(lt),Rt=[];for(const bt of ut.outputs)j(bt)?zn(lt,wt,...bt):Kn(lt,wt,...bt),Rt.push(bt[0]);return ut.outputs.clear(),Rt})(this,At);else if(typeof He=="number"){if(He<0||He>=this.numberOfOutputs)throw M();Qe=((lt,wt,ut)=>{const Rt=pe(lt),bt=[];for(const Nt of Rt.outputs)Nt[1]===ut&&(j(Nt)?zn(lt,wt,...Nt):Kn(lt,wt,...Nt),bt.push(Nt[0]),Rt.outputs.delete(Nt));return bt})(this,At,He)}else{if(ct!==void 0&&(ct<0||ct>=this.numberOfOutputs)||he(He)&&rt!==void 0&&(rt<0||rt>=He.numberOfInputs))throw M();if(Qe=((lt,wt,ut,Rt,bt)=>{const Nt=pe(lt);return Array.from(Nt.outputs).filter(Lt=>!(Lt[0]!==ut||Rt!==void 0&&Lt[1]!==Rt||bt!==void 0&&Lt[2]!==bt)).map(Lt=>(j(Lt)?zn(lt,wt,...Lt):Kn(lt,wt,...Lt),Nt.outputs.delete(Lt),Lt[0]))})(this,At,He,ct,rt),Qe.length===0)throw Y()}for(const lt of Qe){const wt=xe([this],lt);ln(wt,de)}}})((Wo=f,(z,u,b)=>{const _=[];for(let M=0;M<b.numberOfInputs;M+=1)_.push(new Set);Wo.set(z,{activeInputs:_,outputs:new Set,passiveInputs:new WeakMap,renderer:u})}),((z,u,b,_,M,Y,ae,de,xe,ve,_e,Ee,qe)=>{const je=new WeakMap;return(et,Je,He,ct,rt)=>{const{activeInputs:Qe,passiveInputs:It}=Y(Je),{outputs:At}=Y(et),lt=de(et),wt=ut=>{const Rt=xe(Je),bt=xe(et);if(ut){const Nt=Q(It,et,He,ct);z(Qe,et,Nt,!1),rt||Ee(et)||b(bt,Rt,He,ct),qe(Je)&&J(Je)}else{const Nt=_(Qe,et,He,ct);u(It,ct,Nt,!1),rt||Ee(et)||M(bt,Rt,He,ct);const Lt=ae(Je);if(Lt===0)_e(Je)&&ge(Je,Qe);else{const zt=je.get(Je);zt!==void 0&&clearTimeout(zt),je.set(Je,setTimeout(()=>{_e(Je)&&ge(Je,Qe)},1e3*Lt))}}};return!!ve(At,[Je,He,ct],ut=>ut[0]===Je&&ut[1]===He&&ut[2]===ct,!0)&&(lt.add(wt),_e(et)?z(Qe,et,[He,ct,wt],!0):u(It,ct,[et,He,wt],!0),!0)}})(Pi,Jr,Xe,Fi,gt,pe,Li,ne,ht,ee,we,xt,Pt),Fs,((z,u,b,_,M,Y)=>ae=>(de,xe)=>{const ve=z.get(de);if(ve===void 0){if(!ae&&Y(de)){const _e=_(de),{outputs:Ee}=b(de);for(const qe of Ee)if(j(qe)){const je=_(qe[0]);u(_e,je,qe[1],qe[2])}else{const je=M(qe[0]);_e.disconnect(je,qe[1])}}z.set(de,xe)}else z.set(de,ve+xe)})(w,gt,pe,ht,Tt,we),Te,Ct,Tn,((z,u,b,_,M,Y,ae,de)=>(xe,ve)=>{const _e=u.get(xe);if(_e===void 0)throw new Error("Missing the expected cycle count.");const Ee=Y(xe.context),qe=de(Ee);if(_e===ve){if(u.delete(xe),!qe&&ae(xe)){const je=_(xe),{outputs:et}=b(xe);for(const Je of et)if(j(Je)){const He=_(Je[0]);z(je,He,Je[1],Je[2])}else{const He=M(Je[0]);je.connect(He,Je[1])}}}else u.set(xe,_e-ve)})(Xe,w,pe,ht,Tt,Vn,we,Kt),((z,u,b)=>function _(M,Y){const ae=he(Y)?Y:b(z,Y);if((xe=>"delayTime"in xe)(ae))return[];if(M[0]===ae)return[M];if(M.includes(ae))return[];const{outputs:de}=u(ae);return Array.from(de).map(xe=>_([...M,ae],xe[0])).reduce((xe,ve)=>xe.concat(ve),[])})(eo,pe,G),Go,Vn,hs,Wn,lr,Kt,Dn);var Wo;const Zn=((z,u,b,_,M,Y)=>class extends z{constructor(ae,de){const xe=M(ae),ve={...te,...de},_e=_(xe,ve);super(ae,!1,_e,Y(xe)?u():null),this._nativeAnalyserNode=_e}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(ae){this._nativeAnalyserNode.fftSize=ae}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(ae){const de=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=ae,!(ae>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=de,b()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(ae){const de=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=ae,!(this._nativeAnalyserNode.maxDecibels>ae))throw this._nativeAnalyserNode.minDecibels=de,b()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(ae){this._nativeAnalyserNode.smoothingTimeConstant=ae}getByteFrequencyData(ae){this._nativeAnalyserNode.getByteFrequencyData(ae)}getByteTimeDomainData(ae){this._nativeAnalyserNode.getByteTimeDomainData(ae)}getFloatFrequencyData(ae){this._nativeAnalyserNode.getFloatFrequencyData(ae)}getFloatTimeDomainData(ae){this._nativeAnalyserNode.getFloatTimeDomainData(ae)}})(rs,zi,Te,Uo,Vn,Kt),Bi=new WeakSet,ma=(z=>z===null?null:z.hasOwnProperty("AudioBuffer")?z.AudioBuffer:null)(ms),ai=(Ho=new Uint32Array(1),z=>(Ho[0]=z,Ho[0]));var Ho;const ga=((z,u)=>b=>{b.copyFromChannel=(_,M,Y=0)=>{const ae=z(Y),de=z(M);if(de>=b.numberOfChannels)throw u();const xe=b.length,ve=b.getChannelData(de),_e=_.length;for(let Ee=ae<0?-ae:0;Ee+ae<xe&&Ee<_e;Ee+=1)_[Ee]=ve[Ee+ae]},b.copyToChannel=(_,M,Y=0)=>{const ae=z(Y),de=z(M);if(de>=b.numberOfChannels)throw u();const xe=b.length,ve=b.getChannelData(de),_e=_.length;for(let Ee=ae<0?-ae:0;Ee+ae<xe&&Ee<_e;Ee+=1)ve[Ee+ae]=_[Ee]}})(ai,Te),Vi=(z=>u=>{u.copyFromChannel=(b=>(_,M,Y=0)=>{const ae=z(Y),de=z(M);if(ae<u.length)return b.call(u,_,de,ae)})(u.copyFromChannel),u.copyToChannel=(b=>(_,M,Y=0)=>{const ae=z(Y),de=z(M);if(ae<u.length)return b.call(u,_,de,ae)})(u.copyToChannel)})(ai),Ma=((z,u,b,_,M,Y,ae,de)=>{let xe=null;return class Pu{constructor(_e){if(M===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:Ee,numberOfChannels:qe,sampleRate:je}={...Ne,..._e};xe===null&&(xe=new M(1,1,44100));const et=_!==null&&u(Y,Y)?new _({length:Ee,numberOfChannels:qe,sampleRate:je}):xe.createBuffer(qe,Ee,je);if(et.numberOfChannels===0)throw b();return typeof et.copyFromChannel!="function"?(ae(et),Ce(et)):u(ue,()=>ue(et))||de(et),z.add(et),et}static[Symbol.hasInstance](_e){return _e!==null&&typeof _e=="object"&&Object.getPrototypeOf(_e)===Pu.prototype||z.has(_e)}}})(Bi,Fs,Tn,ma,ls,(z=>()=>{if(z===null)return!1;try{new z({length:1,sampleRate:44100})}catch{return!1}return!0})(ma),ga,Vi),qi=(z=>(u,b)=>{const _=z(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});b.connect(_).connect(u.destination);const M=()=>{b.removeEventListener("ended",M),b.disconnect(_),_.disconnect()};b.addEventListener("ended",M)})(un),ci=((z,u,b)=>async(_,M,Y)=>{const ae=u(_);await Promise.all(Array.from(ae.activeInputs).map(async([de,xe])=>{const ve=z(de),_e=await ve.render(de,M);b(de)||_e.connect(Y,xe)}))})(xn,B,xt),vr=(z=>(u,b,_)=>z(b,u,_))(ci),fo=((z,u,b,_,M,Y,ae,de,xe,ve,_e)=>(Ee,qe)=>{const je=Ee.createBufferSource();return In(je,qe),me(je,qe,"playbackRate"),Jt(je,qe,"buffer"),Jt(je,qe,"loop"),Jt(je,qe,"loopEnd"),Jt(je,qe,"loopStart"),u(b,()=>b(Ee))||(et=>{et.start=(Je=>{let He=!1;return(ct=0,rt=0,Qe)=>{if(He)throw Ze();Je.call(et,ct,rt,Qe),He=!0}})(et.start)})(je),u(_,()=>_(Ee))||(et=>{et.start=(Je=>(He=0,ct=0,rt)=>{const Qe=et.buffer,It=Qe===null?ct:Math.min(Qe.duration,ct);Qe!==null&&It>Qe.duration-.5/et.context.sampleRate?Je.call(et,He,0,0):Je.call(et,He,It,rt)})(et.start)})(je),u(M,()=>M(Ee))||ve(je,Ee),u(Y,()=>Y(Ee))||Ie(je),u(ae,()=>ae(Ee))||_e(je,Ee),u(de,()=>de(Ee))||Pe(je),z(Ee,je),je})(qi,Fs,z=>{const u=z.createBufferSource();u.start();try{u.start()}catch{return!0}return!1},z=>{const u=z.createBufferSource(),b=z.createBuffer(1,1,44100);u.buffer=b;try{u.start(0,1)}catch{return!1}return!0},z=>{const u=z.createBufferSource();u.start();try{u.stop()}catch{return!1}return!0},po,ii,kn,0,(z=>(u,b)=>{const _=b.createBuffer(1,1,44100);u.buffer===null&&(u.buffer=_),z(u,"buffer",M=>()=>{const Y=M.call(u);return Y===_?null:Y},M=>Y=>M.call(u,Y===null?_:Y))})(ss),jo),zr=((z,u)=>(b,_,M)=>(z(_).replay(M),u(_,b,M)))((z=>u=>{const b=z(u);if(b.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return b.renderer})(B),ci),kc=((z,u,b,_,M)=>()=>{const Y=new WeakMap;let ae=null,de=null;return{set start(xe){ae=xe},set stop(xe){de=xe},render(xe,ve){const _e=Y.get(ve);return _e!==void 0?Promise.resolve(_e):(async(Ee,qe)=>{let je=b(Ee);const et=ce(je,qe);if(!et){const Je={buffer:je.buffer,channelCount:je.channelCount,channelCountMode:je.channelCountMode,channelInterpretation:je.channelInterpretation,loop:je.loop,loopEnd:je.loopEnd,loopStart:je.loopStart,playbackRate:je.playbackRate.value};je=u(qe,Je),ae!==null&&je.start(...ae),de!==null&&je.stop(de)}return Y.set(qe,je),et?await z(qe,Ee.playbackRate,je.playbackRate):await _(qe,Ee.playbackRate,je.playbackRate),await M(Ee,qe,je),je})(xe,ve)}}})(vr,fo,ht,zr,xs),kr=((z,u,b,_,M,Y,ae,de,xe,ve,_e,Ee,qe)=>(je,et,Je,He=null,ct=null)=>{const rt=Je.value,Qe=new l.AutomationEventList(rt),It=et?(lt=>({replay(wt){for(const ut of lt)if(ut.type==="exponentialRampToValue"){const{endTime:Rt,value:bt}=ut;wt.exponentialRampToValueAtTime(bt,Rt)}else if(ut.type==="linearRampToValue"){const{endTime:Rt,value:bt}=ut;wt.linearRampToValueAtTime(bt,Rt)}else if(ut.type==="setTarget"){const{startTime:Rt,target:bt,timeConstant:Nt}=ut;wt.setTargetAtTime(bt,Rt,Nt)}else if(ut.type==="setValue"){const{startTime:Rt,value:bt}=ut;wt.setValueAtTime(bt,Rt)}else{if(ut.type!=="setValueCurve")throw new Error("Can't apply an unknown automation.");{const{duration:Rt,startTime:bt,values:Nt}=ut;wt.setValueCurveAtTime(Nt,bt,Rt)}}}}))(Qe):null,At={get defaultValue(){return rt},get maxValue(){return He===null?Je.maxValue:He},get minValue(){return ct===null?Je.minValue:ct},get value(){return Je.value},set value(lt){Je.value=lt,At.setValueAtTime(lt,je.context.currentTime)},cancelAndHoldAtTime(lt){if(typeof Je.cancelAndHoldAtTime=="function")It===null&&Qe.flush(je.context.currentTime),Qe.add(M(lt)),Je.cancelAndHoldAtTime(lt);else{const wt=Array.from(Qe).pop();It===null&&Qe.flush(je.context.currentTime),Qe.add(M(lt));const ut=Array.from(Qe).pop();Je.cancelScheduledValues(lt),wt!==ut&&ut!==void 0&&(ut.type==="exponentialRampToValue"?Je.exponentialRampToValueAtTime(ut.value,ut.endTime):ut.type==="linearRampToValue"?Je.linearRampToValueAtTime(ut.value,ut.endTime):ut.type==="setValue"?Je.setValueAtTime(ut.value,ut.startTime):ut.type==="setValueCurve"&&Je.setValueCurveAtTime(ut.values,ut.startTime,ut.duration))}return At},cancelScheduledValues:lt=>(It===null&&Qe.flush(je.context.currentTime),Qe.add(Y(lt)),Je.cancelScheduledValues(lt),At),exponentialRampToValueAtTime(lt,wt){if(lt===0)throw new RangeError;if(!Number.isFinite(wt)||wt<0)throw new RangeError;const ut=je.context.currentTime;return It===null&&Qe.flush(ut),Array.from(Qe).length===0&&(Qe.add(ve(rt,ut)),Je.setValueAtTime(rt,ut)),Qe.add(ae(lt,wt)),Je.exponentialRampToValueAtTime(lt,wt),At},linearRampToValueAtTime(lt,wt){const ut=je.context.currentTime;return It===null&&Qe.flush(ut),Array.from(Qe).length===0&&(Qe.add(ve(rt,ut)),Je.setValueAtTime(rt,ut)),Qe.add(de(lt,wt)),Je.linearRampToValueAtTime(lt,wt),At},setTargetAtTime:(lt,wt,ut)=>(It===null&&Qe.flush(je.context.currentTime),Qe.add(xe(lt,wt,ut)),Je.setTargetAtTime(lt,wt,ut),At),setValueAtTime:(lt,wt)=>(It===null&&Qe.flush(je.context.currentTime),Qe.add(ve(lt,wt)),Je.setValueAtTime(lt,wt),At),setValueCurveAtTime(lt,wt,ut){const Rt=lt instanceof Float32Array?lt:new Float32Array(lt);if(Ee!==null&&Ee.name==="webkitAudioContext"){const bt=wt+ut,Nt=je.context.sampleRate,Lt=Math.ceil(wt*Nt),zt=Math.floor(bt*Nt),yn=zt-Lt,rn=new Float32Array(yn);for(let Sn=0;Sn<yn;Sn+=1){const Qt=(Rt.length-1)/ut*((Lt+Sn)/Nt-wt),$n=Math.floor(Qt),Fn=Math.ceil(Qt);rn[Sn]=$n===Fn?Rt[$n]:(1-(Qt-$n))*Rt[$n]+(1-(Fn-Qt))*Rt[Fn]}It===null&&Qe.flush(je.context.currentTime),Qe.add(_e(rn,wt,ut)),Je.setValueCurveAtTime(rn,wt,ut);const nn=zt/Nt;nn<bt&&qe(At,rn[rn.length-1],nn),qe(At,Rt[Rt.length-1],bt)}else It===null&&Qe.flush(je.context.currentTime),Qe.add(_e(Rt,wt,ut)),Je.setValueCurveAtTime(Rt,wt,ut);return At}};return b.set(At,Je),u.set(At,je),z(At,It),At})((La=m,(z,u)=>{La.set(z,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:u})}),eo,h,0,l.createCancelAndHoldAutomationEvent,l.createCancelScheduledValuesAutomationEvent,l.createExponentialRampToValueAutomationEvent,l.createLinearRampToValueAutomationEvent,l.createSetTargetAutomationEvent,l.createSetValueAutomationEvent,l.createSetValueCurveAutomationEvent,Lr,qo);var La;const ui=((z,u,b,_,M,Y,ae,de)=>class extends z{constructor(xe,ve){const _e=Y(xe),Ee={...Le,...ve},qe=M(_e,Ee),je=ae(_e),et=je?u():null;super(xe,!1,qe,et),this._audioBufferSourceNodeRenderer=et,this._isBufferNullified=!1,this._isBufferSet=Ee.buffer!==null,this._nativeAudioBufferSourceNode=qe,this._onended=null,this._playbackRate=b(this,je,qe.playbackRate,Ae,Re)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(xe){if(this._nativeAudioBufferSourceNode.buffer=xe,xe!==null){if(this._isBufferSet)throw _();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(xe){this._nativeAudioBufferSourceNode.loop=xe}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(xe){this._nativeAudioBufferSourceNode.loopEnd=xe}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(xe){this._nativeAudioBufferSourceNode.loopStart=xe}get onended(){return this._onended}set onended(xe){const ve=typeof xe=="function"?de(this,xe):null;this._nativeAudioBufferSourceNode.onended=ve;const _e=this._nativeAudioBufferSourceNode.onended;this._onended=_e!==null&&_e===ve?xe:_e}get playbackRate(){return this._playbackRate}start(xe=0,ve=0,_e){if(this._nativeAudioBufferSourceNode.start(xe,ve,_e),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=_e===void 0?[xe,ve]:[xe,ve,_e]),this.context.state!=="closed"){J(this);const Ee=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",Ee),we(this)&&le(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",Ee)}}stop(xe=0){this._nativeAudioBufferSourceNode.stop(xe),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=xe)}})(rs,kc,kr,Ze,fo,Vn,Kt,Ot),li=((z,u,b,_,M,Y,ae,de)=>class extends z{constructor(xe,ve){const _e=Y(xe),Ee=ae(_e),qe=M(_e,ve,Ee);super(xe,!1,qe,Ee?(je=>{const et=new WeakMap;return{render(Je,He){const ct=et.get(He);return ct!==void 0?Promise.resolve(ct):(async(rt,Qe)=>{const It=Qe.destination;return et.set(Qe,It),await je(rt,Qe,It),It})(Je,He)}}})(de):null),this._isNodeOfNativeOfflineAudioContext=Ee,this._nativeAudioDestinationNode=qe}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(xe){if(this._isNodeOfNativeOfflineAudioContext)throw _();if(xe>this._nativeAudioDestinationNode.maxChannelCount)throw b();this._nativeAudioDestinationNode.channelCount=xe}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(xe){if(this._isNodeOfNativeOfflineAudioContext)throw _();this._nativeAudioDestinationNode.channelCountMode=xe}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}})(rs,0,Te,Ze,((z,u)=>(b,_,M)=>{const Y=b.destination;if(Y.channelCount!==_)try{Y.channelCount=_}catch{}M&&Y.channelCountMode!=="explicit"&&(Y.channelCountMode="explicit"),Y.maxChannelCount===0&&Object.defineProperty(Y,"maxChannelCount",{value:_});const ae=z(b,{channelCount:_,channelCountMode:Y.channelCountMode,channelInterpretation:Y.channelInterpretation,gain:1});return u(ae,"channelCount",de=>()=>de.call(ae),de=>xe=>{de.call(ae,xe);try{Y.channelCount=xe}catch(ve){if(xe>Y.maxChannelCount)throw ve}}),u(ae,"channelCountMode",de=>()=>de.call(ae),de=>xe=>{de.call(ae,xe),Y.channelCountMode=xe}),u(ae,"channelInterpretation",de=>()=>de.call(ae),de=>xe=>{de.call(ae,xe),Y.channelInterpretation=xe}),Object.defineProperty(ae,"maxChannelCount",{get:()=>Y.maxChannelCount}),ae.connect(Y),ae})(un,ss),Vn,Kt,xs),za=((z,u,b,_,M)=>()=>{const Y=new WeakMap;return{render(ae,de){const xe=Y.get(de);return xe!==void 0?Promise.resolve(xe):(async(ve,_e)=>{let Ee=b(ve);const qe=ce(Ee,_e);if(!qe){const je={Q:Ee.Q.value,channelCount:Ee.channelCount,channelCountMode:Ee.channelCountMode,channelInterpretation:Ee.channelInterpretation,detune:Ee.detune.value,frequency:Ee.frequency.value,gain:Ee.gain.value,type:Ee.type};Ee=u(_e,je)}return Y.set(_e,Ee),qe?(await z(_e,ve.Q,Ee.Q),await z(_e,ve.detune,Ee.detune),await z(_e,ve.frequency,Ee.frequency),await z(_e,ve.gain,Ee.gain)):(await _(_e,ve.Q,Ee.Q),await _(_e,ve.detune,Ee.detune),await _(_e,ve.frequency,Ee.frequency),await _(_e,ve.gain,Ee.gain)),await M(ve,_e,Ee),Ee})(ae,de)}}})(vr,yt,ht,zr,xs),mo=(z=>(u,b)=>z.set(u,b))(Mi),Ba=((z,u,b,_,M,Y,ae,de)=>class extends z{constructor(xe,ve){const _e=Y(xe),Ee={...qs,...ve},qe=M(_e,Ee),je=ae(_e);super(xe,!1,qe,je?b():null),this._Q=u(this,je,qe.Q,Ae,Re),this._detune=u(this,je,qe.detune,1200*Math.log2(Ae),-1200*Math.log2(Ae)),this._frequency=u(this,je,qe.frequency,xe.sampleRate/2,0),this._gain=u(this,je,qe.gain,40*Math.log10(Ae),Re),this._nativeBiquadFilterNode=qe,de(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(xe){this._nativeBiquadFilterNode.type=xe}getFrequencyResponse(xe,ve,_e){try{this._nativeBiquadFilterNode.getFrequencyResponse(xe,ve,_e)}catch(Ee){throw Ee.code===11?_():Ee}if(xe.length!==ve.length||ve.length!==_e.length)throw _()}})(rs,kr,za,Ct,yt,Vn,Kt,mo),go=((z,u)=>(b,_,M)=>{const Y=new Set;return b.connect=(ae=>(de,xe=0,ve=0)=>{const _e=Y.size===0;if(u(de))return ae.call(b,de,xe,ve),z(Y,[de,xe,ve],Ee=>Ee[0]===de&&Ee[1]===xe&&Ee[2]===ve,!0),_e&&_(),de;ae.call(b,de,xe),z(Y,[de,xe],Ee=>Ee[0]===de&&Ee[1]===xe,!0),_e&&_()})(b.connect),b.disconnect=(ae=>(de,xe,ve)=>{const _e=Y.size>0;if(de===void 0)ae.apply(b),Y.clear();else if(typeof de=="number"){ae.call(b,de);for(const qe of Y)qe[1]===de&&Y.delete(qe)}else{u(de)?ae.call(b,de,xe,ve):ae.call(b,de,xe);for(const qe of Y)qe[0]!==de||xe!==void 0&&qe[1]!==xe||ve!==void 0&&qe[2]!==ve||Y.delete(qe)}const Ee=Y.size===0;_e&&Ee&&M()})(b.disconnect),b})(ee,Wn),Ec=((z,u)=>(b,_)=>{_.channelCount=1,_.channelCountMode="explicit",Object.defineProperty(_,"channelCount",{get:()=>1,set:()=>{throw z()}}),Object.defineProperty(_,"channelCountMode",{get:()=>"explicit",set:()=>{throw z()}});const M=b.createBufferSource();u(_,()=>{const Y=_.numberOfInputs;for(let ae=0;ae<Y;ae+=1)M.connect(_,0,ae)},()=>M.disconnect(_))})(Ze,go),hr=((z,u)=>(b,_)=>{const M=b.createChannelMerger(_.numberOfInputs);return z!==null&&z.name==="webkitAudioContext"&&u(b,M),In(M,_),M})(Lr,Ec),Ko=((z,u,b)=>()=>{const _=new WeakMap;return{render(M,Y){const ae=_.get(Y);return ae!==void 0?Promise.resolve(ae):(async(de,xe)=>{let ve=u(de);if(!ce(ve,xe)){const _e={channelCount:ve.channelCount,channelCountMode:ve.channelCountMode,channelInterpretation:ve.channelInterpretation,numberOfInputs:ve.numberOfInputs};ve=z(xe,_e)}return _.set(xe,ve),await b(de,xe,ve),ve})(M,Y)}}})(hr,ht,xs),Xo=((z,u,b,_,M)=>class extends z{constructor(Y,ae){const de=_(Y),xe={...yr,...ae};super(Y,!1,b(de,xe),M(de)?u():null)}})(rs,Ko,hr,Vn,Kt),Br=((z,u,b)=>()=>{const _=new WeakMap;return{render(M,Y){const ae=_.get(Y);return ae!==void 0?Promise.resolve(ae):(async(de,xe)=>{let ve=u(de);if(!ce(ve,xe)){const _e={channelCount:ve.channelCount,channelCountMode:ve.channelCountMode,channelInterpretation:ve.channelInterpretation,numberOfOutputs:ve.numberOfOutputs};ve=z(xe,_e)}return _.set(xe,ve),await b(de,xe,ve),ve})(M,Y)}}})(_t,ht,xs),ko=((z,u,b,_,M,Y)=>class extends z{constructor(ae,de){const xe=_(ae),ve=(_e=>({..._e,channelCount:_e.numberOfOutputs}))({...Mr,...de});super(ae,!1,b(xe,ve),M(xe)?u():null)}})(rs,Br,_t,Vn,Kt),ya=((z,u,b,_)=>(M,{offset:Y,...ae})=>{const de=M.createBuffer(1,2,44100),xe=u(M,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),ve=b(M,{...ae,gain:Y}),_e=de.getChannelData(0);_e[0]=1,_e[1]=1,xe.buffer=de,xe.loop=!0;const Ee={get bufferSize(){},get channelCount(){return ve.channelCount},set channelCount(qe){ve.channelCount=qe},get channelCountMode(){return ve.channelCountMode},set channelCountMode(qe){ve.channelCountMode=qe},get channelInterpretation(){return ve.channelInterpretation},set channelInterpretation(qe){ve.channelInterpretation=qe},get context(){return ve.context},get inputs(){return[]},get numberOfInputs(){return xe.numberOfInputs},get numberOfOutputs(){return ve.numberOfOutputs},get offset(){return ve.gain},get onended(){return xe.onended},set onended(qe){xe.onended=qe},addEventListener:(...qe)=>xe.addEventListener(qe[0],qe[1],qe[2]),dispatchEvent:(...qe)=>xe.dispatchEvent(qe[0]),removeEventListener:(...qe)=>xe.removeEventListener(qe[0],qe[1],qe[2]),start(qe=0){xe.start.call(xe,qe)},stop(qe=0){xe.stop.call(xe,qe)}};return z(M,xe),_(Bt(Ee,ve),()=>xe.connect(ve),()=>xe.disconnect(ve))})(qi,fo,un,go),Ms=((z,u,b,_,M)=>(Y,ae)=>{if(Y.createConstantSource===void 0)return b(Y,ae);const de=Y.createConstantSource();return In(de,ae),me(de,ae,"offset"),u(_,()=>_(Y))||Ie(de),u(M,()=>M(Y))||Pe(de),z(Y,de),de})(qi,Fs,ya,po,kn),ba=((z,u,b,_,M)=>()=>{const Y=new WeakMap;let ae=null,de=null;return{set start(xe){ae=xe},set stop(xe){de=xe},render(xe,ve){const _e=Y.get(ve);return _e!==void 0?Promise.resolve(_e):(async(Ee,qe)=>{let je=b(Ee);const et=ce(je,qe);if(!et){const Je={channelCount:je.channelCount,channelCountMode:je.channelCountMode,channelInterpretation:je.channelInterpretation,offset:je.offset.value};je=u(qe,Je),ae!==null&&je.start(ae),de!==null&&je.stop(de)}return Y.set(qe,je),et?await z(qe,Ee.offset,je.offset):await _(qe,Ee.offset,je.offset),await M(Ee,qe,je),je})(xe,ve)}}})(vr,Ms,ht,zr,xs),Vr=((z,u,b,_,M,Y,ae)=>class extends z{constructor(de,xe){const ve=M(de),_e={...ts,...xe},Ee=_(ve,_e),qe=Y(ve),je=qe?b():null;super(de,!1,Ee,je),this._constantSourceNodeRenderer=je,this._nativeConstantSourceNode=Ee,this._offset=u(this,qe,Ee.offset,Ae,Re),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(de){const xe=typeof de=="function"?ae(this,de):null;this._nativeConstantSourceNode.onended=xe;const ve=this._nativeConstantSourceNode.onended;this._onended=ve!==null&&ve===xe?de:ve}start(de=0){if(this._nativeConstantSourceNode.start(de),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=de),this.context.state!=="closed"){J(this);const xe=()=>{this._nativeConstantSourceNode.removeEventListener("ended",xe),we(this)&&le(this)};this._nativeConstantSourceNode.addEventListener("ended",xe)}}stop(de=0){this._nativeConstantSourceNode.stop(de),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=de)}})(rs,kr,ba,Ms,Vn,Kt,Ot),vs=((z,u)=>(b,_)=>{const M=b.createConvolver();if(In(M,_),_.disableNormalization===M.normalize&&(M.normalize=!_.disableNormalization),Jt(M,_,"buffer"),_.channelCount>2||(u(M,"channelCount",Y=>()=>Y.call(M),Y=>ae=>{if(ae>2)throw z();return Y.call(M,ae)}),_.channelCountMode==="max"))throw z();return u(M,"channelCountMode",Y=>()=>Y.call(M),Y=>ae=>{if(ae==="max")throw z();return Y.call(M,ae)}),M})(Tn,ss),vn=((z,u,b)=>()=>{const _=new WeakMap;return{render(M,Y){const ae=_.get(Y);return ae!==void 0?Promise.resolve(ae):(async(de,xe)=>{let ve=u(de);if(!ce(ve,xe)){const _e={buffer:ve.buffer,channelCount:ve.channelCount,channelCountMode:ve.channelCountMode,channelInterpretation:ve.channelInterpretation,disableNormalization:!ve.normalize};ve=z(xe,_e)}return _.set(xe,ve),ze(ve)?await b(de,xe,ve.inputs[0]):await b(de,xe,ve),ve})(M,Y)}}})(vs,ht,xs),xa=((z,u,b,_,M,Y)=>class extends z{constructor(ae,de){const xe=_(ae),ve={...Gn,...de},_e=b(xe,ve);super(ae,!1,_e,M(xe)?u():null),this._isBufferNullified=!1,this._nativeConvolverNode=_e,ve.buffer!==null&&Y(this,ve.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(ae){if(this._nativeConvolverNode.buffer=ae,ae===null&&this._nativeConvolverNode.buffer!==null){const de=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=de.createBuffer(1,1,de.sampleRate),this._isBufferNullified=!0,Y(this,0)}else this._isBufferNullified=!1,Y(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(ae){this._nativeConvolverNode.normalize=ae}})(rs,vn,vs,Vn,Kt,mo),Es=((z,u,b,_,M)=>Y=>{const ae=new WeakMap;return{render(de,xe){const ve=ae.get(xe);return ve!==void 0?Promise.resolve(ve):(async(_e,Ee)=>{let qe=b(_e);const je=ce(qe,Ee);if(!je){const et={channelCount:qe.channelCount,channelCountMode:qe.channelCountMode,channelInterpretation:qe.channelInterpretation,delayTime:qe.delayTime.value,maxDelayTime:Y};qe=u(Ee,et)}return ae.set(Ee,qe),je?await z(Ee,_e.delayTime,qe.delayTime):await _(Ee,_e.delayTime,qe.delayTime),await M(_e,Ee,qe),qe})(de,xe)}}})(vr,Zt,ht,zr,xs),Va=((z,u,b,_,M,Y,ae)=>class extends z{constructor(de,xe){const ve=M(de),_e={...Ws,...xe},Ee=_(ve,_e),qe=Y(ve);super(de,!1,Ee,qe?b(_e.maxDelayTime):null),this._delayTime=u(this,qe,Ee.delayTime),ae(this,_e.maxDelayTime)}get delayTime(){return this._delayTime}})(rs,kr,Es,Zt,Vn,Kt,mo),va=(z=>(u,b)=>{const _=u.createDynamicsCompressor();if(In(_,b),b.channelCount>2||b.channelCountMode==="max")throw z();return me(_,b,"attack"),me(_,b,"knee"),me(_,b,"ratio"),me(_,b,"release"),me(_,b,"threshold"),_})(Tn),qa=((z,u,b,_,M)=>()=>{const Y=new WeakMap;return{render(ae,de){const xe=Y.get(de);return xe!==void 0?Promise.resolve(xe):(async(ve,_e)=>{let Ee=b(ve);const qe=ce(Ee,_e);if(!qe){const je={attack:Ee.attack.value,channelCount:Ee.channelCount,channelCountMode:Ee.channelCountMode,channelInterpretation:Ee.channelInterpretation,knee:Ee.knee.value,ratio:Ee.ratio.value,release:Ee.release.value,threshold:Ee.threshold.value};Ee=u(_e,je)}return Y.set(_e,Ee),qe?(await z(_e,ve.attack,Ee.attack),await z(_e,ve.knee,Ee.knee),await z(_e,ve.ratio,Ee.ratio),await z(_e,ve.release,Ee.release),await z(_e,ve.threshold,Ee.threshold)):(await _(_e,ve.attack,Ee.attack),await _(_e,ve.knee,Ee.knee),await _(_e,ve.ratio,Ee.ratio),await _(_e,ve.release,Ee.release),await _(_e,ve.threshold,Ee.threshold)),await M(ve,_e,Ee),Ee})(ae,de)}}})(vr,va,ht,zr,xs),_n=((z,u,b,_,M,Y,ae,de)=>class extends z{constructor(xe,ve){const _e=Y(xe),Ee={...br,...ve},qe=_(_e,Ee),je=ae(_e);super(xe,!1,qe,je?b():null),this._attack=u(this,je,qe.attack),this._knee=u(this,je,qe.knee),this._nativeDynamicsCompressorNode=qe,this._ratio=u(this,je,qe.ratio),this._release=u(this,je,qe.release),this._threshold=u(this,je,qe.threshold),de(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(xe){const ve=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=xe,xe>2)throw this._nativeDynamicsCompressorNode.channelCount=ve,M()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(xe){const ve=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=xe,xe==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=ve,M()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}})(rs,kr,qa,va,Tn,Vn,Kt,mo),ja=((z,u,b,_,M)=>()=>{const Y=new WeakMap;return{render(ae,de){const xe=Y.get(de);return xe!==void 0?Promise.resolve(xe):(async(ve,_e)=>{let Ee=b(ve);const qe=ce(Ee,_e);if(!qe){const je={channelCount:Ee.channelCount,channelCountMode:Ee.channelCountMode,channelInterpretation:Ee.channelInterpretation,gain:Ee.gain.value};Ee=u(_e,je)}return Y.set(_e,Ee),qe?await z(_e,ve.gain,Ee.gain):await _(_e,ve.gain,Ee.gain),await M(ve,_e,Ee),Ee})(ae,de)}}})(vr,un,ht,zr,xs),yo=((z,u,b,_,M,Y)=>class extends z{constructor(ae,de){const xe=M(ae),ve={...ft,...de},_e=_(xe,ve),Ee=Y(xe);super(ae,!1,_e,Ee?b():null),this._gain=u(this,Ee,_e.gain,Ae,Re)}get gain(){return this._gain}})(rs,kr,ja,un,Vn,Kt),ws=((z,u,b,_)=>(M,Y,{channelCount:ae,channelCountMode:de,channelInterpretation:xe,feedback:ve,feedforward:_e})=>{const Ee=Ye(Y,M.sampleRate),qe=ve instanceof Float64Array?ve:new Float64Array(ve),je=_e instanceof Float64Array?_e:new Float64Array(_e),et=qe.length,Je=je.length,He=Math.min(et,Je);if(et===0||et>20)throw _();if(qe[0]===0)throw u();if(Je===0||Je>20)throw _();if(je[0]===0)throw u();if(qe[0]!==1){for(let lt=0;lt<Je;lt+=1)je[lt]/=qe[0];for(let lt=1;lt<et;lt+=1)qe[lt]/=qe[0]}const ct=b(M,Ee,ae,ae);ct.channelCount=ae,ct.channelCountMode=de,ct.channelInterpretation=xe;const rt=[],Qe=[],It=[];for(let lt=0;lt<ae;lt+=1){rt.push(0);const wt=new Float32Array(32),ut=new Float32Array(32);wt.fill(0),ut.fill(0),Qe.push(wt),It.push(ut)}ct.onaudioprocess=lt=>{const wt=lt.inputBuffer,ut=lt.outputBuffer,Rt=wt.numberOfChannels;for(let bt=0;bt<Rt;bt+=1){const Nt=wt.getChannelData(bt),Lt=ut.getChannelData(bt);rt[bt]=jt(qe,et,je,Je,He,Qe[bt],It[bt],rt[bt],32,Nt,Lt)}};const At=M.sampleRate/2;return Bt({get bufferSize(){return Ee},get channelCount(){return ct.channelCount},set channelCount(lt){ct.channelCount=lt},get channelCountMode(){return ct.channelCountMode},set channelCountMode(lt){ct.channelCountMode=lt},get channelInterpretation(){return ct.channelInterpretation},set channelInterpretation(lt){ct.channelInterpretation=lt},get context(){return ct.context},get inputs(){return[ct]},get numberOfInputs(){return ct.numberOfInputs},get numberOfOutputs(){return ct.numberOfOutputs},addEventListener:(...lt)=>ct.addEventListener(lt[0],lt[1],lt[2]),dispatchEvent:(...lt)=>ct.dispatchEvent(lt[0]),getFrequencyResponse(lt,wt,ut){if(lt.length!==wt.length||wt.length!==ut.length)throw z();const Rt=lt.length;for(let bt=0;bt<Rt;bt+=1){const Nt=-Math.PI*(lt[bt]/At),Lt=[Math.cos(Nt),Math.sin(Nt)],zt=pn(Ht(je,Lt),Ht(qe,Lt));wt[bt]=Math.sqrt(zt[0]*zt[0]+zt[1]*zt[1]),ut[bt]=Math.atan2(zt[1],zt[0])}},removeEventListener:(...lt)=>ct.removeEventListener(lt[0],lt[1],lt[2])},ct)})(Ct,Ze,Gt,Tn),Yo=((z,u,b,_)=>M=>z(hn,()=>hn(M))?Promise.resolve(z(_,_)).then(Y=>{if(!Y){const ae=b(M,512,0,1);M.oncomplete=()=>{ae.onaudioprocess=null,ae.disconnect()},ae.onaudioprocess=()=>M.currentTime,ae.connect(M.destination)}return M.startRendering()}):new Promise(Y=>{const ae=u(M,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});M.oncomplete=de=>{ae.disconnect(),Y(de.renderedBuffer)},ae.connect(M.destination),M.startRendering()}))(Fs,un,Gt,((z,u)=>()=>{if(u===null)return Promise.resolve(!1);const b=new u(1,1,44100),_=z(b,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(M=>{b.oncomplete=()=>{_.disconnect(),M(b.currentTime!==0)},b.startRendering()})})(un,ls)),Ys=((z,u,b,_,M)=>(Y,ae)=>{const de=new WeakMap;let xe=null;return{render(ve,_e){const Ee=de.get(_e);return Ee!==void 0?Promise.resolve(Ee):(async(qe,je)=>{let et=null,Je=u(qe);const He=ce(Je,je);if(je.createIIRFilter===void 0?et=z(je,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):He||(Je=je.createIIRFilter(ae,Y)),de.set(je,et===null?Je:et),et!==null){if(xe===null){if(b===null)throw new Error("Missing the native OfflineAudioContext constructor.");const rt=new b(qe.context.destination.channelCount,qe.context.length,je.sampleRate);xe=(async()=>(await _(qe,rt,rt.destination),((Qe,It,At,lt)=>{const wt=At instanceof Float64Array?At:new Float64Array(At),ut=lt instanceof Float64Array?lt:new Float64Array(lt),Rt=wt.length,bt=ut.length,Nt=Math.min(Rt,bt);if(wt[0]!==1){for(let nn=0;nn<Rt;nn+=1)ut[nn]/=wt[0];for(let nn=1;nn<bt;nn+=1)wt[nn]/=wt[0]}const Lt=new Float32Array(32),zt=new Float32Array(32),yn=It.createBuffer(Qe.numberOfChannels,Qe.length,Qe.sampleRate),rn=Qe.numberOfChannels;for(let nn=0;nn<rn;nn+=1){const Sn=Qe.getChannelData(nn),Qt=yn.getChannelData(nn);Lt.fill(0),zt.fill(0),jt(wt,Rt,ut,bt,Nt,Lt,zt,0,32,Sn,Qt)}return yn})(await M(rt),je,Y,ae)))()}const ct=await xe;return et.buffer=ct,et.start(0),et}return await _(qe,je,Je),Je})(ve,_e)}}})(fo,ht,ls,xs,Yo),ji=(z=>(u,b,_)=>{if(u.createIIRFilter===void 0)return z(u,b,_);const M=u.createIIRFilter(_.feedforward,_.feedback);return In(M,_),M})(ws),Qo=((z,u,b,_,M,Y)=>class extends z{constructor(ae,de){const xe=_(ae),ve=M(xe),_e={...Ge,...de},Ee=u(xe,ve?null:ae.baseLatency,_e);super(ae,!1,Ee,ve?b(_e.feedback,_e.feedforward):null),(qe=>{var je;qe.getFrequencyResponse=(je=qe.getFrequencyResponse,(et,Je,He)=>{if(et.length!==Je.length||Je.length!==He.length)throw Ct();return je.call(qe,et,Je,He)})})(Ee),this._nativeIIRFilterNode=Ee,Y(this,1)}getFrequencyResponse(ae,de,xe){return this._nativeIIRFilterNode.getFrequencyResponse(ae,de,xe)}})(rs,ji,Ys,Vn,Kt,mo),wa=((z,u,b,_,M,Y,ae,de)=>(xe,ve)=>{const _e=ve.listener,{forwardX:Ee,forwardY:qe,forwardZ:je,positionX:et,positionY:Je,positionZ:He,upX:ct,upY:rt,upZ:Qe}=_e.forwardX===void 0?(()=>{const It=new Float32Array(1),At=u(ve,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),lt=ae(ve);let wt=!1,ut=[0,0,-1,0,1,0],Rt=[0,0,0];const bt=()=>{if(wt)return;wt=!0;const yn=_(ve,256,9,0);yn.onaudioprocess=({inputBuffer:rn})=>{const nn=[Y(rn,It,0),Y(rn,It,1),Y(rn,It,2),Y(rn,It,3),Y(rn,It,4),Y(rn,It,5)];nn.some((Qt,$n)=>Qt!==ut[$n])&&(_e.setOrientation(...nn),ut=nn);const Sn=[Y(rn,It,6),Y(rn,It,7),Y(rn,It,8)];Sn.some((Qt,$n)=>Qt!==Rt[$n])&&(_e.setPosition(...Sn),Rt=Sn)},At.connect(yn)},Nt=yn=>rn=>{rn!==ut[yn]&&(ut[yn]=rn,_e.setOrientation(...ut))},Lt=yn=>rn=>{rn!==Rt[yn]&&(Rt[yn]=rn,_e.setPosition(...Rt))},zt=(yn,rn,nn)=>{const Sn=b(ve,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:rn});Sn.connect(At,0,yn),Sn.start(),Object.defineProperty(Sn.offset,"defaultValue",{get:()=>rn});const Qt=z({context:xe},lt,Sn.offset,Ae,Re);var $n,Fn,jn,ys,Ds,Xr,Nn;return de(Qt,"value",Yt=>()=>Yt.call(Qt),Yt=>us=>{try{Yt.call(Qt,us)}catch(es){if(es.code!==9)throw es}bt(),lt&&nn(us)}),Qt.cancelAndHoldAtTime=($n=Qt.cancelAndHoldAtTime,lt?()=>{throw M()}:(...Yt)=>{const us=$n.apply(Qt,Yt);return bt(),us}),Qt.cancelScheduledValues=(Fn=Qt.cancelScheduledValues,lt?()=>{throw M()}:(...Yt)=>{const us=Fn.apply(Qt,Yt);return bt(),us}),Qt.exponentialRampToValueAtTime=(jn=Qt.exponentialRampToValueAtTime,lt?()=>{throw M()}:(...Yt)=>{const us=jn.apply(Qt,Yt);return bt(),us}),Qt.linearRampToValueAtTime=(ys=Qt.linearRampToValueAtTime,lt?()=>{throw M()}:(...Yt)=>{const us=ys.apply(Qt,Yt);return bt(),us}),Qt.setTargetAtTime=(Ds=Qt.setTargetAtTime,lt?()=>{throw M()}:(...Yt)=>{const us=Ds.apply(Qt,Yt);return bt(),us}),Qt.setValueAtTime=(Xr=Qt.setValueAtTime,lt?()=>{throw M()}:(...Yt)=>{const us=Xr.apply(Qt,Yt);return bt(),us}),Qt.setValueCurveAtTime=(Nn=Qt.setValueCurveAtTime,lt?()=>{throw M()}:(...Yt)=>{const us=Nn.apply(Qt,Yt);return bt(),us}),Qt};return{forwardX:zt(0,0,Nt(0)),forwardY:zt(1,0,Nt(1)),forwardZ:zt(2,-1,Nt(2)),positionX:zt(6,0,Lt(0)),positionY:zt(7,0,Lt(1)),positionZ:zt(8,0,Lt(2)),upX:zt(3,0,Nt(3)),upY:zt(4,1,Nt(4)),upZ:zt(5,0,Nt(5))}})():_e;return{get forwardX(){return Ee},get forwardY(){return qe},get forwardZ(){return je},get positionX(){return et},get positionY(){return Je},get positionZ(){return He},get upX(){return ct},get upY(){return rt},get upZ(){return Qe}}})(kr,hr,Ms,Gt,Tn,Xs,Kt,ss),hi=new WeakMap,to=((z,u,b,_,M,Y)=>class extends b{constructor(ae,de){super(ae),this._nativeContext=ae,g.set(this,ae),_(ae)&&M.set(ae,new Set),this._destination=new z(this,de),this._listener=u(this,ae),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(ae){const de=typeof ae=="function"?Y(this,ae):null;this._nativeContext.onstatechange=de;const xe=this._nativeContext.onstatechange;this._onstatechange=xe!==null&&xe===de?ae:xe}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}})(li,wa,Go,Kt,hi,Ot),di=((z,u,b,_,M,Y)=>(ae,de)=>{const xe=ae.createOscillator();return In(xe,de),me(xe,de,"detune"),me(xe,de,"frequency"),de.periodicWave!==void 0?xe.setPeriodicWave(de.periodicWave):Jt(xe,de,"type"),u(b,()=>b(ae))||Ie(xe),u(_,()=>_(ae))||Y(xe,ae),u(M,()=>M(ae))||Pe(xe),z(ae,xe),xe})(qi,Fs,po,ii,kn,jo),Jo=((z,u,b,_,M)=>()=>{const Y=new WeakMap;let ae=null,de=null,xe=null;return{set periodicWave(ve){ae=ve},set start(ve){de=ve},set stop(ve){xe=ve},render(ve,_e){const Ee=Y.get(_e);return Ee!==void 0?Promise.resolve(Ee):(async(qe,je)=>{let et=b(qe);const Je=ce(et,je);if(!Je){const He={channelCount:et.channelCount,channelCountMode:et.channelCountMode,channelInterpretation:et.channelInterpretation,detune:et.detune.value,frequency:et.frequency.value,periodicWave:ae===null?void 0:ae,type:et.type};et=u(je,He),de!==null&&et.start(de),xe!==null&&et.stop(xe)}return Y.set(je,et),Je?(await z(je,qe.detune,et.detune),await z(je,qe.frequency,et.frequency)):(await _(je,qe.detune,et.detune),await _(je,qe.frequency,et.frequency)),await M(qe,je,et),et})(ve,_e)}}})(vr,di,ht,zr,xs),Eo=((z,u,b,_,M,Y,ae)=>class extends z{constructor(de,xe){const ve=M(de),_e={...Hs,...xe},Ee=b(ve,_e),qe=Y(ve),je=qe?_():null,et=de.sampleRate/2;super(de,!1,Ee,je),this._detune=u(this,qe,Ee.detune,153600,-153600),this._frequency=u(this,qe,Ee.frequency,et,-et),this._nativeOscillatorNode=Ee,this._onended=null,this._oscillatorNodeRenderer=je,this._oscillatorNodeRenderer!==null&&_e.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=_e.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(de){const xe=typeof de=="function"?ae(this,de):null;this._nativeOscillatorNode.onended=xe;const ve=this._nativeOscillatorNode.onended;this._onended=ve!==null&&ve===xe?de:ve}get type(){return this._nativeOscillatorNode.type}set type(de){this._nativeOscillatorNode.type=de,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(de){this._nativeOscillatorNode.setPeriodicWave(de),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=de)}start(de=0){if(this._nativeOscillatorNode.start(de),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=de),this.context.state!=="closed"){J(this);const xe=()=>{this._nativeOscillatorNode.removeEventListener("ended",xe),we(this)&&le(this)};this._nativeOscillatorNode.addEventListener("ended",xe)}}stop(de=0){this._nativeOscillatorNode.stop(de),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=de)}})(rs,kr,di,Jo,Vn,Kt,Ot),pi=(z=>(u,b)=>{const _=z(u,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),M=u.createBuffer(1,2,44100);return _.buffer=M,_.loop=!0,_.connect(b),_.start(),()=>{_.stop(),_.disconnect(b)}})(fo),Er=((z,u,b,_,M)=>(Y,{curve:ae,oversample:de,...xe})=>{const ve=Y.createWaveShaper(),_e=Y.createWaveShaper();In(ve,xe),In(_e,xe);const Ee=b(Y,{...xe,gain:1}),qe=b(Y,{...xe,gain:-1}),je=b(Y,{...xe,gain:1}),et=b(Y,{...xe,gain:-1});let Je=null,He=!1,ct=null;const rt={get bufferSize(){},get channelCount(){return ve.channelCount},set channelCount(Qe){Ee.channelCount=Qe,qe.channelCount=Qe,ve.channelCount=Qe,je.channelCount=Qe,_e.channelCount=Qe,et.channelCount=Qe},get channelCountMode(){return ve.channelCountMode},set channelCountMode(Qe){Ee.channelCountMode=Qe,qe.channelCountMode=Qe,ve.channelCountMode=Qe,je.channelCountMode=Qe,_e.channelCountMode=Qe,et.channelCountMode=Qe},get channelInterpretation(){return ve.channelInterpretation},set channelInterpretation(Qe){Ee.channelInterpretation=Qe,qe.channelInterpretation=Qe,ve.channelInterpretation=Qe,je.channelInterpretation=Qe,_e.channelInterpretation=Qe,et.channelInterpretation=Qe},get context(){return ve.context},get curve(){return ct},set curve(Qe){if(Qe!==null&&Qe.length<2)throw u();if(Qe===null)ve.curve=Qe,_e.curve=Qe;else{const It=Qe.length,At=new Float32Array(It+2-It%2),lt=new Float32Array(It+2-It%2);At[0]=Qe[0],lt[0]=-Qe[It-1];const wt=Math.ceil((It+1)/2),ut=(It+1)/2-1;for(let Rt=1;Rt<wt;Rt+=1){const bt=Rt/wt*ut,Nt=Math.floor(bt),Lt=Math.ceil(bt);At[Rt]=Nt===Lt?Qe[Nt]:(1-(bt-Nt))*Qe[Nt]+(1-(Lt-bt))*Qe[Lt],lt[Rt]=Nt===Lt?-Qe[It-1-Nt]:-(1-(bt-Nt))*Qe[It-1-Nt]-(1-(Lt-bt))*Qe[It-1-Lt]}At[wt]=It%2==1?Qe[wt-1]:(Qe[wt-2]+Qe[wt-1])/2,ve.curve=At,_e.curve=lt}ct=Qe,He&&(_(ct)&&Je===null?Je=z(Y,Ee):Je!==null&&(Je(),Je=null))},get inputs(){return[Ee]},get numberOfInputs(){return ve.numberOfInputs},get numberOfOutputs(){return ve.numberOfOutputs},get oversample(){return ve.oversample},set oversample(Qe){ve.oversample=Qe,_e.oversample=Qe},addEventListener:(...Qe)=>Ee.addEventListener(Qe[0],Qe[1],Qe[2]),dispatchEvent:(...Qe)=>Ee.dispatchEvent(Qe[0]),removeEventListener:(...Qe)=>Ee.removeEventListener(Qe[0],Qe[1],Qe[2])};return ae!==null&&(rt.curve=ae instanceof Float32Array?ae:new Float32Array(ae)),de!==rt.oversample&&(rt.oversample=de),M(Bt(rt,je),()=>{Ee.connect(ve).connect(je),Ee.connect(qe).connect(_e).connect(et).connect(je),He=!0,_(ct)&&(Je=z(Y,Ee))},()=>{Ee.disconnect(ve),ve.disconnect(je),Ee.disconnect(qe),qe.disconnect(_e),_e.disconnect(et),et.disconnect(je),He=!1,Je!==null&&(Je(),Je=null)})})(pi,Ze,un,ur,go),no=((z,u,b,_,M,Y,ae)=>(de,xe)=>{const ve=de.createWaveShaper();if(Y!==null&&Y.name==="webkitAudioContext"&&de.createGain().gain.automationRate===void 0)return b(de,xe);In(ve,xe);const _e=xe.curve===null||xe.curve instanceof Float32Array?xe.curve:new Float32Array(xe.curve);if(_e!==null&&_e.length<2)throw u();Jt(ve,{curve:_e},"curve"),Jt(ve,xe,"oversample");let Ee=null,qe=!1;return ae(ve,"curve",je=>()=>je.call(ve),je=>et=>(je.call(ve,et),qe&&(_(et)&&Ee===null?Ee=z(de,ve):_(et)||Ee===null||(Ee(),Ee=null)),et)),M(ve,()=>{qe=!0,_(ve.curve)&&(Ee=z(de,ve))},()=>{qe=!1,Ee!==null&&(Ee(),Ee=null)})})(pi,Ze,Er,ur,go,Lr,ss),Ua=((z,u,b,_,M,Y,ae,de,xe,ve)=>(_e,{coneInnerAngle:Ee,coneOuterAngle:qe,coneOuterGain:je,distanceModel:et,maxDistance:Je,orientationX:He,orientationY:ct,orientationZ:rt,panningModel:Qe,positionX:It,positionY:At,positionZ:lt,refDistance:wt,rolloffFactor:ut,...Rt})=>{const bt=_e.createPanner();if(Rt.channelCount>2||Rt.channelCountMode==="max")throw ae();In(bt,Rt);const Nt={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},Lt=b(_e,{...Nt,channelInterpretation:"speakers",numberOfInputs:6}),zt=_(_e,{...Rt,gain:1}),yn=_(_e,{...Nt,gain:1}),rn=_(_e,{...Nt,gain:0}),nn=_(_e,{...Nt,gain:0}),Sn=_(_e,{...Nt,gain:0}),Qt=_(_e,{...Nt,gain:0}),$n=_(_e,{...Nt,gain:0}),Fn=M(_e,256,6,1),jn=Y(_e,{...Nt,curve:new Float32Array([1,1]),oversample:"none"});let ys=[He,ct,rt],Ds=[It,At,lt];const Xr=new Float32Array(1);Fn.onaudioprocess=({inputBuffer:Yt})=>{const us=[xe(Yt,Xr,0),xe(Yt,Xr,1),xe(Yt,Xr,2)];us.some((fr,fa)=>fr!==ys[fa])&&(bt.setOrientation(...us),ys=us);const es=[xe(Yt,Xr,3),xe(Yt,Xr,4),xe(Yt,Xr,5)];es.some((fr,fa)=>fr!==Ds[fa])&&(bt.setPosition(...es),Ds=es)},Object.defineProperty(rn.gain,"defaultValue",{get:()=>0}),Object.defineProperty(nn.gain,"defaultValue",{get:()=>0}),Object.defineProperty(Sn.gain,"defaultValue",{get:()=>0}),Object.defineProperty(Qt.gain,"defaultValue",{get:()=>0}),Object.defineProperty($n.gain,"defaultValue",{get:()=>0});const Nn={get bufferSize(){},get channelCount(){return bt.channelCount},set channelCount(Yt){if(Yt>2)throw ae();zt.channelCount=Yt,bt.channelCount=Yt},get channelCountMode(){return bt.channelCountMode},set channelCountMode(Yt){if(Yt==="max")throw ae();zt.channelCountMode=Yt,bt.channelCountMode=Yt},get channelInterpretation(){return bt.channelInterpretation},set channelInterpretation(Yt){zt.channelInterpretation=Yt,bt.channelInterpretation=Yt},get coneInnerAngle(){return bt.coneInnerAngle},set coneInnerAngle(Yt){bt.coneInnerAngle=Yt},get coneOuterAngle(){return bt.coneOuterAngle},set coneOuterAngle(Yt){bt.coneOuterAngle=Yt},get coneOuterGain(){return bt.coneOuterGain},set coneOuterGain(Yt){if(Yt<0||Yt>1)throw u();bt.coneOuterGain=Yt},get context(){return bt.context},get distanceModel(){return bt.distanceModel},set distanceModel(Yt){bt.distanceModel=Yt},get inputs(){return[zt]},get maxDistance(){return bt.maxDistance},set maxDistance(Yt){if(Yt<0)throw new RangeError;bt.maxDistance=Yt},get numberOfInputs(){return bt.numberOfInputs},get numberOfOutputs(){return bt.numberOfOutputs},get orientationX(){return yn.gain},get orientationY(){return rn.gain},get orientationZ(){return nn.gain},get panningModel(){return bt.panningModel},set panningModel(Yt){bt.panningModel=Yt},get positionX(){return Sn.gain},get positionY(){return Qt.gain},get positionZ(){return $n.gain},get refDistance(){return bt.refDistance},set refDistance(Yt){if(Yt<0)throw new RangeError;bt.refDistance=Yt},get rolloffFactor(){return bt.rolloffFactor},set rolloffFactor(Yt){if(Yt<0)throw new RangeError;bt.rolloffFactor=Yt},addEventListener:(...Yt)=>zt.addEventListener(Yt[0],Yt[1],Yt[2]),dispatchEvent:(...Yt)=>zt.dispatchEvent(Yt[0]),removeEventListener:(...Yt)=>zt.removeEventListener(Yt[0],Yt[1],Yt[2])};return Ee!==Nn.coneInnerAngle&&(Nn.coneInnerAngle=Ee),qe!==Nn.coneOuterAngle&&(Nn.coneOuterAngle=qe),je!==Nn.coneOuterGain&&(Nn.coneOuterGain=je),et!==Nn.distanceModel&&(Nn.distanceModel=et),Je!==Nn.maxDistance&&(Nn.maxDistance=Je),He!==Nn.orientationX.value&&(Nn.orientationX.value=He),ct!==Nn.orientationY.value&&(Nn.orientationY.value=ct),rt!==Nn.orientationZ.value&&(Nn.orientationZ.value=rt),Qe!==Nn.panningModel&&(Nn.panningModel=Qe),It!==Nn.positionX.value&&(Nn.positionX.value=It),At!==Nn.positionY.value&&(Nn.positionY.value=At),lt!==Nn.positionZ.value&&(Nn.positionZ.value=lt),wt!==Nn.refDistance&&(Nn.refDistance=wt),ut!==Nn.rolloffFactor&&(Nn.rolloffFactor=ut),ys[0]===1&&ys[1]===0&&ys[2]===0||bt.setOrientation(...ys),Ds[0]===0&&Ds[1]===0&&Ds[2]===0||bt.setPosition(...Ds),ve(Bt(Nn,bt),()=>{zt.connect(bt),z(zt,jn,0,0),jn.connect(yn).connect(Lt,0,0),jn.connect(rn).connect(Lt,0,1),jn.connect(nn).connect(Lt,0,2),jn.connect(Sn).connect(Lt,0,3),jn.connect(Qt).connect(Lt,0,4),jn.connect($n).connect(Lt,0,5),Lt.connect(Fn).connect(_e.destination)},()=>{zt.disconnect(bt),de(zt,jn,0,0),jn.disconnect(yn),yn.disconnect(Lt),jn.disconnect(rn),rn.disconnect(Lt),jn.disconnect(nn),nn.disconnect(Lt),jn.disconnect(Sn),Sn.disconnect(Lt),jn.disconnect(Qt),Qt.disconnect(Lt),jn.disconnect($n),$n.disconnect(Lt),Lt.disconnect(Fn),Fn.disconnect(_e.destination)})})(Xe,Ze,hr,un,Gt,no,Tn,gt,Xs,go),Ui=(z=>(u,b)=>{const _=u.createPanner();return _.orientationX===void 0?z(u,b):(In(_,b),me(_,b,"orientationX"),me(_,b,"orientationY"),me(_,b,"orientationZ"),me(_,b,"positionX"),me(_,b,"positionY"),me(_,b,"positionZ"),Jt(_,b,"coneInnerAngle"),Jt(_,b,"coneOuterAngle"),Jt(_,b,"coneOuterGain"),Jt(_,b,"distanceModel"),Jt(_,b,"maxDistance"),Jt(_,b,"panningModel"),Jt(_,b,"refDistance"),Jt(_,b,"rolloffFactor"),_)})(Ua),Nc=((z,u,b,_,M,Y,ae,de,xe,ve)=>()=>{const _e=new WeakMap;let Ee=null;return{render(qe,je){const et=_e.get(je);return et!==void 0?Promise.resolve(et):(async(Je,He)=>{let ct=null,rt=Y(Je);const Qe={channelCount:rt.channelCount,channelCountMode:rt.channelCountMode,channelInterpretation:rt.channelInterpretation},It={...Qe,coneInnerAngle:rt.coneInnerAngle,coneOuterAngle:rt.coneOuterAngle,coneOuterGain:rt.coneOuterGain,distanceModel:rt.distanceModel,maxDistance:rt.maxDistance,panningModel:rt.panningModel,refDistance:rt.refDistance,rolloffFactor:rt.rolloffFactor},At=ce(rt,He);if("bufferSize"in rt)ct=_(He,{...Qe,gain:1});else if(!At){const lt={...It,orientationX:rt.orientationX.value,orientationY:rt.orientationY.value,orientationZ:rt.orientationZ.value,positionX:rt.positionX.value,positionY:rt.positionY.value,positionZ:rt.positionZ.value};rt=M(He,lt)}if(_e.set(He,ct===null?rt:ct),ct!==null){if(Ee===null){if(ae===null)throw new Error("Missing the native OfflineAudioContext constructor.");const zt=new ae(6,Je.context.length,He.sampleRate),yn=u(zt,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});yn.connect(zt.destination),Ee=(async()=>{const rn=await Promise.all([Je.orientationX,Je.orientationY,Je.orientationZ,Je.positionX,Je.positionY,Je.positionZ].map(async(nn,Sn)=>{const Qt=b(zt,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:Sn===0?1:0});return await de(zt,nn,Qt.offset),Qt}));for(let nn=0;nn<6;nn+=1)rn[nn].connect(yn,0,nn),rn[nn].start(0);return ve(zt)})()}const lt=await Ee,wt=_(He,{...Qe,gain:1});await xe(Je,He,wt);const ut=[];for(let zt=0;zt<lt.numberOfChannels;zt+=1)ut.push(lt.getChannelData(zt));let Rt=[ut[0][0],ut[1][0],ut[2][0]],bt=[ut[3][0],ut[4][0],ut[5][0]],Nt=_(He,{...Qe,gain:1}),Lt=M(He,{...It,orientationX:Rt[0],orientationY:Rt[1],orientationZ:Rt[2],positionX:bt[0],positionY:bt[1],positionZ:bt[2]});wt.connect(Nt).connect(Lt.inputs[0]),Lt.connect(ct);for(let zt=128;zt<lt.length;zt+=128){const yn=[ut[0][zt],ut[1][zt],ut[2][zt]],rn=[ut[3][zt],ut[4][zt],ut[5][zt]];if(yn.some((nn,Sn)=>nn!==Rt[Sn])||rn.some((nn,Sn)=>nn!==bt[Sn])){Rt=yn,bt=rn;const nn=zt/He.sampleRate;Nt.gain.setValueAtTime(0,nn),Nt=_(He,{...Qe,gain:0}),Lt=M(He,{...It,orientationX:Rt[0],orientationY:Rt[1],orientationZ:Rt[2],positionX:bt[0],positionY:bt[1],positionZ:bt[2]}),Nt.gain.setValueAtTime(1,nn),wt.connect(Nt).connect(Lt.inputs[0]),Lt.connect(ct)}}return ct}return At?(await z(He,Je.orientationX,rt.orientationX),await z(He,Je.orientationY,rt.orientationY),await z(He,Je.orientationZ,rt.orientationZ),await z(He,Je.positionX,rt.positionX),await z(He,Je.positionY,rt.positionY),await z(He,Je.positionZ,rt.positionZ)):(await de(He,Je.orientationX,rt.orientationX),await de(He,Je.orientationY,rt.orientationY),await de(He,Je.orientationZ,rt.orientationZ),await de(He,Je.positionX,rt.positionX),await de(He,Je.positionY,rt.positionY),await de(He,Je.positionZ,rt.positionZ)),ze(rt)?await xe(Je,He,rt.inputs[0]):await xe(Je,He,rt),rt})(qe,je)}}})(vr,hr,Ms,un,Ui,ht,ls,zr,xs,Yo),Ga=((z,u,b,_,M,Y,ae)=>class extends z{constructor(de,xe){const ve=M(de),_e={...Ri,...xe},Ee=b(ve,_e),qe=Y(ve);super(de,!1,Ee,qe?_():null),this._nativePannerNode=Ee,this._orientationX=u(this,qe,Ee.orientationX,Ae,Re),this._orientationY=u(this,qe,Ee.orientationY,Ae,Re),this._orientationZ=u(this,qe,Ee.orientationZ,Ae,Re),this._positionX=u(this,qe,Ee.positionX,Ae,Re),this._positionY=u(this,qe,Ee.positionY,Ae,Re),this._positionZ=u(this,qe,Ee.positionZ,Ae,Re),ae(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(de){this._nativePannerNode.coneInnerAngle=de}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(de){this._nativePannerNode.coneOuterAngle=de}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(de){this._nativePannerNode.coneOuterGain=de}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(de){this._nativePannerNode.distanceModel=de}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(de){this._nativePannerNode.maxDistance=de}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(de){this._nativePannerNode.panningModel=de}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(de){this._nativePannerNode.refDistance=de}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(de){this._nativePannerNode.rolloffFactor=de}})(rs,kr,Ui,Nc,Vn,Kt,mo),Wa=(z=>(u,{disableNormalization:b,imag:_,real:M})=>{const Y=_ instanceof Float32Array?_:new Float32Array(_),ae=M instanceof Float32Array?M:new Float32Array(M),de=u.createPeriodicWave(ae,Y,{disableNormalization:b});if(Array.from(_).length<2)throw z();return de})(Te),Ha=((z,u,b,_)=>class Fu{constructor(Y,ae){const de=u(Y),xe=(_e=>{const{imag:Ee,real:qe}=_e;return Ee===void 0?qe===void 0?{..._e,imag:[0,0],real:[0,0]}:{..._e,imag:Array.from(qe,()=>0),real:qe}:qe===void 0?{..._e,imag:Ee,real:Array.from(Ee,()=>0)}:{..._e,imag:Ee,real:qe}})({...Di,...ae}),ve=z(de,xe);return b.add(ve),ve}static[Symbol.hasInstance](Y){return Y!==null&&typeof Y=="object"&&Object.getPrototypeOf(Y)===Fu.prototype||b.has(Y)}})(Wa,Vn,new WeakSet),No=((z,u,b,_,M,Y)=>{const de=new Float32Array([1,1]),xe=Math.PI/2,ve={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},_e={...ve,oversample:"none"},Ee=(qe,je,et,Je,He)=>{if(je===1)return((ct,rt,Qe,It)=>{const At=new Float32Array(16385),lt=new Float32Array(16385);for(let Lt=0;Lt<16385;Lt+=1){const zt=Lt/16384*xe;At[Lt]=Math.cos(zt),lt[Lt]=Math.sin(zt)}const wt=b(ct,{...ve,gain:0}),ut=_(ct,{..._e,curve:At}),Rt=_(ct,{..._e,curve:de}),bt=b(ct,{...ve,gain:0}),Nt=_(ct,{..._e,curve:lt});return{connectGraph(){rt.connect(wt),rt.connect(Rt.inputs===void 0?Rt:Rt.inputs[0]),rt.connect(bt),Rt.connect(Qe),Qe.connect(ut.inputs===void 0?ut:ut.inputs[0]),Qe.connect(Nt.inputs===void 0?Nt:Nt.inputs[0]),ut.connect(wt.gain),Nt.connect(bt.gain),wt.connect(It,0,0),bt.connect(It,0,1)},disconnectGraph(){rt.disconnect(wt),rt.disconnect(Rt.inputs===void 0?Rt:Rt.inputs[0]),rt.disconnect(bt),Rt.disconnect(Qe),Qe.disconnect(ut.inputs===void 0?ut:ut.inputs[0]),Qe.disconnect(Nt.inputs===void 0?Nt:Nt.inputs[0]),ut.disconnect(wt.gain),Nt.disconnect(bt.gain),wt.disconnect(It,0,0),bt.disconnect(It,0,1)}}})(qe,et,Je,He);if(je===2)return((ct,rt,Qe,It)=>{const At=new Float32Array(16385),lt=new Float32Array(16385),wt=new Float32Array(16385),ut=new Float32Array(16385),Rt=Math.floor(8192.5);for(let Fn=0;Fn<16385;Fn+=1)if(Fn>Rt){const jn=(Fn-Rt)/(16384-Rt)*xe;At[Fn]=Math.cos(jn),lt[Fn]=Math.sin(jn),wt[Fn]=0,ut[Fn]=1}else{const jn=Fn/(16384-Rt)*xe;At[Fn]=1,lt[Fn]=0,wt[Fn]=Math.cos(jn),ut[Fn]=Math.sin(jn)}const bt=u(ct,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),Nt=b(ct,{...ve,gain:0}),Lt=_(ct,{..._e,curve:At}),zt=b(ct,{...ve,gain:0}),yn=_(ct,{..._e,curve:lt}),rn=_(ct,{..._e,curve:de}),nn=b(ct,{...ve,gain:0}),Sn=_(ct,{..._e,curve:wt}),Qt=b(ct,{...ve,gain:0}),$n=_(ct,{..._e,curve:ut});return{connectGraph(){rt.connect(bt),rt.connect(rn.inputs===void 0?rn:rn.inputs[0]),bt.connect(Nt,0),bt.connect(zt,0),bt.connect(nn,1),bt.connect(Qt,1),rn.connect(Qe),Qe.connect(Lt.inputs===void 0?Lt:Lt.inputs[0]),Qe.connect(yn.inputs===void 0?yn:yn.inputs[0]),Qe.connect(Sn.inputs===void 0?Sn:Sn.inputs[0]),Qe.connect($n.inputs===void 0?$n:$n.inputs[0]),Lt.connect(Nt.gain),yn.connect(zt.gain),Sn.connect(nn.gain),$n.connect(Qt.gain),Nt.connect(It,0,0),nn.connect(It,0,0),zt.connect(It,0,1),Qt.connect(It,0,1)},disconnectGraph(){rt.disconnect(bt),rt.disconnect(rn.inputs===void 0?rn:rn.inputs[0]),bt.disconnect(Nt,0),bt.disconnect(zt,0),bt.disconnect(nn,1),bt.disconnect(Qt,1),rn.disconnect(Qe),Qe.disconnect(Lt.inputs===void 0?Lt:Lt.inputs[0]),Qe.disconnect(yn.inputs===void 0?yn:yn.inputs[0]),Qe.disconnect(Sn.inputs===void 0?Sn:Sn.inputs[0]),Qe.disconnect($n.inputs===void 0?$n:$n.inputs[0]),Lt.disconnect(Nt.gain),yn.disconnect(zt.gain),Sn.disconnect(nn.gain),$n.disconnect(Qt.gain),Nt.disconnect(It,0,0),nn.disconnect(It,0,0),zt.disconnect(It,0,1),Qt.disconnect(It,0,1)}}})(qe,et,Je,He);throw M()};return(qe,{channelCount:je,channelCountMode:et,pan:Je,...He})=>{if(et==="max")throw M();const ct=z(qe,{...He,channelCount:1,channelCountMode:et,numberOfInputs:2}),rt=b(qe,{...He,channelCount:je,channelCountMode:et,gain:1}),Qe=b(qe,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:Je});let{connectGraph:It,disconnectGraph:At}=Ee(qe,je,rt,Qe,ct);Object.defineProperty(Qe.gain,"defaultValue",{get:()=>0}),Object.defineProperty(Qe.gain,"maxValue",{get:()=>1}),Object.defineProperty(Qe.gain,"minValue",{get:()=>-1});const lt={get bufferSize(){},get channelCount(){return rt.channelCount},set channelCount(ut){rt.channelCount!==ut&&(wt&&At(),{connectGraph:It,disconnectGraph:At}=Ee(qe,ut,rt,Qe,ct),wt&&It()),rt.channelCount=ut},get channelCountMode(){return rt.channelCountMode},set channelCountMode(ut){if(ut==="clamped-max"||ut==="max")throw M();rt.channelCountMode=ut},get channelInterpretation(){return rt.channelInterpretation},set channelInterpretation(ut){rt.channelInterpretation=ut},get context(){return rt.context},get inputs(){return[rt]},get numberOfInputs(){return rt.numberOfInputs},get numberOfOutputs(){return rt.numberOfOutputs},get pan(){return Qe.gain},addEventListener:(...ut)=>rt.addEventListener(ut[0],ut[1],ut[2]),dispatchEvent:(...ut)=>rt.dispatchEvent(ut[0]),removeEventListener:(...ut)=>rt.removeEventListener(ut[0],ut[1],ut[2])};let wt=!1;return Y(Bt(lt,ct),()=>{It(),wt=!0},()=>{At(),wt=!1})}})(hr,_t,un,no,Tn,go),fi=((z,u)=>(b,_)=>{const M=_.channelCountMode;if(M==="clamped-max")throw u();if(b.createStereoPanner===void 0)return z(b,_);const Y=b.createStereoPanner();return In(Y,_),me(Y,_,"pan"),Object.defineProperty(Y,"channelCountMode",{get:()=>M,set:ae=>{if(ae!==M)throw u()}}),Y})(No,Tn),Ac=((z,u,b,_,M)=>()=>{const Y=new WeakMap;return{render(ae,de){const xe=Y.get(de);return xe!==void 0?Promise.resolve(xe):(async(ve,_e)=>{let Ee=b(ve);const qe=ce(Ee,_e);if(!qe){const je={channelCount:Ee.channelCount,channelCountMode:Ee.channelCountMode,channelInterpretation:Ee.channelInterpretation,pan:Ee.pan.value};Ee=u(_e,je)}return Y.set(_e,Ee),qe?await z(_e,ve.pan,Ee.pan):await _(_e,ve.pan,Ee.pan),ze(Ee)?await M(ve,_e,Ee.inputs[0]):await M(ve,_e,Ee),Ee})(ae,de)}}})(vr,fi,ht,zr,xs),so=((z,u,b,_,M,Y)=>class extends z{constructor(ae,de){const xe=M(ae),ve={...Ks,...de},_e=b(xe,ve),Ee=Y(xe);super(ae,!1,_e,Ee?_():null),this._pan=u(this,Ee,_e.pan)}get pan(){return this._pan}})(rs,kr,fi,Ac,Vn,Kt),Oc=((z,u,b)=>()=>{const _=new WeakMap;return{render(M,Y){const ae=_.get(Y);return ae!==void 0?Promise.resolve(ae):(async(de,xe)=>{let ve=u(de);if(!ce(ve,xe)){const _e={channelCount:ve.channelCount,channelCountMode:ve.channelCountMode,channelInterpretation:ve.channelInterpretation,curve:ve.curve,oversample:ve.oversample};ve=z(xe,_e)}return _.set(xe,ve),ze(ve)?await b(de,xe,ve.inputs[0]):await b(de,xe,ve),ve})(M,Y)}}})(no,ht,xs),bo=((z,u,b,_,M,Y,ae)=>class extends z{constructor(de,xe){const ve=M(de),_e={...tr,...xe},Ee=b(ve,_e);super(de,!0,Ee,Y(ve)?_():null),this._isCurveNullified=!1,this._nativeWaveShaperNode=Ee,ae(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(de){if(de===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(de.length<2)throw u();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=de}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(de){this._nativeWaveShaperNode.oversample=de}})(rs,Ze,no,Oc,Vn,Kt,mo),Ka=(z=>z!==null&&z.isSecureContext)(ms),Zo=(z=>(u,b,_)=>{Object.defineProperties(z,{currentFrame:{configurable:!0,get:()=>Math.round(u*b)},currentTime:{configurable:!0,get:()=>u}});try{return _()}finally{z!==null&&(delete z.currentFrame,delete z.currentTime)}})(ms),Ao=new WeakMap,Xa=((z,u)=>b=>{let _=z.get(b);if(_!==void 0)return _;if(u===null)throw new Error("Missing the native OfflineAudioContext constructor.");return _=new u(1,1,44100),z.set(b,_),_})(Ao,ls),Rc=Ka?((z,u,b,_,M,Y,ae,de,xe,ve,_e,Ee,qe)=>{let je=0;return(et,Je,He={credentials:"omit"})=>{const ct=_e.get(et);if(ct!==void 0&&ct.has(Je))return Promise.resolve();const rt=ve.get(et);if(rt!==void 0){const At=rt.get(Je);if(At!==void 0)return At}const Qe=Y(et),It=Qe.audioWorklet===void 0?M(Je).then(([At,lt])=>{const[wt,ut]=P(At,lt);return b(`${wt};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${ut}
})})(window,'_AWGS')`)}).then(()=>{const At=qe._AWGS.pop();if(At===void 0)throw new SyntaxError;_(Qe.currentTime,Qe.sampleRate,()=>At(class{},void 0,(lt,wt)=>{if(lt.trim()==="")throw u();const ut=I.get(Qe);if(ut!==void 0){if(ut.has(lt))throw u();F(wt),O(wt.parameterDescriptors),ut.set(lt,wt)}else F(wt),O(wt.parameterDescriptors),I.set(Qe,new Map([[lt,wt]]))},Qe.sampleRate,void 0,void 0))}):Promise.all([M(Je),Promise.resolve(z(Ee,Ee))]).then(([[At,lt],wt])=>{const ut=je+1;je=ut;const[Rt,bt]=P(At,lt),Nt=new Blob([`${Rt};((AudioWorkletProcessor,registerProcessor)=>{${bt}
})(${wt?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${wt?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${wt?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${ut}',class extends AudioWorkletProcessor{process(){return !1}})`],{type:"application/javascript; charset=utf-8"}),Lt=URL.createObjectURL(Nt);return Qe.audioWorklet.addModule(Lt,He).then(()=>{if(de(Qe))return Qe;const zt=ae(Qe);return zt.audioWorklet.addModule(Lt,He).then(()=>zt)}).then(zt=>{if(xe===null)throw new SyntaxError;try{new xe(zt,`__sac${ut}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(Lt))});return rt===void 0?ve.set(et,new Map([[Je,It]])):rt.set(Je,It),It.then(()=>{const At=_e.get(et);At===void 0?_e.set(et,new Set([Je])):At.add(Je)}).finally(()=>{const At=ve.get(et);At!==void 0&&At.delete(Je)}),It}})(Fs,Tn,(z=>u=>new Promise((b,_)=>{if(z===null)return void _(new SyntaxError);const M=z.document.head;if(M===null)_(new SyntaxError);else{const Y=z.document.createElement("script"),ae=new Blob([u],{type:"application/javascript"}),de=URL.createObjectURL(ae),xe=z.onerror,ve=()=>{z.onerror=xe,URL.revokeObjectURL(de)};z.onerror=(_e,Ee,qe,je,et)=>Ee===de||Ee===z.location.href&&qe===1&&je===1?(ve(),_(et),!1):xe!==null?xe(_e,Ee,qe,je,et):void 0,Y.onerror=()=>{ve(),_(new SyntaxError)},Y.onload=()=>{ve(),b()},Y.src=de,Y.type="module",M.appendChild(Y)}}))(ms),Zo,async z=>{try{const u=await fetch(z);if(u.ok)return[await u.text(),u.url]}catch{}throw new DOMException("","AbortError")},Vn,Xa,Kt,Dn,new WeakMap,new WeakMap,((z,u)=>async()=>{if(z===null)return!0;if(u===null)return!1;const b=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),_=new u(1,128,44100),M=URL.createObjectURL(b);let Y=!1,ae=!1;try{await _.audioWorklet.addModule(M);const de=new z(_,"a",{numberOfOutputs:0}),xe=_.createOscillator();de.port.onmessage=()=>Y=!0,de.onprocessorerror=()=>ae=!0,xe.connect(de),xe.start(0),await _.startRendering(),await new Promise(ve=>setTimeout(ve))}catch{}finally{URL.revokeObjectURL(M)}return Y&&!ae})(Dn,ls),ms):void 0,Dc=((z,u)=>b=>z(b)||u(b))(hs,Kt),Pc=((z,u,b,_,M,Y,ae,de,xe,ve,_e)=>(Ee,qe)=>{const je=ae(Ee)?Ee:Y(Ee);if(M.has(qe)){const et=new DOMException("","DataCloneError");return Promise.reject(et)}try{M.add(qe)}catch{}return u(xe,()=>xe(je))?je.decodeAudioData(qe).then(et=>(_r(qe).catch(()=>{}),u(de,()=>de(et))||_e(et),z.add(et),et)):new Promise((et,Je)=>{const He=async()=>{try{await _r(qe)}catch{}},ct=rt=>{Je(rt),He()};try{je.decodeAudioData(qe,rt=>{typeof rt.copyFromChannel!="function"&&(ve(rt),Ce(rt)),z.add(rt),He().then(()=>et(rt))},rt=>{ct(rt===null?new DOMException("","EncodingError"):rt)})}catch(rt){ct(rt)}})})(Bi,Fs,0,0,new WeakSet,Vn,Dc,ue,hn,ga,Vi),Ya=((z,u,b,_,M,Y,ae,de,xe,ve,_e,Ee,qe,je,et,Je,He,ct,rt,Qe)=>class extends et{constructor(It,At){super(It,At),this._nativeContext=It,this._audioWorklet=z===void 0?void 0:{addModule:(lt,wt)=>z(this,lt,wt)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new u(this)}createBiquadFilter(){return new M(this)}createBuffer(It,At,lt){return new b({length:At,numberOfChannels:It,sampleRate:lt})}createBufferSource(){return new _(this)}createChannelMerger(It=6){return new Y(this,{numberOfInputs:It})}createChannelSplitter(It=6){return new ae(this,{numberOfOutputs:It})}createConstantSource(){return new de(this)}createConvolver(){return new xe(this)}createDelay(It=1){return new _e(this,{maxDelayTime:It})}createDynamicsCompressor(){return new Ee(this)}createGain(){return new qe(this)}createIIRFilter(It,At){return new je(this,{feedback:At,feedforward:It})}createOscillator(){return new Je(this)}createPanner(){return new He(this)}createPeriodicWave(It,At,lt={disableNormalization:!1}){return new ct(this,{...lt,imag:At,real:It})}createStereoPanner(){return new rt(this)}createWaveShaper(){return new Qe(this)}decodeAudioData(It,At,lt){return ve(this._nativeContext,It).then(wt=>(typeof At=="function"&&At(wt),wt),wt=>{throw typeof lt=="function"&&lt(wt),wt})}})(Rc,Zn,Ma,ui,Ba,Xo,ko,Vr,xa,Pc,Va,_n,yo,Qo,to,Eo,Ga,Ha,so,bo),Qa=((z,u,b,_)=>class extends z{constructor(M,Y){const ae=b(M),de=((xe,ve)=>xe.createMediaElementSource(ve.mediaElement))(ae,Y);if(_(ae))throw TypeError();super(M,!0,de,null),this._nativeMediaElementAudioSourceNode=de}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}})(rs,0,Vn,Kt),Fc=((z,u,b,_)=>class extends z{constructor(M,Y){const ae=b(M);if(_(ae))throw new TypeError;const de=((xe,ve)=>{const _e=xe.createMediaStreamDestination();return In(_e,ve),_e.numberOfOutputs===1&&Object.defineProperty(_e,"numberOfOutputs",{get:()=>0}),_e})(ae,{...sn,...Y});super(M,!1,de,null),this._nativeMediaStreamAudioDestinationNode=de}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}})(rs,0,Vn,Kt),Mc=((z,u,b,_)=>class extends z{constructor(M,Y){const ae=b(M),de=((xe,{mediaStream:ve})=>{const _e=ve.getAudioTracks();_e.sort((je,et)=>je.id<et.id?-1:je.id>et.id?1:0);const Ee=_e.slice(0,1),qe=xe.createMediaStreamSource(new MediaStream(Ee));return Object.defineProperty(qe,"mediaStream",{value:ve}),qe})(ae,Y);if(_(ae))throw new TypeError;super(M,!0,de,null),this._nativeMediaStreamAudioSourceNode=de}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}})(rs,0,Vn,Kt),Ja=((z,u)=>(b,{mediaStreamTrack:_})=>{if(typeof b.createMediaStreamTrackSource=="function")return b.createMediaStreamTrackSource(_);const M=new MediaStream([_]),Y=b.createMediaStreamSource(M);if(_.kind!=="audio")throw z();if(u(b))throw new TypeError;return Y})(Ze,Kt),Za=((z,u,b)=>class extends z{constructor(_,M){const Y=b(_);super(_,!0,u(Y,M),null)}})(rs,Ja,Vn),ec=((z,u,b,_,M,Y,ae,de,xe)=>class extends z{constructor(ve={}){if(xe===null)throw new Error("Missing the native AudioContext constructor.");let _e;try{_e=new xe(ve)}catch(je){throw je.code===12&&je.message==="sampleRate is not in range"?b():je}if(_e===null)throw _();if(!(je=>je===void 0||typeof je=="number"||typeof je=="string"&&(je==="balanced"||je==="interactive"||je==="playback"))(ve.latencyHint))throw new TypeError(`The provided value '${ve.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(ve.sampleRate!==void 0&&_e.sampleRate!==ve.sampleRate)throw b();super(_e,2);const{latencyHint:Ee}=ve,{sampleRate:qe}=_e;if(this._baseLatency=typeof _e.baseLatency=="number"?_e.baseLatency:Ee==="balanced"?512/qe:Ee==="interactive"||Ee===void 0?256/qe:Ee==="playback"?1024/qe:128*Math.max(2,Math.min(128,Math.round(Ee*qe/128)))/qe,this._nativeAudioContext=_e,xe.name==="webkitAudioContext"?(this._nativeGainNode=_e.createGain(),this._nativeOscillatorNode=_e.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(_e.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,_e.state==="running"){this._state="suspended";const je=()=>{this._state==="suspended"&&(this._state=null),_e.removeEventListener("statechange",je)};_e.addEventListener("statechange",je)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw u()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),H(this)}))}createMediaElementSource(ve){return new M(this,{mediaElement:ve})}createMediaStreamDestination(){return new Y(this)}createMediaStreamSource(ve){return new ae(this,{mediaStream:ve})}createMediaStreamTrackSource(ve){return new de(this,{mediaStreamTrack:ve})}resume(){return this._state==="suspended"?new Promise((ve,_e)=>{const Ee=()=>{this._nativeAudioContext.removeEventListener("statechange",Ee),this._nativeAudioContext.state==="running"?ve():this.resume().then(ve,_e)};this._nativeAudioContext.addEventListener("statechange",Ee)}):this._nativeAudioContext.resume().catch(ve=>{throw ve===void 0||ve.code===15?u():ve})}suspend(){return this._nativeAudioContext.suspend().catch(ve=>{throw ve===void 0?u():ve})}})(Ya,Ze,Tn,_s,Qa,Fc,Mc,Za,Lr),Sa=(z=>u=>{const b=z.get(u);if(b===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return b})(hi),Ta=(z=>(u,b)=>{z(u).add(b)})(Sa),tc=(z=>(u,b,_=0,M=0)=>{const Y=u[_];if(Y===void 0)throw z();return on(b)?Y.connect(b,0,M):Y.connect(b,0)})(Te),Lc=(z=>(u,b)=>{z(u).delete(b)})(Sa),nc=(z=>(u,b,_,M=0)=>b===void 0?u.forEach(Y=>Y.disconnect()):typeof b=="number"?cr(z,u,b).disconnect():on(b)?_===void 0?u.forEach(Y=>Y.disconnect(b)):M===void 0?cr(z,u,_).disconnect(b,0):cr(z,u,_).disconnect(b,0,M):_===void 0?u.forEach(Y=>Y.disconnect(b)):cr(z,u,_).disconnect(b,0))(Te),sc=new WeakMap,Gi=((z,u)=>b=>u(z,b))(sc,G),rc=((z,u,b,_,M,Y,ae,de,xe,ve,_e,Ee,qe)=>(je,et,Je,He)=>{if(He.numberOfInputs===0&&He.numberOfOutputs===0)throw xe();const ct=Array.isArray(He.outputChannelCount)?He.outputChannelCount:Array.from(He.outputChannelCount);if(ct.some(Mt=>Mt<1))throw xe();if(ct.length!==He.numberOfOutputs)throw u();if(He.channelCountMode!=="explicit")throw xe();const rt=He.channelCount*He.numberOfInputs,Qe=ct.reduce((Mt,Un)=>Mt+Un,0),It=Je.parameterDescriptors===void 0?0:Je.parameterDescriptors.length;if(rt+It>6||Qe>6)throw xe();const At=new MessageChannel,lt=[],wt=[];for(let Mt=0;Mt<He.numberOfInputs;Mt+=1)lt.push(ae(je,{channelCount:He.channelCount,channelCountMode:He.channelCountMode,channelInterpretation:He.channelInterpretation,gain:1})),wt.push(M(je,{channelCount:He.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:He.channelCount}));const ut=[];if(Je.parameterDescriptors!==void 0)for(const{defaultValue:Mt,maxValue:Un,minValue:mr,name:Cs}of Je.parameterDescriptors){const Ln=Y(je,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:He.parameterData[Cs]!==void 0?He.parameterData[Cs]:Mt===void 0?0:Mt});Object.defineProperties(Ln.offset,{defaultValue:{get:()=>Mt===void 0?0:Mt},maxValue:{get:()=>Un===void 0?Ae:Un},minValue:{get:()=>mr===void 0?Re:mr}}),ut.push(Ln)}const Rt=_(je,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,rt+It)}),bt=Ye(et,je.sampleRate),Nt=de(je,bt,rt+It,Math.max(1,Qe)),Lt=M(je,{channelCount:Math.max(1,Qe),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,Qe)}),zt=[];for(let Mt=0;Mt<He.numberOfOutputs;Mt+=1)zt.push(_(je,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:ct[Mt]}));for(let Mt=0;Mt<He.numberOfInputs;Mt+=1){lt[Mt].connect(wt[Mt]);for(let Un=0;Un<He.channelCount;Un+=1)wt[Mt].connect(Rt,Un,Mt*He.channelCount+Un)}const yn=new Qn(Je.parameterDescriptors===void 0?[]:Je.parameterDescriptors.map(({name:Mt},Un)=>{const mr=ut[Un];return mr.connect(Rt,0,rt+Un),mr.start(0),[Mt,mr.offset]}));Rt.connect(Nt);let rn=He.channelInterpretation,nn=null;const Sn=He.numberOfOutputs===0?[Nt]:zt,Qt={get bufferSize(){return bt},get channelCount(){return He.channelCount},set channelCount(Mt){throw b()},get channelCountMode(){return He.channelCountMode},set channelCountMode(Mt){throw b()},get channelInterpretation(){return rn},set channelInterpretation(Mt){for(const Un of lt)Un.channelInterpretation=Mt;rn=Mt},get context(){return Nt.context},get inputs(){return lt},get numberOfInputs(){return He.numberOfInputs},get numberOfOutputs(){return He.numberOfOutputs},get onprocessorerror(){return nn},set onprocessorerror(Mt){typeof nn=="function"&&Qt.removeEventListener("processorerror",nn),nn=typeof Mt=="function"?Mt:null,typeof nn=="function"&&Qt.addEventListener("processorerror",nn)},get parameters(){return yn},get port(){return At.port2},addEventListener:(...Mt)=>Nt.addEventListener(Mt[0],Mt[1],Mt[2]),connect:z.bind(null,Sn),disconnect:ve.bind(null,Sn),dispatchEvent:(...Mt)=>Nt.dispatchEvent(Mt[0]),removeEventListener:(...Mt)=>Nt.removeEventListener(Mt[0],Mt[1],Mt[2])},$n=new Map;var Fn,jn;At.port1.addEventListener=(Fn=At.port1.addEventListener,(...Mt)=>{if(Mt[0]==="message"){const Un=typeof Mt[1]=="function"?Mt[1]:typeof Mt[1]=="object"&&Mt[1]!==null&&typeof Mt[1].handleEvent=="function"?Mt[1].handleEvent:null;if(Un!==null){const mr=$n.get(Mt[1]);mr!==void 0?Mt[1]=mr:(Mt[1]=Cs=>{_e(je.currentTime,je.sampleRate,()=>Un(Cs))},$n.set(Un,Mt[1]))}}return Fn.call(At.port1,Mt[0],Mt[1],Mt[2])}),At.port1.removeEventListener=(jn=At.port1.removeEventListener,(...Mt)=>{if(Mt[0]==="message"){const Un=$n.get(Mt[1]);Un!==void 0&&($n.delete(Mt[1]),Mt[1]=Un)}return jn.call(At.port1,Mt[0],Mt[1],Mt[2])});let ys=null;Object.defineProperty(At.port1,"onmessage",{get:()=>ys,set:Mt=>{typeof ys=="function"&&At.port1.removeEventListener("message",ys),ys=typeof Mt=="function"?Mt:null,typeof ys=="function"&&(At.port1.addEventListener("message",ys),At.port1.start())}}),Je.prototype.port=At.port1;let Ds=null;((Mt,Un,mr,Cs)=>{let Ln=N.get(Mt);Ln===void 0&&(Ln=new WeakMap,N.set(Mt,Ln));const bs=(async(Yr,ri)=>{const oi=await(Eu=>new Promise((Nu,Ju)=>{const{port1:bu,port2:Au}=new MessageChannel;bu.onmessage=({data:Ou})=>{bu.close(),Au.close(),Nu(Ou)},bu.onmessageerror=({data:Ou})=>{bu.close(),Au.close(),Ju(Ou)},Au.postMessage(Eu)}))(ri);return new Yr(oi)})(mr,Cs);return Ln.set(Un,bs),bs})(je,Qt,Je,He).then(Mt=>Ds=Mt);const Nn=Rn(He.numberOfInputs,He.channelCount),Yt=Rn(He.numberOfOutputs,ct),us=Je.parameterDescriptors===void 0?[]:Je.parameterDescriptors.reduce((Mt,{name:Un})=>({...Mt,[Un]:new Float32Array(128)}),{});let es=!0;const fr=()=>{He.numberOfOutputs>0&&Nt.disconnect(Lt);for(let Mt=0,Un=0;Mt<He.numberOfOutputs;Mt+=1){const mr=zt[Mt];for(let Cs=0;Cs<ct[Mt];Cs+=1)Lt.disconnect(mr,Un+Cs,Cs);Un+=ct[Mt]}},fa=new Map;Nt.onaudioprocess=({inputBuffer:Mt,outputBuffer:Un})=>{if(Ds!==null){const mr=Ee(Qt);for(let Cs=0;Cs<bt;Cs+=128){for(let Ln=0;Ln<He.numberOfInputs;Ln+=1)for(let bs=0;bs<He.channelCount;bs+=1)Ps(Mt,Nn[Ln],bs,bs,Cs);Je.parameterDescriptors!==void 0&&Je.parameterDescriptors.forEach(({name:Ln},bs)=>{Ps(Mt,us,Ln,rt+bs,Cs)});for(let Ln=0;Ln<He.numberOfInputs;Ln+=1)for(let bs=0;bs<ct[Ln];bs+=1)Yt[Ln][bs].byteLength===0&&(Yt[Ln][bs]=new Float32Array(128));try{const Ln=Nn.map((Yr,ri)=>{if(mr[ri].size>0)return fa.set(ri,bt/128),Yr;const oi=fa.get(ri);return oi===void 0?[]:(Yr.every(Eu=>Eu.every(Nu=>Nu===0))&&(oi===1?fa.delete(ri):fa.set(ri,oi-1)),Yr)});es=_e(je.currentTime+Cs/je.sampleRate,je.sampleRate,()=>Ds.process(Ln,Yt,us));for(let Yr=0,ri=0;Yr<He.numberOfOutputs;Yr+=1){for(let oi=0;oi<ct[Yr];oi+=1)Bn(Un,Yt[Yr],oi,ri+oi,Cs);ri+=ct[Yr]}}catch(Ln){es=!1,Qt.dispatchEvent(new ErrorEvent("processorerror",{colno:Ln.colno,filename:Ln.filename,lineno:Ln.lineno,message:Ln.message}))}if(!es){for(let Ln=0;Ln<He.numberOfInputs;Ln+=1){lt[Ln].disconnect(wt[Ln]);for(let bs=0;bs<He.channelCount;bs+=1)wt[Cs].disconnect(Rt,bs,Ln*He.channelCount+bs)}if(Je.parameterDescriptors!==void 0){const Ln=Je.parameterDescriptors.length;for(let bs=0;bs<Ln;bs+=1){const Yr=ut[bs];Yr.disconnect(Rt,0,rt+bs),Yr.stop()}}Rt.disconnect(Nt),Nt.onaudioprocess=null,Iu?fr():Du();break}}}};let Iu=!1;const ku=ae(je,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),Ru=()=>Nt.connect(ku).connect(je.destination),Du=()=>{Nt.disconnect(ku),ku.disconnect()};return Ru(),qe(Qt,()=>{if(es){Du(),He.numberOfOutputs>0&&Nt.connect(Lt);for(let Mt=0,Un=0;Mt<He.numberOfOutputs;Mt+=1){const mr=zt[Mt];for(let Cs=0;Cs<ct[Mt];Cs+=1)Lt.connect(mr,Un+Cs,Cs);Un+=ct[Mt]}}Iu=!0},()=>{es&&(Ru(),fr()),Iu=!1})})(tc,Te,Ze,hr,_t,Ms,un,Gt,Tn,nc,Zo,Gi,go),zc=((z,u,b,_,M)=>(Y,ae,de,xe,ve,_e)=>{if(de!==null)try{const je=new de(Y,xe,_e),et=new Map;let Je=null;if(Object.defineProperties(je,{channelCount:{get:()=>_e.channelCount,set:()=>{throw z()}},channelCountMode:{get:()=>"explicit",set:()=>{throw z()}},onprocessorerror:{get:()=>Je,set:He=>{typeof Je=="function"&&je.removeEventListener("processorerror",Je),Je=typeof He=="function"?He:null,typeof Je=="function"&&je.addEventListener("processorerror",Je)}}}),je.addEventListener=(qe=je.addEventListener,(...He)=>{if(He[0]==="processorerror"){const ct=typeof He[1]=="function"?He[1]:typeof He[1]=="object"&&He[1]!==null&&typeof He[1].handleEvent=="function"?He[1].handleEvent:null;if(ct!==null){const rt=et.get(He[1]);rt!==void 0?He[1]=rt:(He[1]=Qe=>{Qe.type==="error"?(Object.defineProperties(Qe,{type:{value:"processorerror"}}),ct(Qe)):ct(new ErrorEvent(He[0],{...Qe}))},et.set(ct,He[1]))}}return qe.call(je,"error",He[1],He[2]),qe.call(je,...He)}),je.removeEventListener=(Ee=je.removeEventListener,(...He)=>{if(He[0]==="processorerror"){const ct=et.get(He[1]);ct!==void 0&&(et.delete(He[1]),He[1]=ct)}return Ee.call(je,"error",He[1],He[2]),Ee.call(je,He[0],He[1],He[2])}),_e.numberOfOutputs!==0){const He=b(Y,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return je.connect(He).connect(Y.destination),M(je,()=>He.disconnect(),()=>He.connect(Y.destination))}return je}catch(je){throw je.code===11?_():je}var Ee,qe;if(ve===void 0)throw _();return(je=>{const{port1:et}=new MessageChannel;try{et.postMessage(je)}finally{et.close()}})(_e),u(Y,ae,ve,_e)})(Ze,rc,un,Tn,go),ro=((z,u,b,_,M,Y,ae,de,xe,ve,_e,Ee,qe,je,et,Je)=>(He,ct,rt)=>{const Qe=new WeakMap;let It=null;return{render(At,lt){de(lt,At);const wt=Qe.get(lt);return wt!==void 0?Promise.resolve(wt):(async(ut,Rt)=>{let bt=_e(ut),Nt=null;const Lt=ce(bt,Rt),zt=Array.isArray(ct.outputChannelCount)?ct.outputChannelCount:Array.from(ct.outputChannelCount);if(Ee===null){const yn=zt.reduce((Qt,$n)=>Qt+$n,0),rn=M(Rt,{channelCount:Math.max(1,yn),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,yn)}),nn=[];for(let Qt=0;Qt<ut.numberOfOutputs;Qt+=1)nn.push(_(Rt,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:zt[Qt]}));const Sn=ae(Rt,{channelCount:ct.channelCount,channelCountMode:ct.channelCountMode,channelInterpretation:ct.channelInterpretation,gain:1});Sn.connect=u.bind(null,nn),Sn.disconnect=xe.bind(null,nn),Nt=[rn,nn,Sn]}else Lt||(bt=new Ee(Rt,He));if(Qe.set(Rt,Nt===null?bt:Nt[2]),Nt!==null){if(It===null){if(rt===void 0)throw new Error("Missing the processor constructor.");if(qe===null)throw new Error("Missing the native OfflineAudioContext constructor.");const $n=ut.channelCount*ut.numberOfInputs,Fn=rt.parameterDescriptors===void 0?0:rt.parameterDescriptors.length,jn=$n+Fn;It=gr(ut,jn===0?null:await(async()=>{const Ds=new qe(jn,128*Math.ceil(ut.context.length/128),Rt.sampleRate),Xr=[],Nn=[];for(let es=0;es<ct.numberOfInputs;es+=1)Xr.push(ae(Ds,{channelCount:ct.channelCount,channelCountMode:ct.channelCountMode,channelInterpretation:ct.channelInterpretation,gain:1})),Nn.push(M(Ds,{channelCount:ct.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:ct.channelCount}));const Yt=await Promise.all(Array.from(ut.parameters.values()).map(async es=>{const fr=Y(Ds,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:es.value});return await je(Ds,es,fr.offset),fr})),us=_(Ds,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,$n+Fn)});for(let es=0;es<ct.numberOfInputs;es+=1){Xr[es].connect(Nn[es]);for(let fr=0;fr<ct.channelCount;fr+=1)Nn[es].connect(us,fr,es*ct.channelCount+fr)}for(const[es,fr]of Yt.entries())fr.connect(us,0,$n+es),fr.start(0);return us.connect(Ds.destination),await Promise.all(Xr.map(es=>et(ut,Ds,es))),Je(Ds)})(),Rt,ct,zt,rt,ve)}const yn=await It,rn=b(Rt,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[nn,Sn,Qt]=Nt;yn!==null&&(rn.buffer=yn,rn.start(0)),rn.connect(nn);for(let $n=0,Fn=0;$n<ut.numberOfOutputs;$n+=1){const jn=Sn[$n];for(let ys=0;ys<zt[$n];ys+=1)nn.connect(jn,Fn+ys,ys);Fn+=zt[$n]}return Qt}if(Lt)for(const[yn,rn]of ut.parameters.entries())await z(Rt,rn,bt.parameters.get(yn));else for(const[yn,rn]of ut.parameters.entries())await je(Rt,rn,bt.parameters.get(yn));return await et(ut,Rt,bt),bt})(At,lt)}}})(vr,tc,fo,hr,_t,Ms,un,Lc,nc,Zo,ht,Dn,ls,zr,xs,Yo),Bc=(z=>u=>z.get(u))(Ao),Vc=(z=>(u,b)=>{z.set(u,b)})(sc),oc=Ka?((z,u,b,_,M,Y,ae,de,xe,ve,_e,Ee,qe,je)=>class extends u{constructor(et,Je,He){var ct;const rt=de(et),Qe=xe(rt),It=(Nt=>({...Nt,outputChannelCount:Nt.outputChannelCount!==void 0?Nt.outputChannelCount:Nt.numberOfInputs===1&&Nt.numberOfOutputs===1?[Nt.channelCount]:Array.from({length:Nt.numberOfOutputs},()=>1)}))({...$s,...He});(Nt=>{const{port1:Lt,port2:zt}=new MessageChannel;try{Lt.postMessage(Nt)}finally{Lt.close(),zt.close()}})(It);const At=I.get(rt),lt=At==null?void 0:At.get(Je),wt=Qe||rt.state!=="closed"?rt:(ct=ae(rt))!==null&&ct!==void 0?ct:rt,ut=M(wt,Qe?null:et.baseLatency,ve,Je,lt,It);super(et,!0,ut,Qe?_(Je,It,lt):null);const Rt=[];ut.parameters.forEach((Nt,Lt)=>{const zt=b(this,Qe,Nt);Rt.push([Lt,zt])}),this._nativeAudioWorkletNode=ut,this._onprocessorerror=null,this._parameters=new Qn(Rt),Qe&&z(rt,this);const{activeInputs:bt}=Y(this);Ee(ut,bt)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(et){const Je=typeof et=="function"?je(this,et):null;this._nativeAudioWorkletNode.onprocessorerror=Je;const He=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=He!==null&&He===Je?et:He}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}})(Ta,rs,kr,ro,zc,pe,Bc,Vn,Kt,Dn,0,Vc,0,Ot):void 0,qc=((z,u)=>(b,_,M)=>{if(u===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new u(b,_,M)}catch(Y){throw Y.name==="SyntaxError"?z():Y}})(Tn,ls),jc=((z,u,b,_,M,Y,ae,de)=>(xe,ve)=>b(xe).render(xe,ve).then(()=>Promise.all(Array.from(_(ve)).map(_e=>b(_e).render(_e,ve)))).then(()=>M(ve)).then(_e=>(typeof _e.copyFromChannel!="function"?(ae(_e),Ce(_e)):u(Y,()=>Y(_e))||de(_e),z.add(_e),_e)))(Bi,Fs,xn,Sa,Yo,ue,ga,Vi),Uc=((z,u,b,_,M)=>class extends z{constructor(Y,ae,de){let xe;if(typeof Y=="number"&&ae!==void 0&&de!==void 0)xe={length:ae,numberOfChannels:Y,sampleRate:de};else{if(typeof Y!="object")throw new Error("The given parameters are not valid.");xe=Y}const{length:ve,numberOfChannels:_e,sampleRate:Ee}={...ns,...xe},qe=_(_e,ve,Ee);u(hn,()=>hn(qe))||qe.addEventListener("statechange",(()=>{let je=0;const et=Je=>{this._state==="running"&&(je>0?(qe.removeEventListener("statechange",et),Je.stopImmediatePropagation(),this._waitForThePromiseToSettle(Je)):je+=1)};return et})()),super(qe,_e),this._length=ve,this._nativeOfflineAudioContext=qe,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(b()):(this._state="running",M(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,H(this)}))}_waitForThePromiseToSettle(Y){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(Y):setTimeout(()=>this._waitForThePromiseToSettle(Y))}})(Ya,Fs,Ze,qc,jc),ic=((z,u)=>b=>{const _=z.get(b);return u(_)||u(b)})(g,hs),Ca=((z,u)=>b=>z.has(b)||u(b))(y,Wn),Gc=((z,u)=>b=>z.has(b)||u(b))(h,lr),Wc=((z,u)=>b=>{const _=z.get(b);return u(_)||u(b)})(g,Kt),Hc=()=>(async(z,u,b,_,M,Y,ae,de,xe,ve,_e,Ee,qe,je,et,Je)=>!!(z(u,u)&&z(b,b)&&z(M,M)&&z(Y,Y)&&z(de,de)&&z(xe,xe)&&z(ve,ve)&&z(_e,_e)&&z(Ee,Ee)&&z(qe,qe)&&z(je,je))&&(await Promise.all([z(_,_),z(ae,ae),z(et,et),z(Je,Je)])).every(He=>He))(Fs,(z=>()=>{if(z===null)return!1;const u=new z(1,1,44100).createBuffer(1,1,44100);if(u.copyToChannel===void 0)return!0;const b=new Float32Array(2);try{u.copyFromChannel(b,0,0)}catch{return!1}return!0})(ls),(z=>()=>{if(z===null)return!1;if(z.prototype!==void 0&&z.prototype.close!==void 0)return!0;const u=new z,b=u.close!==void 0;try{u.close()}catch{}return b})(Lr),(z=>()=>{if(z===null)return Promise.resolve(!1);const u=new z(1,1,44100);return new Promise(b=>{let _=!0;const M=ae=>{_&&(_=!1,u.startRendering(),b(ae instanceof TypeError))};let Y;try{Y=u.decodeAudioData(null,()=>{},M)}catch(ae){M(ae)}Y!==void 0&&Y.catch(M)})})(ls),(z=>()=>{if(z===null)return!1;let u;try{u=new z({latencyHint:"balanced"})}catch{return!1}return u.close(),!0})(Lr),(z=>()=>{if(z===null)return!1;const u=new z(1,1,44100).createGain(),b=u.connect(u)===u;return u.disconnect(u),b})(ls),((z,u)=>async()=>{if(z===null)return!0;if(u===null)return!1;const b=new Blob(['let c,p;class A extends AudioWorkletProcessor{constructor(){super();this.port.onmessage=(e)=>{p=e.data;p.onmessage=()=>{p.postMessage(c);p.close()};this.port.postMessage(0)}}process(){c=1}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),_=new MessageChannel,M=new u(1,128,44100),Y=URL.createObjectURL(b);let ae=!1;try{await M.audioWorklet.addModule(Y);const de=new z(M,"a",{numberOfOutputs:0}),xe=M.createOscillator();await new Promise(ve=>{de.port.onmessage=()=>ve(),de.port.postMessage(_.port2,[_.port2])}),de.port.onmessage=()=>ae=!0,xe.connect(de),xe.start(0),await M.startRendering(),ae=await new Promise(ve=>{_.port1.onmessage=({data:_e})=>ve(_e===1),_.port1.postMessage(0)})}catch{}finally{_.port1.close(),URL.revokeObjectURL(Y)}return ae})(Dn,ls),(z=>()=>{if(z===null)return!1;const u=new z(1,1,44100).createChannelMerger();if(u.channelCountMode==="max")return!0;try{u.channelCount=2}catch{return!0}return!1})(ls),(z=>()=>{if(z===null)return!1;const u=new z(1,1,44100);return u.createConstantSource===void 0||u.createConstantSource().offset.maxValue!==Number.POSITIVE_INFINITY})(ls),(z=>()=>{if(z===null)return!1;const u=new z(1,1,44100),b=u.createConvolver();b.buffer=u.createBuffer(1,1,u.sampleRate);try{b.buffer=u.createBuffer(1,1,u.sampleRate)}catch{return!1}return!0})(ls),(z=>()=>{if(z===null)return!1;const u=new z(1,1,44100).createConvolver();try{u.channelCount=1}catch{return!1}return!0})(ls),Jn,(z=>()=>z!==null&&z.hasOwnProperty("isSecureContext"))(ms),(z=>()=>{if(z===null)return!1;const u=new z;try{return u.createMediaStreamSource(new MediaStream),!1}catch{return!0}finally{u.close()}})(Lr),(z=>()=>{if(z===null)return Promise.resolve(!1);const u=new z(1,1,44100);if(u.createStereoPanner===void 0||u.createConstantSource===void 0)return Promise.resolve(!0);const b=u.createConstantSource(),_=u.createStereoPanner();return b.channelCount=1,b.offset.value=1,_.channelCount=1,b.start(),b.connect(_).connect(u.destination),u.startRendering().then(M=>M.getChannelData(0)[0]!==1)})(ls),Qr);function nr(z){return z===void 0}function wn(z){return z!==void 0}function ac(z){return typeof z=="function"}function Ns(z){return typeof z=="number"}function oo(z){return Object.prototype.toString.call(z)==="[object Object]"&&z.constructor===Object}function mi(z){return typeof z=="boolean"}function As(z){return Array.isArray(z)}function Nr(z){return typeof z=="string"}function gi(z){return Nr(z)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(z)}function en(z,u){if(!z)throw new Error(u)}function Ls(z,u,b=1/0){if(!(u<=z&&z<=b))throw new RangeError(`Value must be within [${u}, ${b}], got: ${z}`)}function $a(z){z.isOffline||z.state==="running"||ei('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let cc=!1,uc=!1;function _a(z){cc=z}function lc(z){nr(z)&&cc&&!uc&&(uc=!0,ei("Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing"))}let Ia=console;function Kc(z){Ia=z}function hc(...z){Ia.log(...z)}function ei(...z){Ia.warn(...z)}const jr=typeof self=="object"?self:null,dc=jr&&(jr.hasOwnProperty("AudioContext")||jr.hasOwnProperty("webkitAudioContext"));function Ar(z,u,b,_){var M,Y=arguments.length,ae=Y<3?u:_;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")ae=Reflect.decorate(z,u,b,_);else for(var de=z.length-1;de>=0;de--)(M=z[de])&&(ae=(Y<3?M(ae):Y>3?M(u,b,ae):M(u,b))||ae);return Y>3&&ae&&Object.defineProperty(u,b,ae),ae}function qn(z,u,b,_){return new(b||(b=Promise))(function(M,Y){function ae(ve){try{xe(_.next(ve))}catch(_e){Y(_e)}}function de(ve){try{xe(_.throw(ve))}catch(_e){Y(_e)}}function xe(ve){var _e;ve.done?M(ve.value):(_e=ve.value,_e instanceof b?_e:new b(function(Ee){Ee(_e)})).then(ae,de)}xe((_=_.apply(z,[])).next())})}typeof SuppressedError=="function"&&SuppressedError;class Xc{constructor(u,b,_,M){this._callback=u,this._type=b,this._minimumUpdateInterval=Math.max(128/(M||44100),.001),this.updateInterval=_,this._createClock()}_createWorker(){const u=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(1e3*this._updateInterval).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),b=URL.createObjectURL(u),_=new Worker(b);_.onmessage=this._callback.bind(this),this._worker=_}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},1e3*this._updateInterval)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&clearTimeout(this._timeout),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(u){var b;this._updateInterval=Math.max(u,this._minimumUpdateInterval),this._type==="worker"&&((b=this._worker)===null||b===void 0||b.postMessage(1e3*this._updateInterval))}get type(){return this._type}set type(u){this._disposeClock(),this._type=u,this._createClock()}dispose(){this._disposeClock()}}function Oo(z){return Gc(z)}function xo(z){return Ca(z)}function Wi(z){return Wc(z)}function ti(z){return ic(z)}function Yc(z,u){return z==="value"||Oo(u)||xo(u)||function(b){return b instanceof Ma}(u)}function dr(z,...u){if(!u.length)return z;const b=u.shift();if(oo(z)&&oo(b))for(const _ in b)Yc(_,b[_])?z[_]=b[_]:oo(b[_])?(z[_]||Object.assign(z,{[_]:{}}),dr(z[_],b[_])):Object.assign(z,{[_]:b[_]});return dr(z,...u)}function We(z,u,b=[],_){const M={},Y=Array.from(u);if(oo(Y[0])&&_&&!Reflect.has(Y[0],_)&&(Object.keys(Y[0]).some(ae=>Reflect.has(z,ae))||(dr(M,{[_]:Y[0]}),b.splice(b.indexOf(_),1),Y.shift())),Y.length===1&&oo(Y[0]))dr(M,Y[0]);else for(let ae=0;ae<b.length;ae++)wn(Y[ae])&&(M[b[ae]]=Y[ae]);return dr(z,M)}function wr(z,u){return nr(z)?u:z}function zs(z,u){return u.forEach(b=>{Reflect.has(z,b)&&delete z[b]}),z}class ao{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...u){(this.debug||jr&&this.toString()===jr.TONE_DEBUG_CLASS)&&hc(this,...u)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}ao.version=a;const ka=1e-6;function Ro(z,u){return z>u+ka}function Hi(z,u){return Ro(z,u)||Sr(z,u)}function Ki(z,u){return z+ka<u}function Sr(z,u){return Math.abs(z-u)<ka}function Do(z,u,b){return Math.max(Math.min(z,b),u)}class Cn extends ao{constructor(){super(),this.name="Timeline",this._timeline=[];const u=We(Cn.getDefaults(),arguments,["memory"]);this.memory=u.memory,this.increasing=u.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(u){if(en(Reflect.has(u,"time"),"Timeline: events must have a time attribute"),u.time=u.time.valueOf(),this.increasing&&this.length){const b=this._timeline[this.length-1];en(Hi(u.time,b.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(u)}else{const b=this._search(u.time);this._timeline.splice(b+1,0,u)}if(this.length>this.memory){const b=this.length-this.memory;this._timeline.splice(0,b)}return this}remove(u){const b=this._timeline.indexOf(u);return b!==-1&&this._timeline.splice(b,1),this}get(u,b="time"){const _=this._search(u,b);return _!==-1?this._timeline[_]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(u,b="time"){const _=this._search(u,b);return _+1<this._timeline.length?this._timeline[_+1]:null}getBefore(u){const b=this._timeline.length;if(b>0&&this._timeline[b-1].time<u)return this._timeline[b-1];const _=this._search(u);return _-1>=0?this._timeline[_-1]:null}cancel(u){if(this._timeline.length>1){let b=this._search(u);if(b>=0)if(Sr(this._timeline[b].time,u)){for(let _=b;_>=0&&Sr(this._timeline[_].time,u);_--)b=_;this._timeline=this._timeline.slice(0,b)}else this._timeline=this._timeline.slice(0,b+1);else this._timeline=[]}else this._timeline.length===1&&Hi(this._timeline[0].time,u)&&(this._timeline=[]);return this}cancelBefore(u){const b=this._search(u);return b>=0&&(this._timeline=this._timeline.slice(b+1)),this}previousEvent(u){const b=this._timeline.indexOf(u);return b>0?this._timeline[b-1]:null}_search(u,b="time"){if(this._timeline.length===0)return-1;let _=0;const M=this._timeline.length;let Y=M;if(M>0&&this._timeline[M-1][b]<=u)return M-1;for(;_<Y;){let ae=Math.floor(_+(Y-_)/2);const de=this._timeline[ae],xe=this._timeline[ae+1];if(Sr(de[b],u)){for(let ve=ae;ve<this._timeline.length&&Sr(this._timeline[ve][b],u);ve++)ae=ve;return ae}if(Ki(de[b],u)&&Ro(xe[b],u))return ae;Ro(de[b],u)?Y=ae:_=ae+1}return-1}_iterate(u,b=0,_=this._timeline.length-1){this._timeline.slice(b,_+1).forEach(u)}forEach(u){return this._iterate(u),this}forEachBefore(u,b){const _=this._search(u);return _!==-1&&this._iterate(b,0,_),this}forEachAfter(u,b){const _=this._search(u);return this._iterate(b,_+1),this}forEachBetween(u,b,_){let M=this._search(u),Y=this._search(b);return M!==-1&&Y!==-1?(this._timeline[M].time!==u&&(M+=1),this._timeline[Y].time===b&&(Y-=1),this._iterate(_,M,Y)):M===-1&&this._iterate(_,0,Y),this}forEachFrom(u,b){let _=this._search(u);for(;_>=0&&this._timeline[_].time>=u;)_--;return this._iterate(b,_+1),this}forEachAtTime(u,b){const _=this._search(u);if(_!==-1&&Sr(this._timeline[_].time,u)){let M=_;for(let Y=_;Y>=0&&Sr(this._timeline[Y].time,u);Y--)M=Y;this._iterate(Y=>{b(Y)},M,_)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const vo=[];function yi(z){vo.push(z)}const Xi=[];function Po(z){Xi.push(z)}class Fo extends ao{constructor(){super(...arguments),this.name="Emitter"}on(u,b){return u.split(/\W+/).forEach(_=>{nr(this._events)&&(this._events={}),this._events.hasOwnProperty(_)||(this._events[_]=[]),this._events[_].push(b)}),this}once(u,b){const _=(...M)=>{b(...M),this.off(u,_)};return this.on(u,_),this}off(u,b){return u.split(/\W+/).forEach(_=>{if(nr(this._events)&&(this._events={}),this._events.hasOwnProperty(_))if(nr(b))this._events[_]=[];else{const M=this._events[_];for(let Y=M.length-1;Y>=0;Y--)M[Y]===b&&M.splice(Y,1)}}),this}emit(u,...b){if(this._events&&this._events.hasOwnProperty(u)){const _=this._events[u].slice(0);for(let M=0,Y=_.length;M<Y;M++)_[M].apply(this,b)}return this}static mixin(u){["on","once","off","emit"].forEach(b=>{const _=Object.getOwnPropertyDescriptor(Fo.prototype,b);Object.defineProperty(u.prototype,b,_)})}dispose(){return super.dispose(),this._events=void 0,this}}class Ea extends Fo{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Mo extends Ea{constructor(){var u,b;super(),this.name="Context",this._constants=new Map,this._timeouts=new Cn,this._timeoutIds=0,this._initialized=!1,this._closeStarted=!1,this.isOffline=!1,this._workletPromise=null;const _=We(Mo.getDefaults(),arguments,["context"]);_.context?(this._context=_.context,this._latencyHint=((u=arguments[0])===null||u===void 0?void 0:u.latencyHint)||""):(this._context=function(M){return new ec(M)}({latencyHint:_.latencyHint}),this._latencyHint=_.latencyHint),this._ticker=new Xc(this.emit.bind(this,"tick"),_.clockSource,_.updateInterval,this._context.sampleRate),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this[!((b=arguments[0])===null||b===void 0)&&b.hasOwnProperty("updateInterval")?"_lookAhead":"lookAhead"]=_.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){var u;return this._initialized||(u=this,vo.forEach(b=>b(u)),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(u,b,_){return this._context.createBuffer(u,b,_)}createChannelMerger(u){return this._context.createChannelMerger(u)}createChannelSplitter(u){return this._context.createChannelSplitter(u)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(u){return this._context.createDelay(u)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(u,b){return this._context.createIIRFilter(u,b)}createPanner(){return this._context.createPanner()}createPeriodicWave(u,b,_){return this._context.createPeriodicWave(u,b,_)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(u){return en(ti(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(u)}createMediaElementSource(u){return en(ti(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(u)}createMediaStreamDestination(){return en(ti(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(u){return this._context.decodeAudioData(u)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(u){en(!this._initialized,"The listener cannot be set after initialization."),this._listener=u}get transport(){return this.initialize(),this._transport}set transport(u){en(!this._initialized,"The transport cannot be set after initialization."),this._transport=u}get draw(){return this.initialize(),this._draw}set draw(u){en(!this._initialized,"Draw cannot be set after initialization."),this._draw=u}get destination(){return this.initialize(),this._destination}set destination(u){en(!this._initialized,"The destination cannot be set after initialization."),this._destination=u}createAudioWorkletNode(u,b){return function(_,M,Y){return en(wn(oc),"This node only works in a secure context (https or localhost)"),new oc(_,M,Y)}(this.rawContext,u,b)}addAudioWorkletModule(u){return qn(this,void 0,void 0,function*(){en(wn(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletPromise||(this._workletPromise=this.rawContext.audioWorklet.addModule(u)),yield this._workletPromise})}workletsAreReady(){return qn(this,void 0,void 0,function*(){(yield this._workletPromise)?this._workletPromise:Promise.resolve()})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(u){this._ticker.updateInterval=u}get clockSource(){return this._ticker.type}set clockSource(u){this._ticker.type=u}get lookAhead(){return this._lookAhead}set lookAhead(u){this._lookAhead=u,this.updateInterval=u?u/2:.01}get latencyHint(){return this._latencyHint}get rawContext(){return this._context}now(){return this._context.currentTime+this._lookAhead}immediate(){return this._context.currentTime}resume(){return ti(this._context)?this._context.resume():Promise.resolve()}close(){return qn(this,void 0,void 0,function*(){var u;ti(this._context)&&this.state!=="closed"&&!this._closeStarted&&(this._closeStarted=!0,yield this._context.close()),this._initialized&&(u=this,Xi.forEach(b=>b(u)))})}getConstant(u){if(this._constants.has(u))return this._constants.get(u);{const b=this._context.createBuffer(1,128,this._context.sampleRate),_=b.getChannelData(0);for(let Y=0;Y<_.length;Y++)_[Y]=u;const M=this._context.createBufferSource();return M.channelCount=1,M.channelCountMode="explicit",M.buffer=b,M.loop=!0,M.start(0),this._constants.set(u,M),M}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(u=>this._constants[u].disconnect()),this.close(),this}_timeoutLoop(){const u=this.now();let b=this._timeouts.peek();for(;this._timeouts.length&&b&&b.time<=u;)b.callback(),this._timeouts.shift(),b=this._timeouts.peek()}setTimeout(u,b){this._timeoutIds++;const _=this.now();return this._timeouts.add({callback:u,id:this._timeoutIds,time:_+b}),this._timeoutIds}clearTimeout(u){return this._timeouts.forEach(b=>{b.id===u&&this._timeouts.remove(b)}),this}clearInterval(u){return this.clearTimeout(u)}setInterval(u,b){const _=++this._timeoutIds,M=()=>{const Y=this.now();this._timeouts.add({callback:()=>{u(),M()},id:_,time:Y+b})};return M(),_}}function cn(z,u){As(u)?u.forEach(b=>cn(z,b)):Object.defineProperty(z,u,{enumerable:!0,writable:!1})}function bi(z,u){As(u)?u.forEach(b=>bi(z,b)):Object.defineProperty(z,u,{writable:!0})}const Z=()=>{};class v extends ao{constructor(){super(),this.name="ToneAudioBuffer",this.onload=Z;const u=We(v.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=u.reverse,this.onload=u.onload,Nr(u.url)?this.load(u.url).catch(u.onerror):u.url&&this.set(u.url)}static getDefaults(){return{onerror:Z,onload:Z,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:W().sampleRate}set(u){return u instanceof v?u.loaded?this._buffer=u.get():u.onload=()=>{this.set(u),this.onload(this)}:this._buffer=u,this._reversed&&this._reverse(),this}get(){return this._buffer}load(u){return qn(this,void 0,void 0,function*(){const b=v.load(u).then(_=>{this.set(_),this.onload(this)});v.downloads.push(b);try{yield b}finally{const _=v.downloads.indexOf(b);v.downloads.splice(_,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(u){const b=As(u)&&u[0].length>0,_=b?u.length:1,M=b?u[0].length:u.length,Y=W(),ae=Y.createBuffer(_,M,Y.sampleRate),de=b||_!==1?u:[u];for(let xe=0;xe<_;xe++)ae.copyToChannel(de[xe],xe);return this._buffer=ae,this}toMono(u){if(Ns(u))this.fromArray(this.toArray(u));else{let b=new Float32Array(this.length);const _=this.numberOfChannels;for(let M=0;M<_;M++){const Y=this.toArray(M);for(let ae=0;ae<Y.length;ae++)b[ae]+=Y[ae]}b=b.map(M=>M/_),this.fromArray(b)}return this}toArray(u){if(Ns(u))return this.getChannelData(u);if(this.numberOfChannels===1)return this.toArray(0);{const b=[];for(let _=0;_<this.numberOfChannels;_++)b[_]=this.getChannelData(_);return b}}getChannelData(u){return this._buffer?this._buffer.getChannelData(u):new Float32Array(0)}slice(u,b=this.duration){en(this.loaded,"Buffer is not loaded");const _=Math.floor(u*this.sampleRate),M=Math.floor(b*this.sampleRate);en(_<M,"The start time must be less than the end time");const Y=M-_,ae=W().createBuffer(this.numberOfChannels,Y,this.sampleRate);for(let de=0;de<this.numberOfChannels;de++)ae.copyToChannel(this.getChannelData(de).subarray(_,M),de);return new v(ae)}_reverse(){if(this.loaded)for(let u=0;u<this.numberOfChannels;u++)this.getChannelData(u).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(u){this._reversed!==u&&(this._reversed=u,this._reverse())}static fromArray(u){return new v().fromArray(u)}static fromUrl(u){return qn(this,void 0,void 0,function*(){return yield new v().load(u)})}static load(u){return qn(this,void 0,void 0,function*(){const b=u.match(/\[([^\]\[]+\|.+)\]$/);if(b){const de=b[1].split("|");let xe=de[0];for(const ve of de)if(v.supportsType(ve)){xe=ve;break}u=u.replace(b[0],xe)}const _=v.baseUrl===""||v.baseUrl.endsWith("/")?v.baseUrl:v.baseUrl+"/",M=document.createElement("a");M.href=_+u,M.pathname=(M.pathname+M.hash).split("/").map(encodeURIComponent).join("/");const Y=yield fetch(M.href);if(!Y.ok)throw new Error(`could not load url: ${u}`);const ae=yield Y.arrayBuffer();return yield W().decodeAudioData(ae)})}static supportsType(u){const b=u.split("."),_=b[b.length-1];return document.createElement("audio").canPlayType("audio/"+_)!==""}static loaded(){return qn(this,void 0,void 0,function*(){for(yield Promise.resolve();v.downloads.length;)yield v.downloads[0]})}}v.baseUrl="",v.downloads=[];class E extends Mo{constructor(){var u,b,_;super({clockSource:"offline",context:Wi(arguments[0])?arguments[0]:(u=arguments[0],b=arguments[1]*arguments[2],_=arguments[2],new Uc(u,b,_)),lookAhead:0,updateInterval:Wi(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=Wi(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(u){return qn(this,void 0,void 0,function*(){let b=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,b++;const _=Math.floor(this.sampleRate/128);u&&b%_==0&&(yield new Promise(M=>setTimeout(M,1)))}})}render(u=!0){return qn(this,void 0,void 0,function*(){yield this.workletsAreReady(),yield this._renderClock(u);const b=yield this._context.startRendering();return new v(b)})}close(){return Promise.resolve()}}const R=new class extends Ea{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(z,u,b){return{}}createChannelMerger(z){return{}}createChannelSplitter(z){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(z){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(z,u){return{}}createPanner(){return{}}createPeriodicWave(z,u,b){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(z){return{}}createMediaElementSource(z){return{}}createMediaStreamDestination(){return{}}decodeAudioData(z){return Promise.resolve({})}createAudioWorkletNode(z,u){return{}}get rawContext(){return{}}addAudioWorkletModule(z){return qn(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(z,u){return 0}clearTimeout(z){return this}setInterval(z,u){return 0}clearInterval(z){return this}getConstant(z){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(z){}get destination(){return{}}set destination(z){}now(){return 0}immediate(){return 0}};let V=R;function W(){return V===R&&dc&&K(new Mo),V}function K(z,u=!1){u&&V.dispose(),V=ti(z)?new Mo(z):Wi(z)?new E(z):z}function re(){return V.resume()}if(jr&&!jr.TONE_SILENCE_LOGGING){const u=` * Tone.js v${a} * `;console.log(`%c${u}`,"background: #000; color: #fff")}function ie(z){return Math.pow(10,z/20)}function fe(z){return Math.log(z)/Math.LN10*20}function Se(z){return Math.pow(2,z/12)}let De=440;function ke(z){return Math.round(Be(z))}function Be(z){return 69+12*Math.log2(z/De)}function Ve(z){return De*Math.pow(2,(z-69)/12)}class Me extends ao{constructor(u,b,_){super(),this.defaultUnits="s",this._val=b,this._units=_,this.context=u,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:u=>this._frequencyToUnits(parseFloat(u)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:u=>this._ticksToUnits(parseInt(u,10)),regexp:/^(\d+)i$/i},m:{method:u=>this._beatsToUnits(parseInt(u,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(u,b)=>{const _=parseInt(u,10),M=b==="."?1.5:1;return _===1?this._beatsToUnits(this._getTimeSignature())*M:this._beatsToUnits(4/_)*M},regexp:/^(\d+)n(\.?)$/i},number:{method:u=>this._expressions[this.defaultUnits].method.call(this,u),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:u=>this._secondsToUnits(parseFloat(u)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:u=>parseInt(u,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:u=>{const b=parseInt(u,10);return this._beatsToUnits(8/(3*Math.floor(b)))},regexp:/^(\d+)t$/i},tr:{method:(u,b,_)=>{let M=0;return u&&u!=="0"&&(M+=this._beatsToUnits(this._getTimeSignature()*parseFloat(u))),b&&b!=="0"&&(M+=this._beatsToUnits(parseFloat(b))),_&&_!=="0"&&(M+=this._beatsToUnits(parseFloat(_)/4)),M},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof Me&&this.fromType(this._val),nr(this._val))return this._noArg();if(Nr(this._val)&&nr(this._units)){for(const u in this._expressions)if(this._expressions[u].regexp.test(this._val.trim())){this._units=u;break}}else if(oo(this._val)){let u=0;for(const b in this._val)if(wn(this._val[b])){const _=this._val[b];u+=new this.constructor(this.context,b).valueOf()*_}return u}if(wn(this._units)){const u=this._expressions[this._units],b=this._val.toString().trim().match(u.regexp);return b?u.method.apply(this,b.slice(1)):u.method.call(this,this._val)}return Nr(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(u){return 1/u}_beatsToUnits(u){return 60/this._getBpm()*u}_secondsToUnits(u){return u}_ticksToUnits(u){return u*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(u){switch(this._units=void 0,this.defaultUnits){case"s":this._val=u.toSeconds();break;case"i":this._val=u.toTicks();break;case"hz":this._val=u.toFrequency();break;case"midi":this._val=u.toMidi()}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return 1e3*this.toSeconds()}}class Ue extends Me{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:u=>this._now()+new this.constructor(this.context,u).valueOf(),regexp:/^\+(.+)/},quantize:{method:u=>{const b=new Ue(this.context,u).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(b))},regexp:/^@(.+)/}})}quantize(u,b=1){const _=new this.constructor(this.context,u).valueOf(),M=this.valueOf();return M+(Math.round(M/_)*_-M)*b}toNotation(){const u=this.toSeconds(),b=["1m"];for(let Y=1;Y<9;Y++){const ae=Math.pow(2,Y);b.push(ae+"n."),b.push(ae+"n"),b.push(ae+"t")}b.push("0");let _=b[0],M=new Ue(this.context,b[0]).toSeconds();return b.forEach(Y=>{const ae=new Ue(this.context,Y).toSeconds();Math.abs(ae-u)<Math.abs(M-u)&&(_=Y,M=ae)}),_}toBarsBeatsSixteenths(){const u=this._beatsToUnits(1);let b=this.valueOf()/u;b=parseFloat(b.toFixed(4));const _=Math.floor(b/this._getTimeSignature());let M=b%1*4;b=Math.floor(b)%this._getTimeSignature();const Y=M.toString();return Y.length>3&&(M=parseFloat(parseFloat(Y).toFixed(3))),[_,b,M].join(":")}toTicks(){const u=this._beatsToUnits(1);return this.valueOf()/u*this._getPPQ()}toSeconds(){return this.valueOf()}toMidi(){return ke(this.toFrequency())}_now(){return this.context.now()}}function mt(z,u){return new Ue(W(),z,u)}class kt extends Ue{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return De}static set A4(u){(function(b){De=b})(u)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(u){return this.defaultUnits==="midi"?u:kt.mtof(u)}},note:{regexp:/^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,method(u,b){const _=Dt[u.toLowerCase()]+12*(parseInt(b,10)+1);return this.defaultUnits==="midi"?_:kt.mtof(_)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(u,b,_){let M=1;return u&&u!=="0"&&(M*=this._beatsToUnits(this._getTimeSignature()*parseFloat(u))),b&&b!=="0"&&(M*=this._beatsToUnits(parseFloat(b))),_&&_!=="0"&&(M*=this._beatsToUnits(parseFloat(_)/4)),M}}})}transpose(u){return new kt(this.context,this.valueOf()*Se(u))}harmonize(u){return u.map(b=>this.transpose(b))}toMidi(){return ke(this.valueOf())}toNote(){const u=this.toFrequency(),b=Math.log2(u/kt.A4);let _=Math.round(12*b)+57;const M=Math.floor(_/12);return M<0&&(_+=-12*M),it[_%12]+M.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const u=this._beatsToUnits(1),b=this.valueOf()/u;return Math.floor(b*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(u){return u}_ticksToUnits(u){return 1/(60*u/(this._getBpm()*this._getPPQ()))}_beatsToUnits(u){return 1/super._beatsToUnits(u)}_secondsToUnits(u){return 1/u}static mtof(u){return Ve(u)}static ftom(u){return ke(u)}}const Dt={cbbb:-3,cbb:-2,cb:-1,c:0,"c#":1,cx:2,"c##":2,"c###":3,"cx#":3,"c#x":3,dbbb:-1,dbb:0,db:1,d:2,"d#":3,dx:4,"d##":4,"d###":5,"dx#":5,"d#x":5,ebbb:1,ebb:2,eb:3,e:4,"e#":5,ex:6,"e##":6,"e###":7,"ex#":7,"e#x":7,fbbb:2,fbb:3,fb:4,f:5,"f#":6,fx:7,"f##":7,"f###":8,"fx#":8,"f#x":8,gbbb:4,gbb:5,gb:6,g:7,"g#":8,gx:9,"g##":9,"g###":10,"gx#":10,"g#x":10,abbb:6,abb:7,ab:8,a:9,"a#":10,ax:11,"a##":11,"a###":12,"ax#":12,"a#x":12,bbbb:8,bbb:9,bb:10,b:11,"b#":12,bx:13,"b##":13,"b###":14,"bx#":14,"b#x":14},it=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];function St(z,u){return new kt(W(),z,u)}class at extends Ue{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}function Wt(z,u){return new at(W(),z,u)}class Ft extends ao{constructor(){super();const u=We(Ft.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=u.context}static getDefaults(){return{context:W()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(u){return lc(u),new Ue(this.context,u).toSeconds()}toFrequency(u){return new kt(this.context,u).toFrequency()}toTicks(u){return new at(this.context,u).toTicks()}_getPartialProperties(u){const b=this.get();return Object.keys(b).forEach(_=>{nr(u[_])&&delete b[_]}),b}get(){const u=this.constructor.getDefaults();return Object.keys(u).forEach(b=>{if(Reflect.has(this,b)){const _=this[b];wn(_)&&wn(_.value)&&wn(_.setValueAtTime)?u[b]=_.value:_ instanceof Ft?u[b]=_._getPartialProperties(u[b]):As(_)||Ns(_)||Nr(_)||mi(_)?u[b]=_:delete u[b]}}),u}set(u){return Object.keys(u).forEach(b=>{Reflect.has(this,b)&&wn(this[b])&&(this[b]&&wn(this[b].value)&&wn(this[b].setValueAtTime)?this[b].value!==u[b]&&(this[b].value=u[b]):this[b]instanceof Ft?this[b].set(u[b]):this[b]=u[b])}),this}}class dn extends Cn{constructor(u="stopped"){super(),this.name="StateTimeline",this._initial=u,this.setStateAtTime(this._initial,0)}getValueAtTime(u){const b=this.get(u);return b!==null?b.state:this._initial}setStateAtTime(u,b,_){return Ls(b,0),this.add(Object.assign({},_,{state:u,time:b})),this}getLastState(u,b){for(let _=this._search(b);_>=0;_--){const M=this._timeline[_];if(M.state===u)return M}}getNextState(u,b){const _=this._search(b);if(_!==-1)for(let M=_;M<this._timeline.length;M++){const Y=this._timeline[M];if(Y.state===u)return Y}}}class Vt extends Ft{constructor(){super(We(Vt.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const u=We(Vt.getDefaults(),arguments,["param","units","convert"]);for(en(wn(u.param)&&(Oo(u.param)||u.param instanceof Vt),"param must be an AudioParam");!Oo(u.param);)u.param=u.param._param;this._swappable=!!wn(u.swappable)&&u.swappable,this._swappable?(this.input=this.context.createGain(),this._param=u.param,this.input.connect(this._param)):this._param=this.input=u.param,this._events=new Cn(1e3),this._initialValue=this._param.defaultValue,this.units=u.units,this.convert=u.convert,this._minValue=u.minValue,this._maxValue=u.maxValue,wn(u.value)&&u.value!==this._toType(this._initialValue)&&this.setValueAtTime(u.value,0)}static getDefaults(){return Object.assign(Ft.getDefaults(),{convert:!0,units:"number"})}get value(){const u=this.now();return this.getValueAtTime(u)}set value(u){this.cancelScheduledValues(this.now()),this.setValueAtTime(u,this.now())}get minValue(){return wn(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return wn(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(u,b){return this.units===b}_assertRange(u){return wn(this.maxValue)&&wn(this.minValue)&&Ls(u,this._fromType(this.minValue),this._fromType(this.maxValue)),u}_fromType(u){return this.convert&&!this.overridden?this._is(u,"time")?this.toSeconds(u):this._is(u,"decibels")?ie(u):this._is(u,"frequency")?this.toFrequency(u):u:this.overridden?0:u}_toType(u){return this.convert&&this.units==="decibels"?fe(u):u}setValueAtTime(u,b){const _=this.toSeconds(b),M=this._fromType(u);return en(isFinite(M)&&isFinite(_),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(u)}, ${JSON.stringify(b)}`),this._assertRange(M),this.log(this.units,"setValueAtTime",u,_),this._events.add({time:_,type:"setValueAtTime",value:M}),this._param.setValueAtTime(M,_),this}getValueAtTime(u){const b=Math.max(this.toSeconds(u),0),_=this._events.getAfter(b),M=this._events.get(b);let Y=this._initialValue;if(M===null)Y=this._initialValue;else if(M.type!=="setTargetAtTime"||_!==null&&_.type!=="setValueAtTime")if(_===null)Y=M.value;else if(_.type==="linearRampToValueAtTime"||_.type==="exponentialRampToValueAtTime"){let ae=M.value;if(M.type==="setTargetAtTime"){const de=this._events.getBefore(M.time);ae=de===null?this._initialValue:de.value}Y=_.type==="linearRampToValueAtTime"?this._linearInterpolate(M.time,ae,_.time,_.value,b):this._exponentialInterpolate(M.time,ae,_.time,_.value,b)}else Y=M.value;else{const ae=this._events.getBefore(M.time);let de;de=ae===null?this._initialValue:ae.value,M.type==="setTargetAtTime"&&(Y=this._exponentialApproach(M.time,de,M.value,M.constant,b))}return this._toType(Y)}setRampPoint(u){u=this.toSeconds(u);let b=this.getValueAtTime(u);return this.cancelAndHoldAtTime(u),this._fromType(b)===0&&(b=this._toType(this._minOutput)),this.setValueAtTime(b,u),this}linearRampToValueAtTime(u,b){const _=this._fromType(u),M=this.toSeconds(b);return en(isFinite(_)&&isFinite(M),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(u)}, ${JSON.stringify(b)}`),this._assertRange(_),this._events.add({time:M,type:"linearRampToValueAtTime",value:_}),this.log(this.units,"linearRampToValueAtTime",u,M),this._param.linearRampToValueAtTime(_,M),this}exponentialRampToValueAtTime(u,b){let _=this._fromType(u);_=Sr(_,0)?this._minOutput:_,this._assertRange(_);const M=this.toSeconds(b);return en(isFinite(_)&&isFinite(M),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(u)}, ${JSON.stringify(b)}`),this._events.add({time:M,type:"exponentialRampToValueAtTime",value:_}),this.log(this.units,"exponentialRampToValueAtTime",u,M),this._param.exponentialRampToValueAtTime(_,M),this}exponentialRampTo(u,b,_){return _=this.toSeconds(_),this.setRampPoint(_),this.exponentialRampToValueAtTime(u,_+this.toSeconds(b)),this}linearRampTo(u,b,_){return _=this.toSeconds(_),this.setRampPoint(_),this.linearRampToValueAtTime(u,_+this.toSeconds(b)),this}targetRampTo(u,b,_){return _=this.toSeconds(_),this.setRampPoint(_),this.exponentialApproachValueAtTime(u,_,b),this}exponentialApproachValueAtTime(u,b,_){b=this.toSeconds(b),_=this.toSeconds(_);const M=Math.log(_+1)/Math.log(200);return this.setTargetAtTime(u,b,M),this.cancelAndHoldAtTime(b+.9*_),this.linearRampToValueAtTime(u,b+_),this}setTargetAtTime(u,b,_){const M=this._fromType(u);en(isFinite(_)&&_>0,"timeConstant must be a number greater than 0");const Y=this.toSeconds(b);return this._assertRange(M),en(isFinite(M)&&isFinite(Y),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(u)}, ${JSON.stringify(b)}`),this._events.add({constant:_,time:Y,type:"setTargetAtTime",value:M}),this.log(this.units,"setTargetAtTime",u,Y,_),this._param.setTargetAtTime(M,Y,_),this}setValueCurveAtTime(u,b,_,M=1){_=this.toSeconds(_),b=this.toSeconds(b);const Y=this._fromType(u[0])*M;this.setValueAtTime(this._toType(Y),b);const ae=_/(u.length-1);for(let de=1;de<u.length;de++){const xe=this._fromType(u[de])*M;this.linearRampToValueAtTime(this._toType(xe),b+de*ae)}return this}cancelScheduledValues(u){const b=this.toSeconds(u);return en(isFinite(b),`Invalid argument to cancelScheduledValues: ${JSON.stringify(u)}`),this._events.cancel(b),this._param.cancelScheduledValues(b),this.log(this.units,"cancelScheduledValues",b),this}cancelAndHoldAtTime(u){const b=this.toSeconds(u),_=this._fromType(this.getValueAtTime(b));en(isFinite(b),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(u)}`),this.log(this.units,"cancelAndHoldAtTime",b,"value="+_);const M=this._events.get(b),Y=this._events.getAfter(b);return M&&Sr(M.time,b)?Y?(this._param.cancelScheduledValues(Y.time),this._events.cancel(Y.time)):(this._param.cancelAndHoldAtTime(b),this._events.cancel(b+this.sampleTime)):Y&&(this._param.cancelScheduledValues(Y.time),this._events.cancel(Y.time),Y.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(_),b):Y.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(_),b)),this._events.add({time:b,type:"setValueAtTime",value:_}),this._param.setValueAtTime(_,b),this}rampTo(u,b=.1,_){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(u,b,_):this.linearRampTo(u,b,_),this}apply(u){const b=this.context.currentTime;u.setValueAtTime(this.getValueAtTime(b),b);const _=this._events.get(b);if(_&&_.type==="setTargetAtTime"){const M=this._events.getAfter(_.time),Y=M?M.time:b+2,ae=(Y-b)/10;for(let de=b;de<Y;de+=ae)u.linearRampToValueAtTime(this.getValueAtTime(de),de)}return this._events.forEachAfter(this.context.currentTime,M=>{M.type==="cancelScheduledValues"?u.cancelScheduledValues(M.time):M.type==="setTargetAtTime"?u.setTargetAtTime(M.value,M.time,M.constant):u[M.type](M.value,M.time)}),this}setParam(u){en(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const b=this.input;return b.disconnect(this._param),this.apply(u),this._param=u,b.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(u,b,_,M,Y){return _+(b-_)*Math.exp(-(Y-u)/M)}_linearInterpolate(u,b,_,M,Y){return b+(Y-u)/(_-u)*(M-b)}_exponentialInterpolate(u,b,_,M,Y){return b*Math.pow(M/b,(Y-u)/(_-u))}}class vt extends Ft{constructor(){super(...arguments),this._internalChannels=[]}get numberOfInputs(){return wn(this.input)?Oo(this.input)||this.input instanceof Vt?1:this.input.numberOfInputs:0}get numberOfOutputs(){return wn(this.output)?this.output.numberOfOutputs:0}_isAudioNode(u){return wn(u)&&(u instanceof vt||xo(u))}_getInternalNodes(){const u=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&u.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&u.push(this.output),u}_setChannelProperties(u){this._getInternalNodes().forEach(b=>{b.channelCount=u.channelCount,b.channelCountMode=u.channelCountMode,b.channelInterpretation=u.channelInterpretation})}_getChannelProperties(){const u=this._getInternalNodes();en(u.length>0,"ToneAudioNode does not have any internal nodes");const b=u[0];return{channelCount:b.channelCount,channelCountMode:b.channelCountMode,channelInterpretation:b.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(u){const b=this._getChannelProperties();this._setChannelProperties(Object.assign(b,{channelCount:u}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(u){const b=this._getChannelProperties();this._setChannelProperties(Object.assign(b,{channelCountMode:u}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(u){const b=this._getChannelProperties();this._setChannelProperties(Object.assign(b,{channelInterpretation:u}))}connect(u,b=0,_=0){return bn(this,u,b,_),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return ei("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(u,b=0,_=0){return Xn(this,u,b,_),this}chain(...u){return fn(this,...u),this}fan(...u){return u.forEach(b=>this.connect(b)),this}dispose(){return super.dispose(),wn(this.input)&&(this.input instanceof vt?this.input.dispose():xo(this.input)&&this.input.disconnect()),wn(this.output)&&(this.output instanceof vt?this.output.dispose():xo(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function fn(...z){const u=z.shift();z.reduce((b,_)=>(b instanceof vt?b.connect(_):xo(b)&&bn(b,_),_),u)}function bn(z,u,b=0,_=0){for(en(wn(z),"Cannot connect from undefined node"),en(wn(u),"Cannot connect to undefined node"),(u instanceof vt||xo(u))&&en(u.numberOfInputs>0,"Cannot connect to node with no inputs"),en(z.numberOfOutputs>0,"Cannot connect from node with no outputs");u instanceof vt||u instanceof Vt;)wn(u.input)&&(u=u.input);for(;z instanceof vt;)wn(z.output)&&(z=z.output);Oo(u)?z.connect(u,b):z.connect(u,b,_)}function Xn(z,u,b=0,_=0){if(wn(u))for(;u instanceof vt;)u=u.input;for(;!xo(z);)wn(z.output)&&(z=z.output);Oo(u)?z.disconnect(u,b):xo(u)?z.disconnect(u,b,_):z.disconnect()}function sr(...z){const u=z.pop();wn(u)&&z.forEach(b=>bn(b,u))}class Ut extends vt{constructor(){super(We(Ut.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const u=We(Ut.getDefaults(),arguments,["gain","units"]);this.gain=new Vt({context:this.context,convert:u.convert,param:this._gainNode.gain,units:u.units,value:u.gain,minValue:u.minValue,maxValue:u.maxValue}),cn(this,"gain")}static getDefaults(){return Object.assign(vt.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class os extends vt{constructor(u){super(u),this.onended=Z,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new Ut({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(b){const _=this.toSeconds(b);return this._startTime!==-1&&_>=this._startTime&&(this._stopTime===-1||_<=this._stopTime)?"started":"stopped"},this._fadeIn=u.fadeIn,this._fadeOut=u.fadeOut,this._curve=u.curve,this.onended=u.onended}static getDefaults(){return Object.assign(vt.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:Z})}_startGain(u,b=1){en(this._startTime===-1,"Source cannot be started more than once");const _=this.toSeconds(this._fadeIn);return this._startTime=u+_,this._startTime=Math.max(this._startTime,this.context.currentTime),_>0?(this._gainNode.gain.setValueAtTime(0,u),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(b,u+_):this._gainNode.gain.exponentialApproachValueAtTime(b,u,_)):this._gainNode.gain.setValueAtTime(b,u),this}stop(u){return this.log("stop",u),this._stopGain(this.toSeconds(u)),this}_stopGain(u){en(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const b=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(u)+b,this._stopTime=Math.max(this._stopTime,this.now()),b>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,b,u):this._gainNode.gain.targetRampTo(0,b,u):(this._gainNode.gain.cancelAndHoldAtTime(u),this._gainNode.gain.setValueAtTime(0,u)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const _=this._curve==="exponential"?2*b:0;this._stopSource(this.now()+_),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==Z&&(this.onended(this),this.onended=Z,!this.context.isOffline)){const u=()=>this.dispose();window.requestIdleCallback!==void 0?window.requestIdleCallback(u):setTimeout(u,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),en(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.dispose(),this.onended=Z,this}}class Ss extends os{constructor(){super(We(Ss.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const u=We(Ss.getDefaults(),arguments,["offset"]);bn(this._source,this._gainNode),this.offset=new Vt({context:this.context,convert:u.convert,param:this._source.offset,units:u.units,value:u.offset,minValue:u.minValue,maxValue:u.maxValue})}static getDefaults(){return Object.assign(os.getDefaults(),{convert:!0,offset:1,units:"number"})}start(u){const b=this.toSeconds(u);return this.log("start",b),this._startGain(b),this._source.start(b),this}_stopSource(u){this._source.stop(u)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class Xt extends vt{constructor(){super(We(Xt.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const u=We(Xt.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new Ss({context:this.context,convert:u.convert,offset:u.value,units:u.units,minValue:u.minValue,maxValue:u.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(vt.getDefaults(),{convert:!0,units:"number",value:0})}connect(u,b=0,_=0){return gs(this,u,b,_),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(u,b){return this._param.setValueAtTime(u,b),this}getValueAtTime(u){return this._param.getValueAtTime(u)}setRampPoint(u){return this._param.setRampPoint(u),this}linearRampToValueAtTime(u,b){return this._param.linearRampToValueAtTime(u,b),this}exponentialRampToValueAtTime(u,b){return this._param.exponentialRampToValueAtTime(u,b),this}exponentialRampTo(u,b,_){return this._param.exponentialRampTo(u,b,_),this}linearRampTo(u,b,_){return this._param.linearRampTo(u,b,_),this}targetRampTo(u,b,_){return this._param.targetRampTo(u,b,_),this}exponentialApproachValueAtTime(u,b,_){return this._param.exponentialApproachValueAtTime(u,b,_),this}setTargetAtTime(u,b,_){return this._param.setTargetAtTime(u,b,_),this}setValueCurveAtTime(u,b,_,M){return this._param.setValueCurveAtTime(u,b,_,M),this}cancelScheduledValues(u){return this._param.cancelScheduledValues(u),this}cancelAndHoldAtTime(u){return this._param.cancelAndHoldAtTime(u),this}rampTo(u,b,_){return this._param.rampTo(u,b,_),this}get value(){return this._param.value}set value(u){this._param.value=u}get convert(){return this._param.convert}set convert(u){this._param.convert=u}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(u){this._param.overridden=u}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(u){return this._param.apply(u),this}}function gs(z,u,b,_){(u instanceof Vt||Oo(u)||u instanceof Xt&&u.override)&&(u.cancelScheduledValues(0),u.setValueAtTime(0,0),u instanceof Xt&&(u.overridden=!0)),bn(z,u,b,_)}class rr extends Vt{constructor(){super(We(rr.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new Cn(1/0),this._multiplier=1;const u=We(rr.getDefaults(),arguments,["value"]);this._multiplier=u.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(u.value)}),this.setValueAtTime(u.value,0)}static getDefaults(){return Object.assign(Vt.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(u,b,_){b=this.toSeconds(b),this.setRampPoint(b);const M=this._fromType(u),Y=this._events.get(b),ae=Math.round(Math.max(1/_,1));for(let de=0;de<=ae;de++){const xe=_*de+b,ve=this._exponentialApproach(Y.time,Y.value,M,_,xe);this.linearRampToValueAtTime(this._toType(ve),xe)}return this}setValueAtTime(u,b){const _=this.toSeconds(b);super.setValueAtTime(u,b);const M=this._events.get(_),Y=this._events.previousEvent(M),ae=this._getTicksUntilEvent(Y,_);return M.ticks=Math.max(ae,0),this}linearRampToValueAtTime(u,b){const _=this.toSeconds(b);super.linearRampToValueAtTime(u,b);const M=this._events.get(_),Y=this._events.previousEvent(M),ae=this._getTicksUntilEvent(Y,_);return M.ticks=Math.max(ae,0),this}exponentialRampToValueAtTime(u,b){b=this.toSeconds(b);const _=this._fromType(u),M=this._events.get(b),Y=Math.round(Math.max(10*(b-M.time),1)),ae=(b-M.time)/Y;for(let de=0;de<=Y;de++){const xe=ae*de+M.time,ve=this._exponentialInterpolate(M.time,M.value,b,_,xe);this.linearRampToValueAtTime(this._toType(ve),xe)}return this}_getTicksUntilEvent(u,b){if(u===null)u={ticks:0,time:0,type:"setValueAtTime",value:0};else if(nr(u.ticks)){const ae=this._events.previousEvent(u);u.ticks=this._getTicksUntilEvent(ae,u.time)}const _=this._fromType(this.getValueAtTime(u.time));let M=this._fromType(this.getValueAtTime(b));const Y=this._events.get(b);return Y&&Y.time===b&&Y.type==="setValueAtTime"&&(M=this._fromType(this.getValueAtTime(b-this.sampleTime))),.5*(b-u.time)*(_+M)+u.ticks}getTicksAtTime(u){const b=this.toSeconds(u),_=this._events.get(b);return Math.max(this._getTicksUntilEvent(_,b),0)}getDurationOfTicks(u,b){const _=this.toSeconds(b),M=this.getTicksAtTime(b);return this.getTimeOfTick(M+u)-_}getTimeOfTick(u){const b=this._events.get(u,"ticks"),_=this._events.getAfter(u,"ticks");if(b&&b.ticks===u)return b.time;if(b&&_&&_.type==="linearRampToValueAtTime"&&b.value!==_.value){const M=this._fromType(this.getValueAtTime(b.time)),Y=(this._fromType(this.getValueAtTime(_.time))-M)/(_.time-b.time),ae=Math.sqrt(Math.pow(M,2)-2*Y*(b.ticks-u)),de=(-M+ae)/Y,xe=(-M-ae)/Y;return(de>0?de:xe)+b.time}return b?b.value===0?1/0:b.time+(u-b.ticks)/b.value:u/this._initialValue}ticksToTime(u,b){return this.getDurationOfTicks(u,b)}timeToTicks(u,b){const _=this.toSeconds(b),M=this.toSeconds(u),Y=this.getTicksAtTime(_);return this.getTicksAtTime(_+M)-Y}_fromType(u){return this.units==="bpm"&&this.multiplier?1/(60/u/this.multiplier):super._fromType(u)}_toType(u){return this.units==="bpm"&&this.multiplier?u/this.multiplier*60:super._toType(u)}get multiplier(){return this._multiplier}set multiplier(u){const b=this.value;this._multiplier=u,this.cancelScheduledValues(0),this.setValueAtTime(b,0)}}class Qs extends Xt{constructor(){super(We(Qs.getDefaults(),arguments,["value"])),this.name="TickSignal";const u=We(Qs.getDefaults(),arguments,["value"]);this.input=this._param=new rr({context:this.context,convert:u.convert,multiplier:u.multiplier,param:this._constantSource.offset,units:u.units,value:u.value})}static getDefaults(){return Object.assign(Xt.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(u,b){return this._param.ticksToTime(u,b)}timeToTicks(u,b){return this._param.timeToTicks(u,b)}getTimeOfTick(u){return this._param.getTimeOfTick(u)}getDurationOfTicks(u,b){return this._param.getDurationOfTicks(u,b)}getTicksAtTime(u){return this._param.getTicksAtTime(u)}get multiplier(){return this._param.multiplier}set multiplier(u){this._param.multiplier=u}dispose(){return super.dispose(),this._param.dispose(),this}}class Is extends Ft{constructor(){super(We(Is.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new dn,this._tickOffset=new Cn,this._ticksAtTime=new Cn,this._secondsAtTime=new Cn;const u=We(Is.getDefaults(),arguments,["frequency"]);this.frequency=new Qs({context:this.context,units:u.units,value:u.frequency}),cn(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},Ft.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(u,b){const _=this.toSeconds(u);return this._state.getValueAtTime(_)!=="started"&&(this._state.setStateAtTime("started",_),wn(b)&&this.setTicksAtTime(b,_),this._ticksAtTime.cancel(_),this._secondsAtTime.cancel(_)),this}stop(u){const b=this.toSeconds(u);if(this._state.getValueAtTime(b)==="stopped"){const _=this._state.get(b);_&&_.time>0&&(this._tickOffset.cancel(_.time),this._state.cancel(_.time))}return this._state.cancel(b),this._state.setStateAtTime("stopped",b),this.setTicksAtTime(0,b),this._ticksAtTime.cancel(b),this._secondsAtTime.cancel(b),this}pause(u){const b=this.toSeconds(u);return this._state.getValueAtTime(b)==="started"&&(this._state.setStateAtTime("paused",b),this._ticksAtTime.cancel(b),this._secondsAtTime.cancel(b)),this}cancel(u){return u=this.toSeconds(u),this._state.cancel(u),this._tickOffset.cancel(u),this._ticksAtTime.cancel(u),this._secondsAtTime.cancel(u),this}getTicksAtTime(u){const b=this.toSeconds(u),_=this._state.getLastState("stopped",b),M=this._ticksAtTime.get(b),Y={state:"paused",time:b};this._state.add(Y);let ae=M||_,de=M?M.ticks:0,xe=null;return this._state.forEachBetween(ae.time,b+this.sampleTime,ve=>{let _e=ae.time;const Ee=this._tickOffset.get(ve.time);Ee&&Ee.time>=ae.time&&(de=Ee.ticks,_e=Ee.time),ae.state==="started"&&ve.state!=="started"&&(de+=this.frequency.getTicksAtTime(ve.time)-this.frequency.getTicksAtTime(_e),ve.time!==Y.time&&(xe={state:ve.state,time:ve.time,ticks:de})),ae=ve}),this._state.remove(Y),xe&&this._ticksAtTime.add(xe),de}get ticks(){return this.getTicksAtTime(this.now())}set ticks(u){this.setTicksAtTime(u,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(u){const b=this.now(),_=this.frequency.timeToTicks(u,b);this.setTicksAtTime(_,b)}getSecondsAtTime(u){u=this.toSeconds(u);const b=this._state.getLastState("stopped",u),_={state:"paused",time:u};this._state.add(_);const M=this._secondsAtTime.get(u);let Y=M||b,ae=M?M.seconds:0,de=null;return this._state.forEachBetween(Y.time,u+this.sampleTime,xe=>{let ve=Y.time;const _e=this._tickOffset.get(xe.time);_e&&_e.time>=Y.time&&(ae=_e.seconds,ve=_e.time),Y.state==="started"&&xe.state!=="started"&&(ae+=xe.time-ve,xe.time!==_.time&&(de={state:xe.state,time:xe.time,seconds:ae})),Y=xe}),this._state.remove(_),de&&this._secondsAtTime.add(de),ae}setTicksAtTime(u,b){return b=this.toSeconds(b),this._tickOffset.cancel(b),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(u,b),ticks:u,time:b}),this._ticksAtTime.cancel(b),this._secondsAtTime.cancel(b),this}getStateAtTime(u){return u=this.toSeconds(u),this._state.getValueAtTime(u)}getTimeOfTick(u,b=this.now()){const _=this._tickOffset.get(b),M=this._state.get(b),Y=Math.max(_.time,M.time),ae=this.frequency.getTicksAtTime(Y)+u-_.ticks;return this.frequency.getTimeOfTick(ae)}forEachTickBetween(u,b,_){let M=this._state.get(u);this._state.forEachBetween(u,b,ae=>{M&&M.state==="started"&&ae.state!=="started"&&this.forEachTickBetween(Math.max(M.time,u),ae.time-this.sampleTime,_),M=ae});let Y=null;if(M&&M.state==="started"){const ae=Math.max(M.time,u),de=this.frequency.getTicksAtTime(ae),xe=de-this.frequency.getTicksAtTime(M.time);let ve=Math.ceil(xe)-xe;ve=Sr(ve,1)?0:ve;let _e=this.frequency.getTimeOfTick(de+ve);for(;_e<b;){try{_(_e,Math.round(this.getTicksAtTime(_e)))}catch(Ee){Y=Ee;break}_e+=this.frequency.getDurationOfTicks(1,_e)}}if(Y)throw Y;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this._ticksAtTime.dispose(),this._secondsAtTime.dispose(),this.frequency.dispose(),this}}class Js extends Ft{constructor(){super(We(Js.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=Z,this._lastUpdate=0,this._state=new dn("stopped"),this._boundLoop=this._loop.bind(this);const u=We(Js.getDefaults(),arguments,["callback","frequency"]);this.callback=u.callback,this._tickSource=new Is({context:this.context,frequency:u.frequency,units:u.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,cn(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(Ft.getDefaults(),{callback:Z,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(u,b){$a(this.context);const _=this.toSeconds(u);return this.log("start",_),this._state.getValueAtTime(_)!=="started"&&(this._state.setStateAtTime("started",_),this._tickSource.start(_,b),_<this._lastUpdate&&this.emit("start",_,b)),this}stop(u){const b=this.toSeconds(u);return this.log("stop",b),this._state.cancel(b),this._state.setStateAtTime("stopped",b),this._tickSource.stop(b),b<this._lastUpdate&&this.emit("stop",b),this}pause(u){const b=this.toSeconds(u);return this._state.getValueAtTime(b)==="started"&&(this._state.setStateAtTime("paused",b),this._tickSource.pause(b),b<this._lastUpdate&&this.emit("pause",b)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(u){this._tickSource.ticks=u}get seconds(){return this._tickSource.seconds}set seconds(u){this._tickSource.seconds=u}getSecondsAtTime(u){return this._tickSource.getSecondsAtTime(u)}setTicksAtTime(u,b){return this._tickSource.setTicksAtTime(u,b),this}getTimeOfTick(u,b=this.now()){return this._tickSource.getTimeOfTick(u,b)}getTicksAtTime(u){return this._tickSource.getTicksAtTime(u)}nextTickTime(u,b){const _=this.toSeconds(b),M=this.getTicksAtTime(_);return this._tickSource.getTimeOfTick(M+u,_)}_loop(){const u=this._lastUpdate,b=this.now();this._lastUpdate=b,this.log("loop",u,b),u!==b&&(this._state.forEachBetween(u,b,_=>{switch(_.state){case"started":const M=this._tickSource.getTicksAtTime(_.time);this.emit("start",_.time,M);break;case"stopped":_.time!==0&&this.emit("stop",_.time);break;case"paused":this.emit("pause",_.time)}}),this._tickSource.forEachTickBetween(u,b,(_,M)=>{this.callback(_,M)}))}getStateAtTime(u){const b=this.toSeconds(u);return this._state.getValueAtTime(b)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}Fo.mixin(Js);class Bs extends vt{constructor(){super(We(Bs.getDefaults(),arguments,["delayTime","maxDelay"])),this.name="Delay";const u=We(Bs.getDefaults(),arguments,["delayTime","maxDelay"]),b=this.toSeconds(u.maxDelay);this._maxDelay=Math.max(b,this.toSeconds(u.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(b),this.delayTime=new Vt({context:this.context,param:this._delayNode.delayTime,units:"time",value:u.delayTime,minValue:0,maxValue:this.maxDelay}),cn(this,"delayTime")}static getDefaults(){return Object.assign(vt.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}function Qc(z,u,b=2,_=W().sampleRate){return qn(this,void 0,void 0,function*(){const M=W(),Y=new E(b,u,_);K(Y),yield z(Y);const ae=Y.render();K(M);const de=yield ae;return new v(de)})}class Yi extends ao{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const u=We(Yi.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=u.baseUrl,Object.keys(u.urls).forEach(b=>{this._loadingCount++;const _=u.urls[b];this.add(b,_,this._bufferLoaded.bind(this,u.onload),u.onerror)})}static getDefaults(){return{baseUrl:"",onerror:Z,onload:Z,urls:{}}}has(u){return this._buffers.has(u.toString())}get(u){return en(this.has(u),`ToneAudioBuffers has no buffer named: ${u}`),this._buffers.get(u.toString())}_bufferLoaded(u){this._loadingCount--,this._loadingCount===0&&u&&u()}get loaded(){return Array.from(this._buffers).every(([u,b])=>b.loaded)}add(u,b,_=Z,M=Z){return Nr(b)?(this.baseUrl&&b.trim().substring(0,11).toLowerCase()==="data:audio/"&&(this.baseUrl=""),this._buffers.set(u.toString(),new v(this.baseUrl+b,_,M))):this._buffers.set(u.toString(),new v(b,_,M)),this}dispose(){return super.dispose(),this._buffers.forEach(u=>u.dispose()),this._buffers.clear(),this}}class Qi extends kt{constructor(){super(...arguments),this.name="MidiClass",this.defaultUnits="midi"}_frequencyToUnits(u){return ke(super._frequencyToUnits(u))}_ticksToUnits(u){return ke(super._ticksToUnits(u))}_beatsToUnits(u){return ke(super._beatsToUnits(u))}_secondsToUnits(u){return ke(super._secondsToUnits(u))}toMidi(){return this.valueOf()}toFrequency(){return Ve(this.toMidi())}transpose(u){return new Qi(this.context,this.toMidi()+u)}}function xu(z,u){return new Qi(W(),z,u)}class ds extends at{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(u){return this._getPPQ()*u}_secondsToUnits(u){return Math.floor(u/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(u){return u}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}function vu(z,u){return new ds(W(),z,u)}class Jc extends Ft{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new Cn,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(u,b){return this._events.add({callback:u,time:this.toSeconds(b)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(u){return this._events.cancel(this.toSeconds(u)),this}_drawLoop(){const u=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=u;){const b=this._events.shift();b&&u-b.time<=this.expiration&&b.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}yi(z=>{z.draw=new Jc({context:z})}),Po(z=>{z.draw.dispose()});class au extends ao{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(u){en(wn(u.time),"Events must have a time property"),en(wn(u.duration),"Events must have a duration parameter"),u.time=u.time.valueOf();let b=new wu(u.time,u.time+u.duration,u);for(this._root===null?this._root=b:this._root.insert(b),this._length++;b!==null;)b.updateHeight(),b.updateMax(),this._rebalance(b),b=b.parent;return this}remove(u){if(this._root!==null){const b=[];this._root.search(u.time,b);for(const _ of b)if(_.event===u){this._removeNode(_),this._length--;break}}return this}get length(){return this._length}cancel(u){return this.forEachFrom(u,b=>this.remove(b)),this}_setRoot(u){this._root=u,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(u,b){u.parent!==null?(u.isLeftChild()?u.parent.left=b:u.parent.right=b,this._rebalance(u.parent)):this._setRoot(b)}_removeNode(u){if(u.left===null&&u.right===null)this._replaceNodeInParent(u,null);else if(u.right===null)this._replaceNodeInParent(u,u.left);else if(u.left===null)this._replaceNodeInParent(u,u.right);else{let b,_=null;if(u.getBalance()>0)if(u.left.right===null)b=u.left,b.right=u.right,_=b;else{for(b=u.left.right;b.right!==null;)b=b.right;b.parent&&(b.parent.right=b.left,_=b.parent,b.left=u.left,b.right=u.right)}else if(u.right.left===null)b=u.right,b.left=u.left,_=b;else{for(b=u.right.left;b.left!==null;)b=b.left;b.parent&&(b.parent.left=b.right,_=b.parent,b.left=u.left,b.right=u.right)}u.parent!==null?u.isLeftChild()?u.parent.left=b:u.parent.right=b:this._setRoot(b),_&&this._rebalance(_)}u.dispose()}_rotateLeft(u){const b=u.parent,_=u.isLeftChild(),M=u.right;M&&(u.right=M.left,M.left=u),b!==null?_?b.left=M:b.right=M:this._setRoot(M)}_rotateRight(u){const b=u.parent,_=u.isLeftChild(),M=u.left;M&&(u.left=M.right,M.right=u),b!==null?_?b.left=M:b.right=M:this._setRoot(M)}_rebalance(u){const b=u.getBalance();b>1&&u.left?u.left.getBalance()<0?this._rotateLeft(u.left):this._rotateRight(u):b<-1&&u.right&&(u.right.getBalance()>0?this._rotateRight(u.right):this._rotateLeft(u))}get(u){if(this._root!==null){const b=[];if(this._root.search(u,b),b.length>0){let _=b[0];for(let M=1;M<b.length;M++)b[M].low>_.low&&(_=b[M]);return _.event}}return null}forEach(u){if(this._root!==null){const b=[];this._root.traverse(_=>b.push(_)),b.forEach(_=>{_.event&&u(_.event)})}return this}forEachAtTime(u,b){if(this._root!==null){const _=[];this._root.search(u,_),_.forEach(M=>{M.event&&b(M.event)})}return this}forEachFrom(u,b){if(this._root!==null){const _=[];this._root.searchAfter(u,_),_.forEach(M=>{M.event&&b(M.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(u=>u.dispose()),this._root=null,this}}class wu{constructor(u,b,_){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=_,this.low=u,this.high=b,this.max=this.high}insert(u){u.low<=this.low?this.left===null?this.left=u:this.left.insert(u):this.right===null?this.right=u:this.right.insert(u)}search(u,b){u>this.max||(this.left!==null&&this.left.search(u,b),this.low<=u&&this.high>u&&b.push(this),this.low>u||this.right!==null&&this.right.search(u,b))}searchAfter(u,b){this.low>=u&&(b.push(this),this.left!==null&&this.left.searchAfter(u,b)),this.right!==null&&this.right.searchAfter(u,b)}traverse(u){u(this),this.left!==null&&this.left.traverse(u),this.right!==null&&this.right.traverse(u)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let u=0;return this.left!==null&&this.right!==null?u=this.left.height-this.right.height:this.left!==null?u=this.left.height+1:this.right!==null&&(u=-(this.right.height+1)),u}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(u){this._left=u,u!==null&&(u.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(u){this._right=u,u!==null&&(u.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class wo extends vt{constructor(){super(We(wo.getDefaults(),arguments,["volume"])),this.name="Volume";const u=We(wo.getDefaults(),arguments,["volume"]);this.input=this.output=new Ut({context:this.context,gain:u.volume,units:"decibels"}),this.volume=this.output.gain,cn(this,"volume"),this._unmutedVolume=u.volume,this.mute=u.mute}static getDefaults(){return Object.assign(vt.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(u){!this.mute&&u?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!u&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class pc extends vt{constructor(){super(We(pc.getDefaults(),arguments)),this.name="Destination",this.input=new wo({context:this.context}),this.output=new Ut({context:this.context}),this.volume=this.input.volume;const u=We(pc.getDefaults(),arguments);fn(this.input,this.output,this.context.rawContext.destination),this.mute=u.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(vt.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(u){this.input.mute=u}chain(...u){return this.input.disconnect(),u.unshift(this.input),u.push(this.output),fn(...u),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}yi(z=>{z.destination=new pc({context:z})}),Po(z=>{z.destination.dispose()});class Zc extends ao{constructor(u){super(),this.name="TimelineValue",this._timeline=new Cn({memory:10}),this._initialValue=u}set(u,b){return this._timeline.add({value:u,time:b}),this}get(u){const b=this._timeline.get(u);return b?b.value:this._initialValue}}class Or extends vt{constructor(){super(Object.assign(We(Or.getDefaults(),arguments,["context"])))}connect(u,b=0,_=0){return gs(this,u,b,_),this}}class Rr extends Or{constructor(){super(Object.assign(We(Rr.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const u=We(Rr.getDefaults(),arguments,["mapping","length"]);As(u.mapping)||u.mapping instanceof Float32Array?this.curve=Float32Array.from(u.mapping):ac(u.mapping)&&this.setMap(u.mapping,u.length)}static getDefaults(){return Object.assign(Xt.getDefaults(),{length:1024})}setMap(u,b=1024){const _=new Float32Array(b);for(let M=0,Y=b;M<Y;M++){const ae=M/(Y-1)*2-1;_[M]=u(ae,M)}return this.curve=_,this}get curve(){return this._shaper.curve}set curve(u){this._shaper.curve=u}get oversample(){return this._shaper.oversample}set oversample(u){en(["none","2x","4x"].some(b=>b.includes(u)),"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=u}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class xi extends Or{constructor(){super(Object.assign(We(xi.getDefaults(),arguments,["value"]))),this.name="Pow";const u=We(xi.getDefaults(),arguments,["value"]);this._exponentScaler=this.input=this.output=new Rr({context:this.context,mapping:this._expFunc(u.value),length:8192}),this._exponent=u.value}static getDefaults(){return Object.assign(Or.getDefaults(),{value:1})}_expFunc(u){return b=>Math.pow(Math.abs(b),u)}get value(){return this._exponent}set value(u){this._exponent=u,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class Lo{constructor(u,b){this.id=Lo._eventId++,this._remainderTime=0;const _=Object.assign(Lo.getDefaults(),b);this.transport=u,this.callback=_.callback,this._once=_.once,this.time=Math.floor(_.time),this._remainderTime=_.time-this.time}static getDefaults(){return{callback:Z,once:!1,time:0}}get floatTime(){return this.time+this._remainderTime}invoke(u){if(this.callback){const b=this.transport.bpm.getDurationOfTicks(1,u);this.callback(u+this._remainderTime*b),this._once&&this.transport.clear(this.id)}}dispose(){return this.callback=void 0,this}}Lo._eventId=0;class eu extends Lo{constructor(u,b){super(u,b),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const _=Object.assign(eu.getDefaults(),b);this.duration=_.duration,this._interval=_.interval,this._nextTick=_.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.transport.on("ticks",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},Lo.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(u){this._createEvents(u),super.invoke(u)}_createEvent(){return Ki(this._nextTick,this.floatTime+this.duration)?this.transport.scheduleOnce(this.invoke.bind(this),new ds(this.context,this._nextTick).toSeconds()):-1}_createEvents(u){Ki(this._nextTick+this._interval,this.floatTime+this.duration)&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new ds(this.context,this._nextTick).toSeconds()))}_restart(u){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.floatTime;const b=this.transport.getTicksAtTime(u);Ro(b,this.time)&&(this._nextTick=this.floatTime+Math.ceil((b-this.floatTime)/this._interval)*this._interval),this._currentId=this._createEvent(),this._nextTick+=this._interval,this._nextId=this._createEvent()}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this.transport.off("ticks",this._boundRestart),this}}class Na extends Ft{constructor(){super(We(Na.getDefaults(),arguments)),this.name="Transport",this._loop=new Zc(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new Cn,this._repeatedEvents=new au,this._syncedSignals=[],this._swingAmount=0;const u=We(Na.getDefaults(),arguments);this._ppq=u.ppq,this._clock=new Js({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=u.ppq,this.bpm.setValueAtTime(u.bpm,0),cn(this,"bpm"),this._timeSignature=u.timeSignature,this._swingTicks=u.ppq/2}static getDefaults(){return Object.assign(Ft.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(u,b){if(this._loop.get(u)&&b>=this._loopEnd&&(this.emit("loopEnd",u),this._clock.setTicksAtTime(this._loopStart,u),b=this._loopStart,this.emit("loopStart",u,this._clock.getSecondsAtTime(u)),this.emit("loop",u)),this._swingAmount>0&&b%this._ppq!=0&&b%(2*this._swingTicks)!=0){const _=b%(2*this._swingTicks)/(2*this._swingTicks),M=Math.sin(_*Math.PI)*this._swingAmount;u+=new ds(this.context,2*this._swingTicks/3).toSeconds()*M}_a(!0),this._timeline.forEachAtTime(b,_=>_.invoke(u)),_a(!1)}schedule(u,b){const _=new Lo(this,{callback:u,time:new at(this.context,b).toTicks()});return this._addEvent(_,this._timeline)}scheduleRepeat(u,b,_,M=1/0){const Y=new eu(this,{callback:u,duration:new Ue(this.context,M).toTicks(),interval:new Ue(this.context,b).toTicks(),time:new at(this.context,_).toTicks()});return this._addEvent(Y,this._repeatedEvents)}scheduleOnce(u,b){const _=new Lo(this,{callback:u,once:!0,time:new at(this.context,b).toTicks()});return this._addEvent(_,this._timeline)}clear(u){if(this._scheduledEvents.hasOwnProperty(u)){const b=this._scheduledEvents[u.toString()];b.timeline.remove(b.event),b.event.dispose(),delete this._scheduledEvents[u.toString()]}return this}_addEvent(u,b){return this._scheduledEvents[u.id.toString()]={event:u,timeline:b},b.add(u),u.id}cancel(u=0){const b=this.toTicks(u);return this._timeline.forEachFrom(b,_=>this.clear(_.id)),this._repeatedEvents.forEachFrom(b,_=>this.clear(_.id)),this}_bindClockEvents(){this._clock.on("start",(u,b)=>{b=new ds(this.context,b).toSeconds(),this.emit("start",u,b)}),this._clock.on("stop",u=>{this.emit("stop",u)}),this._clock.on("pause",u=>{this.emit("pause",u)})}get state(){return this._clock.getStateAtTime(this.now())}start(u,b){let _;return this.context.resume(),wn(b)&&(_=this.toTicks(b)),this._clock.start(u,_),this}stop(u){return this._clock.stop(u),this}pause(u){return this._clock.pause(u),this}toggle(u){return u=this.toSeconds(u),this._clock.getStateAtTime(u)!=="started"?this.start(u):this.stop(u),this}get timeSignature(){return this._timeSignature}set timeSignature(u){As(u)&&(u=u[0]/u[1]*4),this._timeSignature=u}get loopStart(){return new Ue(this.context,this._loopStart,"i").toSeconds()}set loopStart(u){this._loopStart=this.toTicks(u)}get loopEnd(){return new Ue(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(u){this._loopEnd=this.toTicks(u)}get loop(){return this._loop.get(this.now())}set loop(u){this._loop.set(u,this.now())}setLoopPoints(u,b){return this.loopStart=u,this.loopEnd=b,this}get swing(){return this._swingAmount}set swing(u){this._swingAmount=u}get swingSubdivision(){return new ds(this.context,this._swingTicks).toNotation()}set swingSubdivision(u){this._swingTicks=this.toTicks(u)}get position(){const u=this.now(),b=this._clock.getTicksAtTime(u);return new ds(this.context,b).toBarsBeatsSixteenths()}set position(u){const b=this.toTicks(u);this.ticks=b}get seconds(){return this._clock.seconds}set seconds(u){const b=this.now(),_=this._clock.frequency.timeToTicks(u,b);this.ticks=_}get progress(){if(this.loop){const u=this.now();return(this._clock.getTicksAtTime(u)-this._loopStart)/(this._loopEnd-this._loopStart)}return 0}get ticks(){return this._clock.ticks}set ticks(u){if(this._clock.ticks!==u){const b=this.now();if(this.state==="started"){const _=this._clock.getTicksAtTime(b),M=b+this._clock.frequency.getDurationOfTicks(Math.ceil(_)-_,b);this.emit("stop",M),this._clock.setTicksAtTime(u,M),this.emit("start",M,this._clock.getSecondsAtTime(M))}else this.emit("ticks",b),this._clock.setTicksAtTime(u,b)}}getTicksAtTime(u){return this._clock.getTicksAtTime(u)}getSecondsAtTime(u){return this._clock.getSecondsAtTime(u)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(u){this._clock.frequency.multiplier=u}nextSubdivision(u){if(u=this.toTicks(u),this.state!=="started")return 0;{const b=this.now(),_=u-this.getTicksAtTime(b)%u;return this._clock.nextTickTime(_,b)}}syncSignal(u,b){const _=this.now();let M=this.bpm,Y=1/(60/M.getValueAtTime(_)/this.PPQ),ae=[];if(u.units==="time"){const xe=.015625/Y,ve=new Ut(xe),_e=new xi(-1),Ee=new Ut(xe);M.chain(ve,_e,Ee),M=Ee,Y=1/Y,ae=[ve,_e,Ee]}b||(b=u.getValueAtTime(_)!==0?u.getValueAtTime(_)/Y:0);const de=new Ut(b);return M.connect(de),de.connect(u._param),ae.push(de),this._syncedSignals.push({initial:u.value,nodes:ae,signal:u}),u.value=0,this}unsyncSignal(u){for(let b=this._syncedSignals.length-1;b>=0;b--){const _=this._syncedSignals[b];_.signal===u&&(_.nodes.forEach(M=>M.dispose()),_.signal.value=_.initial,this._syncedSignals.splice(b,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),bi(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}Fo.mixin(Na),yi(z=>{z.transport=new Na({context:z})}),Po(z=>{z.transport.dispose()});class ps extends vt{constructor(u){super(u),this.input=void 0,this._state=new dn("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=Z,this._syncedStop=Z,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new wo({context:this.context,mute:u.mute,volume:u.volume}),this.volume=this._volume.volume,cn(this,"volume"),this.onstop=u.onstop}static getDefaults(){return Object.assign(vt.getDefaults(),{mute:!1,onstop:Z,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(u){this._volume.mute=u}_clampToCurrentTime(u){return this._synced?u:Math.max(u,this.context.currentTime)}start(u,b,_){let M=nr(u)&&this._synced?this.context.transport.seconds:this.toSeconds(u);if(M=this._clampToCurrentTime(M),this._synced||this._state.getValueAtTime(M)!=="started")if(this.log("start",M),this._state.setStateAtTime("started",M),this._synced){const Y=this._state.get(M);Y&&(Y.offset=this.toSeconds(wr(b,0)),Y.duration=_?this.toSeconds(_):void 0);const ae=this.context.transport.schedule(de=>{this._start(de,b,_)},M);this._scheduled.push(ae),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>M&&this._syncedStart(this.now(),this.context.transport.seconds)}else $a(this.context),this._start(M,b,_);else en(Ro(M,this._state.get(M).time),"Start time must be strictly greater than previous start time"),this._state.cancel(M),this._state.setStateAtTime("started",M),this.log("restart",M),this.restart(M,b,_);return this}stop(u){let b=nr(u)&&this._synced?this.context.transport.seconds:this.toSeconds(u);if(b=this._clampToCurrentTime(b),this._state.getValueAtTime(b)==="started"||wn(this._state.getNextState("started",b))){if(this.log("stop",b),this._synced){const _=this.context.transport.schedule(this._stop.bind(this),b);this._scheduled.push(_)}else this._stop(b);this._state.cancel(b),this._state.setStateAtTime("stopped",b)}return this}restart(u,b,_){return u=this.toSeconds(u),this._state.getValueAtTime(u)==="started"&&(this._state.cancel(u),this._restart(u,b,_)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(u,b)=>{if(Ro(b,0)){const _=this._state.get(b);if(_&&_.state==="started"&&_.time!==b){const M=b-this.toSeconds(_.time);let Y;_.duration&&(Y=this.toSeconds(_.duration)-M),this._start(u,this.toSeconds(_.offset)+M,Y)}}},this._syncedStop=u=>{const b=this.context.transport.getSecondsAtTime(Math.max(u-this.sampleTime,0));this._state.getValueAtTime(b)==="started"&&this._stop(u)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(u=>this.context.transport.clear(u)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=Z,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class zo extends os{constructor(){super(We(zo.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const u=We(zo.getDefaults(),arguments,["url","onload"]);bn(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new Vt({context:this.context,param:this._source.playbackRate,units:"positive",value:u.playbackRate}),this.loop=u.loop,this.loopStart=u.loopStart,this.loopEnd=u.loopEnd,this._buffer=new v(u.url,u.onload,u.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(os.getDefaults(),{url:new v,loop:!1,loopEnd:0,loopStart:0,onload:Z,onerror:Z,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(u){this._fadeIn=u}get fadeOut(){return this._fadeOut}set fadeOut(u){this._fadeOut=u}get curve(){return this._curve}set curve(u){this._curve=u}start(u,b,_,M=1){en(this.buffer.loaded,"buffer is either not set or not loaded");const Y=this.toSeconds(u);this._startGain(Y,M),b=this.loop?wr(b,this.loopStart):wr(b,0);let ae=Math.max(this.toSeconds(b),0);if(this.loop){const de=this.toSeconds(this.loopEnd)||this.buffer.duration,xe=this.toSeconds(this.loopStart),ve=de-xe;Hi(ae,de)&&(ae=(ae-xe)%ve+xe),Sr(ae,this.buffer.duration)&&(ae=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,Ki(ae,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(Y,ae)),wn(_)){let de=this.toSeconds(_);de=Math.max(de,0),this.stop(Y+de)}return this}_stopSource(u){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(u)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(u){this._source.loopStart=this.toSeconds(u)}get loopEnd(){return this._source.loopEnd}set loopEnd(u){this._source.loopEnd=this.toSeconds(u)}get buffer(){return this._buffer}set buffer(u){this._buffer.set(u)}get loop(){return this._source.loop}set loop(u){this._source.loop=u,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class co extends ps{constructor(){super(We(co.getDefaults(),arguments,["type"])),this.name="Noise",this._source=null;const u=We(co.getDefaults(),arguments,["type"]);this._playbackRate=u.playbackRate,this.type=u.type,this._fadeIn=u.fadeIn,this._fadeOut=u.fadeOut}static getDefaults(){return Object.assign(ps.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(u){if(en(u in cu,"Noise: invalid type: "+u),this._type!==u&&(this._type=u,this.state==="started")){const b=this.now();this._stop(b),this._start(b)}}get playbackRate(){return this._playbackRate}set playbackRate(u){this._playbackRate=u,this._source&&(this._source.playbackRate.value=u)}_start(u){const b=cu[this._type];this._source=new zo({url:b,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(u),Math.random()*(b.duration-.001))}_stop(u){this._source&&(this._source.stop(this.toSeconds(u)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(u){this._fadeIn=u,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(u){this._fadeOut=u,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(u){this._stop(u),this._start(u)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const vi=220500,So={brown:null,pink:null,white:null},cu={get brown(){if(!So.brown){const z=[];for(let u=0;u<2;u++){const b=new Float32Array(vi);z[u]=b;let _=0;for(let M=0;M<vi;M++){const Y=2*Math.random()-1;b[M]=(_+.02*Y)/1.02,_=b[M],b[M]*=3.5}}So.brown=new v().fromArray(z)}return So.brown},get pink(){if(!So.pink){const z=[];for(let u=0;u<2;u++){const b=new Float32Array(vi);let _,M,Y,ae,de,xe,ve;z[u]=b,_=M=Y=ae=de=xe=ve=0;for(let _e=0;_e<vi;_e++){const Ee=2*Math.random()-1;_=.99886*_+.0555179*Ee,M=.99332*M+.0750759*Ee,Y=.969*Y+.153852*Ee,ae=.8665*ae+.3104856*Ee,de=.55*de+.5329522*Ee,xe=-.7616*xe-.016898*Ee,b[_e]=_+M+Y+ae+de+xe+ve+.5362*Ee,b[_e]*=.11,ve=.115926*Ee}}So.pink=new v().fromArray(z)}return So.pink},get white(){if(!So.white){const z=[];for(let u=0;u<2;u++){const b=new Float32Array(vi);z[u]=b;for(let _=0;_<vi;_++)b[_]=2*Math.random()-1}So.white=new v().fromArray(z)}return So.white}};class Ji extends vt{constructor(){super(We(Ji.getDefaults(),arguments,["volume"])),this.name="UserMedia";const u=We(Ji.getDefaults(),arguments,["volume"]);this._volume=this.output=new wo({context:this.context,volume:u.volume}),this.volume=this._volume.volume,cn(this,"volume"),this.mute=u.mute}static getDefaults(){return Object.assign(vt.getDefaults(),{mute:!1,volume:0})}open(u){return qn(this,void 0,void 0,function*(){en(Ji.supported,"UserMedia is not supported"),this.state==="started"&&this.close();const b=yield Ji.enumerateDevices();Ns(u)?this._device=b[u]:(this._device=b.find(Y=>Y.label===u||Y.deviceId===u),!this._device&&b.length>0&&(this._device=b[0]),en(wn(this._device),`No matching device ${u}`));const _={audio:{echoCancellation:!1,sampleRate:this.context.sampleRate,noiseSuppression:!1,mozNoiseSuppression:!1}};this._device&&(_.audio.deviceId=this._device.deviceId);const M=yield navigator.mediaDevices.getUserMedia(_);if(!this._stream){this._stream=M;const Y=this.context.createMediaStreamSource(M);bn(Y,this.output),this._mediaStream=Y}return this})}close(){return this._stream&&this._mediaStream&&(this._stream.getAudioTracks().forEach(u=>{u.stop()}),this._stream=void 0,this._mediaStream.disconnect(),this._mediaStream=void 0),this._device=void 0,this}static enumerateDevices(){return qn(this,void 0,void 0,function*(){return(yield navigator.mediaDevices.enumerateDevices()).filter(u=>u.kind==="audioinput")})}get state(){return this._stream&&this._stream.active?"started":"stopped"}get deviceId(){return this._device?this._device.deviceId:void 0}get groupId(){return this._device?this._device.groupId:void 0}get label(){return this._device?this._device.label:void 0}get mute(){return this._volume.mute}set mute(u){this._volume.mute=u}dispose(){return super.dispose(),this.close(),this._volume.dispose(),this.volume.dispose(),this}static get supported(){return wn(navigator.mediaDevices)&&wn(navigator.mediaDevices.getUserMedia)}}function wi(z,u){return qn(this,void 0,void 0,function*(){const b=u/z.context.sampleRate,_=new E(1,b,z.context.sampleRate);return new z.constructor(Object.assign(z.get(),{frequency:2/b,detune:0,context:_})).toDestination().start(0),(yield _.render()).getChannelData(0)})}class Zi extends os{constructor(){super(We(Zi.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const u=We(Zi.getDefaults(),arguments,["frequency","type"]);bn(this._oscillator,this._gainNode),this.type=u.type,this.frequency=new Vt({context:this.context,param:this._oscillator.frequency,units:"frequency",value:u.frequency}),this.detune=new Vt({context:this.context,param:this._oscillator.detune,units:"cents",value:u.detune}),cn(this,["frequency","detune"])}static getDefaults(){return Object.assign(os.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(u){const b=this.toSeconds(u);return this.log("start",b),this._startGain(b),this._oscillator.start(b),this}_stopSource(u){this._oscillator.stop(u)}setPeriodicWave(u){return this._oscillator.setPeriodicWave(u),this}get type(){return this._oscillator.type}set type(u){this._oscillator.type=u}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class as extends ps{constructor(){super(We(as.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const u=We(as.getDefaults(),arguments,["frequency","type"]);this.frequency=new Xt({context:this.context,units:"frequency",value:u.frequency}),cn(this,"frequency"),this.detune=new Xt({context:this.context,units:"cents",value:u.detune}),cn(this,"detune"),this._partials=u.partials,this._partialCount=u.partialCount,this._type=u.type,u.partialCount&&u.type!=="custom"&&(this._type=this.baseType+u.partialCount.toString()),this.phase=u.phase}static getDefaults(){return Object.assign(ps.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(u){const b=this.toSeconds(u),_=new Zi({context:this.context,onended:()=>this.onstop(this)});this._oscillator=_,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(b)}_stop(u){const b=this.toSeconds(u);this._oscillator&&this._oscillator.stop(b)}_restart(u){const b=this.toSeconds(u);return this.log("restart",b),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(b),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return as._periodicWaveCache.find(u=>{return u.phase===this._phase&&(b=u.partials,_=this._partials,b.length===_.length&&b.every((M,Y)=>_[Y]===M));var b,_});{const u=as._periodicWaveCache.find(b=>b.type===this._type&&b.phase===this._phase);return this._partialCount=u?u.partialCount:this._partialCount,u}}get type(){return this._type}set type(u){this._type=u;const b=["sine","square","sawtooth","triangle"].indexOf(u)!==-1;if(this._phase===0&&b)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=u);else{const _=this._getCachedPeriodicWave();if(wn(_)){const{partials:M,wave:Y}=_;this._wave=Y,this._partials=M,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[M,Y]=this._getRealImaginary(u,this._phase),ae=this.context.createPeriodicWave(M,Y);this._wave=ae,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),as._periodicWaveCache.push({imag:Y,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:M,type:this._type,wave:this._wave}),as._periodicWaveCache.length>100&&as._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(u){this.partialCount&&this._type!=="custom"&&u!=="custom"?this.type=u+this.partialCount:this.type=u}get partialCount(){return this._partialCount}set partialCount(u){Ls(u,0);let b=this._type;const _=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(_&&(b=_[1]),this._type!=="custom")this.type=u===0?b:b+u.toString();else{const M=new Float32Array(u);this._partials.forEach((Y,ae)=>M[ae]=Y),this._partials=Array.from(M),this.type=this._type}}_getRealImaginary(u,b){let _=2048;const M=new Float32Array(_),Y=new Float32Array(_);let ae=1;if(u==="custom"){if(ae=this._partials.length+1,this._partialCount=this._partials.length,_=ae,this._partials.length===0)return[M,Y]}else{const de=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(u);de?(ae=parseInt(de[2],10)+1,this._partialCount=parseInt(de[2],10),u=de[1],ae=Math.max(ae,2),_=ae):this._partialCount=0,this._partials=[]}for(let de=1;de<_;++de){const xe=2/(de*Math.PI);let ve;switch(u){case"sine":ve=de<=ae?1:0,this._partials[de-1]=ve;break;case"square":ve=1&de?2*xe:0,this._partials[de-1]=ve;break;case"sawtooth":ve=xe*(1&de?1:-1),this._partials[de-1]=ve;break;case"triangle":ve=1&de?xe*xe*2*(de-1>>1&1?-1:1):0,this._partials[de-1]=ve;break;case"custom":ve=this._partials[de-1];break;default:throw new TypeError("Oscillator: invalid type: "+u)}ve!==0?(M[de]=-ve*Math.sin(b*de),Y[de]=ve*Math.cos(b*de)):(M[de]=0,Y[de]=0)}return[M,Y]}_inverseFFT(u,b,_){let M=0;const Y=u.length;for(let ae=0;ae<Y;ae++)M+=u[ae]*Math.cos(ae*_)+b[ae]*Math.sin(ae*_);return M}getInitialValue(){const[u,b]=this._getRealImaginary(this._type,0);let _=0;const M=2*Math.PI;for(let Y=0;Y<32;Y++)_=Math.max(this._inverseFFT(u,b,Y/32*M),_);return Do(-this._inverseFFT(u,b,this._phase)/_,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(u){this._partials=u,this._partialCount=this._partials.length,u.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(u){this._phase=u*Math.PI/180,this.type=this._type}asArray(u=1024){return qn(this,void 0,void 0,function*(){return wi(this,u)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}as._periodicWaveCache=[];class fc extends Or{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new Rr({context:this.context,mapping:u=>(u+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class cs extends Xt{constructor(){super(Object.assign(We(cs.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const u=We(cs.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new Ut({context:this.context,minValue:u.minValue,maxValue:u.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(u.value,0)}static getDefaults(){return Object.assign(Xt.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class ea extends ps{constructor(){super(We(ea.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new fc({context:this.context}),this._modulationNode=new Ut({context:this.context});const u=We(ea.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new as({context:this.context,detune:u.detune,frequency:u.frequency,onstop:()=>this.onstop(this),phase:u.phase,type:u.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new as({context:this.context,phase:u.phase,type:u.modulationType}),this.harmonicity=new cs({context:this.context,units:"positive",value:u.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),cn(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(as.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(u){this._modulator.start(u),this._carrier.start(u)}_stop(u){this._modulator.stop(u),this._carrier.stop(u)}_restart(u){this._modulator.restart(u),this._carrier.restart(u)}get type(){return this._carrier.type}set type(u){this._carrier.type=u}get baseType(){return this._carrier.baseType}set baseType(u){this._carrier.baseType=u}get partialCount(){return this._carrier.partialCount}set partialCount(u){this._carrier.partialCount=u}get modulationType(){return this._modulator.type}set modulationType(u){this._modulator.type=u}get phase(){return this._carrier.phase}set phase(u){this._carrier.phase=u,this._modulator.phase=u}get partials(){return this._carrier.partials}set partials(u){this._carrier.partials=u}asArray(u=1024){return qn(this,void 0,void 0,function*(){return wi(this,u)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class Si extends ps{constructor(){super(We(Si.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new Ut({context:this.context,gain:0});const u=We(Si.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new as({context:this.context,detune:u.detune,frequency:0,onstop:()=>this.onstop(this),phase:u.phase,type:u.type}),this.detune=this._carrier.detune,this.frequency=new Xt({context:this.context,units:"frequency",value:u.frequency}),this._modulator=new as({context:this.context,phase:u.phase,type:u.modulationType}),this.harmonicity=new cs({context:this.context,units:"positive",value:u.harmonicity}),this.modulationIndex=new cs({context:this.context,units:"positive",value:u.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),cn(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(as.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(u){this._modulator.start(u),this._carrier.start(u)}_stop(u){this._modulator.stop(u),this._carrier.stop(u)}_restart(u){return this._modulator.restart(u),this._carrier.restart(u),this}get type(){return this._carrier.type}set type(u){this._carrier.type=u}get baseType(){return this._carrier.baseType}set baseType(u){this._carrier.baseType=u}get partialCount(){return this._carrier.partialCount}set partialCount(u){this._carrier.partialCount=u}get modulationType(){return this._modulator.type}set modulationType(u){this._modulator.type=u}get phase(){return this._carrier.phase}set phase(u){this._carrier.phase=u,this._modulator.phase=u}get partials(){return this._carrier.partials}set partials(u){this._carrier.partials=u}asArray(u=1024){return qn(this,void 0,void 0,function*(){return wi(this,u)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class Ti extends ps{constructor(){super(We(Ti.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new Ut({context:this.context,gain:0}),this._thresh=new Rr({context:this.context,mapping:b=>b<=0?-1:1});const u=We(Ti.getDefaults(),arguments,["frequency","width"]);this.width=new Xt({context:this.context,units:"audioRange",value:u.width}),this._triangle=new as({context:this.context,detune:u.detune,frequency:u.frequency,onstop:()=>this.onstop(this),phase:u.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),cn(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(ps.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(u){u=this.toSeconds(u),this._triangle.start(u),this._widthGate.gain.setValueAtTime(1,u)}_stop(u){u=this.toSeconds(u),this._triangle.stop(u),this._widthGate.gain.cancelScheduledValues(u),this._widthGate.gain.setValueAtTime(0,u)}_restart(u){this._triangle.restart(u),this._widthGate.gain.cancelScheduledValues(u),this._widthGate.gain.setValueAtTime(1,u)}get phase(){return this._triangle.phase}set phase(u){this._triangle.phase=u}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(u){this._triangle.type=u}asArray(u=1024){return qn(this,void 0,void 0,function*(){return wi(this,u)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class ta extends ps{constructor(){super(We(ta.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const u=We(ta.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new Xt({context:this.context,units:"frequency",value:u.frequency}),this.detune=new Xt({context:this.context,units:"cents",value:u.detune}),this._spread=u.spread,this._type=u.type,this._phase=u.phase,this._partials=u.partials,this._partialCount=u.partialCount,this.count=u.count,cn(this,["frequency","detune"])}static getDefaults(){return Object.assign(as.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(u){u=this.toSeconds(u),this._forEach(b=>b.start(u))}_stop(u){u=this.toSeconds(u),this._forEach(b=>b.stop(u))}_restart(u){this._forEach(b=>b.restart(u))}_forEach(u){for(let b=0;b<this._oscillators.length;b++)u(this._oscillators[b],b)}get type(){return this._type}set type(u){this._type=u,this._forEach(b=>b.type=u)}get spread(){return this._spread}set spread(u){if(this._spread=u,this._oscillators.length>1){const b=-u/2,_=u/(this._oscillators.length-1);this._forEach((M,Y)=>M.detune.value=b+_*Y)}}get count(){return this._oscillators.length}set count(u){if(Ls(u,1),this._oscillators.length!==u){this._forEach(b=>b.dispose()),this._oscillators=[];for(let b=0;b<u;b++){const _=new as({context:this.context,volume:-6-1.1*u,type:this._type,phase:this._phase+b/u*360,partialCount:this._partialCount,onstop:b===0?()=>this.onstop(this):Z});this.type==="custom"&&(_.partials=this._partials),this.frequency.connect(_.frequency),this.detune.connect(_.detune),_.detune.overridden=!1,_.connect(this.output),this._oscillators[b]=_}this.spread=this._spread,this.state==="started"&&this._forEach(b=>b.start())}}get phase(){return this._phase}set phase(u){this._phase=u,this._forEach((b,_)=>b.phase=this._phase+_/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(u){this._forEach(b=>b.baseType=u),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(u){this._partials=u,this._partialCount=this._partials.length,u.length&&(this._type="custom",this._forEach(b=>b.partials=u))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(u){this._partialCount=u,this._forEach(b=>b.partialCount=u),this._type=this._oscillators[0].type}asArray(u=1024){return qn(this,void 0,void 0,function*(){return wi(this,u)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(u=>u.dispose()),this}}class Ci extends ps{constructor(){super(We(Ci.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new cs({context:this.context,value:2});const u=We(Ci.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new Ti({context:this.context,frequency:u.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new as({context:this.context,detune:u.detune,frequency:u.frequency,onstop:()=>this.onstop(this),phase:u.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),cn(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(ps.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(u){u=this.toSeconds(u),this._modulator.start(u),this._pulse.start(u)}_stop(u){u=this.toSeconds(u),this._modulator.stop(u),this._pulse.stop(u)}_restart(u){this._modulator.restart(u),this._pulse.restart(u)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(u){this._modulator.phase=u}asArray(u=1024){return qn(this,void 0,void 0,function*(){return wi(this,u)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const Aa={am:ea,fat:ta,fm:Si,oscillator:as,pulse:Ti,pwm:Ci};class To extends ps{constructor(){super(We(To.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const u=We(To.getDefaults(),arguments,["frequency","type"]);this.frequency=new Xt({context:this.context,units:"frequency",value:u.frequency}),this.detune=new Xt({context:this.context,units:"cents",value:u.detune}),cn(this,["frequency","detune"]),this.set(u)}static getDefaults(){return Object.assign(as.getDefaults(),Si.getDefaults(),ea.getDefaults(),ta.getDefaults(),Ti.getDefaults(),Ci.getDefaults())}_start(u){this._oscillator.start(u)}_stop(u){this._oscillator.stop(u)}_restart(u){return this._oscillator.restart(u),this}get type(){let u="";return["am","fm","fat"].some(b=>this._sourceType===b)&&(u=this._sourceType),u+this._oscillator.type}set type(u){u.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=u.substr(2)):u.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=u.substr(2)):u.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=u.substr(3)):u==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):u==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=u)}get partials(){return this._oscillator.partials}set partials(u){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||(this._oscillator.partials=u)}get partialCount(){return this._oscillator.partialCount}set partialCount(u){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||(this._oscillator.partialCount=u)}set(u){return Reflect.has(u,"type")&&u.type&&(this.type=u.type),super.set(u),this}_createNewOscillator(u){if(u!==this._sourceType){this._sourceType=u;const b=Aa[u],_=this.now();if(this._oscillator){const M=this._oscillator;M.stop(_),this.context.setTimeout(()=>M.dispose(),this.blockTime)}this._oscillator=new b({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(_)}}get phase(){return this._oscillator.phase}set phase(u){this._oscillator.phase=u}get sourceType(){return this._sourceType}set sourceType(u){let b="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(b=this._oscillator.type),u==="fm"?this.type="fm"+b:u==="am"?this.type="am"+b:u==="fat"?this.type="fat"+b:u==="oscillator"?this.type=b:u==="pulse"?this.type="pulse":u==="pwm"&&(this.type="pwm")}_getOscType(u,b){return u instanceof Aa[b]}get baseType(){return this._oscillator.baseType}set baseType(u){this._getOscType(this._oscillator,"pulse")||this._getOscType(this._oscillator,"pwm")||u==="pulse"||u==="pwm"||(this._oscillator.baseType=u)}get width(){return this._getOscType(this._oscillator,"pulse")?this._oscillator.width:void 0}get count(){return this._getOscType(this._oscillator,"fat")?this._oscillator.count:void 0}set count(u){this._getOscType(this._oscillator,"fat")&&Ns(u)&&(this._oscillator.count=u)}get spread(){return this._getOscType(this._oscillator,"fat")?this._oscillator.spread:void 0}set spread(u){this._getOscType(this._oscillator,"fat")&&Ns(u)&&(this._oscillator.spread=u)}get modulationType(){return this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am")?this._oscillator.modulationType:void 0}set modulationType(u){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&Nr(u)&&(this._oscillator.modulationType=u)}get modulationIndex(){return this._getOscType(this._oscillator,"fm")?this._oscillator.modulationIndex:void 0}get harmonicity(){return this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am")?this._oscillator.harmonicity:void 0}get modulationFrequency(){return this._getOscType(this._oscillator,"pwm")?this._oscillator.modulationFrequency:void 0}asArray(u=1024){return qn(this,void 0,void 0,function*(){return wi(this,u)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class $i extends Xt{constructor(){super(Object.assign(We($i.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Add",this._sum=new Ut({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,fn(this._constantSource,this._sum)}static getDefaults(){return Object.assign(Xt.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class Co extends Or{constructor(){super(Object.assign(We(Co.getDefaults(),arguments,["min","max"]))),this.name="Scale";const u=We(Co.getDefaults(),arguments,["min","max"]);this._mult=this.input=new cs({context:this.context,value:u.max-u.min}),this._add=this.output=new $i({context:this.context,value:u.min}),this._min=u.min,this._max=u.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(Or.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(u){this._min=u,this._setRange()}get max(){return this._max}set max(u){this._max=u,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class Oa extends Or{constructor(){super(Object.assign(We(Oa.getDefaults(),arguments))),this.name="Zero",this._gain=new Ut({context:this.context}),this.output=this._gain,this.input=void 0,bn(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),Xn(this.context.getConstant(0),this._gain),this}}class or extends vt{constructor(){super(We(or.getDefaults(),arguments,["frequency","min","max"])),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=Vt.prototype._fromType,this._toType=Vt.prototype._toType,this._is=Vt.prototype._is,this._clampValue=Vt.prototype._clampValue;const u=We(or.getDefaults(),arguments,["frequency","min","max"]);this._oscillator=new as(u),this.frequency=this._oscillator.frequency,this._amplitudeGain=new Ut({context:this.context,gain:u.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new Xt({context:this.context,units:"audioRange",value:0}),this._zeros=new Oa({context:this.context}),this._a2g=new fc({context:this.context}),this._scaler=this.output=new Co({context:this.context,max:u.max,min:u.min}),this.units=u.units,this.min=u.min,this.max=u.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),cn(this,["amplitude","frequency"]),this.phase=u.phase}static getDefaults(){return Object.assign(as.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(u){return u=this.toSeconds(u),this._stoppedSignal.setValueAtTime(0,u),this._oscillator.start(u),this}stop(u){return u=this.toSeconds(u),this._stoppedSignal.setValueAtTime(this._stoppedValue,u),this._oscillator.stop(u),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(u){u=this._fromType(u),this._scaler.min=u}get max(){return this._toType(this._scaler.max)}set max(u){u=this._fromType(u),this._scaler.max=u}get type(){return this._oscillator.type}set type(u){this._oscillator.type=u,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(u){this._oscillator.partials=u,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(u){this._oscillator.phase=u,this._setStoppedValue()}get units(){return this._units}set units(u){const b=this.min,_=this.max;this._units=u,this.min=b,this.max=_}get state(){return this._oscillator.state}connect(u,b,_){return(u instanceof Vt||u instanceof Xt)&&(this.convert=u.convert,this.units=u.units),gs(this,u,b,_),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function uu(z,u=1/0){const b=new WeakMap;return function(_,M){Reflect.defineProperty(_,M,{configurable:!0,enumerable:!0,get:function(){return b.get(this)},set:function(Y){Ls(Y,z,u),b.set(this,Y)}})}}function Bo(z,u=1/0){const b=new WeakMap;return function(_,M){Reflect.defineProperty(_,M,{configurable:!0,enumerable:!0,get:function(){return b.get(this)},set:function(Y){Ls(this.toSeconds(Y),z,u),b.set(this,Y)}})}}class _i extends ps{constructor(){super(We(_i.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const u=We(_i.getDefaults(),arguments,["url","onload"]);this._buffer=new v({onload:this._onload.bind(this,u.onload),onerror:u.onerror,reverse:u.reverse,url:u.url}),this.autostart=u.autostart,this._loop=u.loop,this._loopStart=u.loopStart,this._loopEnd=u.loopEnd,this._playbackRate=u.playbackRate,this.fadeIn=u.fadeIn,this.fadeOut=u.fadeOut}static getDefaults(){return Object.assign(ps.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:Z,onerror:Z,playbackRate:1,reverse:!1})}load(u){return qn(this,void 0,void 0,function*(){return yield this._buffer.load(u),this._onload(),this})}_onload(u=Z){u(),this.autostart&&this.start()}_onSourceEnd(u){this.onstop(this),this._activeSources.delete(u),this._activeSources.size!==0||this._synced||this._state.getValueAtTime(this.now())!=="started"||(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(u,b,_){return super.start(u,b,_),this}_start(u,b,_){b=this._loop?wr(b,this._loopStart):wr(b,0);const M=this.toSeconds(b),Y=_;_=wr(_,Math.max(this._buffer.duration-M,0));let ae=this.toSeconds(_);ae/=this._playbackRate,u=this.toSeconds(u);const de=new zo({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);this._loop||this._synced||(this._state.cancel(u+ae),this._state.setStateAtTime("stopped",u+ae,{implicitEnd:!0})),this._activeSources.add(de),this._loop&&nr(Y)?de.start(u,M):de.start(u,M,ae-this.toSeconds(this.fadeOut))}_stop(u){const b=this.toSeconds(u);this._activeSources.forEach(_=>_.stop(b))}restart(u,b,_){return super.restart(u,b,_),this}_restart(u,b,_){var M;(M=[...this._activeSources].pop())===null||M===void 0||M.stop(u),this._start(u,b,_)}seek(u,b){const _=this.toSeconds(b);if(this._state.getValueAtTime(_)==="started"){const M=this.toSeconds(u);this._stop(_),this._start(_,M)}return this}setLoopPoints(u,b){return this.loopStart=u,this.loopEnd=b,this}get loopStart(){return this._loopStart}set loopStart(u){this._loopStart=u,this.buffer.loaded&&Ls(this.toSeconds(u),0,this.buffer.duration),this._activeSources.forEach(b=>{b.loopStart=u})}get loopEnd(){return this._loopEnd}set loopEnd(u){this._loopEnd=u,this.buffer.loaded&&Ls(this.toSeconds(u),0,this.buffer.duration),this._activeSources.forEach(b=>{b.loopEnd=u})}get buffer(){return this._buffer}set buffer(u){this._buffer.set(u)}get loop(){return this._loop}set loop(u){if(this._loop!==u&&(this._loop=u,this._activeSources.forEach(b=>{b.loop=u}),u)){const b=this._state.getNextState("stopped",this.now());b&&this._state.cancel(b.time)}}get playbackRate(){return this._playbackRate}set playbackRate(u){this._playbackRate=u;const b=this.now(),_=this._state.getNextState("stopped",b);_&&_.implicitEnd&&(this._state.cancel(_.time),this._activeSources.forEach(M=>M.cancelStop())),this._activeSources.forEach(M=>{M.playbackRate.setValueAtTime(u,b)})}get reverse(){return this._buffer.reverse}set reverse(u){this._buffer.reverse=u}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(u=>u.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}Ar([Bo(0)],_i.prototype,"fadeIn",void 0),Ar([Bo(0)],_i.prototype,"fadeOut",void 0);class mc extends vt{constructor(){super(We(mc.getDefaults(),arguments,["urls","onload"],"urls")),this.name="Players",this.input=void 0,this._players=new Map;const u=We(mc.getDefaults(),arguments,["urls","onload"],"urls");this._volume=this.output=new wo({context:this.context,volume:u.volume}),this.volume=this._volume.volume,cn(this,"volume"),this._buffers=new Yi({urls:u.urls,onload:u.onload,baseUrl:u.baseUrl,onerror:u.onerror}),this.mute=u.mute,this._fadeIn=u.fadeIn,this._fadeOut=u.fadeOut}static getDefaults(){return Object.assign(ps.getDefaults(),{baseUrl:"",fadeIn:0,fadeOut:0,mute:!1,onload:Z,onerror:Z,urls:{},volume:0})}get mute(){return this._volume.mute}set mute(u){this._volume.mute=u}get fadeIn(){return this._fadeIn}set fadeIn(u){this._fadeIn=u,this._players.forEach(b=>{b.fadeIn=u})}get fadeOut(){return this._fadeOut}set fadeOut(u){this._fadeOut=u,this._players.forEach(b=>{b.fadeOut=u})}get state(){return Array.from(this._players).some(([u,b])=>b.state==="started")?"started":"stopped"}has(u){return this._buffers.has(u)}player(u){if(en(this.has(u),`No Player with the name ${u} exists on this object`),!this._players.has(u)){const b=new _i({context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,url:this._buffers.get(u)}).connect(this.output);this._players.set(u,b)}return this._players.get(u)}get loaded(){return this._buffers.loaded}add(u,b,_){return en(!this._buffers.has(u),"A buffer with that name already exists on this object"),this._buffers.add(u,b,_),this}stopAll(u){return this._players.forEach(b=>b.stop(u)),this}dispose(){return super.dispose(),this._volume.dispose(),this.volume.dispose(),this._players.forEach(u=>u.dispose()),this._buffers.dispose(),this}}class gc extends ps{constructor(){super(We(gc.getDefaults(),arguments,["url","onload"])),this.name="GrainPlayer",this._loopStart=0,this._loopEnd=0,this._activeSources=[];const u=We(gc.getDefaults(),arguments,["url","onload"]);this.buffer=new v({onload:u.onload,onerror:u.onerror,reverse:u.reverse,url:u.url}),this._clock=new Js({context:this.context,callback:this._tick.bind(this),frequency:1/u.grainSize}),this._playbackRate=u.playbackRate,this._grainSize=u.grainSize,this._overlap=u.overlap,this.detune=u.detune,this.overlap=u.overlap,this.loop=u.loop,this.playbackRate=u.playbackRate,this.grainSize=u.grainSize,this.loopStart=u.loopStart,this.loopEnd=u.loopEnd,this.reverse=u.reverse,this._clock.on("stop",this._onstop.bind(this))}static getDefaults(){return Object.assign(ps.getDefaults(),{onload:Z,onerror:Z,overlap:.1,grainSize:.2,playbackRate:1,detune:0,loop:!1,loopStart:0,loopEnd:0,reverse:!1})}_start(u,b,_){b=wr(b,0),b=this.toSeconds(b),u=this.toSeconds(u);const M=1/this._clock.frequency.getValueAtTime(u);this._clock.start(u,b/M),_&&this.stop(u+this.toSeconds(_))}restart(u,b,_){return super.restart(u,b,_),this}_restart(u,b,_){this._stop(u),this._start(u,b,_)}_stop(u){this._clock.stop(u)}_onstop(u){this._activeSources.forEach(b=>{b.fadeOut=0,b.stop(u)}),this.onstop(this)}_tick(u){const b=this._clock.getTicksAtTime(u),_=b*this._grainSize;if(this.log("offset",_),!this.loop&&_>this.buffer.duration)return void this.stop(u);const M=_<this._overlap?0:this._overlap,Y=new zo({context:this.context,url:this.buffer,fadeIn:M,fadeOut:this._overlap,loop:this.loop,loopStart:this._loopStart,loopEnd:this._loopEnd,playbackRate:Se(this.detune/100)}).connect(this.output);Y.start(u,this._grainSize*b),Y.stop(u+this._grainSize/this.playbackRate),this._activeSources.push(Y),Y.onended=()=>{const ae=this._activeSources.indexOf(Y);ae!==-1&&this._activeSources.splice(ae,1)}}get playbackRate(){return this._playbackRate}set playbackRate(u){Ls(u,.001),this._playbackRate=u,this.grainSize=this._grainSize}get loopStart(){return this._loopStart}set loopStart(u){this.buffer.loaded&&Ls(this.toSeconds(u),0,this.buffer.duration),this._loopStart=this.toSeconds(u)}get loopEnd(){return this._loopEnd}set loopEnd(u){this.buffer.loaded&&Ls(this.toSeconds(u),0,this.buffer.duration),this._loopEnd=this.toSeconds(u)}get reverse(){return this.buffer.reverse}set reverse(u){this.buffer.reverse=u}get grainSize(){return this._grainSize}set grainSize(u){this._grainSize=this.toSeconds(u),this._clock.frequency.setValueAtTime(this._playbackRate/this._grainSize,this.now())}get overlap(){return this._overlap}set overlap(u){const b=this.toSeconds(u);Ls(b,0),this._overlap=b}get loaded(){return this.buffer.loaded}dispose(){return super.dispose(),this.buffer.dispose(),this._clock.dispose(),this._activeSources.forEach(u=>u.dispose()),this}}class lu extends Or{constructor(){super(...arguments),this.name="Abs",this._abs=new Rr({context:this.context,mapping:u=>Math.abs(u)<.001?0:Math.abs(u)}),this.input=this._abs,this.output=this._abs}dispose(){return super.dispose(),this._abs.dispose(),this}}class hu extends Or{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new Rr({context:this.context,mapping:u=>2*Math.abs(u)-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class tu extends Or{constructor(){super(...arguments),this.name="Negate",this._multiply=new cs({context:this.context,value:-1}),this.input=this._multiply,this.output=this._multiply}dispose(){return super.dispose(),this._multiply.dispose(),this}}class Ii extends Xt{constructor(){super(Object.assign(We(Ii.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Subtract",this._sum=new Ut({context:this.context}),this.input=this._sum,this.output=this._sum,this._neg=new tu({context:this.context}),this.subtrahend=this._param,fn(this._constantSource,this._neg,this._sum)}static getDefaults(){return Object.assign(Xt.getDefaults(),{value:0})}dispose(){return super.dispose(),this._neg.dispose(),this._sum.dispose(),this}}class yc extends Or{constructor(){super(Object.assign(We(yc.getDefaults(),arguments))),this.name="GreaterThanZero",this._thresh=this.output=new Rr({context:this.context,length:127,mapping:u=>u<=0?0:1}),this._scale=this.input=new cs({context:this.context,value:1e4}),this._scale.connect(this._thresh)}dispose(){return super.dispose(),this._scale.dispose(),this._thresh.dispose(),this}}class Ra extends Xt{constructor(){super(Object.assign(We(Ra.getDefaults(),arguments,["value"]))),this.name="GreaterThan",this.override=!1;const u=We(Ra.getDefaults(),arguments,["value"]);this._subtract=this.input=new Ii({context:this.context,value:u.value}),this._gtz=this.output=new yc({context:this.context}),this.comparator=this._param=this._subtract.subtrahend,cn(this,"comparator"),this._subtract.connect(this._gtz)}static getDefaults(){return Object.assign(Xt.getDefaults(),{value:0})}dispose(){return super.dispose(),this._gtz.dispose(),this._subtract.dispose(),this.comparator.dispose(),this}}class Da extends Co{constructor(){super(Object.assign(We(Da.getDefaults(),arguments,["min","max","exponent"]))),this.name="ScaleExp";const u=We(Da.getDefaults(),arguments,["min","max","exponent"]);this.input=this._exp=new xi({context:this.context,value:u.exponent}),this._exp.connect(this._mult)}static getDefaults(){return Object.assign(Co.getDefaults(),{exponent:1})}get exponent(){return this._exp.value}set exponent(u){this._exp.value=u}dispose(){return super.dispose(),this._exp.dispose(),this}}class Su extends Xt{constructor(){super(We(Xt.getDefaults(),arguments,["value","units"])),this.name="SyncedSignal",this.override=!1;const u=We(Xt.getDefaults(),arguments,["value","units"]);this._lastVal=u.value,this._synced=this.context.transport.scheduleRepeat(this._onTick.bind(this),"1i"),this._syncedCallback=this._anchorValue.bind(this),this.context.transport.on("start",this._syncedCallback),this.context.transport.on("pause",this._syncedCallback),this.context.transport.on("stop",this._syncedCallback),this._constantSource.disconnect(),this._constantSource.stop(0),this._constantSource=this.output=new Ss({context:this.context,offset:u.value,units:u.units}).start(0),this.setValueAtTime(u.value,0)}_onTick(u){const b=super.getValueAtTime(this.context.transport.seconds);this._lastVal!==b&&(this._lastVal=b,this._constantSource.offset.setValueAtTime(b,u))}_anchorValue(u){const b=super.getValueAtTime(this.context.transport.seconds);this._lastVal=b,this._constantSource.offset.cancelAndHoldAtTime(u),this._constantSource.offset.setValueAtTime(b,u)}getValueAtTime(u){const b=new at(this.context,u).toSeconds();return super.getValueAtTime(b)}setValueAtTime(u,b){const _=new at(this.context,b).toSeconds();return super.setValueAtTime(u,_),this}linearRampToValueAtTime(u,b){const _=new at(this.context,b).toSeconds();return super.linearRampToValueAtTime(u,_),this}exponentialRampToValueAtTime(u,b){const _=new at(this.context,b).toSeconds();return super.exponentialRampToValueAtTime(u,_),this}setTargetAtTime(u,b,_){const M=new at(this.context,b).toSeconds();return super.setTargetAtTime(u,M,_),this}cancelScheduledValues(u){const b=new at(this.context,u).toSeconds();return super.cancelScheduledValues(b),this}setValueCurveAtTime(u,b,_,M){const Y=new at(this.context,b).toSeconds();return _=this.toSeconds(_),super.setValueCurveAtTime(u,Y,_,M),this}cancelAndHoldAtTime(u){const b=new at(this.context,u).toSeconds();return super.cancelAndHoldAtTime(b),this}setRampPoint(u){const b=new at(this.context,u).toSeconds();return super.setRampPoint(b),this}exponentialRampTo(u,b,_){const M=new at(this.context,_).toSeconds();return super.exponentialRampTo(u,b,M),this}linearRampTo(u,b,_){const M=new at(this.context,_).toSeconds();return super.linearRampTo(u,b,M),this}targetRampTo(u,b,_){const M=new at(this.context,_).toSeconds();return super.targetRampTo(u,b,M),this}dispose(){return super.dispose(),this.context.transport.clear(this._synced),this.context.transport.off("start",this._syncedCallback),this.context.transport.off("pause",this._syncedCallback),this.context.transport.off("stop",this._syncedCallback),this._constantSource.dispose(),this}}class js extends vt{constructor(){super(We(js.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new Xt({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const u=We(js.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=u.attack,this.decay=u.decay,this.sustain=u.sustain,this.release=u.release,this.attackCurve=u.attackCurve,this.releaseCurve=u.releaseCurve,this.decayCurve=u.decayCurve}static getDefaults(){return Object.assign(vt.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(u,b){if(Nr(u))return u;{let _;for(_ in bc)if(bc[_][b]===u)return _;return u}}_setCurve(u,b,_){if(Nr(_)&&Reflect.has(bc,_)){const M=bc[_];oo(M)?u!=="_decayCurve"&&(this[u]=M[b]):this[u]=M}else{if(!As(_)||u==="_decayCurve")throw new Error("Envelope: invalid curve: "+_);this[u]=_}}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(u){this._setCurve("_attackCurve","In",u)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(u){this._setCurve("_releaseCurve","Out",u)}get decayCurve(){return this._getCurve(this._decayCurve,"Out")}set decayCurve(u){this._setCurve("_decayCurve","Out",u)}triggerAttack(u,b=1){this.log("triggerAttack",u,b),u=this.toSeconds(u);let _=this.toSeconds(this.attack);const M=this.toSeconds(this.decay),Y=this.getValueAtTime(u);if(Y>0&&(_=(1-Y)/(1/_)),_<this.sampleTime)this._sig.cancelScheduledValues(u),this._sig.setValueAtTime(b,u);else if(this._attackCurve==="linear")this._sig.linearRampTo(b,_,u);else if(this._attackCurve==="exponential")this._sig.targetRampTo(b,_,u);else{this._sig.cancelAndHoldAtTime(u);let ae=this._attackCurve;for(let de=1;de<ae.length;de++)if(ae[de-1]<=Y&&Y<=ae[de]){ae=this._attackCurve.slice(de),ae[0]=Y;break}this._sig.setValueCurveAtTime(ae,u,_,b)}if(M&&this.sustain<1){const ae=b*this.sustain,de=u+_;this.log("decay",de),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(ae,M+de):this._sig.exponentialApproachValueAtTime(ae,de,M)}return this}triggerRelease(u){this.log("triggerRelease",u),u=this.toSeconds(u);const b=this.getValueAtTime(u);if(b>0){const _=this.toSeconds(this.release);_<this.sampleTime?this._sig.setValueAtTime(0,u):this._releaseCurve==="linear"?this._sig.linearRampTo(0,_,u):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,_,u):(en(As(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(u),this._sig.setValueCurveAtTime(this._releaseCurve,u,_,b))}return this}getValueAtTime(u){return this._sig.getValueAtTime(u)}triggerAttackRelease(u,b,_=1){return b=this.toSeconds(b),this.triggerAttack(b,_),this.triggerRelease(b+this.toSeconds(u)),this}cancel(u){return this._sig.cancelScheduledValues(this.toSeconds(u)),this}connect(u,b=0,_=0){return gs(this,u,b,_),this}asArray(u=1024){return qn(this,void 0,void 0,function*(){const b=u/this.context.sampleRate,_=new E(1,b,this.context.sampleRate),M=this.toSeconds(this.attack)+this.toSeconds(this.decay),Y=M+this.toSeconds(this.release),ae=.1*Y,de=Y+ae,xe=new this.constructor(Object.assign(this.get(),{attack:b*this.toSeconds(this.attack)/de,decay:b*this.toSeconds(this.decay)/de,release:b*this.toSeconds(this.release)/de,context:_}));return xe._sig.toDestination(),xe.triggerAttackRelease(b*(M+ae)/de,0),(yield _.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}Ar([Bo(0)],js.prototype,"attack",void 0),Ar([Bo(0)],js.prototype,"decay",void 0),Ar([uu(0,1)],js.prototype,"sustain",void 0),Ar([Bo(0)],js.prototype,"release",void 0);const bc=(()=>{let u,b;const _=[];for(u=0;u<128;u++)_[u]=Math.sin(u/127*(Math.PI/2));const M=[];for(u=0;u<127;u++){b=u/127;const _e=Math.sin(b*(2*Math.PI)*6.4-Math.PI/2)+1;M[u]=_e/10+.83*b}M[127]=1;const Y=[];for(u=0;u<128;u++)Y[u]=Math.ceil(u/127*5)/5;const ae=[];for(u=0;u<128;u++)b=u/127,ae[u]=.5*(1-Math.cos(Math.PI*b));const de=[];for(u=0;u<128;u++){b=u/127;const _e=4*Math.pow(b,3)+.2,Ee=Math.cos(_e*Math.PI*2*b);de[u]=Math.abs(Ee*(1-b))}function xe(_e){const Ee=new Array(_e.length);for(let qe=0;qe<_e.length;qe++)Ee[qe]=1-_e[qe];return Ee}return{bounce:{In:xe(de),Out:de},cosine:{In:_,Out:(ve=_,ve.slice(0).reverse())},exponential:"exponential",linear:"linear",ripple:{In:M,Out:xe(M)},sine:{In:ae,Out:xe(ae)},step:{In:Y,Out:xe(Y)}};var ve})();class Dr extends vt{constructor(){super(We(Dr.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease,this._syncedRelease=b=>this._original_triggerRelease(b);const u=We(Dr.getDefaults(),arguments);this._volume=this.output=new wo({context:this.context,volume:u.volume}),this.volume=this._volume.volume,cn(this,"volume")}static getDefaults(){return Object.assign(vt.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}_syncState(){let u=!1;return this._synced||(this._synced=!0,u=!0),u}_syncMethod(u,b){const _=this["_original_"+u]=this[u];this[u]=(...M)=>{const Y=M[b],ae=this.context.transport.schedule(de=>{M[b]=de,_.apply(this,M)},Y);this._scheduledEvents.push(ae)}}unsync(){return this._scheduledEvents.forEach(u=>this.context.transport.clear(u)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease,this.context.transport.off("stop",this._syncedRelease),this.context.transport.off("pause",this._syncedRelease),this.context.transport.off("loopEnd",this._syncedRelease)),this}triggerAttackRelease(u,b,_,M){const Y=this.toSeconds(_),ae=this.toSeconds(b);return this.triggerAttack(u,Y,M),this.triggerRelease(Y+ae),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class Us extends Dr{constructor(){super(We(Us.getDefaults(),arguments));const u=We(Us.getDefaults(),arguments);this.portamento=u.portamento,this.onsilence=u.onsilence}static getDefaults(){return Object.assign(Dr.getDefaults(),{detune:0,onsilence:Z,portamento:0})}triggerAttack(u,b,_=1){this.log("triggerAttack",u,b,_);const M=this.toSeconds(b);return this._triggerEnvelopeAttack(M,_),this.setNote(u,M),this}triggerRelease(u){this.log("triggerRelease",u);const b=this.toSeconds(u);return this._triggerEnvelopeRelease(b),this}setNote(u,b){const _=this.toSeconds(b),M=u instanceof kt?u.toFrequency():u;if(this.portamento>0&&this.getLevelAtTime(_)>.05){const Y=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(M,Y,_)}else this.frequency.setValueAtTime(M,_);return this}}Ar([Bo(0)],Us.prototype,"portamento",void 0);class ki extends js{constructor(){super(We(ki.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new Ut({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class Vo extends Us{constructor(){super(We(Vo.getDefaults(),arguments)),this.name="Synth";const u=We(Vo.getDefaults(),arguments);this.oscillator=new To(Object.assign({context:this.context,detune:u.detune,onstop:()=>this.onsilence(this)},u.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new ki(Object.assign({context:this.context},u.envelope)),this.oscillator.chain(this.envelope,this.output),cn(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(Us.getDefaults(),{envelope:Object.assign(zs(js.getDefaults(),Object.keys(vt.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(zs(To.getDefaults(),[...Object.keys(ps.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(u,b){if(this.envelope.triggerAttack(u,b),this.oscillator.start(u),this.envelope.sustain===0){const _=this.toSeconds(this.envelope.attack),M=this.toSeconds(this.envelope.decay);this.oscillator.stop(u+_+M)}}_triggerEnvelopeRelease(u){this.envelope.triggerRelease(u),this.oscillator.stop(u+this.toSeconds(this.envelope.release))}getLevelAtTime(u){return u=this.toSeconds(u),this.envelope.getValueAtTime(u)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class na extends Us{constructor(){super(We(na.getDefaults(),arguments)),this.name="ModulationSynth";const u=We(na.getDefaults(),arguments);this._carrier=new Vo({context:this.context,oscillator:u.oscillator,envelope:u.envelope,onsilence:()=>this.onsilence(this),volume:-10}),this._modulator=new Vo({context:this.context,oscillator:u.modulation,envelope:u.modulationEnvelope,volume:-10}),this.oscillator=this._carrier.oscillator,this.envelope=this._carrier.envelope,this.modulation=this._modulator.oscillator,this.modulationEnvelope=this._modulator.envelope,this.frequency=new Xt({context:this.context,units:"frequency"}),this.detune=new Xt({context:this.context,value:u.detune,units:"cents"}),this.harmonicity=new cs({context:this.context,value:u.harmonicity,minValue:0}),this._modulationNode=new Ut({context:this.context,gain:0}),cn(this,["frequency","harmonicity","oscillator","envelope","modulation","modulationEnvelope","detune"])}static getDefaults(){return Object.assign(Us.getDefaults(),{harmonicity:3,oscillator:Object.assign(zs(To.getDefaults(),[...Object.keys(ps.getDefaults()),"frequency","detune"]),{type:"sine"}),envelope:Object.assign(zs(js.getDefaults(),Object.keys(vt.getDefaults())),{attack:.01,decay:.01,sustain:1,release:.5}),modulation:Object.assign(zs(To.getDefaults(),[...Object.keys(ps.getDefaults()),"frequency","detune"]),{type:"square"}),modulationEnvelope:Object.assign(zs(js.getDefaults(),Object.keys(vt.getDefaults())),{attack:.5,decay:0,sustain:1,release:.5})})}_triggerEnvelopeAttack(u,b){this._carrier._triggerEnvelopeAttack(u,b),this._modulator._triggerEnvelopeAttack(u,b)}_triggerEnvelopeRelease(u){return this._carrier._triggerEnvelopeRelease(u),this._modulator._triggerEnvelopeRelease(u),this}getLevelAtTime(u){return u=this.toSeconds(u),this.envelope.getValueAtTime(u)}dispose(){return super.dispose(),this._carrier.dispose(),this._modulator.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._modulationNode.dispose(),this}}class nu extends na{constructor(){super(We(nu.getDefaults(),arguments)),this.name="AMSynth",this._modulationScale=new fc({context:this.context}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output)}dispose(){return super.dispose(),this._modulationScale.dispose(),this}}class sa extends vt{constructor(){super(We(sa.getDefaults(),arguments,["frequency","type"])),this.name="BiquadFilter";const u=We(sa.getDefaults(),arguments,["frequency","type"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new Vt({context:this.context,units:"number",value:u.Q,param:this._filter.Q}),this.frequency=new Vt({context:this.context,units:"frequency",value:u.frequency,param:this._filter.frequency}),this.detune=new Vt({context:this.context,units:"cents",value:u.detune,param:this._filter.detune}),this.gain=new Vt({context:this.context,units:"decibels",convert:!1,value:u.gain,param:this._filter.gain}),this.type=u.type}static getDefaults(){return Object.assign(vt.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(u){en(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(u)!==-1,`Invalid filter type: ${u}`),this._filter.type=u}getFrequencyResponse(u=128){const b=new Float32Array(u);for(let ae=0;ae<u;ae++){const de=19980*Math.pow(ae/u,2)+20;b[ae]=de}const _=new Float32Array(u),M=new Float32Array(u),Y=this.context.createBiquadFilter();return Y.type=this.type,Y.Q.value=this.Q.value,Y.frequency.value=this.frequency.value,Y.gain.value=this.gain.value,Y.getFrequencyResponse(b,_,M),_}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class Tr extends vt{constructor(){super(We(Tr.getDefaults(),arguments,["frequency","type","rolloff"])),this.name="Filter",this.input=new Ut({context:this.context}),this.output=new Ut({context:this.context}),this._filters=[];const u=We(Tr.getDefaults(),arguments,["frequency","type","rolloff"]);this._filters=[],this.Q=new Xt({context:this.context,units:"positive",value:u.Q}),this.frequency=new Xt({context:this.context,units:"frequency",value:u.frequency}),this.detune=new Xt({context:this.context,units:"cents",value:u.detune}),this.gain=new Xt({context:this.context,units:"decibels",convert:!1,value:u.gain}),this._type=u.type,this.rolloff=u.rolloff,cn(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(vt.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(u){en(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(u)!==-1,`Invalid filter type: ${u}`),this._type=u,this._filters.forEach(b=>b.type=u)}get rolloff(){return this._rolloff}set rolloff(u){const b=Ns(u)?u:parseInt(u,10),_=[-12,-24,-48,-96];let M=_.indexOf(b);en(M!==-1,`rolloff can only be ${_.join(", ")}`),M+=1,this._rolloff=b,this.input.disconnect(),this._filters.forEach(Y=>Y.disconnect()),this._filters=new Array(M);for(let Y=0;Y<M;Y++){const ae=new sa({context:this.context});ae.type=this._type,this.frequency.connect(ae.frequency),this.detune.connect(ae.detune),this.Q.connect(ae.Q),this.gain.connect(ae.gain),this._filters[Y]=ae}this._internalChannels=this._filters,fn(this.input,...this._internalChannels,this.output)}getFrequencyResponse(u=128){const b=new sa({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),_=new Float32Array(u).map(()=>1);return this._filters.forEach(()=>{b.getFrequencyResponse(u).forEach((M,Y)=>_[Y]*=M)}),b.dispose(),_}dispose(){return super.dispose(),this._filters.forEach(u=>{u.dispose()}),bi(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}class ra extends js{constructor(){super(We(ra.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="FrequencyEnvelope";const u=We(ra.getDefaults(),arguments,["attack","decay","sustain","release"]);this._octaves=u.octaves,this._baseFrequency=this.toFrequency(u.baseFrequency),this._exponent=this.input=new xi({context:this.context,value:u.exponent}),this._scale=this.output=new Co({context:this.context,min:this._baseFrequency,max:this._baseFrequency*Math.pow(2,this._octaves)}),this._sig.chain(this._exponent,this._scale)}static getDefaults(){return Object.assign(js.getDefaults(),{baseFrequency:200,exponent:1,octaves:4})}get baseFrequency(){return this._baseFrequency}set baseFrequency(u){const b=this.toFrequency(u);Ls(b,0),this._baseFrequency=b,this._scale.min=this._baseFrequency,this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(u){this._octaves=u,this._scale.max=this._baseFrequency*Math.pow(2,u)}get exponent(){return this._exponent.value}set exponent(u){this._exponent.value=u}dispose(){return super.dispose(),this._exponent.dispose(),this._scale.dispose(),this}}class ni extends Us{constructor(){super(We(ni.getDefaults(),arguments)),this.name="MonoSynth";const u=We(ni.getDefaults(),arguments);this.oscillator=new To(Object.assign(u.oscillator,{context:this.context,detune:u.detune,onstop:()=>this.onsilence(this)})),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.filter=new Tr(Object.assign(u.filter,{context:this.context})),this.filterEnvelope=new ra(Object.assign(u.filterEnvelope,{context:this.context})),this.envelope=new ki(Object.assign(u.envelope,{context:this.context})),this.oscillator.chain(this.filter,this.envelope,this.output),this.filterEnvelope.connect(this.filter.frequency),cn(this,["oscillator","frequency","detune","filter","filterEnvelope","envelope"])}static getDefaults(){return Object.assign(Us.getDefaults(),{envelope:Object.assign(zs(js.getDefaults(),Object.keys(vt.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.9}),filter:Object.assign(zs(Tr.getDefaults(),Object.keys(vt.getDefaults())),{Q:1,rolloff:-12,type:"lowpass"}),filterEnvelope:Object.assign(zs(ra.getDefaults(),Object.keys(vt.getDefaults())),{attack:.6,baseFrequency:200,decay:.2,exponent:2,octaves:3,release:2,sustain:.5}),oscillator:Object.assign(zs(To.getDefaults(),Object.keys(ps.getDefaults())),{type:"sawtooth"})})}_triggerEnvelopeAttack(u,b=1){if(this.envelope.triggerAttack(u,b),this.filterEnvelope.triggerAttack(u),this.oscillator.start(u),this.envelope.sustain===0){const _=this.toSeconds(this.envelope.attack),M=this.toSeconds(this.envelope.decay);this.oscillator.stop(u+_+M)}}_triggerEnvelopeRelease(u){this.envelope.triggerRelease(u),this.filterEnvelope.triggerRelease(u),this.oscillator.stop(u+this.toSeconds(this.envelope.release))}getLevelAtTime(u){return u=this.toSeconds(u),this.envelope.getValueAtTime(u)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this.filterEnvelope.dispose(),this.filter.dispose(),this}}class xc extends Us{constructor(){super(We(xc.getDefaults(),arguments)),this.name="DuoSynth";const u=We(xc.getDefaults(),arguments);this.voice0=new ni(Object.assign(u.voice0,{context:this.context,onsilence:()=>this.onsilence(this)})),this.voice1=new ni(Object.assign(u.voice1,{context:this.context})),this.harmonicity=new cs({context:this.context,units:"positive",value:u.harmonicity}),this._vibrato=new or({frequency:u.vibratoRate,context:this.context,min:-50,max:50}),this._vibrato.start(),this.vibratoRate=this._vibrato.frequency,this._vibratoGain=new Ut({context:this.context,units:"normalRange",gain:u.vibratoAmount}),this.vibratoAmount=this._vibratoGain.gain,this.frequency=new Xt({context:this.context,units:"frequency",value:440}),this.detune=new Xt({context:this.context,units:"cents",value:u.detune}),this.frequency.connect(this.voice0.frequency),this.frequency.chain(this.harmonicity,this.voice1.frequency),this._vibrato.connect(this._vibratoGain),this._vibratoGain.fan(this.voice0.detune,this.voice1.detune),this.detune.fan(this.voice0.detune,this.voice1.detune),this.voice0.connect(this.output),this.voice1.connect(this.output),cn(this,["voice0","voice1","frequency","vibratoAmount","vibratoRate"])}getLevelAtTime(u){return u=this.toSeconds(u),this.voice0.envelope.getValueAtTime(u)+this.voice1.envelope.getValueAtTime(u)}static getDefaults(){return dr(Us.getDefaults(),{vibratoAmount:.5,vibratoRate:5,harmonicity:1.5,voice0:dr(zs(ni.getDefaults(),Object.keys(Us.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}}),voice1:dr(zs(ni.getDefaults(),Object.keys(Us.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}})})}_triggerEnvelopeAttack(u,b){this.voice0._triggerEnvelopeAttack(u,b),this.voice1._triggerEnvelopeAttack(u,b)}_triggerEnvelopeRelease(u){return this.voice0._triggerEnvelopeRelease(u),this.voice1._triggerEnvelopeRelease(u),this}dispose(){return super.dispose(),this.voice0.dispose(),this.voice1.dispose(),this.frequency.dispose(),this.detune.dispose(),this._vibrato.dispose(),this.vibratoRate.dispose(),this._vibratoGain.dispose(),this.harmonicity.dispose(),this}}class vc extends na{constructor(){super(We(vc.getDefaults(),arguments)),this.name="FMSynth";const u=We(vc.getDefaults(),arguments);this.modulationIndex=new cs({context:this.context,value:u.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output)}static getDefaults(){return Object.assign(na.getDefaults(),{modulationIndex:10})}dispose(){return super.dispose(),this.modulationIndex.dispose(),this}}const du=[1,1.483,1.932,2.546,2.63,3.897];class wc extends Us{constructor(){super(We(wc.getDefaults(),arguments)),this.name="MetalSynth",this._oscillators=[],this._freqMultipliers=[];const u=We(wc.getDefaults(),arguments);this.detune=new Xt({context:this.context,units:"cents",value:u.detune}),this.frequency=new Xt({context:this.context,units:"frequency"}),this._amplitude=new Ut({context:this.context,gain:0}).connect(this.output),this._highpass=new Tr({Q:0,context:this.context,type:"highpass"}).connect(this._amplitude);for(let b=0;b<du.length;b++){const _=new Si({context:this.context,harmonicity:u.harmonicity,modulationIndex:u.modulationIndex,modulationType:"square",onstop:b===0?()=>this.onsilence(this):Z,type:"square"});_.connect(this._highpass),this._oscillators[b]=_;const M=new cs({context:this.context,value:du[b]});this._freqMultipliers[b]=M,this.frequency.chain(M,_.frequency),this.detune.connect(_.detune)}this._filterFreqScaler=new Co({context:this.context,max:7e3,min:this.toFrequency(u.resonance)}),this.envelope=new js({attack:u.envelope.attack,attackCurve:"linear",context:this.context,decay:u.envelope.decay,release:u.envelope.release,sustain:0}),this.envelope.chain(this._filterFreqScaler,this._highpass.frequency),this.envelope.connect(this._amplitude.gain),this._octaves=u.octaves,this.octaves=u.octaves}static getDefaults(){return dr(Us.getDefaults(),{envelope:Object.assign(zs(js.getDefaults(),Object.keys(vt.getDefaults())),{attack:.001,decay:1.4,release:.2}),harmonicity:5.1,modulationIndex:32,octaves:1.5,resonance:4e3})}_triggerEnvelopeAttack(u,b=1){return this.envelope.triggerAttack(u,b),this._oscillators.forEach(_=>_.start(u)),this.envelope.sustain===0&&this._oscillators.forEach(_=>{_.stop(u+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay))}),this}_triggerEnvelopeRelease(u){return this.envelope.triggerRelease(u),this._oscillators.forEach(b=>b.stop(u+this.toSeconds(this.envelope.release))),this}getLevelAtTime(u){return u=this.toSeconds(u),this.envelope.getValueAtTime(u)}get modulationIndex(){return this._oscillators[0].modulationIndex.value}set modulationIndex(u){this._oscillators.forEach(b=>b.modulationIndex.value=u)}get harmonicity(){return this._oscillators[0].harmonicity.value}set harmonicity(u){this._oscillators.forEach(b=>b.harmonicity.value=u)}get resonance(){return this._filterFreqScaler.min}set resonance(u){this._filterFreqScaler.min=this.toFrequency(u),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(u){this._octaves=u,this._filterFreqScaler.max=this._filterFreqScaler.min*Math.pow(2,u)}dispose(){return super.dispose(),this._oscillators.forEach(u=>u.dispose()),this._freqMultipliers.forEach(u=>u.dispose()),this.frequency.dispose(),this.detune.dispose(),this._filterFreqScaler.dispose(),this._amplitude.dispose(),this.envelope.dispose(),this._highpass.dispose(),this}}class oa extends Vo{constructor(){super(We(oa.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const u=We(oa.getDefaults(),arguments);this.pitchDecay=u.pitchDecay,this.octaves=u.octaves,cn(this,["oscillator","envelope"])}static getDefaults(){return dr(Us.getDefaults(),Vo.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(u,b){const _=this.toSeconds(b),M=this.toFrequency(u instanceof kt?u.toFrequency():u),Y=M*this.octaves;return this.oscillator.frequency.setValueAtTime(Y,_),this.oscillator.frequency.exponentialRampToValueAtTime(M,_+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}Ar([uu(0)],oa.prototype,"octaves",void 0),Ar([Bo(0)],oa.prototype,"pitchDecay",void 0);class Sc extends Dr{constructor(){super(We(Sc.getDefaults(),arguments)),this.name="NoiseSynth";const u=We(Sc.getDefaults(),arguments);this.noise=new co(Object.assign({context:this.context},u.noise)),this.envelope=new ki(Object.assign({context:this.context},u.envelope)),this.noise.chain(this.envelope,this.output)}static getDefaults(){return Object.assign(Dr.getDefaults(),{envelope:Object.assign(zs(js.getDefaults(),Object.keys(vt.getDefaults())),{decay:.1,sustain:0}),noise:Object.assign(zs(co.getDefaults(),Object.keys(ps.getDefaults())),{type:"white"})})}triggerAttack(u,b=1){return u=this.toSeconds(u),this.envelope.triggerAttack(u,b),this.noise.start(u),this.envelope.sustain===0&&this.noise.stop(u+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay)),this}triggerRelease(u){return u=this.toSeconds(u),this.envelope.triggerRelease(u),this.noise.stop(u+this.toSeconds(this.envelope.release)),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",0),this._syncMethod("triggerRelease",0)),this}triggerAttackRelease(u,b,_=1){return b=this.toSeconds(b),u=this.toSeconds(u),this.triggerAttack(b,_),this.triggerRelease(b+u),this}dispose(){return super.dispose(),this.noise.dispose(),this.envelope.dispose(),this}}const su=new Set;function ru(z){su.add(z)}function pu(z,u){const b=`registerProcessor("${z}", ${u})`;su.add(b)}class ou extends vt{constructor(u){super(u),this.name="ToneAudioWorklet",this.workletOptions={},this.onprocessorerror=Z;const b=URL.createObjectURL(new Blob([Array.from(su).join(`
`)],{type:"text/javascript"})),_=this._audioWorkletName();this._dummyGain=this.context.createGain(),this._dummyParam=this._dummyGain.gain,this.context.addAudioWorkletModule(b).then(()=>{this.disposed||(this._worklet=this.context.createAudioWorkletNode(_,this.workletOptions),this._worklet.onprocessorerror=this.onprocessorerror.bind(this),this.onReady(this._worklet))})}dispose(){return super.dispose(),this._dummyGain.disconnect(),this._worklet&&(this._worklet.port.postMessage("dispose"),this._worklet.disconnect()),this}}ru(`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the {@link ToneAudioWorklet}. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`),ru(`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`),ru(`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`);const fu="feedback-comb-filter";pu(fu,`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`);class ia extends ou{constructor(){super(We(ia.getDefaults(),arguments,["delayTime","resonance"])),this.name="FeedbackCombFilter";const u=We(ia.getDefaults(),arguments,["delayTime","resonance"]);this.input=new Ut({context:this.context}),this.output=new Ut({context:this.context}),this.delayTime=new Vt({context:this.context,value:u.delayTime,units:"time",minValue:0,maxValue:1,param:this._dummyParam,swappable:!0}),this.resonance=new Vt({context:this.context,value:u.resonance,units:"normalRange",param:this._dummyParam,swappable:!0}),cn(this,["resonance","delayTime"])}_audioWorkletName(){return fu}static getDefaults(){return Object.assign(vt.getDefaults(),{delayTime:.1,resonance:.5})}onReady(u){fn(this.input,u,this.output);const b=u.parameters.get("delayTime");this.delayTime.setParam(b);const _=u.parameters.get("feedback");this.resonance.setParam(_)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.delayTime.dispose(),this.resonance.dispose(),this}}class aa extends vt{constructor(){super(We(aa.getDefaults(),arguments,["frequency","type"])),this.name="OnePoleFilter";const u=We(aa.getDefaults(),arguments,["frequency","type"]);this._frequency=u.frequency,this._type=u.type,this.input=new Ut({context:this.context}),this.output=new Ut({context:this.context}),this._createFilter()}static getDefaults(){return Object.assign(vt.getDefaults(),{frequency:880,type:"lowpass"})}_createFilter(){const u=this._filter,b=this.toFrequency(this._frequency),_=1/(2*Math.PI*b);if(this._type==="lowpass"){const M=1/(_*this.context.sampleRate),Y=M-1;this._filter=this.context.createIIRFilter([M,0],[1,Y])}else{const M=1/(_*this.context.sampleRate)-1;this._filter=this.context.createIIRFilter([1,-1],[1,M])}this.input.chain(this._filter,this.output),u&&this.context.setTimeout(()=>{this.disposed||(this.input.disconnect(u),u.disconnect())},this.blockTime)}get frequency(){return this._frequency}set frequency(u){this._frequency=u,this._createFilter()}get type(){return this._type}set type(u){this._type=u,this._createFilter()}getFrequencyResponse(u=128){const b=new Float32Array(u);for(let Y=0;Y<u;Y++){const ae=19980*Math.pow(Y/u,2)+20;b[Y]=ae}const _=new Float32Array(u),M=new Float32Array(u);return this._filter.getFrequencyResponse(b,_,M),_}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this._filter.disconnect(),this}}class ca extends vt{constructor(){super(We(ca.getDefaults(),arguments,["delayTime","resonance","dampening"])),this.name="LowpassCombFilter";const u=We(ca.getDefaults(),arguments,["delayTime","resonance","dampening"]);this._combFilter=this.output=new ia({context:this.context,delayTime:u.delayTime,resonance:u.resonance}),this.delayTime=this._combFilter.delayTime,this.resonance=this._combFilter.resonance,this._lowpass=this.input=new aa({context:this.context,frequency:u.dampening,type:"lowpass"}),this._lowpass.connect(this._combFilter)}static getDefaults(){return Object.assign(vt.getDefaults(),{dampening:3e3,delayTime:.1,resonance:.5})}get dampening(){return this._lowpass.frequency}set dampening(u){this._lowpass.frequency=u}dispose(){return super.dispose(),this._combFilter.dispose(),this._lowpass.dispose(),this}}class Pa extends Dr{constructor(){super(We(Pa.getDefaults(),arguments)),this.name="PluckSynth";const u=We(Pa.getDefaults(),arguments);this._noise=new co({context:this.context,type:"pink"}),this.attackNoise=u.attackNoise,this._lfcf=new ca({context:this.context,dampening:u.dampening,resonance:u.resonance}),this.resonance=u.resonance,this.release=u.release,this._noise.connect(this._lfcf),this._lfcf.connect(this.output)}static getDefaults(){return dr(Dr.getDefaults(),{attackNoise:1,dampening:4e3,resonance:.7,release:1})}get dampening(){return this._lfcf.dampening}set dampening(u){this._lfcf.dampening=u}triggerAttack(u,b){const _=this.toFrequency(u);b=this.toSeconds(b);const M=1/_;return this._lfcf.delayTime.setValueAtTime(M,b),this._noise.start(b),this._noise.stop(b+M*this.attackNoise),this._lfcf.resonance.cancelScheduledValues(b),this._lfcf.resonance.setValueAtTime(this.resonance,b),this}triggerRelease(u){return this._lfcf.resonance.linearRampTo(0,this.release,u),this}dispose(){return super.dispose(),this._noise.dispose(),this._lfcf.dispose(),this}}class Tc extends Dr{constructor(){super(We(Tc.getDefaults(),arguments,["voice","options"])),this.name="PolySynth",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0,this._syncedRelease=M=>this.releaseAll(M);const u=We(Tc.getDefaults(),arguments,["voice","options"]);en(!Ns(u.voice),"DEPRECATED: The polyphony count is no longer the first argument.");const b=u.voice.getDefaults();this.options=Object.assign(b,u.options),this.voice=u.voice,this.maxPolyphony=u.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const _=this._voices.indexOf(this._dummyVoice);this._voices.splice(_,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(Dr.getDefaults(),{maxPolyphony:32,options:{},voice:Vo})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(u){this._availableVoices.push(u);const b=this._activeVoices.findIndex(_=>_.voice===u);this._activeVoices.splice(b,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const u=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return en(u instanceof Us,"Voice must extend Monophonic class"),u.connect(this.output),this._voices.push(u),u}ei("Max polyphony exceeded. Note dropped.")}_collectGarbage(){if(this._averageActiveVoices=Math.max(.95*this._averageActiveVoices,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const u=this._availableVoices.shift(),b=this._voices.indexOf(u);this._voices.splice(b,1),this.context.isOffline||u.dispose()}}_triggerAttack(u,b,_){u.forEach(M=>{const Y=new Qi(this.context,M).toMidi(),ae=this._getNextAvailableVoice();ae&&(ae.triggerAttack(M,b,_),this._activeVoices.push({midi:Y,voice:ae,released:!1}),this.log("triggerAttack",M,b))})}_triggerRelease(u,b){u.forEach(_=>{const M=new Qi(this.context,_).toMidi(),Y=this._activeVoices.find(({midi:ae,released:de})=>ae===M&&!de);Y&&(Y.voice.triggerRelease(b),Y.released=!0,this.log("triggerRelease",_,b))})}_scheduleEvent(u,b,_,M){en(!this.disposed,"Synth was already disposed"),_<=this.now()?u==="attack"?this._triggerAttack(b,_,M):this._triggerRelease(b,_):this.context.setTimeout(()=>{this.disposed||this._scheduleEvent(u,b,_,M)},_-this.now())}triggerAttack(u,b,_){Array.isArray(u)||(u=[u]);const M=this.toSeconds(b);return this._scheduleEvent("attack",u,M,_),this}triggerRelease(u,b){Array.isArray(u)||(u=[u]);const _=this.toSeconds(b);return this._scheduleEvent("release",u,_),this}triggerAttackRelease(u,b,_,M){const Y=this.toSeconds(_);if(this.triggerAttack(u,Y,M),As(b)){en(As(u),"If the duration is an array, the notes must also be an array");for(let ae=0;ae<u.length;ae++){const de=b[Math.min(ae,b.length-1)],xe=this.toSeconds(de);en(xe>0,"The duration must be greater than 0"),this.triggerRelease(u[ae],Y+xe)}}else{const ae=this.toSeconds(b);en(ae>0,"The duration must be greater than 0"),this.triggerRelease(u,Y+ae)}return this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}set(u){const b=zs(u,["onsilence","context"]);return this.options=dr(this.options,b),this._voices.forEach(_=>_.set(b)),this._dummyVoice.set(b),this}get(){return this._dummyVoice.get()}releaseAll(u){const b=this.toSeconds(u);return this._activeVoices.forEach(({voice:_})=>{_.triggerRelease(b)}),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach(u=>u.dispose()),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class ua extends Dr{constructor(){super(We(ua.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const u=We(ua.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),b={};Object.keys(u.urls).forEach(_=>{const M=parseInt(_,10);if(en(gi(_)||Ns(M)&&isFinite(M),`url key is neither a note or midi pitch: ${_}`),gi(_)){const Y=new kt(this.context,_).toMidi();b[Y]=u.urls[_]}else Ns(M)&&isFinite(M)&&(b[M]=u.urls[M])}),this._buffers=new Yi({urls:b,onload:u.onload,baseUrl:u.baseUrl,onerror:u.onerror}),this.attack=u.attack,this.release=u.release,this.curve=u.curve,this._buffers.loaded&&Promise.resolve().then(u.onload)}static getDefaults(){return Object.assign(Dr.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:Z,onerror:Z,release:.1,urls:{}})}_findClosest(u){let b=0;for(;b<96;){if(this._buffers.has(u+b))return-b;if(this._buffers.has(u-b))return b;b++}throw new Error(`No available buffers for note: ${u}`)}triggerAttack(u,b,_=1){return this.log("triggerAttack",u,b,_),Array.isArray(u)||(u=[u]),u.forEach(M=>{const Y=Be(new kt(this.context,M).toFrequency()),ae=Math.round(Y),de=Y-ae,xe=this._findClosest(ae),ve=ae-xe,_e=this._buffers.get(ve),Ee=Se(xe+de),qe=new zo({url:_e,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:Ee}).connect(this.output);qe.start(b,0,_e.duration/Ee,_),As(this._activeSources.get(ae))||this._activeSources.set(ae,[]),this._activeSources.get(ae).push(qe),qe.onended=()=>{if(this._activeSources&&this._activeSources.has(ae)){const je=this._activeSources.get(ae),et=je.indexOf(qe);et!==-1&&je.splice(et,1)}}}),this}triggerRelease(u,b){return this.log("triggerRelease",u,b),Array.isArray(u)||(u=[u]),u.forEach(_=>{const M=new kt(this.context,_).toMidi();if(this._activeSources.has(M)&&this._activeSources.get(M).length){const Y=this._activeSources.get(M);b=this.toSeconds(b),Y.forEach(ae=>{ae.stop(b)}),this._activeSources.set(M,[])}}),this}releaseAll(u){const b=this.toSeconds(u);return this._activeSources.forEach(_=>{for(;_.length;)_.shift().stop(b)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(u,b,_,M=1){const Y=this.toSeconds(_);return this.triggerAttack(u,Y,M),As(b)?(en(As(u),"notes must be an array when duration is array"),u.forEach((ae,de)=>{const xe=b[Math.min(de,b.length-1)];this.triggerRelease(ae,Y+this.toSeconds(xe))})):this.triggerRelease(u,Y+this.toSeconds(b)),this}add(u,b,_){if(en(gi(u)||isFinite(u),`note must be a pitch or midi: ${u}`),gi(u)){const M=new kt(this.context,u).toMidi();this._buffers.add(M,b,_)}else this._buffers.add(u,b,_);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(u=>{u.forEach(b=>b.dispose())}),this._activeSources.clear(),this}}Ar([Bo(0)],ua.prototype,"attack",void 0),Ar([Bo(0)],ua.prototype,"release",void 0);class Ur extends Ft{constructor(){super(We(Ur.getDefaults(),arguments,["callback","value"])),this.name="ToneEvent",this._state=new dn("stopped"),this._startOffset=0;const u=We(Ur.getDefaults(),arguments,["callback","value"]);this._loop=u.loop,this.callback=u.callback,this.value=u.value,this._loopStart=this.toTicks(u.loopStart),this._loopEnd=this.toTicks(u.loopEnd),this._playbackRate=u.playbackRate,this._probability=u.probability,this._humanize=u.humanize,this.mute=u.mute,this._playbackRate=u.playbackRate,this._state.increasing=!0,this._rescheduleEvents()}static getDefaults(){return Object.assign(Ft.getDefaults(),{callback:Z,humanize:!1,loop:!1,loopEnd:"1m",loopStart:0,mute:!1,playbackRate:1,probability:1,value:null})}_rescheduleEvents(u=-1){this._state.forEachFrom(u,b=>{let _;if(b.state==="started"){b.id!==-1&&this.context.transport.clear(b.id);const M=b.time+Math.round(this.startOffset/this._playbackRate);if(this._loop===!0||Ns(this._loop)&&this._loop>1){_=1/0,Ns(this._loop)&&(_=this._loop*this._getLoopDuration());const Y=this._state.getAfter(M);Y!==null&&(_=Math.min(_,Y.time-M)),_!==1/0&&(_=new ds(this.context,_));const ae=new ds(this.context,this._getLoopDuration());b.id=this.context.transport.scheduleRepeat(this._tick.bind(this),ae,new ds(this.context,M),_)}else b.id=this.context.transport.schedule(this._tick.bind(this),new ds(this.context,M))}})}get state(){return this._state.getValueAtTime(this.context.transport.ticks)}get startOffset(){return this._startOffset}set startOffset(u){this._startOffset=u}get probability(){return this._probability}set probability(u){this._probability=u}get humanize(){return this._humanize}set humanize(u){this._humanize=u}start(u){const b=this.toTicks(u);return this._state.getValueAtTime(b)==="stopped"&&(this._state.add({id:-1,state:"started",time:b}),this._rescheduleEvents(b)),this}stop(u){this.cancel(u);const b=this.toTicks(u);if(this._state.getValueAtTime(b)==="started"){this._state.setStateAtTime("stopped",b,{id:-1});const _=this._state.getBefore(b);let M=b;_!==null&&(M=_.time),this._rescheduleEvents(M)}return this}cancel(u){u=wr(u,-1/0);const b=this.toTicks(u);return this._state.forEachFrom(b,_=>{this.context.transport.clear(_.id)}),this._state.cancel(b),this}_tick(u){const b=this.context.transport.getTicksAtTime(u);if(!this.mute&&this._state.getValueAtTime(b)==="started"){if(this.probability<1&&Math.random()>this.probability)return;if(this.humanize){let _=.02;mi(this.humanize)||(_=this.toSeconds(this.humanize)),u+=(2*Math.random()-1)*_}this.callback(u,this.value)}}_getLoopDuration(){return(this._loopEnd-this._loopStart)/this._playbackRate}get loop(){return this._loop}set loop(u){this._loop=u,this._rescheduleEvents()}get playbackRate(){return this._playbackRate}set playbackRate(u){this._playbackRate=u,this._rescheduleEvents()}get loopEnd(){return new ds(this.context,this._loopEnd).toSeconds()}set loopEnd(u){this._loopEnd=this.toTicks(u),this._loop&&this._rescheduleEvents()}get loopStart(){return new ds(this.context,this._loopStart).toSeconds()}set loopStart(u){this._loopStart=this.toTicks(u),this._loop&&this._rescheduleEvents()}get progress(){if(this._loop){const u=this.context.transport.ticks,b=this._state.get(u);if(b!==null&&b.state==="started"){const _=this._getLoopDuration();return(u-b.time)%_/_}return 0}return 0}dispose(){return super.dispose(),this.cancel(),this._state.dispose(),this}}class la extends Ft{constructor(){super(We(la.getDefaults(),arguments,["callback","interval"])),this.name="Loop";const u=We(la.getDefaults(),arguments,["callback","interval"]);this._event=new Ur({context:this.context,callback:this._tick.bind(this),loop:!0,loopEnd:u.interval,playbackRate:u.playbackRate,probability:u.probability,humanize:u.humanize}),this.callback=u.callback,this.iterations=u.iterations}static getDefaults(){return Object.assign(Ft.getDefaults(),{interval:"4n",callback:Z,playbackRate:1,iterations:1/0,probability:1,mute:!1,humanize:!1})}start(u){return this._event.start(u),this}stop(u){return this._event.stop(u),this}cancel(u){return this._event.cancel(u),this}_tick(u){this.callback(u)}get state(){return this._event.state}get progress(){return this._event.progress}get interval(){return this._event.loopEnd}set interval(u){this._event.loopEnd=u}get playbackRate(){return this._event.playbackRate}set playbackRate(u){this._event.playbackRate=u}get humanize(){return this._event.humanize}set humanize(u){this._event.humanize=u}get probability(){return this._event.probability}set probability(u){this._event.probability=u}get mute(){return this._event.mute}set mute(u){this._event.mute=u}get iterations(){return this._event.loop===!0?1/0:this._event.loop}set iterations(u){this._event.loop=u===1/0||u}dispose(){return super.dispose(),this._event.dispose(),this}}class ha extends Ur{constructor(){super(We(ha.getDefaults(),arguments,["callback","events"])),this.name="Part",this._state=new dn("stopped"),this._events=new Set;const u=We(ha.getDefaults(),arguments,["callback","events"]);this._state.increasing=!0,u.events.forEach(b=>{As(b)?this.add(b[0],b[1]):this.add(b)})}static getDefaults(){return Object.assign(Ur.getDefaults(),{events:[]})}start(u,b){const _=this.toTicks(u);if(this._state.getValueAtTime(_)!=="started"){b=wr(b,this._loop?this._loopStart:0),b=this._loop?wr(b,this._loopStart):wr(b,0);const M=this.toTicks(b);this._state.add({id:-1,offset:M,state:"started",time:_}),this._forEach(Y=>{this._startNote(Y,_,M)})}return this}_startNote(u,b,_){b-=_,this._loop?u.startOffset>=this._loopStart&&u.startOffset<this._loopEnd?(u.startOffset<_&&(b+=this._getLoopDuration()),u.start(new ds(this.context,b))):u.startOffset<this._loopStart&&u.startOffset>=_&&(u.loop=!1,u.start(new ds(this.context,b))):u.startOffset>=_&&u.start(new ds(this.context,b))}get startOffset(){return this._startOffset}set startOffset(u){this._startOffset=u,this._forEach(b=>{b.startOffset+=this._startOffset})}stop(u){const b=this.toTicks(u);return this._state.cancel(b),this._state.setStateAtTime("stopped",b),this._forEach(_=>{_.stop(u)}),this}at(u,b){const _=new at(this.context,u).toTicks(),M=new ds(this.context,1).toSeconds(),Y=this._events.values();let ae=Y.next();for(;!ae.done;){const de=ae.value;if(Math.abs(_-de.startOffset)<M)return wn(b)&&(de.value=b),de;ae=Y.next()}return wn(b)?(this.add(u,b),this.at(u)):null}add(u,b){u instanceof Object&&Reflect.has(u,"time")&&(u=(b=u).time);const _=this.toTicks(u);let M;return b instanceof Ur?(M=b,M.callback=this._tick.bind(this)):M=new Ur({callback:this._tick.bind(this),context:this.context,value:b}),M.startOffset=_,M.set({humanize:this.humanize,loop:this.loop,loopEnd:this.loopEnd,loopStart:this.loopStart,playbackRate:this.playbackRate,probability:this.probability}),this._events.add(M),this._restartEvent(M),this}_restartEvent(u){this._state.forEach(b=>{b.state==="started"?this._startNote(u,b.time,b.offset):u.stop(new ds(this.context,b.time))})}remove(u,b){return oo(u)&&u.hasOwnProperty("time")&&(u=(b=u).time),u=this.toTicks(u),this._events.forEach(_=>{_.startOffset===u&&(nr(b)||wn(b)&&_.value===b)&&(this._events.delete(_),_.dispose())}),this}clear(){return this._forEach(u=>u.dispose()),this._events.clear(),this}cancel(u){return this._forEach(b=>b.cancel(u)),this._state.cancel(this.toTicks(u)),this}_forEach(u){return this._events&&this._events.forEach(b=>{b instanceof ha?b._forEach(u):u(b)}),this}_setAll(u,b){this._forEach(_=>{_[u]=b})}_tick(u,b){this.mute||this.callback(u,b)}_testLoopBoundries(u){this._loop&&(u.startOffset<this._loopStart||u.startOffset>=this._loopEnd)?u.cancel(0):u.state==="stopped"&&this._restartEvent(u)}get probability(){return this._probability}set probability(u){this._probability=u,this._setAll("probability",u)}get humanize(){return this._humanize}set humanize(u){this._humanize=u,this._setAll("humanize",u)}get loop(){return this._loop}set loop(u){this._loop=u,this._forEach(b=>{b.loopStart=this.loopStart,b.loopEnd=this.loopEnd,b.loop=u,this._testLoopBoundries(b)})}get loopEnd(){return new ds(this.context,this._loopEnd).toSeconds()}set loopEnd(u){this._loopEnd=this.toTicks(u),this._loop&&this._forEach(b=>{b.loopEnd=u,this._testLoopBoundries(b)})}get loopStart(){return new ds(this.context,this._loopStart).toSeconds()}set loopStart(u){this._loopStart=this.toTicks(u),this._loop&&this._forEach(b=>{b.loopStart=this.loopStart,this._testLoopBoundries(b)})}get playbackRate(){return this._playbackRate}set playbackRate(u){this._playbackRate=u,this._setAll("playbackRate",u)}get length(){return this._events.size}dispose(){return super.dispose(),this.clear(),this}}function*mu(z){let u=0;for(;u<z;)u=Do(u,0,z-1),yield u,u++}function*Tu(z){let u=z-1;for(;u>=0;)u=Do(u,0,z-1),yield u,u--}function*Fa(z,u){for(;;)yield*u(z)}function*gu(z,u){let b=u?0:z-1;for(;;)b=Do(b,0,z-1),yield b,u?(b++,b>=z-1&&(u=!1)):(b--,b<=0&&(u=!0))}function*Cu(z){let u=0,b=0;for(;u<z;)u=Do(u,0,z-1),yield u,b++,u+=b%2?2:-1}function*$u(z){let u=z-1,b=0;for(;u>=0;)u=Do(u,0,z-1),yield u,b++,u+=b%2?-2:1}function*_u(z){const u=[];for(let b=0;b<z;b++)u.push(b);for(;u.length>0;)yield Do(u.splice(Math.floor(u.length*Math.random()),1)[0],0,z-1)}function*yu(z,u="up",b=0){switch(en(z>=1,"The number of values must be at least one"),u){case"up":yield*Fa(z,mu);case"down":yield*Fa(z,Tu);case"upDown":yield*gu(z,!0);case"downUp":yield*gu(z,!1);case"alternateUp":yield*Fa(z,Cu);case"alternateDown":yield*Fa(z,$u);case"random":yield*function*(_){for(;;)yield Math.floor(Math.random()*_)}(z);case"randomOnce":yield*Fa(z,_u);case"randomWalk":yield*function*(_){let M=Math.floor(Math.random()*_);for(;;)M===0?M++:M===_-1||Math.random()<.5?M--:M++,yield M}(z)}}class Cc extends la{constructor(){super(We(Cc.getDefaults(),arguments,["callback","values","pattern"])),this.name="Pattern";const u=We(Cc.getDefaults(),arguments,["callback","values","pattern"]);this.callback=u.callback,this._values=u.values,this._pattern=yu(u.values.length,u.pattern),this._type=u.pattern}static getDefaults(){return Object.assign(la.getDefaults(),{pattern:"up",values:[],callback:Z})}_tick(u){const b=this._pattern.next();this._index=b.value,this._value=this._values[b.value],this.callback(u,this._value)}get values(){return this._values}set values(u){this._values=u,this.pattern=this._type}get value(){return this._value}get index(){return this._index}get pattern(){return this._type}set pattern(u){this._type=u,this._pattern=yu(this._values.length,this._type)}}class $c extends Ur{constructor(){super(We($c.getDefaults(),arguments,["callback","events","subdivision"])),this.name="Sequence",this._part=new ha({callback:this._seqCallback.bind(this),context:this.context}),this._events=[],this._eventsArray=[];const u=We($c.getDefaults(),arguments,["callback","events","subdivision"]);this._subdivision=this.toTicks(u.subdivision),this.events=u.events,this.loop=u.loop,this.loopStart=u.loopStart,this.loopEnd=u.loopEnd,this.playbackRate=u.playbackRate,this.probability=u.probability,this.humanize=u.humanize,this.mute=u.mute,this.playbackRate=u.playbackRate}static getDefaults(){return Object.assign(zs(Ur.getDefaults(),["value"]),{events:[],loop:!0,loopEnd:0,loopStart:0,subdivision:"8n"})}_seqCallback(u,b){b===null||this.mute||this.callback(u,b)}get events(){return this._events}set events(u){this.clear(),this._eventsArray=u,this._events=this._createSequence(this._eventsArray),this._eventsUpdated()}start(u,b){return this._part.start(u,b&&this._indexTime(b)),this}stop(u){return this._part.stop(u),this}get subdivision(){return new ds(this.context,this._subdivision).toSeconds()}_createSequence(u){return new Proxy(u,{get:(b,_)=>b[_],set:(b,_,M)=>(Nr(_)&&isFinite(parseInt(_,10))&&As(M)?b[_]=this._createSequence(M):b[_]=M,this._eventsUpdated(),!0)})}_eventsUpdated(){this._part.clear(),this._rescheduleSequence(this._eventsArray,this._subdivision,this.startOffset),this.loopEnd=this.loopEnd}_rescheduleSequence(u,b,_){u.forEach((M,Y)=>{const ae=Y*b+_;if(As(M))this._rescheduleSequence(M,b/M.length,ae);else{const de=new ds(this.context,ae,"i").toSeconds();this._part.add(de,M)}})}_indexTime(u){return new ds(this.context,u*this._subdivision+this.startOffset).toSeconds()}clear(){return this._part.clear(),this}dispose(){return super.dispose(),this._part.dispose(),this}get loop(){return this._part.loop}set loop(u){this._part.loop=u}get loopStart(){return this._loopStart}set loopStart(u){this._loopStart=u,this._part.loopStart=this._indexTime(u)}get loopEnd(){return this._loopEnd}set loopEnd(u){this._loopEnd=u,this._part.loopEnd=u===0?this._indexTime(this._eventsArray.length):this._indexTime(u)}get startOffset(){return this._part.startOffset}set startOffset(u){this._part.startOffset=u}get playbackRate(){return this._part.playbackRate}set playbackRate(u){this._part.playbackRate=u}get probability(){return this._part.probability}set probability(u){this._part.probability=u}get progress(){return this._part.progress}get humanize(){return this._part.humanize}set humanize(u){this._part.humanize=u}get length(){return this._part.length}}class Ei extends vt{constructor(){super(Object.assign(We(Ei.getDefaults(),arguments,["fade"]))),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new hu({context:this.context}),this.a=new Ut({context:this.context,gain:0}),this.b=new Ut({context:this.context,gain:0}),this.output=new Ut({context:this.context}),this._internalChannels=[this.a,this.b];const u=We(Ei.getDefaults(),arguments,["fade"]);this.fade=new Xt({context:this.context,units:"normalRange",value:u.fade}),cn(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",bn(this._split,this.a.gain,0),bn(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(vt.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class Vs extends vt{constructor(u){super(u),this.name="Effect",this._dryWet=new Ei({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new Ut({context:this.context}),this.effectReturn=new Ut({context:this.context}),this.input=new Ut({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(u.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],cn(this,"wet")}static getDefaults(){return Object.assign(vt.getDefaults(),{wet:1})}connectEffect(u){return this._internalChannels.push(u),this.effectSend.chain(u,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class S extends Vs{constructor(u){super(u),this.name="LFOEffect",this._lfo=new or({context:this.context,frequency:u.frequency,amplitude:u.depth}),this.depth=this._lfo.amplitude,this.frequency=this._lfo.frequency,this.type=u.type,cn(this,["frequency","depth"])}static getDefaults(){return Object.assign(Vs.getDefaults(),{frequency:1,type:"sine",depth:1})}start(u){return this._lfo.start(u),this}stop(u){return this._lfo.stop(u),this}sync(){return this._lfo.sync(),this}unsync(){return this._lfo.unsync(),this}get type(){return this._lfo.type}set type(u){this._lfo.type=u}dispose(){return super.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class C extends S{constructor(){super(We(C.getDefaults(),arguments,["frequency","baseFrequency","octaves"])),this.name="AutoFilter";const u=We(C.getDefaults(),arguments,["frequency","baseFrequency","octaves"]);this.filter=new Tr(Object.assign(u.filter,{context:this.context})),this.connectEffect(this.filter),this._lfo.connect(this.filter.frequency),this.octaves=u.octaves,this.baseFrequency=u.baseFrequency}static getDefaults(){return Object.assign(S.getDefaults(),{baseFrequency:200,octaves:2.6,filter:{type:"lowpass",rolloff:-12,Q:1}})}get baseFrequency(){return this._lfo.min}set baseFrequency(u){this._lfo.min=this.toFrequency(u),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(u){this._octaves=u,this._lfo.max=this._lfo.min*Math.pow(2,u)}dispose(){return super.dispose(),this.filter.dispose(),this}}class $ extends vt{constructor(){super(Object.assign(We($.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const u=We($.getDefaults(),arguments,["pan"]);this.pan=new Vt({context:this.context,param:this._panner.pan,value:u.pan,minValue:-1,maxValue:1}),this._panner.channelCount=u.channelCount,this._panner.channelCountMode="explicit",cn(this,"pan")}static getDefaults(){return Object.assign(vt.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}class k extends S{constructor(){super(We(k.getDefaults(),arguments,["frequency"])),this.name="AutoPanner";const u=We(k.getDefaults(),arguments,["frequency"]);this._panner=new $({context:this.context,channelCount:u.channelCount}),this.connectEffect(this._panner),this._lfo.connect(this._panner.pan),this._lfo.min=-1,this._lfo.max=1}static getDefaults(){return Object.assign(S.getDefaults(),{channelCount:1})}dispose(){return super.dispose(),this._panner.dispose(),this}}class L extends vt{constructor(){super(We(L.getDefaults(),arguments,["smoothing"])),this.name="Follower";const u=We(L.getDefaults(),arguments,["smoothing"]);this._abs=this.input=new lu({context:this.context}),this._lowpass=this.output=new aa({context:this.context,frequency:1/this.toSeconds(u.smoothing),type:"lowpass"}),this._abs.connect(this._lowpass),this._smoothing=u.smoothing}static getDefaults(){return Object.assign(vt.getDefaults(),{smoothing:.05})}get smoothing(){return this._smoothing}set smoothing(u){this._smoothing=u,this._lowpass.frequency=1/this.toSeconds(this.smoothing)}dispose(){return super.dispose(),this._abs.dispose(),this._lowpass.dispose(),this}}class q extends Vs{constructor(){super(We(q.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"])),this.name="AutoWah";const u=We(q.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"]);this._follower=new L({context:this.context,smoothing:u.follower}),this._sweepRange=new Da({context:this.context,min:0,max:1,exponent:.5}),this._baseFrequency=this.toFrequency(u.baseFrequency),this._octaves=u.octaves,this._inputBoost=new Ut({context:this.context}),this._bandpass=new Tr({context:this.context,rolloff:-48,frequency:0,Q:u.Q}),this._peaking=new Tr({context:this.context,type:"peaking"}),this._peaking.gain.value=u.gain,this.gain=this._peaking.gain,this.Q=this._bandpass.Q,this.effectSend.chain(this._inputBoost,this._follower,this._sweepRange),this._sweepRange.connect(this._bandpass.frequency),this._sweepRange.connect(this._peaking.frequency),this.effectSend.chain(this._bandpass,this._peaking,this.effectReturn),this._setSweepRange(),this.sensitivity=u.sensitivity,cn(this,["gain","Q"])}static getDefaults(){return Object.assign(Vs.getDefaults(),{baseFrequency:100,octaves:6,sensitivity:0,Q:2,gain:2,follower:.2})}get octaves(){return this._octaves}set octaves(u){this._octaves=u,this._setSweepRange()}get follower(){return this._follower.smoothing}set follower(u){this._follower.smoothing=u}get baseFrequency(){return this._baseFrequency}set baseFrequency(u){this._baseFrequency=this.toFrequency(u),this._setSweepRange()}get sensitivity(){return fe(1/this._inputBoost.gain.value)}set sensitivity(u){this._inputBoost.gain.value=1/ie(u)}_setSweepRange(){this._sweepRange.min=this._baseFrequency,this._sweepRange.max=Math.min(this._baseFrequency*Math.pow(2,this._octaves),this.context.sampleRate/2)}dispose(){return super.dispose(),this._follower.dispose(),this._sweepRange.dispose(),this._bandpass.dispose(),this._peaking.dispose(),this._inputBoost.dispose(),this}}const X="bit-crusher";pu(X,`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`);class se extends Vs{constructor(){super(We(se.getDefaults(),arguments,["bits"])),this.name="BitCrusher";const u=We(se.getDefaults(),arguments,["bits"]);this._bitCrusherWorklet=new be({context:this.context,bits:u.bits}),this.connectEffect(this._bitCrusherWorklet),this.bits=this._bitCrusherWorklet.bits}static getDefaults(){return Object.assign(Vs.getDefaults(),{bits:4})}dispose(){return super.dispose(),this._bitCrusherWorklet.dispose(),this}}class be extends ou{constructor(){super(We(be.getDefaults(),arguments)),this.name="BitCrusherWorklet";const u=We(be.getDefaults(),arguments);this.input=new Ut({context:this.context}),this.output=new Ut({context:this.context}),this.bits=new Vt({context:this.context,value:u.bits,units:"positive",minValue:1,maxValue:16,param:this._dummyParam,swappable:!0})}static getDefaults(){return Object.assign(ou.getDefaults(),{bits:12})}_audioWorkletName(){return X}onReady(u){fn(this.input,u,this.output);const b=u.parameters.get("bits");this.bits.setParam(b)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.bits.dispose(),this}}class $e extends Vs{constructor(){super(We($e.getDefaults(),arguments,["order"])),this.name="Chebyshev";const u=We($e.getDefaults(),arguments,["order"]);this._shaper=new Rr({context:this.context,length:4096}),this._order=u.order,this.connectEffect(this._shaper),this.order=u.order,this.oversample=u.oversample}static getDefaults(){return Object.assign(Vs.getDefaults(),{order:1,oversample:"none"})}_getCoefficient(u,b,_){return _.has(b)||(b===0?_.set(b,0):b===1?_.set(b,u):_.set(b,2*u*this._getCoefficient(u,b-1,_)-this._getCoefficient(u,b-2,_))),_.get(b)}get order(){return this._order}set order(u){en(Number.isInteger(u),"'order' must be an integer"),this._order=u,this._shaper.setMap(b=>this._getCoefficient(b,u,new Map))}get oversample(){return this._shaper.oversample}set oversample(u){this._shaper.oversample=u}dispose(){return super.dispose(),this._shaper.dispose(),this}}class Fe extends vt{constructor(){super(We(Fe.getDefaults(),arguments,["channels"])),this.name="Split";const u=We(Fe.getDefaults(),arguments,["channels"]);this._splitter=this.input=this.output=this.context.createChannelSplitter(u.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(vt.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class Ke extends vt{constructor(){super(We(Ke.getDefaults(),arguments,["channels"])),this.name="Merge";const u=We(Ke.getDefaults(),arguments,["channels"]);this._merger=this.output=this.input=this.context.createChannelMerger(u.channels)}static getDefaults(){return Object.assign(vt.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class nt extends vt{constructor(u){super(u),this.name="StereoEffect",this.input=new Ut({context:this.context}),this.input.channelCount=2,this.input.channelCountMode="explicit",this._dryWet=this.output=new Ei({context:this.context,fade:u.wet}),this.wet=this._dryWet.fade,this._split=new Fe({context:this.context,channels:2}),this._merge=new Ke({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),cn(this,["wet"])}connectEffectLeft(...u){this._split.connect(u[0],0,0),fn(...u),bn(u[u.length-1],this._merge,0,0)}connectEffectRight(...u){this._split.connect(u[0],1,0),fn(...u),bn(u[u.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(vt.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class dt extends nt{constructor(u){super(u),this.feedback=new Xt({context:this.context,value:u.feedback,units:"normalRange"}),this._feedbackL=new Ut({context:this.context}),this._feedbackR=new Ut({context:this.context}),this._feedbackSplit=new Fe({context:this.context,channels:2}),this._feedbackMerge=new Ke({context:this.context,channels:2}),this._merge.connect(this._feedbackSplit),this._feedbackMerge.connect(this._split),this._feedbackSplit.connect(this._feedbackL,0,0),this._feedbackL.connect(this._feedbackMerge,0,0),this._feedbackSplit.connect(this._feedbackR,1,0),this._feedbackR.connect(this._feedbackMerge,0,1),this.feedback.fan(this._feedbackL.gain,this._feedbackR.gain),cn(this,["feedback"])}static getDefaults(){return Object.assign(nt.getDefaults(),{feedback:.5})}dispose(){return super.dispose(),this.feedback.dispose(),this._feedbackL.dispose(),this._feedbackR.dispose(),this._feedbackSplit.dispose(),this._feedbackMerge.dispose(),this}}class $t extends dt{constructor(){super(We($t.getDefaults(),arguments,["frequency","delayTime","depth"])),this.name="Chorus";const u=We($t.getDefaults(),arguments,["frequency","delayTime","depth"]);this._depth=u.depth,this._delayTime=u.delayTime/1e3,this._lfoL=new or({context:this.context,frequency:u.frequency,min:0,max:1}),this._lfoR=new or({context:this.context,frequency:u.frequency,min:0,max:1,phase:180}),this._delayNodeL=new Bs({context:this.context}),this._delayNodeR=new Bs({context:this.context}),this.frequency=this._lfoL.frequency,cn(this,["frequency"]),this._lfoL.frequency.connect(this._lfoR.frequency),this.connectEffectLeft(this._delayNodeL),this.connectEffectRight(this._delayNodeR),this._lfoL.connect(this._delayNodeL.delayTime),this._lfoR.connect(this._delayNodeR.delayTime),this.depth=this._depth,this.type=u.type,this.spread=u.spread}static getDefaults(){return Object.assign(dt.getDefaults(),{frequency:1.5,delayTime:3.5,depth:.7,type:"sine",spread:180,feedback:0,wet:.5})}get depth(){return this._depth}set depth(u){this._depth=u;const b=this._delayTime*u;this._lfoL.min=Math.max(this._delayTime-b,0),this._lfoL.max=this._delayTime+b,this._lfoR.min=Math.max(this._delayTime-b,0),this._lfoR.max=this._delayTime+b}get delayTime(){return 1e3*this._delayTime}set delayTime(u){this._delayTime=u/1e3,this.depth=this._depth}get type(){return this._lfoL.type}set type(u){this._lfoL.type=u,this._lfoR.type=u}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(u){this._lfoL.phase=90-u/2,this._lfoR.phase=u/2+90}start(u){return this._lfoL.start(u),this._lfoR.start(u),this}stop(u){return this._lfoL.stop(u),this._lfoR.stop(u),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._delayNodeL.dispose(),this._delayNodeR.dispose(),this.frequency.dispose(),this}}class Et extends Vs{constructor(){super(We(Et.getDefaults(),arguments,["distortion"])),this.name="Distortion";const u=We(Et.getDefaults(),arguments,["distortion"]);this._shaper=new Rr({context:this.context,length:4096}),this._distortion=u.distortion,this.connectEffect(this._shaper),this.distortion=u.distortion,this.oversample=u.oversample}static getDefaults(){return Object.assign(Vs.getDefaults(),{distortion:.4,oversample:"none"})}get distortion(){return this._distortion}set distortion(u){this._distortion=u;const b=100*u,_=Math.PI/180;this._shaper.setMap(M=>Math.abs(M)<.001?0:(3+b)*M*20*_/(Math.PI+b*Math.abs(M)))}get oversample(){return this._shaper.oversample}set oversample(u){this._shaper.oversample=u}dispose(){return super.dispose(),this._shaper.dispose(),this}}class qt extends Vs{constructor(u){super(u),this.name="FeedbackEffect",this._feedbackGain=new Ut({context:this.context,gain:u.feedback,units:"normalRange"}),this.feedback=this._feedbackGain.gain,cn(this,"feedback"),this.effectReturn.chain(this._feedbackGain,this.effectSend)}static getDefaults(){return Object.assign(Vs.getDefaults(),{feedback:.125})}dispose(){return super.dispose(),this._feedbackGain.dispose(),this.feedback.dispose(),this}}class mn extends qt{constructor(){super(We(mn.getDefaults(),arguments,["delayTime","feedback"])),this.name="FeedbackDelay";const u=We(mn.getDefaults(),arguments,["delayTime","feedback"]);this._delayNode=new Bs({context:this.context,delayTime:u.delayTime,maxDelay:u.maxDelay}),this.delayTime=this._delayNode.delayTime,this.connectEffect(this._delayNode),cn(this,"delayTime")}static getDefaults(){return Object.assign(qt.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._delayNode.dispose(),this.delayTime.dispose(),this}}class an extends vt{constructor(u){super(u),this.name="PhaseShiftAllpass",this.input=new Ut({context:this.context}),this.output=new Ut({context:this.context}),this.offset90=new Ut({context:this.context}),this._bank0=this._createAllPassFilterBank([.6923878,.9360654322959,.988229522686,.9987488452737]),this._bank1=this._createAllPassFilterBank([.4021921162426,.856171088242,.9722909545651,.9952884791278]),this._oneSampleDelay=this.context.createIIRFilter([0,1],[1,0]),fn(this.input,...this._bank0,this._oneSampleDelay,this.output),fn(this.input,...this._bank1,this.offset90)}_createAllPassFilterBank(u){return u.map(b=>{const _=[[b*b,0,-1],[1,0,-b*b]];return this.context.createIIRFilter(_[0],_[1])})}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.offset90.dispose(),this._bank0.forEach(u=>u.disconnect()),this._bank1.forEach(u=>u.disconnect()),this._oneSampleDelay.disconnect(),this}}class gn extends Vs{constructor(){super(We(gn.getDefaults(),arguments,["frequency"])),this.name="FrequencyShifter";const u=We(gn.getDefaults(),arguments,["frequency"]);this.frequency=new Xt({context:this.context,units:"frequency",value:u.frequency,minValue:-this.context.sampleRate/2,maxValue:this.context.sampleRate/2}),this._sine=new Zi({context:this.context,type:"sine"}),this._cosine=new as({context:this.context,phase:-90,type:"sine"}),this._sineMultiply=new cs({context:this.context}),this._cosineMultiply=new cs({context:this.context}),this._negate=new tu({context:this.context}),this._add=new $i({context:this.context}),this._phaseShifter=new an({context:this.context}),this.effectSend.connect(this._phaseShifter),this.frequency.fan(this._sine.frequency,this._cosine.frequency),this._phaseShifter.offset90.connect(this._cosineMultiply),this._cosine.connect(this._cosineMultiply.factor),this._phaseShifter.connect(this._sineMultiply),this._sine.connect(this._sineMultiply.factor),this._sineMultiply.connect(this._negate),this._cosineMultiply.connect(this._add),this._negate.connect(this._add.addend),this._add.connect(this.effectReturn);const b=this.immediate();this._sine.start(b),this._cosine.start(b)}static getDefaults(){return Object.assign(Vs.getDefaults(),{frequency:0})}dispose(){return super.dispose(),this.frequency.dispose(),this._add.dispose(),this._cosine.dispose(),this._cosineMultiply.dispose(),this._negate.dispose(),this._phaseShifter.dispose(),this._sine.dispose(),this._sineMultiply.dispose(),this}}const En=[1557/44100,1617/44100,1491/44100,1422/44100,1277/44100,1356/44100,1188/44100,1116/44100],On=[225,556,441,341];class Mn extends nt{constructor(){super(We(Mn.getDefaults(),arguments,["roomSize","dampening"])),this.name="Freeverb",this._combFilters=[],this._allpassFiltersL=[],this._allpassFiltersR=[];const u=We(Mn.getDefaults(),arguments,["roomSize","dampening"]);this.roomSize=new Xt({context:this.context,value:u.roomSize,units:"normalRange"}),this._allpassFiltersL=On.map(b=>{const _=this.context.createBiquadFilter();return _.type="allpass",_.frequency.value=b,_}),this._allpassFiltersR=On.map(b=>{const _=this.context.createBiquadFilter();return _.type="allpass",_.frequency.value=b,_}),this._combFilters=En.map((b,_)=>{const M=new ca({context:this.context,dampening:u.dampening,delayTime:b});return _<En.length/2?this.connectEffectLeft(M,...this._allpassFiltersL):this.connectEffectRight(M,...this._allpassFiltersR),this.roomSize.connect(M.resonance),M}),cn(this,["roomSize"])}static getDefaults(){return Object.assign(nt.getDefaults(),{roomSize:.7,dampening:3e3})}get dampening(){return this._combFilters[0].dampening}set dampening(u){this._combFilters.forEach(b=>b.dampening=u)}dispose(){return super.dispose(),this._allpassFiltersL.forEach(u=>u.disconnect()),this._allpassFiltersR.forEach(u=>u.disconnect()),this._combFilters.forEach(u=>u.dispose()),this.roomSize.dispose(),this}}const Zs=[.06748,.06404,.08212,.09004],Pn=[.773,.802,.753,.733],Ts=[347,113,37];class is extends nt{constructor(){super(We(is.getDefaults(),arguments,["roomSize"])),this.name="JCReverb",this._allpassFilters=[],this._feedbackCombFilters=[];const u=We(is.getDefaults(),arguments,["roomSize"]);this.roomSize=new Xt({context:this.context,value:u.roomSize,units:"normalRange"}),this._scaleRoomSize=new Co({context:this.context,min:-.733,max:.197}),this._allpassFilters=Ts.map(b=>{const _=this.context.createBiquadFilter();return _.type="allpass",_.frequency.value=b,_}),this._feedbackCombFilters=Zs.map((b,_)=>{const M=new ia({context:this.context,delayTime:b});return this._scaleRoomSize.connect(M.resonance),M.resonance.value=Pn[_],_<Zs.length/2?this.connectEffectLeft(...this._allpassFilters,M):this.connectEffectRight(...this._allpassFilters,M),M}),this.roomSize.connect(this._scaleRoomSize),cn(this,["roomSize"])}static getDefaults(){return Object.assign(nt.getDefaults(),{roomSize:.5})}dispose(){return super.dispose(),this._allpassFilters.forEach(u=>u.disconnect()),this._feedbackCombFilters.forEach(u=>u.dispose()),this.roomSize.dispose(),this._scaleRoomSize.dispose(),this}}class Gr extends dt{constructor(u){super(u),this._feedbackL.disconnect(),this._feedbackL.connect(this._feedbackMerge,0,1),this._feedbackR.disconnect(),this._feedbackR.connect(this._feedbackMerge,0,0),cn(this,["feedback"])}}class Cr extends Gr{constructor(){super(We(Cr.getDefaults(),arguments,["delayTime","feedback"])),this.name="PingPongDelay";const u=We(Cr.getDefaults(),arguments,["delayTime","feedback"]);this._leftDelay=new Bs({context:this.context,maxDelay:u.maxDelay}),this._rightDelay=new Bs({context:this.context,maxDelay:u.maxDelay}),this._rightPreDelay=new Bs({context:this.context,maxDelay:u.maxDelay}),this.delayTime=new Xt({context:this.context,units:"time",value:u.delayTime}),this.connectEffectLeft(this._leftDelay),this.connectEffectRight(this._rightPreDelay,this._rightDelay),this.delayTime.fan(this._leftDelay.delayTime,this._rightDelay.delayTime,this._rightPreDelay.delayTime),this._feedbackL.disconnect(),this._feedbackL.connect(this._rightDelay),cn(this,["delayTime"])}static getDefaults(){return Object.assign(Gr.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._leftDelay.dispose(),this._rightDelay.dispose(),this._rightPreDelay.dispose(),this.delayTime.dispose(),this}}class fs extends qt{constructor(){super(We(fs.getDefaults(),arguments,["pitch"])),this.name="PitchShift";const u=We(fs.getDefaults(),arguments,["pitch"]);this._frequency=new Xt({context:this.context}),this._delayA=new Bs({maxDelay:1,context:this.context}),this._lfoA=new or({context:this.context,min:0,max:.1,type:"sawtooth"}).connect(this._delayA.delayTime),this._delayB=new Bs({maxDelay:1,context:this.context}),this._lfoB=new or({context:this.context,min:0,max:.1,type:"sawtooth",phase:180}).connect(this._delayB.delayTime),this._crossFade=new Ei({context:this.context}),this._crossFadeLFO=new or({context:this.context,min:0,max:1,type:"triangle",phase:90}).connect(this._crossFade.fade),this._feedbackDelay=new Bs({delayTime:u.delayTime,context:this.context}),this.delayTime=this._feedbackDelay.delayTime,cn(this,"delayTime"),this._pitch=u.pitch,this._windowSize=u.windowSize,this._delayA.connect(this._crossFade.a),this._delayB.connect(this._crossFade.b),this._frequency.fan(this._lfoA.frequency,this._lfoB.frequency,this._crossFadeLFO.frequency),this.effectSend.fan(this._delayA,this._delayB),this._crossFade.chain(this._feedbackDelay,this.effectReturn);const b=this.now();this._lfoA.start(b),this._lfoB.start(b),this._crossFadeLFO.start(b),this.windowSize=this._windowSize}static getDefaults(){return Object.assign(qt.getDefaults(),{pitch:0,windowSize:.1,delayTime:0,feedback:0})}get pitch(){return this._pitch}set pitch(u){this._pitch=u;let b=0;u<0?(this._lfoA.min=0,this._lfoA.max=this._windowSize,this._lfoB.min=0,this._lfoB.max=this._windowSize,b=Se(u-1)+1):(this._lfoA.min=this._windowSize,this._lfoA.max=0,this._lfoB.min=this._windowSize,this._lfoB.max=0,b=Se(u)-1),this._frequency.value=b*(1.2/this._windowSize)}get windowSize(){return this._windowSize}set windowSize(u){this._windowSize=this.toSeconds(u),this.pitch=this._pitch}dispose(){return super.dispose(),this._frequency.dispose(),this._delayA.dispose(),this._delayB.dispose(),this._lfoA.dispose(),this._lfoB.dispose(),this._crossFade.dispose(),this._crossFadeLFO.dispose(),this._feedbackDelay.dispose(),this}}class Os extends nt{constructor(){super(We(Os.getDefaults(),arguments,["frequency","octaves","baseFrequency"])),this.name="Phaser";const u=We(Os.getDefaults(),arguments,["frequency","octaves","baseFrequency"]);this._lfoL=new or({context:this.context,frequency:u.frequency,min:0,max:1}),this._lfoR=new or({context:this.context,frequency:u.frequency,min:0,max:1,phase:180}),this._baseFrequency=this.toFrequency(u.baseFrequency),this._octaves=u.octaves,this.Q=new Xt({context:this.context,value:u.Q,units:"positive"}),this._filtersL=this._makeFilters(u.stages,this._lfoL),this._filtersR=this._makeFilters(u.stages,this._lfoR),this.frequency=this._lfoL.frequency,this.frequency.value=u.frequency,this.connectEffectLeft(...this._filtersL),this.connectEffectRight(...this._filtersR),this._lfoL.frequency.connect(this._lfoR.frequency),this.baseFrequency=u.baseFrequency,this.octaves=u.octaves,this._lfoL.start(),this._lfoR.start(),cn(this,["frequency","Q"])}static getDefaults(){return Object.assign(nt.getDefaults(),{frequency:.5,octaves:3,stages:10,Q:10,baseFrequency:350})}_makeFilters(u,b){const _=[];for(let M=0;M<u;M++){const Y=this.context.createBiquadFilter();Y.type="allpass",this.Q.connect(Y.Q),b.connect(Y.frequency),_.push(Y)}return _}get octaves(){return this._octaves}set octaves(u){this._octaves=u;const b=this._baseFrequency*Math.pow(2,u);this._lfoL.max=b,this._lfoR.max=b}get baseFrequency(){return this._baseFrequency}set baseFrequency(u){this._baseFrequency=this.toFrequency(u),this._lfoL.min=this._baseFrequency,this._lfoR.min=this._baseFrequency,this.octaves=this._octaves}dispose(){return super.dispose(),this.Q.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._filtersL.forEach(u=>u.disconnect()),this._filtersR.forEach(u=>u.disconnect()),this.frequency.dispose(),this}}class uo extends Vs{constructor(){super(We(uo.getDefaults(),arguments,["decay"])),this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve();const u=We(uo.getDefaults(),arguments,["decay"]);this._decay=u.decay,this._preDelay=u.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(Vs.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(u){Ls(u=this.toSeconds(u),.001),this._decay=u,this.generate()}get preDelay(){return this._preDelay}set preDelay(u){Ls(u=this.toSeconds(u),0),this._preDelay=u,this.generate()}generate(){return qn(this,void 0,void 0,function*(){const u=this.ready,b=new E(2,this._decay+this._preDelay,this.context.sampleRate),_=new co({context:b}),M=new co({context:b}),Y=new Ke({context:b});_.connect(Y,0,0),M.connect(Y,0,1);const ae=new Ut({context:b}).toDestination();Y.connect(ae),_.start(0),M.start(0),ae.gain.setValueAtTime(0,0),ae.gain.setValueAtTime(1,this._preDelay),ae.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const de=b.render();return this.ready=de.then(Z),yield u,this._convolver.buffer=(yield de).get(),this})}dispose(){return super.dispose(),this._convolver.disconnect(),this}}class Rs extends vt{constructor(){super(We(Rs.getDefaults(),arguments)),this.name="MidSideSplit",this._split=this.input=new Fe({channels:2,context:this.context}),this._midAdd=new $i({context:this.context}),this.mid=new cs({context:this.context,value:Math.SQRT1_2}),this._sideSubtract=new Ii({context:this.context}),this.side=new cs({context:this.context,value:Math.SQRT1_2}),this._split.connect(this._midAdd,0),this._split.connect(this._midAdd.addend,1),this._split.connect(this._sideSubtract,0),this._split.connect(this._sideSubtract.subtrahend,1),this._midAdd.connect(this.mid),this._sideSubtract.connect(this.side)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midAdd.dispose(),this._sideSubtract.dispose(),this._split.dispose(),this}}class Wr extends vt{constructor(){super(We(Wr.getDefaults(),arguments)),this.name="MidSideMerge",this.mid=new Ut({context:this.context}),this.side=new Ut({context:this.context}),this._left=new $i({context:this.context}),this._leftMult=new cs({context:this.context,value:Math.SQRT1_2}),this._right=new Ii({context:this.context}),this._rightMult=new cs({context:this.context,value:Math.SQRT1_2}),this._merge=this.output=new Ke({context:this.context}),this.mid.fan(this._left),this.side.connect(this._left.addend),this.mid.connect(this._right),this.side.connect(this._right.subtrahend),this._left.connect(this._leftMult),this._right.connect(this._rightMult),this._leftMult.connect(this._merge,0,0),this._rightMult.connect(this._merge,0,1)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._leftMult.dispose(),this._rightMult.dispose(),this._left.dispose(),this._right.dispose(),this}}class $o extends Vs{constructor(u){super(u),this.name="MidSideEffect",this._midSideMerge=new Wr({context:this.context}),this._midSideSplit=new Rs({context:this.context}),this._midSend=this._midSideSplit.mid,this._sideSend=this._midSideSplit.side,this._midReturn=this._midSideMerge.mid,this._sideReturn=this._midSideMerge.side,this.effectSend.connect(this._midSideSplit),this._midSideMerge.connect(this.effectReturn)}connectEffectMid(...u){this._midSend.chain(...u,this._midReturn)}connectEffectSide(...u){this._sideSend.chain(...u,this._sideReturn)}dispose(){return super.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this._midSend.dispose(),this._sideSend.dispose(),this._midReturn.dispose(),this._sideReturn.dispose(),this}}class Pr extends $o{constructor(){super(We(Pr.getDefaults(),arguments,["width"])),this.name="StereoWidener";const u=We(Pr.getDefaults(),arguments,["width"]);this.width=new Xt({context:this.context,value:u.width,units:"normalRange"}),cn(this,["width"]),this._twoTimesWidthMid=new cs({context:this.context,value:2}),this._twoTimesWidthSide=new cs({context:this.context,value:2}),this._midMult=new cs({context:this.context}),this._twoTimesWidthMid.connect(this._midMult.factor),this.connectEffectMid(this._midMult),this._oneMinusWidth=new Ii({context:this.context}),this._oneMinusWidth.connect(this._twoTimesWidthMid),bn(this.context.getConstant(1),this._oneMinusWidth),this.width.connect(this._oneMinusWidth.subtrahend),this._sideMult=new cs({context:this.context}),this.width.connect(this._twoTimesWidthSide),this._twoTimesWidthSide.connect(this._sideMult.factor),this.connectEffectSide(this._sideMult)}static getDefaults(){return Object.assign($o.getDefaults(),{width:.5})}dispose(){return super.dispose(),this.width.dispose(),this._midMult.dispose(),this._sideMult.dispose(),this._twoTimesWidthMid.dispose(),this._twoTimesWidthSide.dispose(),this._oneMinusWidth.dispose(),this}}class $r extends nt{constructor(){super(We($r.getDefaults(),arguments,["frequency","depth"])),this.name="Tremolo";const u=We($r.getDefaults(),arguments,["frequency","depth"]);this._lfoL=new or({context:this.context,type:u.type,min:1,max:0}),this._lfoR=new or({context:this.context,type:u.type,min:1,max:0}),this._amplitudeL=new Ut({context:this.context}),this._amplitudeR=new Ut({context:this.context}),this.frequency=new Xt({context:this.context,value:u.frequency,units:"frequency"}),this.depth=new Xt({context:this.context,value:u.depth,units:"normalRange"}),cn(this,["frequency","depth"]),this.connectEffectLeft(this._amplitudeL),this.connectEffectRight(this._amplitudeR),this._lfoL.connect(this._amplitudeL.gain),this._lfoR.connect(this._amplitudeR.gain),this.frequency.fan(this._lfoL.frequency,this._lfoR.frequency),this.depth.fan(this._lfoR.amplitude,this._lfoL.amplitude),this.spread=u.spread}static getDefaults(){return Object.assign(nt.getDefaults(),{frequency:10,type:"sine",depth:.5,spread:180})}start(u){return this._lfoL.start(u),this._lfoR.start(u),this}stop(u){return this._lfoL.stop(u),this._lfoR.stop(u),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this.context.transport.syncSignal(this.frequency),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this.context.transport.unsyncSignal(this.frequency),this}get type(){return this._lfoL.type}set type(u){this._lfoL.type=u,this._lfoR.type=u}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(u){this._lfoL.phase=90-u/2,this._lfoR.phase=u/2+90}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._amplitudeL.dispose(),this._amplitudeR.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Fr extends Vs{constructor(){super(We(Fr.getDefaults(),arguments,["frequency","depth"])),this.name="Vibrato";const u=We(Fr.getDefaults(),arguments,["frequency","depth"]);this._delayNode=new Bs({context:this.context,delayTime:0,maxDelay:u.maxDelay}),this._lfo=new or({context:this.context,type:u.type,min:0,max:u.maxDelay,frequency:u.frequency,phase:-90}).start().connect(this._delayNode.delayTime),this.frequency=this._lfo.frequency,this.depth=this._lfo.amplitude,this.depth.value=u.depth,cn(this,["frequency","depth"]),this.effectSend.chain(this._delayNode,this.effectReturn)}static getDefaults(){return Object.assign(Vs.getDefaults(),{maxDelay:.005,frequency:5,depth:.1,type:"sine"})}get type(){return this._lfo.type}set type(u){this._lfo.type=u}dispose(){return super.dispose(),this._delayNode.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Gs extends vt{constructor(){super(We(Gs.getDefaults(),arguments,["type","size"])),this.name="Analyser",this._analysers=[],this._buffers=[];const u=We(Gs.getDefaults(),arguments,["type","size"]);this.input=this.output=this._gain=new Ut({context:this.context}),this._split=new Fe({context:this.context,channels:u.channels}),this.input.connect(this._split),Ls(u.channels,1);for(let b=0;b<u.channels;b++)this._analysers[b]=this.context.createAnalyser(),this._split.connect(this._analysers[b],b,0);this.size=u.size,this.type=u.type,this.smoothing=u.smoothing}static getDefaults(){return Object.assign(vt.getDefaults(),{size:1024,smoothing:.8,type:"fft",channels:1})}getValue(){return this._analysers.forEach((u,b)=>{const _=this._buffers[b];this._type==="fft"?u.getFloatFrequencyData(_):this._type==="waveform"&&u.getFloatTimeDomainData(_)}),this.channels===1?this._buffers[0]:this._buffers}get size(){return this._analysers[0].frequencyBinCount}set size(u){this._analysers.forEach((b,_)=>{b.fftSize=2*u,this._buffers[_]=new Float32Array(u)})}get channels(){return this._analysers.length}get type(){return this._type}set type(u){en(u==="waveform"||u==="fft",`Analyser: invalid type: ${u}`),this._type=u}get smoothing(){return this._analysers[0].smoothingTimeConstant}set smoothing(u){this._analysers.forEach(b=>b.smoothingTimeConstant=u)}dispose(){return super.dispose(),this._analysers.forEach(u=>u.disconnect()),this._split.dispose(),this._gain.dispose(),this}}class ks extends vt{constructor(){super(We(ks.getDefaults(),arguments)),this.name="MeterBase",this.input=this.output=this._analyser=new Gs({context:this.context,size:256,type:"waveform"})}dispose(){return super.dispose(),this._analyser.dispose(),this}}class ir extends ks{constructor(){super(We(ir.getDefaults(),arguments,["smoothing"])),this.name="Meter";const u=We(ir.getDefaults(),arguments,["smoothing"]);this.input=this.output=this._analyser=new Gs({context:this.context,size:256,type:"waveform",channels:u.channelCount}),this.smoothing=u.smoothing,this.normalRange=u.normalRange,this._rms=new Array(u.channelCount),this._rms.fill(0)}static getDefaults(){return Object.assign(ks.getDefaults(),{smoothing:.8,normalRange:!1,channelCount:1})}getLevel(){return ei("'getLevel' has been changed to 'getValue'"),this.getValue()}getValue(){const u=this._analyser.getValue(),b=(this.channels===1?[u]:u).map((_,M)=>{const Y=_.reduce((de,xe)=>de+xe*xe,0),ae=Math.sqrt(Y/_.length);return this._rms[M]=Math.max(ae,this._rms[M]*this.smoothing),this.normalRange?this._rms[M]:fe(this._rms[M])});return this.channels===1?b[0]:b}get channels(){return this._analyser.channels}dispose(){return super.dispose(),this._analyser.dispose(),this}}class pr extends ks{constructor(){super(We(pr.getDefaults(),arguments,["size"])),this.name="FFT";const u=We(pr.getDefaults(),arguments,["size"]);this.normalRange=u.normalRange,this._analyser.type="fft",this.size=u.size}static getDefaults(){return Object.assign(vt.getDefaults(),{normalRange:!1,size:1024,smoothing:.8})}getValue(){return this._analyser.getValue().map(u=>this.normalRange?ie(u):u)}get size(){return this._analyser.size}set size(u){this._analyser.size=u}get smoothing(){return this._analyser.smoothing}set smoothing(u){this._analyser.smoothing=u}getFrequencyOfIndex(u){return en(0<=u&&u<this.size,`index must be greater than or equal to 0 and less than ${this.size}`),u*this.context.sampleRate/(2*this.size)}}class lo extends ks{constructor(){super(We(lo.getDefaults(),arguments)),this.name="DCMeter",this._analyser.type="waveform",this._analyser.size=256}getValue(){return this._analyser.getValue()[0]}}class _o extends ks{constructor(){super(We(_o.getDefaults(),arguments,["size"])),this.name="Waveform";const u=We(_o.getDefaults(),arguments,["size"]);this._analyser.type="waveform",this.size=u.size}static getDefaults(){return Object.assign(ks.getDefaults(),{size:1024})}getValue(){return this._analyser.getValue()}get size(){return this._analyser.size}set size(u){this._analyser.size=u}}class Yn extends vt{constructor(){super(We(Yn.getDefaults(),arguments,["solo"])),this.name="Solo";const u=We(Yn.getDefaults(),arguments,["solo"]);this.input=this.output=new Ut({context:this.context}),Yn._allSolos.has(this.context)||Yn._allSolos.set(this.context,new Set),Yn._allSolos.get(this.context).add(this),this.solo=u.solo}static getDefaults(){return Object.assign(vt.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(u){u?this._addSolo():this._removeSolo(),Yn._allSolos.get(this.context).forEach(b=>b._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){Yn._soloed.has(this.context)||Yn._soloed.set(this.context,new Set),Yn._soloed.get(this.context).add(this)}_removeSolo(){Yn._soloed.has(this.context)&&Yn._soloed.get(this.context).delete(this)}_isSoloed(){return Yn._soloed.has(this.context)&&Yn._soloed.get(this.context).has(this)}_noSolos(){return!Yn._soloed.has(this.context)||Yn._soloed.has(this.context)&&Yn._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()||this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),Yn._allSolos.get(this.context).delete(this),this._removeSolo(),this}}Yn._allSolos=new Map,Yn._soloed=new Map;class ho extends vt{constructor(){super(We(ho.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const u=We(ho.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new $({context:this.context,pan:u.pan,channelCount:u.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new wo({context:this.context,volume:u.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=u.mute,cn(this,["pan","volume"])}static getDefaults(){return Object.assign(vt.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(u){this._volume.mute=u}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class ar extends vt{constructor(){super(We(ar.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const u=We(ar.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new Yn({solo:u.solo,context:this.context}),this._panVol=this.output=new ho({context:this.context,pan:u.pan,volume:u.volume,mute:u.mute,channelCount:u.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),cn(this,["pan","volume"])}static getDefaults(){return Object.assign(vt.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(u){this._solo.solo=u}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(u){this._panVol.mute=u}_getBus(u){return ar.buses.has(u)||ar.buses.set(u,new Ut({context:this.context})),ar.buses.get(u)}send(u,b=0){const _=this._getBus(u),M=new Ut({context:this.context,units:"decibels",gain:b});return this.connect(M),M.connect(_),M}receive(u){return this._getBus(u).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}ar.buses=new Map;class Hr extends vt{constructor(){super(We(Hr.getDefaults(),arguments)),this.name="Mono",this.input=new Ut({context:this.context}),this._merge=this.output=new Ke({channels:2,context:this.context}),this.input.connect(this._merge,0,0),this.input.connect(this._merge,0,1)}dispose(){return super.dispose(),this._merge.dispose(),this.input.dispose(),this}}class Kr extends vt{constructor(){super(We(Kr.getDefaults(),arguments,["lowFrequency","highFrequency"])),this.name="MultibandSplit",this.input=new Ut({context:this.context}),this.output=void 0,this.low=new Tr({context:this.context,frequency:0,type:"lowpass"}),this._lowMidFilter=new Tr({context:this.context,frequency:0,type:"highpass"}),this.mid=new Tr({context:this.context,frequency:0,type:"lowpass"}),this.high=new Tr({context:this.context,frequency:0,type:"highpass"}),this._internalChannels=[this.low,this.mid,this.high];const u=We(Kr.getDefaults(),arguments,["lowFrequency","highFrequency"]);this.lowFrequency=new Xt({context:this.context,units:"frequency",value:u.lowFrequency}),this.highFrequency=new Xt({context:this.context,units:"frequency",value:u.highFrequency}),this.Q=new Xt({context:this.context,units:"positive",value:u.Q}),this.input.fan(this.low,this.high),this.input.chain(this._lowMidFilter,this.mid),this.lowFrequency.fan(this.low.frequency,this._lowMidFilter.frequency),this.highFrequency.fan(this.mid.frequency,this.high.frequency),this.Q.connect(this.low.Q),this.Q.connect(this._lowMidFilter.Q),this.Q.connect(this.mid.Q),this.Q.connect(this.high.Q),cn(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(vt.getDefaults(),{Q:1,highFrequency:2500,lowFrequency:400})}dispose(){return super.dispose(),bi(this,["high","mid","low","highFrequency","lowFrequency"]),this.low.dispose(),this._lowMidFilter.dispose(),this.mid.dispose(),this.high.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this.Q.dispose(),this}}class Ni extends vt{constructor(){super(...arguments),this.name="Listener",this.positionX=new Vt({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new Vt({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new Vt({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new Vt({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new Vt({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new Vt({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new Vt({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new Vt({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new Vt({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(vt.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}yi(z=>{z.listener=new Ni({context:z})}),Po(z=>{z.listener.dispose()});class Ai extends vt{constructor(){super(We(Ai.getDefaults(),arguments,["positionX","positionY","positionZ"])),this.name="Panner3D";const u=We(Ai.getDefaults(),arguments,["positionX","positionY","positionZ"]);this._panner=this.input=this.output=this.context.createPanner(),this.panningModel=u.panningModel,this.maxDistance=u.maxDistance,this.distanceModel=u.distanceModel,this.coneOuterGain=u.coneOuterGain,this.coneOuterAngle=u.coneOuterAngle,this.coneInnerAngle=u.coneInnerAngle,this.refDistance=u.refDistance,this.rolloffFactor=u.rolloffFactor,this.positionX=new Vt({context:this.context,param:this._panner.positionX,value:u.positionX}),this.positionY=new Vt({context:this.context,param:this._panner.positionY,value:u.positionY}),this.positionZ=new Vt({context:this.context,param:this._panner.positionZ,value:u.positionZ}),this.orientationX=new Vt({context:this.context,param:this._panner.orientationX,value:u.orientationX}),this.orientationY=new Vt({context:this.context,param:this._panner.orientationY,value:u.orientationY}),this.orientationZ=new Vt({context:this.context,param:this._panner.orientationZ,value:u.orientationZ})}static getDefaults(){return Object.assign(vt.getDefaults(),{coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:0,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1})}setPosition(u,b,_){return this.positionX.value=u,this.positionY.value=b,this.positionZ.value=_,this}setOrientation(u,b,_){return this.orientationX.value=u,this.orientationY.value=b,this.orientationZ.value=_,this}get panningModel(){return this._panner.panningModel}set panningModel(u){this._panner.panningModel=u}get refDistance(){return this._panner.refDistance}set refDistance(u){this._panner.refDistance=u}get rolloffFactor(){return this._panner.rolloffFactor}set rolloffFactor(u){this._panner.rolloffFactor=u}get distanceModel(){return this._panner.distanceModel}set distanceModel(u){this._panner.distanceModel=u}get coneInnerAngle(){return this._panner.coneInnerAngle}set coneInnerAngle(u){this._panner.coneInnerAngle=u}get coneOuterAngle(){return this._panner.coneOuterAngle}set coneOuterAngle(u){this._panner.coneOuterAngle=u}get coneOuterGain(){return this._panner.coneOuterGain}set coneOuterGain(u){this._panner.coneOuterGain=u}get maxDistance(){return this._panner.maxDistance}set maxDistance(u){this._panner.maxDistance=u}dispose(){return super.dispose(),this._panner.disconnect(),this.orientationX.dispose(),this.orientationY.dispose(),this.orientationZ.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this}}class Io extends vt{constructor(){super(We(Io.getDefaults(),arguments)),this.name="Recorder";const u=We(Io.getDefaults(),arguments);this.input=new Ut({context:this.context}),en(Io.supported,"Media Recorder API is not available"),this._stream=this.context.createMediaStreamDestination(),this.input.connect(this._stream),this._recorder=new MediaRecorder(this._stream.stream,{mimeType:u.mimeType})}static getDefaults(){return vt.getDefaults()}get mimeType(){return this._recorder.mimeType}static get supported(){return jr!==null&&Reflect.has(jr,"MediaRecorder")}get state(){return this._recorder.state==="inactive"?"stopped":this._recorder.state==="paused"?"paused":"started"}start(){return qn(this,void 0,void 0,function*(){en(this.state!=="started","Recorder is already started");const u=new Promise(b=>{const _=()=>{this._recorder.removeEventListener("start",_,!1),b()};this._recorder.addEventListener("start",_,!1)});return this._recorder.start(),yield u})}stop(){return qn(this,void 0,void 0,function*(){en(this.state!=="stopped","Recorder is not started");const u=new Promise(b=>{const _=M=>{this._recorder.removeEventListener("dataavailable",_,!1),b(M.data)};this._recorder.addEventListener("dataavailable",_,!1)});return this._recorder.stop(),yield u})}pause(){return en(this.state==="started","Recorder must be started"),this._recorder.pause(),this}dispose(){return super.dispose(),this.input.dispose(),this._stream.disconnect(),this}}class er extends vt{constructor(){super(We(er.getDefaults(),arguments,["threshold","ratio"])),this.name="Compressor",this._compressor=this.context.createDynamicsCompressor(),this.input=this._compressor,this.output=this._compressor;const u=We(er.getDefaults(),arguments,["threshold","ratio"]);this.threshold=new Vt({minValue:this._compressor.threshold.minValue,maxValue:this._compressor.threshold.maxValue,context:this.context,convert:!1,param:this._compressor.threshold,units:"decibels",value:u.threshold}),this.attack=new Vt({minValue:this._compressor.attack.minValue,maxValue:this._compressor.attack.maxValue,context:this.context,param:this._compressor.attack,units:"time",value:u.attack}),this.release=new Vt({minValue:this._compressor.release.minValue,maxValue:this._compressor.release.maxValue,context:this.context,param:this._compressor.release,units:"time",value:u.release}),this.knee=new Vt({minValue:this._compressor.knee.minValue,maxValue:this._compressor.knee.maxValue,context:this.context,convert:!1,param:this._compressor.knee,units:"decibels",value:u.knee}),this.ratio=new Vt({minValue:this._compressor.ratio.minValue,maxValue:this._compressor.ratio.maxValue,context:this.context,convert:!1,param:this._compressor.ratio,units:"positive",value:u.ratio}),cn(this,["knee","release","attack","ratio","threshold"])}static getDefaults(){return Object.assign(vt.getDefaults(),{attack:.003,knee:30,ratio:12,release:.25,threshold:-24})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.disconnect(),this.attack.dispose(),this.release.dispose(),this.threshold.dispose(),this.ratio.dispose(),this.knee.dispose(),this}}class si extends vt{constructor(){super(Object.assign(We(si.getDefaults(),arguments,["threshold","smoothing"]))),this.name="Gate";const u=We(si.getDefaults(),arguments,["threshold","smoothing"]);this._follower=new L({context:this.context,smoothing:u.smoothing}),this._gt=new Ra({context:this.context,value:ie(u.threshold)}),this.input=new Ut({context:this.context}),this._gate=this.output=new Ut({context:this.context}),this.input.connect(this._gate),this.input.chain(this._follower,this._gt,this._gate.gain)}static getDefaults(){return Object.assign(vt.getDefaults(),{smoothing:.1,threshold:-40})}get threshold(){return fe(this._gt.value)}set threshold(u){this._gt.value=ie(u)}get smoothing(){return this._follower.smoothing}set smoothing(u){this._follower.smoothing=u}dispose(){return super.dispose(),this.input.dispose(),this._follower.dispose(),this._gt.dispose(),this._gate.dispose(),this}}class Oi extends vt{constructor(){super(Object.assign(We(Oi.getDefaults(),arguments,["threshold"]))),this.name="Limiter";const u=We(Oi.getDefaults(),arguments,["threshold"]);this._compressor=this.input=this.output=new er({context:this.context,ratio:20,attack:.003,release:.01,threshold:u.threshold}),this.threshold=this._compressor.threshold,cn(this,"threshold")}static getDefaults(){return Object.assign(vt.getDefaults(),{threshold:-12})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.dispose(),this.threshold.dispose(),this}}class _c extends vt{constructor(){super(Object.assign(We(_c.getDefaults(),arguments))),this.name="MidSideCompressor";const u=We(_c.getDefaults(),arguments);this._midSideSplit=this.input=new Rs({context:this.context}),this._midSideMerge=this.output=new Wr({context:this.context}),this.mid=new er(Object.assign(u.mid,{context:this.context})),this.side=new er(Object.assign(u.side,{context:this.context})),this._midSideSplit.mid.chain(this.mid,this._midSideMerge.mid),this._midSideSplit.side.chain(this.side,this._midSideMerge.side),cn(this,["mid","side"])}static getDefaults(){return Object.assign(vt.getDefaults(),{mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},side:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10}})}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this}}class Ic extends vt{constructor(){super(Object.assign(We(Ic.getDefaults(),arguments))),this.name="MultibandCompressor";const u=We(Ic.getDefaults(),arguments);this._splitter=this.input=new Kr({context:this.context,lowFrequency:u.lowFrequency,highFrequency:u.highFrequency}),this.lowFrequency=this._splitter.lowFrequency,this.highFrequency=this._splitter.highFrequency,this.output=new Ut({context:this.context}),this.low=new er(Object.assign(u.low,{context:this.context})),this.mid=new er(Object.assign(u.mid,{context:this.context})),this.high=new er(Object.assign(u.high,{context:this.context})),this._splitter.low.chain(this.low,this.output),this._splitter.mid.chain(this.mid,this.output),this._splitter.high.chain(this.high,this.output),cn(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(vt.getDefaults(),{lowFrequency:250,highFrequency:2e3,low:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10},mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},high:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16}})}dispose(){return super.dispose(),this._splitter.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.output.dispose(),this}}class da extends vt{constructor(){super(We(da.getDefaults(),arguments,["low","mid","high"])),this.name="EQ3",this.output=new Ut({context:this.context}),this._internalChannels=[];const u=We(da.getDefaults(),arguments,["low","mid","high"]);this.input=this._multibandSplit=new Kr({context:this.context,highFrequency:u.highFrequency,lowFrequency:u.lowFrequency}),this._lowGain=new Ut({context:this.context,gain:u.low,units:"decibels"}),this._midGain=new Ut({context:this.context,gain:u.mid,units:"decibels"}),this._highGain=new Ut({context:this.context,gain:u.high,units:"decibels"}),this.low=this._lowGain.gain,this.mid=this._midGain.gain,this.high=this._highGain.gain,this.Q=this._multibandSplit.Q,this.lowFrequency=this._multibandSplit.lowFrequency,this.highFrequency=this._multibandSplit.highFrequency,this._multibandSplit.low.chain(this._lowGain,this.output),this._multibandSplit.mid.chain(this._midGain,this.output),this._multibandSplit.high.chain(this._highGain,this.output),cn(this,["low","mid","high","lowFrequency","highFrequency"]),this._internalChannels=[this._multibandSplit]}static getDefaults(){return Object.assign(vt.getDefaults(),{high:0,highFrequency:2500,low:0,lowFrequency:400,mid:0})}dispose(){return super.dispose(),bi(this,["low","mid","high","lowFrequency","highFrequency"]),this._multibandSplit.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this._lowGain.dispose(),this._midGain.dispose(),this._highGain.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.Q.dispose(),this}}class pa extends vt{constructor(){super(We(pa.getDefaults(),arguments,["url","onload"])),this.name="Convolver",this._convolver=this.context.createConvolver();const u=We(pa.getDefaults(),arguments,["url","onload"]);this._buffer=new v(u.url,b=>{this.buffer=b,u.onload()}),this.input=new Ut({context:this.context}),this.output=new Ut({context:this.context}),this._buffer.loaded&&(this.buffer=this._buffer),this.normalize=u.normalize,this.input.chain(this._convolver,this.output)}static getDefaults(){return Object.assign(vt.getDefaults(),{normalize:!0,onload:Z})}load(u){return qn(this,void 0,void 0,function*(){this.buffer=yield this._buffer.load(u)})}get buffer(){return this._buffer.length?this._buffer:null}set buffer(u){u&&this._buffer.set(u),this._convolver.buffer&&(this.input.disconnect(),this._convolver.disconnect(),this._convolver=this.context.createConvolver(),this.input.chain(this._convolver,this.output));const b=this._buffer.get();this._convolver.buffer=b||null}get normalize(){return this._convolver.normalize}set normalize(u){this._convolver.normalize=u}dispose(){return super.dispose(),this._buffer.dispose(),this._convolver.disconnect(),this}}function iu(){return W().now()}function Mu(){return W().immediate()}const Lu=W().transport;function zu(){return W().transport}const Bu=W().destination,Vu=W().destination;function qu(){return W().destination}const ju=W().listener;function Uu(){return W().listener}const Gu=W().draw;function Wu(){return W().draw}const Hu=W();function Ku(){return v.loaded()}const Xu=v,Yu=Yi,Qu=zo})(),o})())}(Tone$1)),Tone$1.exports}var hasRequiredEs6;function requireEs6(){return hasRequiredEs6||(hasRequiredEs6=1,function(module,exports){(function(n,e){module.exports=e(require$$0,requireTone())})(self,function(__WEBPACK_EXTERNAL_MODULE__2__,__WEBPACK_EXTERNAL_MODULE__9__){return function(n){var e={};function t(s){if(e[s])return e[s].exports;var r=e[s]={i:s,l:!1,exports:{}};return n[s].call(r.exports,r,r.exports,t),r.l=!0,r.exports}return t.m=n,t.c=e,t.d=function(s,r,o){t.o(s,r)||Object.defineProperty(s,r,{enumerable:!0,get:o})},t.r=function(s){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(s,"__esModule",{value:!0})},t.t=function(s,r){if(1&r&&(s=t(s)),8&r||4&r&&typeof s=="object"&&s&&s.__esModule)return s;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:s}),2&r&&typeof s!="string")for(var i in s)t.d(o,i,(function(c){return s[c]}).bind(null,i));return o},t.n=function(s){var r=s&&s.__esModule?function(){return s.default}:function(){return s};return t.d(r,"a",r),r},t.o=function(s,r){return Object.prototype.hasOwnProperty.call(s,r)},t.p="",t(t.s=190)}([function(n,e,t){t.d(e,"T",function(){return we.b}),t.d(e,"Fb",function(){return ft.a}),t.d(e,"Kb",function(){return ft.b}),t.d(e,"W",function(){return Ct}),t.d(e,"Y",function(){return sn}),t.d(e,"Z",function(){return Le}),t.d(e,"ab",function(){return H}),t.d(e,"bb",function(){return Hn}),t.d(e,"cb",function(){return ns}),t.d(e,"db",function(){return qo}),t.d(e,"eb",function(){return po}),t.d(e,"hb",function(){return kn}),t.d(e,"mb",function(){return Jn}),t.d(e,"nb",function(){return Qr}),t.d(e,"ob",function(){return jo}),t.d(e,"pb",function(){return Ot}),t.d(e,"rb",function(){return Pi}),t.d(e,"sb",function(){return Jr}),t.d(e,"tb",function(){return Li}),t.d(e,"ub",function(){return Uo}),t.d(e,"xb",function(){return Ge}),t.d(e,"yb",function(){return xn}),t.d(e,"zb",function(){return xs}),t.d(e,"Bb",function(){return zi}),t.d(e,"Cb",function(){return Zr}),t.d(e,"Db",function(){return ls}),t.d(e,"Eb",function(){return Kt}),t.d(e,"Gb",function(){return In.a}),t.d(e,"Ib",function(){return eo}),t.d(e,"Mb",function(){return lr}),t.d(e,"Nb",function(){return ms}),t.d(e,"Ob",function(){return Dn}),t.d(e,"Jb",function(){return ss}),t.d(e,"ib",function(){return Va}),t.d(e,"Hb",function(){return va}),t.d(e,"gb",function(){return qa}),t.d(e,"vb",function(){return _n}),t.d(e,"wb",function(){return Ui.e}),t.d(e,"jb",function(){return l.b}),t.d(e,"qb",function(){return Nc.a}),t.d(e,"kb",function(){return s}),t.d(e,"Lb",function(){return br}),t.d(e,"X",function(){return i}),t.d(e,"Ab",function(){return r}),t.d(e,"fb",function(){return nr}),t.d(e,"lb",function(){return c}),t.d(e,"w",function(){return mi.b}),t.d(e,"k",function(){return mi.a}),t.d(e,"a",function(){return pe.a}),t.d(e,"b",function(){return pe.d}),t.d(e,"c",function(){return pe.m}),t.d(e,"d",function(){return pe.o}),t.d(e,"e",function(){return pe.r}),t.d(e,"f",function(){return pe.v}),t.d(e,"g",function(){return pe.w}),t.d(e,"h",function(){return pe.y}),t.d(e,"i",function(){return pe.z}),t.d(e,"j",function(){return pe.G}),t.d(e,"l",function(){return pe.R}),t.d(e,"m",function(){return pe.W}),t.d(e,"n",function(){return pe.X}),t.d(e,"o",function(){return pe.Y}),t.d(e,"p",function(){return pe.ab}),t.d(e,"q",function(){return pe.bb}),t.d(e,"s",function(){return pe.eb}),t.d(e,"u",function(){return pe.jb}),t.d(e,"t",function(){return pe.ib}),t.d(e,"v",function(){return pe.kb}),t.d(e,"x",function(){return pe.sb}),t.d(e,"y",function(){return pe.yb}),t.d(e,"z",function(){return pe.zb}),t.d(e,"A",function(){return pe.Cb}),t.d(e,"B",function(){return pe.Db}),t.d(e,"C",function(){return pe.Fb}),t.d(e,"D",function(){return pe.Ib}),t.d(e,"E",function(){return pe.Kb}),t.d(e,"I",function(){return pe.Pb}),t.d(e,"F",function(){return pe.Mb}),t.d(e,"G",function(){return pe.Nb}),t.d(e,"H",function(){return pe.Ob}),t.d(e,"J",function(){return pe.Xb}),t.d(e,"K",function(){return pe.bc}),t.d(e,"M",function(){return pe.jc}),t.d(e,"O",function(){return pe.qc}),t.d(e,"N",function(){return pe.oc}),t.d(e,"Q",function(){return pe.xc}),t.d(e,"P",function(){return pe.wc}),t.d(e,"R",function(){return pe.Ac}),t.d(e,"S",function(){return pe.Cc}),t.d(e,"U",function(){return pe.Gc}),t.d(e,"V",function(){return pe.Hc}),t.d(e,"r",function(){return pe.db}),t.d(e,"L",function(){return pe.hc});var s={};t.r(s),t.d(s,"copyModel",function(){return Ne}),t.d(s,"listModels",function(){return Te}),t.d(s,"moveModel",function(){return Re}),t.d(s,"removeModel",function(){return Ce}),t.d(s,"browserFiles",function(){return ze}),t.d(s,"browserHTTPRequest",function(){return tn}),t.d(s,"concatenateArrayBuffers",function(){return d.d}),t.d(s,"decodeWeights",function(){return d.e}),t.d(s,"encodeWeights",function(){return d.f}),t.d(s,"fromMemory",function(){return An}),t.d(s,"getLoadHandlers",function(){return g}),t.d(s,"getModelArtifactsInfoForJSON",function(){return d.g}),t.d(s,"getSaveHandlers",function(){return h}),t.d(s,"http",function(){return Pt}),t.d(s,"isHTTPScheme",function(){return Tt}),t.d(s,"loadWeights",function(){return pt}),t.d(s,"registerLoadRouter",function(){return m}),t.d(s,"registerSaveRouter",function(){return y}),t.d(s,"weightsLoaderFactory",function(){return gt}),t.d(s,"withSaveHandler",function(){return zn});var r={};t.r(r),t.d(r,"assertParamsValid",function(){return Kn}),t.d(r,"maskToAxes",function(){return Qn}),t.d(r,"computeOutShape",function(){return $s}),t.d(r,"stridesWithElidedDims",function(){return Ps}),t.d(r,"getNormalizedAxes",function(){return gr}),t.d(r,"startIndicesWithElidedDims",function(){return qs}),t.d(r,"stopIndicesWithElidedDims",function(){return yr}),t.d(r,"stridesForAxis",function(){return Mr}),t.d(r,"startForAxis",function(){return ts}),t.d(r,"stopForAxis",function(){return Gn}),t.d(r,"isSliceContinous",function(){return _r}),t.d(r,"computeFlatOffset",function(){return Ws}),t.d(r,"parseSliceParams",function(){return cr});var o={};t.r(o),t.d(o,"segOpComputeOptimalWindowSize",function(){return Uc}),t.d(o,"computeOutShape",function(){return ic}),t.d(o,"collectGatherOpShapeInfo",function(){return Ca});var i={};t.r(i),t.d(i,"axesAreInnerMostDims",function(){return Hs}),t.d(i,"combineLocations",function(){return Ri}),t.d(i,"computeOutAndReduceShapes",function(){return Di}),t.d(i,"expandShapeToKeepDim",function(){return Ks}),t.d(i,"assertAxesAreInnerMostDims",function(){return _s}),t.d(i,"getAxesPermutation",function(){return tr}),t.d(i,"getUndoAxesPermutation",function(){return Xs}),t.d(i,"getInnerMostAxes",function(){return ur}),t.d(i,"getBroadcastDims",function(){return Lr}),t.d(i,"getReductionAxes",function(){return hs}),t.d(i,"assertAndGetBroadcastShape",function(){return Wn}),t.d(i,"assertParamsConsistent",function(){return hn}),t.d(i,"computeOutShape",function(){return Jt}),t.d(i,"computeDilation2DInfo",function(){return me}),t.d(i,"computePool2DInfo",function(){return Ie}),t.d(i,"computePool3DInfo",function(){return Pe}),t.d(i,"computeConv2DInfo",function(){return Ye}),t.d(i,"computeConv3DInfo",function(){return yt}),t.d(i,"computeDefaultPad",function(){return _t}),t.d(i,"tupleValuesAreOne",function(){return Ht}),t.d(i,"eitherStridesOrDilationsAreOne",function(){return Gt}),t.d(i,"convertConv2DDataFormat",function(){return Tn}),t.d(i,"getFusedDyActivation",function(){return fi}),t.d(i,"getFusedBiasGradient",function(){return Ac}),t.d(i,"applyActivation",function(){return so}),t.d(i,"shouldFuse",function(){return Oc}),t.d(i,"PARALLELIZE_THRESHOLD",function(){return bo}),t.d(i,"computeOptimalWindowSize",function(){return Ka}),t.d(i,"slice_util",function(){return r}),t.d(i,"upcastType",function(){return ft.b}),t.d(i,"getImageCenter",function(){return Zo}),t.d(i,"getReshaped",function(){return Ao}),t.d(i,"getPermuted",function(){return Xa}),t.d(i,"getReshapedPermuted",function(){return Rc}),t.d(i,"getSliceBeginCoords",function(){return Dc}),t.d(i,"getSliceSize",function(){return Pc}),t.d(i,"prepareAndValidate",function(){return Ya}),t.d(i,"validateUpdateShape",function(){return Qa}),t.d(i,"validateInput",function(){return Fc}),t.d(i,"calculateShapes",function(){return Mc}),t.d(i,"SELU_SCALEALPHA",function(){return Ja}),t.d(i,"SELU_SCALE",function(){return Za}),t.d(i,"ERF_P",function(){return ec}),t.d(i,"ERF_A1",function(){return Sa}),t.d(i,"ERF_A2",function(){return Ta}),t.d(i,"ERF_A3",function(){return tc}),t.d(i,"ERF_A4",function(){return Lc}),t.d(i,"ERF_A5",function(){return nc}),t.d(i,"warn",function(){return sc}),t.d(i,"log",function(){return Gi}),t.d(i,"mergeRealAndImagArrays",function(){return rc}),t.d(i,"splitRealAndImagArrays",function(){return zc}),t.d(i,"complexWithEvenIndex",function(){return ro}),t.d(i,"complexWithOddIndex",function(){return Bc}),t.d(i,"getComplexWithIndex",function(){return Vc}),t.d(i,"assignToTypedArray",function(){return oc}),t.d(i,"exponents",function(){return qc}),t.d(i,"exponent",function(){return jc}),t.d(i,"prepareSplitSize",function(){return Vn}),t.d(i,"segment_util",function(){return o}),t.d(i,"castTensor",function(){return Gc}),t.d(i,"reshapeTensor",function(){return Wc}),t.d(i,"linspaceImpl",function(){return Hc});var c={};t.r(c),t.d(c,"nonMaxSuppressionV3Impl",function(){return kr}),t.d(c,"nonMaxSuppressionV4Impl",function(){return La}),t.d(c,"nonMaxSuppressionV5Impl",function(){return ui}),t.d(c,"split",function(){return wn}),t.d(c,"tile",function(){return ac}),t.d(c,"topkImpl",function(){return Ns}),t.d(c,"whereImpl",function(){return oo});var a=t(6),l=(t(38),t(11)),d=t(17);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class f{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return f.instance==null&&(f.instance=new f),f.instance}static registerSaveRouter(C){f.getInstance().saveRouters.push(C)}static registerLoadRouter(C){f.getInstance().loadRouters.push(C)}static getSaveHandlers(C){return f.getHandlers(C,"save")}static getLoadHandlers(C,$){return f.getHandlers(C,"load",$)}static getHandlers(C,$,k){const L=[];return($==="load"?f.getInstance().loadRouters:f.getInstance().saveRouters).forEach(q=>{const X=q(C,k);X!==null&&L.push(X)}),L}}const y=S=>f.registerSaveRouter(S),m=S=>f.registerLoadRouter(S),h=S=>f.getSaveHandlers(S),g=(S,C)=>f.getLoadHandlers(S,C);function x(){if(!Object(l.b)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const S=typeof window>"u"?self:window,C=S.indexedDB||S.mozIndexedDB||S.webkitIndexedDB||S.msIndexedDB||S.shimIndexedDB;if(C==null)throw new Error("The current browser does not appear to support IndexedDB.");return C}function w(S){const C=S.result;C.createObjectStore("models_store",{keyPath:"modelPath"}),C.createObjectStore("model_info_store",{keyPath:"modelPath"})}class I{constructor(C){if(this.indexedDB=x(),C==null||!C)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=C}async save(C){if(C.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,C)}async load(){return this.databaseAction(this.modelPath)}databaseAction(C,$){return new Promise((k,L)=>{const q=this.indexedDB.open("tensorflowjs",1);q.onupgradeneeded=()=>w(q),q.onsuccess=()=>{const X=q.result;if($==null){const se=X.transaction("models_store","readonly"),be=se.objectStore("models_store").get(this.modelPath);be.onsuccess=()=>{if(be.result==null)return X.close(),L(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));k(be.result.modelArtifacts)},be.onerror=$e=>(X.close(),L(be.error)),se.oncomplete=()=>X.close()}else{const se=Object(d.g)($),be=X.transaction("model_info_store","readwrite");let $e=be.objectStore("model_info_store");const Fe=$e.put({modelPath:this.modelPath,modelArtifactsInfo:se});let Ke;Fe.onsuccess=()=>{Ke=X.transaction("models_store","readwrite");const nt=Ke.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:$,modelArtifactsInfo:se});nt.onsuccess=()=>k({modelArtifactsInfo:se}),nt.onerror=dt=>{$e=be.objectStore("model_info_store");const $t=$e.delete(this.modelPath);$t.onsuccess=()=>(X.close(),L(nt.error)),$t.onerror=Et=>(X.close(),L(nt.error))}},Fe.onerror=nt=>(X.close(),L(Fe.error)),be.oncomplete=()=>{Ke==null?X.close():Ke.oncomplete=()=>X.close()}}},q.onerror=X=>L(q.error)})}}I.URL_SCHEME="indexeddb://";const N=S=>{return Object(l.b)().getBool("IS_BROWSER")&&!Array.isArray(S)&&S.startsWith(I.URL_SCHEME)?(C=S.slice(I.URL_SCHEME.length),new I(C)):null;var C};f.registerSaveRouter(N),f.registerLoadRouter(N);class A{constructor(){this.indexedDB=x()}async listModels(){return new Promise((C,$)=>{const k=this.indexedDB.open("tensorflowjs",1);k.onupgradeneeded=()=>w(k),k.onsuccess=()=>{const L=k.result,q=L.transaction("model_info_store","readonly"),X=q.objectStore("model_info_store").getAll();X.onsuccess=()=>{const se={};for(const be of X.result)se[be.modelPath]=be.modelArtifactsInfo;C(se)},X.onerror=se=>(L.close(),$(X.error)),q.oncomplete=()=>L.close()},k.onerror=L=>$(k.error)})}async removeModel(C){var $;return C=($=C).startsWith(I.URL_SCHEME)?$.slice(I.URL_SCHEME.length):$,new Promise((k,L)=>{const q=this.indexedDB.open("tensorflowjs",1);q.onupgradeneeded=()=>w(q),q.onsuccess=()=>{const X=q.result,se=X.transaction("model_info_store","readwrite"),be=se.objectStore("model_info_store"),$e=be.get(C);let Fe;$e.onsuccess=()=>{if($e.result==null)return X.close(),L(new Error(`Cannot find model with path '${C}' in IndexedDB.`));{const Ke=be.delete(C),nt=()=>{Fe=X.transaction("models_store","readwrite");const dt=Fe.objectStore("models_store").delete(C);dt.onsuccess=()=>k($e.result.modelArtifactsInfo),dt.onerror=$t=>L($e.error)};Ke.onsuccess=nt,Ke.onerror=dt=>(nt(),X.close(),L($e.error))}},$e.onerror=Ke=>(X.close(),L($e.error)),se.oncomplete=()=>{Fe==null?X.close():Fe.oncomplete=()=>X.close()}},q.onerror=X=>L(q.error)})}}var T=t(16);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P="tensorflowjs_models",O="info",F="model_topology",G="weight_specs",U="weight_data",Q="model_metadata";function ne(S){return{info:[P,S,O].join("/"),topology:[P,S,F].join("/"),weightSpecs:[P,S,G].join("/"),weightData:[P,S,U].join("/"),modelMetadata:[P,S,Q].join("/")}}function J(S){const C=S.split("/");if(C.length<3)throw new Error("Invalid key format: "+S);return C.slice(1,C.length-1).join("/")}class oe{constructor(C){if(!Object(l.b)().getBool("IS_BROWSER")||typeof window>"u"||window.localStorage===void 0)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,C==null||!C)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=C,this.keys=ne(this.modelPath)}async save(C){if(C.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const $=JSON.stringify(C.modelTopology),k=JSON.stringify(C.weightSpecs),L=Object(d.g)(C);try{return this.LS.setItem(this.keys.info,JSON.stringify(L)),this.LS.setItem(this.keys.topology,$),this.LS.setItem(this.keys.weightSpecs,k),this.LS.setItem(this.keys.weightData,Object(d.a)(C.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:C.format,generatedBy:C.generatedBy,convertedBy:C.convertedBy,userDefinedMetadata:C.userDefinedMetadata})),{modelArtifactsInfo:L}}catch{throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${L.modelTopologyBytes}, weightSpecsBytes=${L.weightSpecsBytes}, weightDataBytes=${L.weightDataBytes}.`)}}}async load(){const C=JSON.parse(this.LS.getItem(this.keys.info));if(C==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(C.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const $={},k=JSON.parse(this.LS.getItem(this.keys.topology));if(k==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);$.modelTopology=k;const L=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(L==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);$.weightSpecs=L;const q=this.LS.getItem(this.keys.modelMetadata);if(q!=null){const se=JSON.parse(q);$.format=se.format,$.generatedBy=se.generatedBy,$.convertedBy=se.convertedBy,$.userDefinedMetadata=se.userDefinedMetadata}const X=this.LS.getItem(this.keys.weightData);if(X==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return $.weightData=Object(d.b)(X),$}}oe.URL_SCHEME="localstorage://";const le=S=>{return Object(l.b)().getBool("IS_BROWSER")&&!Array.isArray(S)&&S.startsWith(oe.URL_SCHEME)?(C=S.slice(oe.URL_SCHEME.length),new oe(C)):null;var C};f.registerSaveRouter(le),f.registerLoadRouter(le);class ge{constructor(){Object(T.b)(Object(l.b)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(T.b)(typeof window>"u"||window.localStorage!==void 0,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const C={},$=P+"/",k="/"+O;for(let L=0;L<this.LS.length;++L){const q=this.LS.key(L);q.startsWith($)&&q.endsWith(k)&&(C[J(q)]=JSON.parse(this.LS.getItem(q)))}return C}async removeModel(C){var $;const k=ne(C=($=C).startsWith(oe.URL_SCHEME)?$.slice(oe.URL_SCHEME.length):$);if(this.LS.getItem(k.info)==null)throw new Error(`Cannot find model at path '${C}'`);const L=JSON.parse(this.LS.getItem(k.info));return this.LS.removeItem(k.info),this.LS.removeItem(k.topology),this.LS.removeItem(k.weightSpecs),this.LS.removeItem(k.weightData),L}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class te{constructor(){this.managers={}}static getInstance(){return te.instance==null&&(te.instance=new te),te.instance}static registerManager(C,$){Object(T.b)(C!=null,()=>"scheme must not be undefined or null."),C.endsWith("://")&&(C=C.slice(0,C.indexOf("://"))),Object(T.b)(C.length>0,()=>"scheme must not be an empty string.");const k=te.getInstance();Object(T.b)(k.managers[C]==null,()=>`A model store manager is already registered for scheme '${C}'.`),k.managers[C]=$}static getManager(C){const $=this.getInstance().managers[C];if($==null)throw new Error(`Cannot find model manager for scheme '${C}'`);return $}static getSchemes(){return Object.keys(this.getInstance().managers)}}function ce(S){if(S.indexOf("://")===-1)throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+te.getSchemes().join(","));return{scheme:S.split("://")[0],path:S.split("://")[1]}}async function ue(S,C,$=!1){Object(T.b)(S!==C,()=>`Old path and new path are the same: '${S}'`);const k=f.getLoadHandlers(S);Object(T.b)(k.length>0,()=>`Copying failed because no load handler is found for source URL ${S}.`),Object(T.b)(k.length<2,()=>`Copying failed because more than one (${k.length}) load handlers for source URL ${S}.`);const L=k[0],q=f.getSaveHandlers(C);Object(T.b)(q.length>0,()=>`Copying failed because no save handler is found for destination URL ${C}.`),Object(T.b)(q.length<2,()=>`Copying failed because more than one (${k.length}) save handlers for destination URL ${C}.`);const X=q[0],se=ce(S).scheme,be=ce(S).path,$e=se===ce(S).scheme,Fe=await L.load();$&&$e&&await te.getManager(se).removeModel(be);const Ke=await X.save(Fe);return $&&!$e&&await te.getManager(se).removeModel(be),Ke.modelArtifactsInfo}async function Te(){const S=te.getSchemes(),C={};for(const $ of S){const k=await te.getManager($).listModels();for(const L in k)C[$+"://"+L]=k[L]}return C}async function Ce(S){const C=ce(S);return te.getManager(C.scheme).removeModel(C.path)}async function Ne(S,C){return ue(S,C,!1)}async function Re(S,C){return ue(S,C,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ae{fetch(C,$){return fetch(C,$)}now(){return performance.now()}encode(C,$){if($!=="utf-8"&&$!=="utf8")throw new Error("Browser's encoder only supports utf-8, but got "+$);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(C)}decode(C,$){return new TextDecoder($).decode(C)}}if(Object(l.b)().get("IS_BROWSER")){Object(l.b)().setPlatform("browser",new Ae);try{te.registerManager(oe.URL_SCHEME,new ge)}catch{}try{te.registerManager(I.URL_SCHEME,new A)}catch{}}t(159);var we=t(5);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Le(S,C="float32",$){return C=C||"float32",T.c(S),new we.b(S,C,$)}var pe=t(1),B=t(3),D=t(4);const H=Object(D.a)({cast_:function(S,C){const $=Object(B.a)(S,"x","cast");if(!T.B(C))throw new Error("Failed to cast to unknown dtype "+C);if(C==="string"&&$.dtype!=="string"||C!=="string"&&$.dtype==="string")throw new Error("Only strings can be casted to strings");const k={x:$},L={dtype:C};return a.a.runKernelFunc(q=>q.cast($,C),k,null,pe.v,L)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const he=Object(D.a)({clone_:function(S){const C=Object(B.a)(S,"x","clone",null),$={x:C};return a.a.runKernelFunc(()=>a.a.makeTensorFromDataId(C.dataId,C.shape,C.dtype),$,null,pe.jb)}});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(a.b)();const j={buffer:Le,cast:H,clone:he,print:function(S,C=!1){console.log(S.toString(C))}};Object(we.e)(j);function ee(S){return new Promise(C=>setTimeout(C)).then(S)}class ye{constructor(C){if(!Object(l.b)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");C.startsWith(ye.URL_SCHEME)&&(C=C.slice(ye.URL_SCHEME.length)),C!=null&&C.length!==0||(C="model"),this.modelTopologyFileName=C+".json",this.weightDataFileName=C+".weights.bin"}async save(C){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const $=window.URL.createObjectURL(new Blob([C.weightData],{type:"application/octet-stream"}));if(C.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const k=[{paths:["./"+this.weightDataFileName],weights:C.weightSpecs}],L={modelTopology:C.modelTopology,format:C.format,generatedBy:C.generatedBy,convertedBy:C.convertedBy,weightsManifest:k},q=window.URL.createObjectURL(new Blob([JSON.stringify(L)],{type:"application/json"})),X=this.jsonAnchor==null?document.createElement("a"):this.jsonAnchor;if(X.download=this.modelTopologyFileName,X.href=q,await ee(()=>X.dispatchEvent(new MouseEvent("click"))),C.weightData!=null){const se=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;se.download=this.weightDataFileName,se.href=$,await ee(()=>se.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(d.g)(C)}}}}ye.URL_SCHEME="downloads://";class Oe{constructor(C){if(C==null||C.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+C);this.files=C}async load(){const C=this.files[0],$=this.files.slice(1);return new Promise((k,L)=>{const q=new FileReader;q.onload=X=>{const se=JSON.parse(X.target.result),be=se.modelTopology;if(be==null)return void L(new Error("modelTopology field is missing from file "+C.name));$.length===0&&k({modelTopology:be});const $e=se.weightsManifest;if($e==null)return void L(new Error("weightManifest field is missing from file "+C.name));let Fe;try{Fe=this.checkManifestAndWeightFiles($e,$)}catch($t){return void L($t)}const Ke=[],nt=[],dt=[];$e.forEach($t=>{$t.paths.forEach(Et=>{nt.push(Et),dt.push(null)}),Ke.push(...$t.weights)}),$e.forEach($t=>{$t.paths.forEach(Et=>{const qt=new FileReader;qt.onload=mn=>{const an=mn.target.result,gn=nt.indexOf(Et);dt[gn]=an,dt.indexOf(null)===-1&&k({modelTopology:be,weightSpecs:Ke,weightData:Object(d.d)(dt),format:se.format,generatedBy:se.generatedBy,convertedBy:se.convertedBy,userDefinedMetadata:se.userDefinedMetadata})},qt.onerror=mn=>L(`Failed to weights data from file of path '${Et}'.`),qt.readAsArrayBuffer(Fe[Et])})})},q.onerror=X=>L(`Failed to read model topology and weights manifest JSON from file '${C.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),q.readAsText(C)})}checkManifestAndWeightFiles(C,$){const k=[],L=$.map(X=>Object(d.c)(X.name)),q={};for(const X of C)X.paths.forEach(se=>{const be=Object(d.c)(se);if(k.indexOf(be)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${be}'`);if(k.push(be),L.indexOf(be)===-1)throw new Error(`Weight file with basename '${be}' is not provided.`);q[se]=$[L.indexOf(be)]});if(k.length!==$.length)throw new Error(`Mismatch in the number of files in weights manifest (${k.length}) and the number of weight files provided (${$.length}).`);return q}}function ze(S){return new Oe(S)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xe(S,C,$,k){(function(q){Object(T.b)(q!=null&&Array.isArray(q)&&q.length>0,()=>"promises must be a none empty array")})(S),function(q,X){Object(T.b)(q>=0&&q<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+q),Object(T.b)(X>=0&&X<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+X),Object(T.b)(X>=q,()=>`startFraction must be no more than endFraction, but got startFraction ${q} and endFraction `+X)}($=$??0,k=k??1);let L=0;return Promise.all(S.map(q=>(q.then(X=>{const se=$+ ++L/S.length*(k-$);return C(se),X}),q)))}f.registerSaveRouter(S=>Object(l.b)().getBool("IS_BROWSER")&&!Array.isArray(S)&&S.startsWith(ye.URL_SCHEME)?function(C="model"){return new ye(C)}(S.slice(ye.URL_SCHEME.length)):null);var ot=t(41);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function st(S,C){C==null&&(C={});const $=C.fetchFunc==null?Object(l.b)().platform.fetch:C.fetchFunc,k=S.map(q=>$(q,C.requestInit,{isBinary:!0})),L=(C.onProgress==null?await Promise.all(k):await Xe(k,C.onProgress,0,.5)).map(q=>q.arrayBuffer());return C.onProgress==null?await Promise.all(L):await Xe(L,C.onProgress,.5,1)}async function pt(S,C="",$,k){return gt(L=>st(L,{requestInit:k}))(S,C,$)}function gt(S){return async(C,$="",k)=>{const L=C.map(()=>!1),q={},X=k!=null?k.map(()=>!1):[],se=[];if(C.forEach((dt,$t)=>{let Et=0;dt.weights.forEach(qt=>{const mn="quantization"in qt?qt.quantization.dtype:qt.dtype,an=ot.a[mn]*T.N(qt.shape),gn=()=>{L[$t]=!0,q[$t]==null&&(q[$t]=[]),q[$t].push({manifestEntry:qt,groupOffset:Et,sizeBytes:an})};k!=null?k.forEach((En,On)=>{En===qt.name&&(gn(),X[On]=!0)}):gn(),se.push(qt.name),Et+=an})}),!X.every(dt=>dt)){const dt=k.filter(($t,Et)=>!X[Et]);throw new Error("Could not find weights in manifest with names: "+dt.join(", ")+`. 
Manifest JSON has weights with names: `+se.join(", ")+".")}const be=L.reduce((dt,$t,Et)=>($t&&dt.push(Et),dt),[]),$e=[];be.forEach(dt=>{C[dt].paths.forEach($t=>{const Et=$+($.endsWith("/")?"":"/")+$t;$e.push(Et)})});const Fe=await S($e),Ke={};let nt=0;return be.forEach(dt=>{const $t=C[dt].paths.length;let Et=0;for(let gn=0;gn<$t;gn++)Et+=Fe[nt+gn].byteLength;const qt=new ArrayBuffer(Et),mn=new Uint8Array(qt);let an=0;for(let gn=0;gn<$t;gn++){const En=new Uint8Array(Fe[nt+gn]);mn.set(En,an),an+=En.byteLength}q[dt].forEach(gn=>{const En=qt.slice(gn.groupOffset,gn.groupOffset+gn.sizeBytes),On=Object(d.e)(En,[gn.manifestEntry]);for(const Mn in On)Ke[Mn]=On[Mn]}),nt+=$t}),Ke}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ht{constructor(C,$){if(this.DEFAULT_METHOD="POST",$==null&&($={}),this.weightPathPrefix=$.weightPathPrefix,this.onProgress=$.onProgress,this.weightUrlConverter=$.weightUrlConverter,$.fetchFunc!=null?(Object(T.b)(typeof $.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=$.fetchFunc):this.fetch=Object(l.b)().platform.fetch,Object(T.b)(C!=null&&C.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(C)&&Object(T.b)(C.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${C.length}).`),this.path=C,$.requestInit!=null&&$.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=$.requestInit||{}}async save(C){if(C.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const $=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);$.body=new FormData;const k=[{paths:["./model.weights.bin"],weights:C.weightSpecs}],L={modelTopology:C.modelTopology,format:C.format,generatedBy:C.generatedBy,convertedBy:C.convertedBy,userDefinedMetadata:C.userDefinedMetadata,weightsManifest:k};$.body.append("model.json",new Blob([JSON.stringify(L)],{type:"application/json"}),"model.json"),C.weightData!=null&&$.body.append("model.weights.bin",new Blob([C.weightData],{type:"application/octet-stream"}),"model.weights.bin");const q=await this.fetch(this.path,$);if(q.ok)return{modelArtifactsInfo:Object(d.g)(C),responses:[q]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+q.status+".")}async load(){const C=await this.fetch(this.path,this.requestInit);if(!C.ok)throw new Error(`Request to ${this.path} failed with status code `+C.status+". Please verify this URL points to the model JSON of the model to load.");let $;try{$=await C.json()}catch{let $t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?$t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":$t+=" Please make sure the server is serving valid JSON for this request.",new Error($t)}const k=$.modelTopology,L=$.weightsManifest,q=$.generatedBy,X=$.convertedBy,se=$.format,be=$.userDefinedMetadata;if(k==null&&L==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let $e,Fe;L!=null&&([$e,Fe]=await this.loadWeights(L));const Ke={modelTopology:k,weightSpecs:$e,weightData:Fe,userDefinedMetadata:be,generatedBy:q,convertedBy:X,format:se},nt=$.modelInitializer;return nt&&(Ke.modelInitializer=nt),Ke}async loadWeights(C){const $=Array.isArray(this.path)?this.path[1]:this.path,[k,L]=function(Fe){const Ke=Fe.lastIndexOf("/"),nt=Fe.lastIndexOf("?"),dt=Fe.substring(0,Ke),$t=nt>Ke?Fe.substring(nt):"";return[dt+"/",$t]}($),q=this.weightPathPrefix||k,X=[];for(const Fe of C)X.push(...Fe.weights);const se=[],be=[];for(const Fe of C)for(const Ke of Fe.paths)this.weightUrlConverter!=null?be.push(this.weightUrlConverter(Ke)):se.push(q+Ke+L);this.weightUrlConverter&&se.push(...await Promise.all(be));const $e=await st(se,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[X,Object(d.d)($e)]}}function Tt(S){return S.match(ht.URL_SCHEME_REGEX)!=null}ht.URL_SCHEME_REGEX=/^https?:\/\//;const xt=(S,C)=>{if(typeof fetch>"u"&&(C==null||C.fetchFunc==null))return null;{let $=!0;if($=Array.isArray(S)?S.every(k=>Tt(k)):Tt(S),$)return Pt(S,C)}return null};function Pt(S,C){return new ht(S,C)}function tn(S,C){return Pt(S,C)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */f.registerSaveRouter(xt),f.registerLoadRouter(xt);class ln{constructor(C){this.modelArtifacts=C}async load(){return this.modelArtifacts}}class on{constructor(C){this.saveHandler=C}async save(C){return this.saveHandler(C)}}function An(S,C,$,k){return arguments.length===1?S.modelTopology!=null||S.weightSpecs!=null?new ln(S):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ln({modelTopology:S})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ln({modelTopology:S,weightSpecs:C,weightData:$,trainingConfig:k}))}function zn(S){return new on(S)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kn(S,C,$){const k=S.shape.length;T.b(k===C.length,()=>`Error in slice${k}D: Length of begin ${C} must match the rank of the array (${k}).`),T.b(k===$.length,()=>`Error in slice${k}D: Length of size ${$} must match the rank of the array (${k}).`);for(let L=0;L<k;++L)T.b(C[L]+$[L]<=S.shape[L],()=>`Error in slice${k}D: begin[${L}] + size[${L}] (${C[L]+$[L]}) would overflow input.shape[${L}] (${S.shape[L]})`)}function Qn(S){const C=[];let $=0;for(;S>0;)1&S&&C.push($),S/=2,$++;return C}function $s(S,C,$){const k=[];for(let L=0;L<S.length;L++)k[L]=Math.ceil((C[L]-S[L])/$[L]);return k}function Ps(S,C,$,k){const L=[...S];for(let q=L.length;q<k.length;q++)L.push(1);for(let q=0;q<$;q++)q===0?L[C]=1:(L.splice(C,0,1),L.pop());return L}function Bn(S,C,$){return $<=S?$:$-(C-1)}function Rn(S,C){const $=[];for(let k=0;k<S;k++)$.push(C+k);return $}function gr(S,C,$,k,L,q,X,se,be){const $e=S.length;let Fe=new Array($e),Ke=new Array($e),nt=new Array($e);if(C.length&&$>0){const dt=C[0],$t=$+1;Fe=qs(X,dt,$t,k,S),Ke=yr(se,dt,$t,L,S),nt=Ps(q,dt,$t,S)}else for(let dt=0;dt<$e;dt++)Fe[dt]=ts(X,k,q,S,dt,be),Ke[dt]=Gn(se,L,q,S,dt,be),nt[dt]=Mr(q,dt,be);return{begin:Fe,end:Ke,strides:nt}}function qs(S,C,$,k,L){const q=[...L],X=Rn($,C);for(let se=0;se<q.length;se++)if(X.indexOf(se)>-1)q[se]=0;else{const be=Bn(C,$,se);let $e=k[be];S&1<<be&&($e=0),q[se]=$e}return q}function yr(S,C,$,k,L){const q=[...L],X=Rn($,C);for(let se=0;se<q.length;se++)if(X.indexOf(se)>-1)q[se]=Number.MAX_SAFE_INTEGER;else{const be=Bn(C,$,se);let $e=k[be];S&1<<be&&($e=Number.MAX_SAFE_INTEGER),q[se]=$e}for(let se=0;se<q.length;se++){const be=L[se];q[se]<0&&(q[se]+=be),q[se]=T.i(0,q[se],L[se])}return q}function Mr(S,C,$){let k=S[C];return($&1<<C||k==null)&&(k=1),k}function ts(S,C,$,k,L,q){let X=C[L];const se=$[L]||1;(S&1<<L||q&1<<L||X==null)&&(X=se>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const be=k[L];return X<0&&(X+=be),X=T.i(0,X,be-1),X}function Gn(S,C,$,k,L,q){let X=C[L];const se=$[L]||1;(S&1<<L||q&1<<L||X==null)&&(X=se>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const be=k[L];return X<0&&(X+=be),X=se>0?T.i(0,X,be):T.i(-1,X,be-1),X}function _r(S,C,$){let k=$.length;for(let L=0;L<$.length;L++)if($[L]>1){k=L;break}for(let L=k+1;L<$.length;L++)if(C[L]>0||$[L]!==S[L])return!1;return!0}function Ws(S,C){let $=S.length>0?S[S.length-1]:1;for(let k=0;k<S.length-1;k++)$+=S[k]*C[k];return $}function cr(S,C,$){let k;const L=S.shape.length;let q;return k=typeof C=="number"?[C,...new Array(L-1).fill(0)]:C.length<L?C.concat(new Array(L-C.length).fill(0)):C.slice(),k.forEach(X=>{T.b(X!==-1,()=>"slice() does not support negative begin indexing.")}),q=$==null?new Array(L).fill(-1):typeof $=="number"?[$,...new Array(L-1).fill(-1)]:$.length<L?$.concat(new Array(L-$.length).fill(-1)):$,q=q.map((X,se)=>X>=0?X:(T.b(X===-1,()=>`Negative size values should be exactly -1 but got ${X} for the slice() size at index ${se}.`),S.shape[se]-k[se])),[k,q]}var br=t(7),ft=t(27),Ze=t(14);const Ct=Object(D.a)({add_:function(S,C){let $=Object(B.a)(S,"a","add"),k=Object(B.a)(C,"b","add");[$,k]=Object(Ze.b)($,k);const L={a:$,b:k};return a.a.runKernelFunc((q,X)=>{const se=q.add($,k);return X([$,k]),se},L,null,pe.d)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ge=Object(D.a)({reshape_:function(S,C){const $=Object(B.a)(S,"x","reshape",null),k={x:$},L={shape:C};return a.a.runKernelFunc((q,X)=>(C=T.s(C,$.size),T.b($.size===T.N(C),()=>"new shape and old shape must have the same number of elements."),X([$]),q.reshape($,C)),k,null,pe.bc,L)}});function jt(S){return S==null?null:S.rank===0?Ge(S,[S.size]):S.rank===1?S:S.rank===2?Ge(S,[1,1,S.shape[0],S.shape[1]]):S.rank===3?Ge(S,[1,S.shape[0],S.shape[1],S.shape[2]]):S}const sn=Object(D.a)({batchNorm_:function(S,C,$,k,L,q){q==null&&(q=.001);const X=Object(B.a)(S,"x","batchNorm"),se=Object(B.a)(C,"mean","batchNorm"),be=Object(B.a)($,"variance","batchNorm");let $e,Fe;L!=null&&($e=Object(B.a)(L,"scale","batchNorm")),k!=null&&(Fe=Object(B.a)(k,"offset","batchNorm")),T.b(se.rank===be.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),T.b(Fe==null||se.rank===Fe.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),T.b($e==null||se.rank===$e.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const Ke=function(Et){let qt;return qt=Et.rank===0||Et.rank===1?Ge(Et,[1,1,1,Et.size]):Et.rank===2?Ge(Et,[1,1,Et.shape[0],Et.shape[1]]):Et.rank===3?Ge(Et,[1,Et.shape[0],Et.shape[1],Et.shape[2]]):Et,qt}(X),nt={x:Ke,scale:$e,offset:Fe,mean:se,variance:be},dt={varianceEpsilon:q},$t=a.a.runKernelFunc((Et,qt)=>(qt([Ke,se,be,$e]),Et.batchNorm(Ke,jt(se),jt(be),jt(Fe),jt($e),q)),nt,null,pe.eb,dt);return Ge($t,X.shape)}});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hn(S,C){const $=S[0].length;S.forEach((L,q)=>{T.b(L.length===$,()=>`Error in concat${$}D: rank of tensors[${q}] must be the same as the rank of the rest (${$})`)}),T.b(C>=0&&C<$,()=>`Error in concat${$}D: axis must be between 0 and ${$-1}.`);const k=S[0];S.forEach((L,q)=>{for(let X=0;X<$;X++)T.b(X===C||L[X]===k[X],()=>`Error in concat${$}D: Shape of tensors[${q}] (${L}) does not match the shape of the rest (${k}) along the non-concatenated axis ${q}.`)})}function Jt(S,C){const $=S[0].slice();for(let k=1;k<S.length;k++)$[C]+=S[k][C];return $}var In=t(24);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hn=Object(D.a)({concat_:function(S,C=0){Object(T.b)(S.length>=1,()=>"Pass at least one tensor to concat");let $=Object(B.b)(S,"tensors","concat");$[0].dtype==="complex64"&&$.forEach(q=>{if(q.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${q.dtype}. `)});const k=$,L={axis:C};return a.a.runKernelFunc((q,X)=>{const se=Object(T.I)(C,$[0].shape)[0],be=Jt($.map(Fe=>Fe.shape),se);if(Object(T.N)(be)===0)return Object(In.a)([],be);if($=$.filter(Fe=>Fe.size>0),$.length===1)return $[0];hn($.map(Fe=>Fe.shape),se);const $e=q.concat($,se);return X($),$e},k,null,pe.z,L)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function me(S,C,$,k,L="NHWC",q){return Ye(S,[...C,S[3]],$,q,k,null,null,Tn(L))}function Ie(S,C,$,k,L,q,X="channelsLast"){const[se,be]=Bt(C);let $e;if(X==="channelsLast")$e=[se,be,S[3],S[3]];else{if(X!=="channelsFirst")throw new Error("Unknown dataFormat "+X);$e=[se,be,S[1],S[1]]}return Ye(S,$e,$,k,L,q,!1,X)}function Pe(S,C,$,k,L,q,X="NDHWC"){const[se,be,$e]=Zt(C);let Fe,Ke;if(X==="NDHWC")Ke="channelsLast",Fe=[se,be,$e,S[4],S[4]];else{if(X!=="NCDHW")throw new Error("Unknown dataFormat "+X);Ke="channelsFirst",Fe=[se,be,$e,S[1],S[1]]}return yt(S,Fe,$,k,L,!1,Ke,q)}function Ye(S,C,$,k,L,q,X=!1,se="channelsLast"){let[be,$e,Fe,Ke]=[-1,-1,-1,-1];if(se==="channelsLast")[be,$e,Fe,Ke]=S;else{if(se!=="channelsFirst")throw new Error("Unknown dataFormat "+se);[be,Ke,$e,Fe]=S}const[nt,dt,,$t]=C,[Et,qt]=Bt($),[mn,an]=Bt(k),gn=un(nt,mn),En=un(dt,an),{padInfo:On,outHeight:Mn,outWidth:Zs}=function(is,Gr,Cr,fs,Os,uo,Rs,Wr,$o){let Pr,$r,Fr;if(typeof is=="number"){Pr={top:is,bottom:is,left:is,right:is,type:is===0?"VALID":"NUMBER"};const Gs=function(ks,ir,pr,lo,_o){lo==null&&(lo=_t(ks,ir,pr));const Yn=ks[0],ho=ks[1],ar=pn((Yn-ir+2*lo)/pr+1,_o);T.b(T.v(ar),()=>`The output # of rows (${ar}) must be an integer. Change the stride and/or zero pad parameters`);const Hr=pn((ho-ir+2*lo)/pr+1,_o);return T.b(T.v(Hr),()=>`The output # of columns (${Hr}) must be an integer. Change the stride and/or zero pad parameters`),[ar,Hr]}([Gr,Cr],uo,fs,is,Wr);$r=Gs[0],Fr=Gs[1]}else if(is==="same"){$r=Math.ceil(Gr/fs),Fr=Math.ceil(Cr/Os);const Gs=Math.max(0,($r-1)*fs+uo-Gr),ks=Math.max(0,(Fr-1)*Os+Rs-Cr),ir=Math.floor(Gs/2),pr=Gs-ir,lo=Math.floor(ks/2);Pr={top:ir,bottom:pr,left:lo,right:ks-lo,type:"SAME"}}else if(is==="valid")Pr={top:0,bottom:0,left:0,right:0,type:"VALID"},$r=Math.ceil((Gr-uo+1)/fs),Fr=Math.ceil((Cr-Rs+1)/Os);else{if(typeof is!="object")throw Error("Unknown padding parameter: "+is);{const Gs=$o==="channelsLast"?is[1][0]:is[2][0],ks=$o==="channelsLast"?is[1][1]:is[2][1],ir=$o==="channelsLast"?is[2][0]:is[3][0],pr=$o==="channelsLast"?is[2][1]:is[3][1];Pr={top:Gs,bottom:ks,left:ir,right:pr,type:Gs===0&&ks===0&&ir===0&&pr===0?"VALID":"EXPLICIT"},$r=pn((Gr-uo+Gs+ks)/fs+1,Wr),Fr=pn((Cr-Rs+ir+pr)/Os+1,Wr)}}return{padInfo:Pr,outHeight:$r,outWidth:Fr}}(L,$e,Fe,Et,qt,gn,En,q,se),Pn=X?$t*Ke:$t;let Ts;return se==="channelsFirst"?Ts=[be,Pn,Mn,Zs]:se==="channelsLast"&&(Ts=[be,Mn,Zs,Pn]),{batchSize:be,dataFormat:se,inHeight:$e,inWidth:Fe,inChannels:Ke,outHeight:Mn,outWidth:Zs,outChannels:Pn,padInfo:On,strideHeight:Et,strideWidth:qt,filterHeight:nt,filterWidth:dt,effectiveFilterHeight:gn,effectiveFilterWidth:En,dilationHeight:mn,dilationWidth:an,inShape:S,outShape:Ts,filterShape:C}}function yt(S,C,$,k,L,q=!1,X="channelsLast",se){let[be,$e,Fe,Ke,nt]=[-1,-1,-1,-1,-1];if(X==="channelsLast")[be,$e,Fe,Ke,nt]=S;else{if(X!=="channelsFirst")throw new Error("Unknown dataFormat "+X);[be,nt,$e,Fe,Ke]=S}const[dt,$t,Et,,qt]=C,[mn,an,gn]=Zt($),[En,On,Mn]=Zt(k),Zs=un(dt,En),Pn=un($t,On),Ts=un(Et,Mn),{padInfo:is,outDepth:Gr,outHeight:Cr,outWidth:fs}=function(Rs,Wr,$o,Pr,$r,Fr,Gs,ks,ir,pr,lo){let _o,Yn,ho,ar;if(typeof Rs=="number"){_o={top:Rs,bottom:Rs,left:Rs,right:Rs,front:Rs,back:Rs,type:Rs===0?"VALID":"NUMBER"};const Hr=function(Kr,Ni,Ai,Io,er,si){er==null&&(er=_t(Kr,Ni,Io));const Oi=Kr[0],_c=Kr[1],Ic=Kr[2],da=pn((Oi-Ni+2*er)/Io+1,si);T.b(T.v(da),()=>`The output # of depths (${da}) must be an integer. Change the stride and/or zero pad parameters`);const pa=pn((_c-Ni+2*er)/Io+1,si);T.b(T.v(pa),()=>`The output # of rows (${pa}) must be an integer. Change the stride and/or zero pad parameters`);const iu=pn((Ic-Ni+2*er)/Io+1,si);return T.b(T.v(iu),()=>`The output # of columns (${iu}) must be an integer. Change the stride and/or zero pad parameters`),[da,pa,iu,Ai]}([Wr,$o,Pr,1],ks,1,$r,Rs,lo);Yn=Hr[0],ho=Hr[1],ar=Hr[2]}else if(Rs==="same"){Yn=Math.ceil(Wr/$r),ho=Math.ceil($o/Fr),ar=Math.ceil(Pr/Gs);const Hr=(Yn-1)*$r+ks-Wr,Kr=(ho-1)*Fr+ir-$o,Ni=(ar-1)*Gs+pr-Pr,Ai=Math.floor(Hr/2),Io=Hr-Ai,er=Math.floor(Kr/2),si=Kr-er,Oi=Math.floor(Ni/2);_o={top:er,bottom:si,left:Oi,right:Ni-Oi,front:Ai,back:Io,type:"SAME"}}else{if(Rs!=="valid")throw Error("Unknown padding parameter: "+Rs);_o={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},Yn=Math.ceil((Wr-ks+1)/$r),ho=Math.ceil(($o-ir+1)/Fr),ar=Math.ceil((Pr-pr+1)/Gs)}return{padInfo:_o,outDepth:Yn,outHeight:ho,outWidth:ar}}(L,$e,Fe,Ke,mn,an,gn,Zs,Pn,Ts,se),Os=q?qt*nt:qt;let uo;return X==="channelsFirst"?uo=[be,Os,Gr,Cr,fs]:X==="channelsLast"&&(uo=[be,Gr,Cr,fs,Os]),{batchSize:be,dataFormat:X,inDepth:$e,inHeight:Fe,inWidth:Ke,inChannels:nt,outDepth:Gr,outHeight:Cr,outWidth:fs,outChannels:Os,padInfo:is,strideDepth:mn,strideHeight:an,strideWidth:gn,filterDepth:dt,filterHeight:$t,filterWidth:Et,effectiveFilterDepth:Zs,effectiveFilterHeight:Pn,effectiveFilterWidth:Ts,dilationDepth:En,dilationHeight:On,dilationWidth:Mn,inShape:S,outShape:uo,filterShape:C}}function _t(S,C,$,k=1){const L=un(C,k);return Math.floor((S[0]*($-1)-$+L)/2)}function Bt(S){return typeof S=="number"?[S,S,S]:S.length===2?[S[0],S[1],1]:S}function Zt(S){return typeof S=="number"?[S,S,S]:S}function un(S,C){return C<=1?S:S+(S-1)*(C-1)}function pn(S,C){if(!C)return S;switch(C){case"round":return Math.round(S);case"ceil":return Math.ceil(S);case"floor":return Math.floor(S);default:throw new Error("Unknown roundingMode "+C)}}function Ht(S){const[C,$,k]=Bt(S);return C===1&&$===1&&k===1}function Gt(S,C){return Ht(S)||Ht(C)}function Tn(S){if(S==="NHWC")return"channelsLast";if(S==="NCHW")return"channelsFirst";throw new Error("Unknown dataFormat "+S)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ns=Object(D.a)({conv2d_:function(S,C,$,k,L="NHWC",q=[1,1],X){const se=Object(B.a)(S,"x","conv2d"),be=Object(B.a)(C,"filter","conv2d");let $e=se,Fe=!1;se.rank===3&&(Fe=!0,$e=Ge(se,[1,se.shape[0],se.shape[1],se.shape[2]])),T.b($e.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${$e.rank}.`),T.b(be.rank===4,()=>"Error in conv2d: filter must be rank 4, but got rank "+be.rank+"."),X!=null&&T.b(T.v(k),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${X} but got pad ${k}.`);const Ke=L==="NHWC"?$e.shape[3]:$e.shape[1];T.b(Ke===be.shape[2],()=>`Error in conv2d: depth of input (${Ke}) must match input depth for filter ${be.shape[2]}.`),T.b(Gt($,q),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${$} and dilations '${q}'`);const nt={x:$e,filter:be},dt={strides:$,pad:k,dataFormat:L,dilations:q,dimRoundingMode:X},$t=a.a.runKernelFunc((Et,qt)=>{const mn=Tn(L),an=Ye($e.shape,be.shape,$,q,k,X,!1,mn),gn=Et.conv2d($e,be,an);return qt([$e,be]),gn},nt,null,pe.A,dt);return Fe?Ge($t,[$t.shape[1],$t.shape[2],$t.shape[3]]):$t}});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hs(S,C){for(let $=0;$<S.length;++$)if(S[S.length-$-1]!==C-1-$)return!1;return!0}function Ri(S,C,$){const k=S.length+C.length,L=[];let q=0,X=0;for(let se=0;se<k;se++)$.indexOf(se)===-1?L.push(S[q++]):L.push(C[X++]);return L}function Di(S,C){const $=[],k=S.length;for(let L=0;L<k;L++)C.indexOf(L)===-1&&$.push(S[L]);return[$,C.map(L=>S[L])]}function Ks(S,C){return Ri(S,C.map($=>1),C)}function _s(S,C,$){T.b(Hs(C,$),()=>S+` supports only inner-most axes for now. Got axes ${C} and rank-${$} input.`)}function tr(S,C){if(Hs(S,C))return null;const $=[];for(let k=0;k<C;++k)S.indexOf(k)===-1&&$.push(k);return S.forEach(k=>$.push(k)),$}function Xs(S){return S.map((C,$)=>[$,C]).sort((C,$)=>C[1]-$[1]).map(C=>C[0])}function ur(S,C){const $=[];for(let k=C-S;k<C;++k)$.push(k);return $}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ss=Object(D.a)({transpose_:function(S,C){const $=Object(B.a)(S,"x","transpose");if(C==null&&(C=$.shape.map((q,X)=>X).reverse()),T.b($.rank===C.length,()=>`Error in transpose: rank of input ${$.rank} must match length of perm ${C}.`),C.forEach(q=>{T.b(q>=0&&q<$.rank,()=>"All entries in 'perm' must be between 0 and "+($.rank-1)+" but got "+C)}),$.rank<=1)return $.clone();const k={x:$},L={perm:C};return a.a.runKernelFunc(q=>q.transpose($,C),k,null,pe.Gc,L)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qo=Object(D.a)({cumsum_:function(S,C=0,$=!1,k=!1){const L=Object(B.a)(S,"x","cumsum"),q={x:L},X={axis:C,exclusive:$,reverse:k};return a.a.runKernelFunc((se,be)=>{const $e=tr([C],L.rank);let Fe=L;$e!=null&&(Fe=ss(L,$e));const Ke=ur(1,L.rank)[0];let nt=se.cumsum(Fe,Ke,$,k);if(be([L]),$e!=null){const dt=Xs($e);nt=ss(nt,dt)}return nt},q,null,pe.J,X)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const po=Object(D.a)({depthwiseConv2d_:function(S,C,$,k,L="NHWC",q=[1,1],X){const se=Object(B.a)(S,"x","depthwiseConv2d"),be=Object(B.a)(C,"filter","depthwiseConv2d");let $e=se,Fe=!1;se.rank===3&&(Fe=!0,$e=Ge(se,[1,se.shape[0],se.shape[1],se.shape[2]])),T.b($e.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${$e.rank}.`),T.b(be.rank===4,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+be.rank+"."),T.b($e.shape[3]===be.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${$e.shape[3]}) must match the inChannels dimension in filter ${be.shape[2]}.`),X!=null&&T.b(T.v(k),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${X} but got pad ${k}.`);const Ke={x:$e,filter:be},nt={strides:$,pad:k,dataFormat:L,dilations:q,dimRoundingMode:X},dt=a.a.runKernelFunc(($t,Et)=>{q==null&&(q=[1,1]),T.b(Gt($,q),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${$} and dilations '${q}'`);const qt=Ye($e.shape,be.shape,$,q,k,X,!0),mn=$t.depthwiseConv2D($e,be,qt);return Et([$e,be]),mn},Ke,null,pe.L,nt);return Fe?Ge(dt,[dt.shape[1],dt.shape[2],dt.shape[3]]):dt}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ii=Object(D.a)({floorDiv_:function(S,C){let $=Object(B.a)(S,"a","floorDiv"),k=Object(B.a)(C,"b","floorDiv");[$,k]=Object(Ze.b)($,k);const L={a:$,b:k};return a.a.runKernelFunc((q,X)=>{const se=q.floorDiv($,k);return X([$,k]),se},L,null,pe.cb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kn=Object(D.a)({div_:function(S,C){let $=Object(B.a)(S,"a","div"),k=Object(B.a)(C,"b","div");if([$,k]=Object(Ze.b)($,k),$.dtype==="int32"&&k.dtype==="int32")return ii($,k);const L={a:$,b:k};return a.a.runKernelFunc((q,X)=>{const se=q.realDivide($,k);return X([$,k]),se},L,null,pe.R,{})}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jn=Object(D.a)({matMul_:function(S,C,$=!1,k=!1){let L=Object(B.a)(S,"a","matMul"),q=Object(B.a)(C,"b","matMul");[L,q]=Object(Ze.b)(L,q);const X={a:L,b:q},se={transposeA:$,transposeB:k};return a.a.runKernelFunc((be,$e)=>{$e([L,q]);const Fe=$?L.shape[L.rank-2]:L.shape[L.rank-1],Ke=k?q.shape[q.rank-1]:q.shape[q.rank-2],nt=$?L.shape[L.rank-1]:L.shape[L.rank-2],dt=k?q.shape[q.rank-2]:q.shape[q.rank-1],$t=L.shape.slice(0,-2),Et=q.shape.slice(0,-2),qt=T.N($t),mn=T.N(Et),an=qt===mn||qt===1||mn===1;T.b(L.rank>=2&&q.rank>=2&&an,()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${$t}) and (${Et}).`),T.b(Fe===Ke,()=>`Error in matMul: inner shapes (${Fe}) and (${Ke}) of Tensors with shapes ${L.shape} and ${q.shape} and transposeA=${$} and transposeB=${k} must match.`);const gn=(qt>mn?$t:Et).concat([nt,dt]),En=Ge(L,$?[qt,Fe,nt]:[qt,nt,Fe]),On=Ge(q,k?[mn,dt,Ke]:[mn,Ke,dt]),Mn=be.batchMatMul(En,On,$,k);return Ge(Mn,gn)},X,null,pe.s,se)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qr=Object(D.a)({max_:function(S,C=null,$=!1){const k=Object(B.a)(S,"x","max"),L={x:k},q={reductionIndices:C,keepDims:$};return a.a.runKernelFunc((X,se)=>{let be=T.I(C,k.shape);const $e=tr(be,k.rank);let Fe=k;$e!=null&&(Fe=ss(k,$e),be=ur(be.length,Fe.rank));const Ke=X.max(Fe,be);$e!=null&&Fe.dispose();let nt=Ke;if($){const dt=Ks(nt.shape,T.I(C,k.shape));nt=Ge(nt,dt),Ke.dispose()}return se([k,nt]),nt},L,null,pe.yb,q)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jo=Object(D.a)({maxPool_:function(S,C,$,k,L){const q=Object(B.a)(S,"x","maxPool");let X=q,se=!1;q.rank===3&&(se=!0,X=Ge(q,[1,q.shape[0],q.shape[1],q.shape[2]])),T.b(X.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${X.rank}.`),T.b(Gt($,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${$} and dilations '1'`),L!=null&&T.b(T.v(k),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${L} but got pad ${k}.`);const be={x:X},$e={filterSize:C,strides:$,pad:k,dimRoundingMode:L},Fe=a.a.runKernelFunc((Ke,nt)=>{const dt=Ie(X.shape,C,$,1,k,L);let $t;return $t=dt.filterWidth===1&&dt.filterHeight===1&&T.a(dt.inShape,dt.outShape)?X.clone():Ke.maxPool(X,dt),nt([X,$t]),$t},be,null,pe.zb,$e);return se?Ge(Fe,[Fe.shape[1],Fe.shape[2],Fe.shape[3]]):Fe}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ot=Object(D.a)({mul_:function(S,C){let $=Object(B.a)(S,"a","mul"),k=Object(B.a)(C,"b","mul");[$,k]=Object(Ze.b)($,k);const L={a:$,b:k};return a.a.runKernelFunc((q,X)=>{const se=q.multiply($,k);return X([$,k]),se},L,null,pe.Kb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pi=Object(D.a)({oneHot_:function(S,C,$=1,k=0){if(C<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+C);const L=Object(B.a)(S,"indices","oneHot","int32"),q=[...L.shape,C],X={indices:L},se={depth:C,onValue:$,offValue:k};return a.a.runKernelFunc((be,$e)=>($e([L]),Ge(be.oneHot(Ge(L,[L.size]),C,$,k),q)),X,null,pe.Qb,se)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jr=Object(D.a)({pow_:function(S,C){let $=Object(B.a)(S,"base","pow"),k=Object(B.a)(C,"exp","pow");[$,k]=Object(Ze.b)($,k);const L={a:$,b:k};return a.a.runKernelFunc((q,X)=>{const se=q.pow($,k);return X([$,k,se]),se},L,null,pe.Tb)}});var Fi=t(47);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mi{constructor(C=0,$=1,k,L){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=C,this.range=$-C,this.dtype=k,L==null&&(L=Math.random()),typeof L=="number"&&(L=L.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${C} - ${$} <= 1 and dtype is not float`);this.random=Fi.alea(L)}convertValue(C){return this.canReturnFloat()?C:Math.round(C)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Li=Object(D.a)({randomUniform_:function(S,C=0,$=1,k="float32",L){const q=Le(S,k),X=new Mi(C,$,null,L);for(let se=0;se<q.values.length;se++)q.values[se]=X.nextValue();return q.toTensor()}});var Fs=t(28);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ir(S,C){Object(T.d)(S);const $=Object(B.c)(S,C);if($.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(Fs.a)(S,null,$,C)}var xr=t(19);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ms(S,C="float32"){if(C==="complex64"){const k=ms(S,"float32"),L=ms(S,"float32");return Object(xr.a)(k,L)}const $=Object(T.F)(Object(T.N)(S),C);return a.a.makeTensor($,S,C)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uo(S,C,$=1,k="float32"){if($===0)throw new Error("Cannot have a step of zero");const L={start:S,stop:C,step:$,dtype:k};return a.a.runKernelFunc(()=>{if(S===C||S<C&&$<0||C<S&&$>1)return ms([0],k);const q=Math.abs(Math.ceil((C-S)/$)),X=Object(T.F)(q,k);C<S&&$===1&&($=-1),X[0]=S;for(let se=1;se<X.length;se++)X[se]=X[se-1]+$;return Ir(X,k)},{},null,pe.Wb,L)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(S,C){if((Object(T.A)(S)&&C!=="string"||Array.isArray(S))&&C!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(C==="string"&&Object(T.A)(S)&&!(S instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(Fs.a)(S,[],[],C)}const xs=Object(D.a)({separableConv2d_:function(S,C,$,k,L,q=[1,1],X="NHWC"){const se=Object(B.a)(S,"x","separableConv2d"),be=Object(B.a)(C,"depthwiseFilter","separableConv2d"),$e=Object(B.a)($,"pointwiseFilter","separableConv2d");let Fe=se,Ke=!1;if(se.rank===3&&(Ke=!0,Fe=Ge(se,[1,se.shape[0],se.shape[1],se.shape[2]])),X==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");T.b(Fe.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${Fe.rank}.`),T.b(be.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${be.rank}.`),T.b($e.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${be.rank}.`),T.b($e.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${$e.shape[0]}.`),T.b($e.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${$e.shape[1]}.`);const nt=be.shape[2],dt=be.shape[3];T.b($e.shape[2]===nt*dt,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${nt*dt}, but got ${$e.shape[2]}.`);const $t=po(Fe,be,k,L,X,q),Et=ns($t,$e,1,"valid",X);return Ke?Ge(Et,[Et.shape[1],Et.shape[2],Et.shape[3]]):Et}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zi=Object(D.a)({softmax_:function(S,C=-1){const $=Object(B.a)(S,"logits","softmax","float32");if(C===-1&&(C=$.rank-1),C!==$.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${$.rank} and dim was ${C}`);const k={logits:$},L={dim:C};return a.a.runKernelFunc((q,X)=>{const se=q.softmax($,C);return X([se]),se},k,null,pe.rc,L)}});function Vn(S,C,$=0){let k=[];if(typeof C=="number")Object(T.b)(S.shape[$]%C==0,()=>"Number of splits must evenly divide the axis."),k=new Array(C).fill(S.shape[$]/C);else{const L=C.reduce((X,se)=>(se===-1&&(X+=1),X),0);Object(T.b)(L<=1,()=>"There should be only one negative value in split array.");const q=C.indexOf(-1);if(q!==-1){const X=C.reduce((se,be)=>be>0?se+be:se);C[q]=S.shape[$]-X}Object(T.b)(S.shape[$]===C.reduce((X,se)=>X+se),()=>"The sum of sizes must match the size of the axis dimension."),k=C}return k}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zr=Object(D.a)({split_:function(S,C,$=0){const k=Object(B.a)(S,"x","split"),L={x:k},q={numOrSizeSplits:C,axis:$};return a.a.runKernelFunc((X,se)=>{const be=Object(T.I)($,k.shape)[0],$e=Vn(k,C,be);return X.split(k,$e,be)},L,null,pe.uc,q)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ls=Object(D.a)({squeeze_:function(S,C){const $=Object(B.a)(S,"x","squeeze");return Ge($,Object(T.P)($.shape,C).newShape)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kt=Object(D.a)({sub_:function(S,C){let $=Object(B.a)(S,"a","sub"),k=Object(B.a)(C,"b","sub");[$,k]=Object(Ze.b)($,k);const L={a:$,b:k};return a.a.runKernelFunc((q,X)=>{const se=q.subtract($,k);return X([$,k]),se},L,null,pe.Ac)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eo=Object(D.a)({tile_:function(S,C){const $=Object(B.a)(S,"x","tile",null);T.b($.rank===C.length,()=>`Error in transpose: rank of input ${$.rank} must match length of reps ${C}.`);const k=[$],L={x:$},q={reps:C};return a.a.runKernelFunc((X,se)=>{const be=X.tile($,C);return se([$]),be},L,null,pe.Ec,q,k)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Go=Object(D.a)({broadcastTo_:function(S,C){let $=Object(B.a)(S,"broadcastTo","x");const k=$.shape;if(C.some(be=>!(be>0)||be%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${C}].`);if(C.length<$.rank)throw new Error(`broadcastTo(): shape.length=${C.length} < input.rank=${$.rank}.`);if(C.length>$.rank){const be=$.shape.slice();for(;be.length<C.length;)be.unshift(1);$=Ge($,be)}const L=$.shape,q=Array.from(C);for(let be=C.length-1;be>=0;be--)if(L[be]===C[be])q[be]=1;else if($.shape[be]!==1)throw new Error(`broadcastTo(): [${k}] cannot be broadcast to [${C}].`);if(q.map((be,$e)=>be>1?$e:-1).filter(be=>be>=0).length===0)return he($);const X={x:$},se={shape:C,inputShape:L};return a.a.runKernelFunc(be=>be.tile($,q),X,null,pe.u,se)}});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lr(S,C){const $=S.length,k=[];for(let L=0;L<$;L++){const q=$-1-L,X=S[q]||1;(C[C.length-1-L]||1)>1&&X===1&&k.unshift(q)}return k}function hs(S,C){const $=[];for(let k=0;k<C.length;k++){const L=S[S.length-k-1],q=C.length-k-1,X=C[q];(L==null||L===1&&X>1)&&$.unshift(q)}return $}function Wn(S,C){const $=[],k=Math.max(S.length,C.length);for(let L=0;L<k;L++){let q=S[S.length-L-1];q==null&&(q=1);let X=C[C.length-L-1];if(X==null&&(X=1),q===1)$.unshift(X);else if(X===1)$.unshift(q);else{if(q!==X)throw Error(`Operands could not be broadcast together with shapes ${S} and ${C}.`);$.unshift(q)}}return $}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lr=Object(D.a)({where_:function(S,C,$){const k=Object(B.a)(C,"a","where"),L=Object(B.a)($,"b","where"),q=Object(B.a)(S,"condition","where","bool"),X=Wn(k.shape,L.shape),se=Go(k,X),be=Go(L,X);q.rank===1&&Object(T.b)(q.shape[0]===k.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),q.rank!==1&&Object(T.e)(q.shape,be.shape,"Error in where: ");const $e={condition:q,t:se,e:be};return a.a.runKernelFunc((Fe,Ke)=>{const nt=Fe.select(q,se,be);return Ke([q]),nt},$e,null,pe.kc)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dn=Object(D.a)({zerosLike_:function(S){const C=Object(B.a)(S,"x","zerosLike"),$={x:C};return a.a.runKernelFunc(k=>k.zerosLike(C),$,null,pe.Kc)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rs=Object(D.a)({imag_:function(S){const C=Object(B.a)(S,"input","imag"),$={input:C};return a.a.runKernelFunc(k=>k.imag(C),$,null,pe.kb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wo=Object(D.a)({real_:function(S){const C=Object(B.a)(S,"input","real"),$={input:C};return a.a.runKernelFunc(k=>k.real(C),$,null,pe.Xb)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zn=Object(D.a)({slice_:function(S,C,$){const k=Object(B.a)(S,"x","slice");if(k.rank===0)throw new Error("Slicing scalar is not possible");const L={x:k},q={begin:C,size:$};return a.a.runKernelFunc((X,se)=>{const[be,$e]=cr(k,C,$);return Kn(k,be,$e),se([k]),X.slice(k,be,$e)},L,null,pe.qc,q)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bi=Object(D.a)({fft_:function(S){Object(T.b)(S.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${S.dtype}.`);const C={input:S};return a.a.runKernelFunc($=>{const k=S.shape[S.shape.length-1],L=S.size/k,q=S.as2D(L,k);return $.fft(q).reshape(S.shape)},C,null,pe.Y)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ma=Object(D.a)({rfft_:function(S,C){Object(T.b)(S.dtype==="float32",()=>"The dtype for rfft() must be real value but got "+S.dtype);let $=S.shape[S.shape.length-1];const k=S.size/$;let L;if(C!=null&&C<$){const $t=S.shape.map(qt=>0),Et=S.shape.map(qt=>qt);Et[S.shape.length-1]=C,L=Zn(S,$t,Et),$=C}else if(C!=null&&C>$){const $t=S.shape.map(Et=>Et);$t[S.shape.length-1]=C-$,L=Hn([S,ms($t)],S.shape.length-1),$=C}else L=S;const q=Dn(L),X=Ge(Object(xr.a)(L,q),[k,$]),se=Bi(X),be=Math.floor($/2)+1,$e=Wo(se),Fe=rs(se),Ke=Zr($e,[be,$-be],$e.shape.length-1),nt=Zr(Fe,[be,$-be],Fe.shape.length-1),dt=L.shape.slice();return dt[L.shape.length-1]=be,Ge(Object(xr.a)(Ke[0],nt[0]),dt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ai=Object(D.a)({ifft_:function(S){Object(T.b)(S.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${S.dtype}.`);const C={input:S};return a.a.runKernelFunc($=>{const k=S.shape[S.shape.length-1],L=S.size/k,q=Ge(S,[L,k]),X=$.ifft(q);return Ge(X,S.shape)},C,null,pe.ib)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ho=Object(D.a)({reverse_:function(S,C){const $=Object(B.a)(S,"x","reverse"),k={x:$},L={dims:C};return a.a.runKernelFunc(q=>{const X=Object(T.I)(C,$.shape);if($.rank===0)return he($);const se=q.reverse($,X);return Ge(se,$.shape)},k,null,pe.gc,L)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ga=Object(D.a)({irfft_:function(S){const C=S.shape[S.shape.length-1],$=S.size/C;let k;if(C<=2){const L=Ge(S,[$,C]);k=ai(L)}else{const L=[$,2*(C-1)],q=Ge(Wo(S),[$,C]),X=Ge(rs(S),[$,C]),se=Ho(Zn(q,[0,1],[$,C-2]),1),be=Ot(Ho(Zn(X,[0,1],[$,C-2]),1),xn(-1)),$e=Hn([q,se],1),Fe=Hn([X,be],1),Ke=Ge(Object(xr.a)($e,Fe),[L[0],L[1]]);k=ai(Ke)}if(k=Wo(k),S.rank===3&&S.shape[0]!==0){const L=k,q=S.shape[0];k=Ge(k,[q,k.shape[0]/q,k.shape[1]]),L.dispose()}return k}});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vi(S,C,$){const k=1-S%2,L=new Float32Array(S);for(let q=0;q<S;++q){const X=2*Math.PI*q/(S+k-1);L[q]=C-$*Math.cos(X)}return Ir(L,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(D.a)({hammingWindow_:function(S){return Vi(S,.54,.46)}});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ma=Object(D.a)({hannWindow_:function(S){return Vi(S,.5,.5)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qi(S,C,$){const k={shape:S,value:C,dtype:$};return a.a.runKernelFunc(L=>L.fill(S,C,$),{},null,pe.Z,k)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ci(S,C,$){if(Object(T.d)(S),C!=null&&C.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const k=Object(B.c)(S,$);if(k.length!==2&&k.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(k.length===1&&C==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(Fs.a)(S,C,k,$)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vr=Object(D.a)({frame_:function(S,C,$,k=!1,L=0){let q=0;const X=[];for(;q+C<=S.size;)X.push(Zn(S,q,C)),q+=$;if(k)for(;q<S.size;){const se=q+C-S.size,be=Hn([Zn(S,q,C-se),qi([se],L)]);X.push(be),q+=$}return X.length===0?ci([],[0,C]):Ge(Hn(X),[X.length,C])}});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(D.a)({stft_:function(S,C,$,k,L=Ma){var q;k==null&&(q=C,k=Math.floor(Math.pow(2,Math.ceil(Math.log(q)/Math.log(2)))));const X=vr(S,C,$),se=Ot(X,L(C)),be=[];for(let $e=0;$e<X.shape[0];$e++)be.push(ma(Zn(se,[$e,0],[1,C]),k));return Hn(be)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(D.a)({cropAndResize_:function(S,C,$,k,L,q){const X=Object(B.a)(S,"image","cropAndResize"),se=Object(B.a)(C,"boxes","cropAndResize","float32"),be=Object(B.a)($,"boxInd","cropAndResize","int32");L=L||"bilinear",q=q||0;const $e=se.shape[0];T.b(X.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${X.rank}.`),T.b(se.rank===2&&se.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${$e},4] but had shape ${se.shape}.`),T.b(be.rank===1&&be.shape[0]===$e,()=>`Error in cropAndResize: boxInd must be have size [${$e}] but had shape ${se.shape}.`),T.b(k.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${k.length}.`),T.b(k[0]>=1&&k[1]>=1,()=>"cropSize must be atleast [1,1], but was "+k),T.b(L==="bilinear"||L==="nearest",()=>"method must be bilinear or nearest, but was "+L);const Fe={image:X,boxes:se,boxInd:be},Ke={method:L,extrapolationValue:q,cropSize:k};return a.a.runKernelFunc(nt=>nt.cropAndResize(X,se,be,k,L,q),Fe,null,pe.I,Ke)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(D.a)({flipLeftRight_:function(S){const C=Object(B.a)(S,"image","flipLeftRight","float32");T.b(C.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${C.rank}.`);const $={image:C};return a.a.runKernel(pe.ab,$,{})}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(D.a)({rotateWithOffset_:function(S,C,$=0,k=.5){const L=Object(B.a)(S,"image","rotateWithOffset","float32");T.b(L.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${L.rank}.`);const q={image:L},X={radians:C,fillValue:$,center:k};return a.a.runKernel(pe.hc,q,X)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fo(S,C,$,k,L,q){k==null&&(k=.5),L==null&&(L=Number.NEGATIVE_INFINITY),q==null&&(q=0);const X=S.shape[0];return $=Math.min($,X),T.b(0<=k&&k<=1,()=>`iouThreshold must be in [0, 1], but was '${k}'`),T.b(S.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${S.rank}'`),T.b(S.shape[1]===4,()=>"boxes must have 4 columns, but 2nd dimension was "+S.shape[1]),T.b(C.rank===1,()=>"scores must be a 1D tensor"),T.b(C.shape[0]===X,()=>`scores has incompatible shape with boxes. Expected ${X}, but was `+C.shape[0]),T.b(0<=q&&q<=1,()=>`softNmsSigma must be in [0, 1], but was '${q}'`),{maxOutputSize:$,iouThreshold:k,scoreThreshold:L,softNmsSigma:q}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(D.a)({nonMaxSuppression_:function(S,C,$,k=.5,L=Number.NEGATIVE_INFINITY){const q=Object(B.a)(S,"boxes","nonMaxSuppression"),X=Object(B.a)(C,"scores","nonMaxSuppression"),se=fo(q,X,$,k,L);$=se.maxOutputSize,k=se.iouThreshold,L=se.scoreThreshold;const be={maxOutputSize:$,iouThreshold:k,scoreThreshold:L};return a.a.runKernelFunc($e=>$e.nonMaxSuppression(q,X,$,k,L),{boxes:q,scores:X},null,pe.Mb,be)}});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zr(S,C,$){const k=function(q,X,se){return function(be,$e,Fe){let Ke=0,nt=be.length,dt=0,$t=!1;for(;Ke<nt;){dt=Ke+(nt-Ke>>>1);const Et=Fe($e,be[dt]);Et>0?Ke=dt+1:(nt=dt,$t=!Et)}return $t?Ke:-Ke-1}(q,X,se||kc)}(S,C,$),L=k<0?-(k+1):k;S.splice(L,0,C)}function kc(S,C){return S>C?1:S<C?-1:0}function kr(S,C,$,k,L){return li(S,C,$,k,L,0).selectedIndices}function La(S,C,$,k,L,q){return li(S,C,$,k,L,0,!1,q,!0)}function ui(S,C,$,k,L,q){return li(S,C,$,k,L,q,!0)}function li(S,C,$,k,L,q,X=!1,se=!1,be=!1){const $e=[];for(let qt=0;qt<C.length;qt++)C[qt]>L&&$e.push({score:C[qt],boxIndex:qt,suppressBeginIndex:0});$e.sort(Ba);const Fe=q>0?-.5/q:0,Ke=[],nt=[];for(;Ke.length<$&&$e.length>0;){const qt=$e.pop(),{score:mn,boxIndex:an,suppressBeginIndex:gn}=qt;if(mn<L)break;let En=!1;for(let On=Ke.length-1;On>=gn;--On){const Mn=za(S,an,Ke[On]);if(Mn>=k){En=!0;break}if(qt.score=qt.score*mo(k,Fe,Mn),qt.score<=L)break}qt.suppressBeginIndex=Ke.length,En||(qt.score===mn?(Ke.push(an),nt.push(qt.score)):qt.score>L&&zr($e,qt,Ba))}const dt=Ke.length,$t=$-dt;se&&$t>0&&(Ke.push(...new Array($t).fill(0)),nt.push(...new Array($t).fill(0)));const Et={selectedIndices:Ir(Ke,"int32")};return X&&(Et.selectedScores=Ir(nt,"float32")),be&&(Et.validOutputs=xn(dt,"int32")),Et}function za(S,C,$){const k=S.subarray(4*C,4*C+4),L=S.subarray(4*$,4*$+4),q=Math.min(k[0],k[2]),X=Math.min(k[1],k[3]),se=Math.max(k[0],k[2]),be=Math.max(k[1],k[3]),$e=Math.min(L[0],L[2]),Fe=Math.min(L[1],L[3]),Ke=Math.max(L[0],L[2]),nt=Math.max(L[1],L[3]),dt=(se-q)*(be-X),$t=(Ke-$e)*(nt-Fe);if(dt<=0||$t<=0)return 0;const Et=Math.max(q,$e),qt=Math.max(X,Fe),mn=Math.min(se,Ke),an=Math.min(be,nt),gn=Math.max(mn-Et,0)*Math.max(an-qt,0);return gn/(dt+$t-gn)}function mo(S,C,$){const k=Math.exp(C*$*$);return $<=S?k:0}function Ba(S,C){return S.score-C.score||S.score===C.score&&C.boxIndex-S.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(D.a)({nonMaxSuppressionWithScore_:function(S,C,$,k=.5,L=Number.NEGATIVE_INFINITY,q=0){const X=Object(B.a)(S,"boxes","nonMaxSuppression"),se=Object(B.a)(C,"scores","nonMaxSuppression"),be=fo(X,se,$,k,L,q),$e={boxes:X,scores:se},Fe={maxOutputSize:$=be.maxOutputSize,iouThreshold:k=be.iouThreshold,scoreThreshold:L=be.scoreThreshold,softNmsSigma:q=be.softNmsSigma},Ke=a.a.runKernel(pe.Ob,$e,Fe);return{selectedIndices:Ke[0],selectedScores:Ke[1]}}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(D.a)({nonMaxSuppressionPadded_:function(S,C,$,k=.5,L=Number.NEGATIVE_INFINITY,q=!1){const X=Object(B.a)(S,"boxes","nonMaxSuppression"),se=Object(B.a)(C,"scores","nonMaxSuppression"),be=fo(X,se,$,k,L,null),$e={boxes:X,scores:se},Fe={maxOutputSize:be.maxOutputSize,iouThreshold:be.iouThreshold,scoreThreshold:be.scoreThreshold,padToMaxOutputSize:q},Ke=a.a.runKernel(pe.Nb,$e,Fe);return{selectedIndices:Ke[0],validOutputs:Ke[1]}}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const go=Object(D.a)({resizeBilinear_:function(S,C,$=!1){const k=Object(B.a)(S,"images","resizeBilinear");T.b(k.rank===3||k.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${k.rank}.`),T.b(C.length===2,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+C+".");let L=k,q=!1;k.rank===3&&(q=!0,L=Ge(k,[1,k.shape[0],k.shape[1],k.shape[2]]));const[X,se]=C,be={images:L},$e={alignCorners:$,size:C},Fe=a.a.runKernelFunc((Ke,nt)=>(nt([L]),Ke.resizeBilinear(L,X,se,$)),be,null,pe.cc,$e);return q?Ge(Fe,[Fe.shape[1],Fe.shape[2],Fe.shape[3]]):Fe}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ec=Object(D.a)({resizeNearestNeighbor_:function(S,C,$=!1){const k=Object(B.a)(S,"images","resizeNearestNeighbor");T.b(k.rank===3||k.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${k.rank}.`),T.b(C.length===2,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+C+"."),T.b(k.dtype==="float32"||k.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype");let L=k,q=!1;k.rank===3&&(q=!0,L=Ge(k,[1,k.shape[0],k.shape[1],k.shape[2]]));const[X,se]=C,be={images:L},$e={alignCorners:$,size:C},Fe=a.a.runKernelFunc((Ke,nt)=>(nt([L]),Ke.resizeNearestNeighbor(L,X,se,$)),be,null,pe.ec,$e);return q?Ge(Fe,[Fe.shape[1],Fe.shape[2],Fe.shape[3]]):Fe}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hr=Object(D.a)({greaterEqual_:function(S,C){let $=Object(B.a)(S,"a","greaterEqual"),k=Object(B.a)(C,"b","greaterEqual");[$,k]=Object(Ze.b)($,k),Wn($.shape,k.shape);const L={a:$,b:k};return a.a.runKernelFunc((q,X)=>{const se=q.greaterEqual($,k);return X([$,k]),se},L,null,pe.hb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ko=Object(D.a)({lessEqual_:function(S,C){let $=Object(B.a)(S,"a","lessEqual"),k=Object(B.a)(C,"b","lessEqual");[$,k]=Object(Ze.b)($,k),Wn($.shape,k.shape);const L={a:$,b:k};return a.a.runKernelFunc((q,X)=>{const se=q.lessEqual($,k);return X([$,k]),se},L,null,pe.rb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xo=Object(D.a)({logicalAnd_:function(S,C){const $=Object(B.a)(S,"a","logicalAnd","bool"),k=Object(B.a)(C,"b","logicalAnd","bool");Wn($.shape,k.shape);const L={a:$,b:k};return a.a.runKernelFunc(q=>q.logicalAnd($,k),L,null,pe.vb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Br=Object(D.a)({expandDims_:function(S,C=0){const $=Object(B.a)(S,"x","expandDims",null);T.b(C<=$.rank,()=>"Axis must be <= rank of the tensor");const k=$.shape.slice();return C<0&&(T.b(-($.rank+1)<=C,()=>`Axis must be in the interval [${-($.rank+1)}, ${$.rank}]`),C=$.rank+C+1),k.splice(C,0,1),Ge($,k)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ko=Object(D.a)({stack_:function(S,C=0){const $=Object(B.b)(S,"tensors","stack");if(T.b($.length>=1,()=>"Pass at least one tensor to tf.stack"),$.length===1)return Br($[0],C);const k=$[0].rank,L=$[0].shape,q=$[0].dtype;T.b(C<=k,()=>"Axis must be <= rank of the tensor"),$.forEach(se=>{T.e(L,se.shape,"All tensors passed to stack must have matching shapes"),T.b(q===se.dtype,()=>"All tensors passed to stack must have matching dtypes")});const X=$.map(se=>Br(se,C));return Hn(X,C)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ya=Object(D.a)({unstack_:function(S,C=0){const $=Object(B.a)(S,"x","unstack");T.b(C>=-$.shape.length&&C<$.shape.length,()=>`Axis = ${C} is not in [-${$.shape.length}, ${$.shape.length})`),C<0&&(C+=$.shape.length);const k={value:$},L={axis:C};return a.a.runKernelFunc(q=>q.unstack($,C),k,null,pe.Ic,L)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(D.a)({bandPart_:function(S,C,$){Object(T.b)(C%1==0,()=>`bandPart(): numLower must be an integer, got ${C}.`),Object(T.b)($%1==0,()=>`bandPart(): numUpper must be an integer, got ${$}.`);const k=Object(B.a)(S,"a","bandPart");Object(T.b)(k.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${k.rank}.`);const L=k.shape,[q,X]=k.shape.slice(-2);if(!(C<=q))throw new Error(`bandPart(): numLower (${C}) must not be greater than the number of rows (${q}).`);if(!($<=X))throw new Error(`bandPart(): numUpper (${$}) must not be greater than the number of columns (${X}).`);C<0&&(C=q),$<0&&($=X);const se=Ge(Uo(0,q,1,"int32"),[-1,1]),be=Uo(0,X,1,"int32"),$e=Kt(se,be),Fe=Xo(Ko($e,xn(+C,"int32")),hr($e,xn(-$,"int32"))),Ke=ms([q,X],k.dtype);return Ge(ko(ya(Ge(k,[-1,q,X])).map(nt=>lr(Fe,nt,Ke))),L)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ms=Object(D.a)({abs_:function(S){const C=Object(B.a)(S,"x","abs"),$={x:C};return a.a.runKernelFunc((k,L)=>(L([C]),C.dtype==="complex64"?k.complexAbs(C):k.abs(C)),$,null,pe.a)}}),ba=Object(D.a)({min_:function(S,C=null,$=!1){const k=Object(B.a)(S,"x","min"),L={x:k},q={axis:C,keepDims:$};return a.a.runKernelFunc((X,se)=>{const be=Object(T.I)(C,k.shape);let $e=be;const Fe=tr($e,k.rank);let Ke=k;Fe!=null&&(Ke=ss(k,Fe),$e=ur($e.length,k.rank));const nt=X.min(Ke,$e);Fe!=null&&Ke.dispose();let dt=nt;if($){const $t=Ks(dt.shape,be);dt=Ge(nt,$t),nt.dispose()}return se([k,dt]),dt},L,null,pe.Gb,q)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vr=Object(D.a)({sqrt_:function(S){const C=Object(B.a)(S,"x","sqrt"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.sqrt(C);return L([C]),q},$,null,pe.vc)}});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vs=Object(D.a)({square_:function(S){const C=Object(B.a)(S,"x","square"),$=[C];return a.a.runKernelFunc((k,L)=>(L([C]),k.square(C)),{x:C},null,"Square",{},$,[])}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vn=Object(D.a)({sum_:function(S,C=null,$=!1){let k=Object(B.a)(S,"x","sum");k.dtype==="bool"&&(k=H(k,"int32"));const L={x:k},q={axis:C,keepDims:$};return a.a.runKernelFunc((X,se)=>{se([k]);const be=Object(T.I)(C,k.shape),$e=tr(be,k.rank);let Fe=be,Ke=k;$e!=null&&(Ke=ss(k,$e),Fe=ur(Fe.length,k.rank));let nt=X.sum(Ke,Fe);if($){const dt=Ks(nt.shape,be);nt=Ge(nt,dt)}return nt},L,null,pe.Bc,q)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xa=Object(D.a)({norm_:function(S,C="euclidean",$=null,k=!1){const L=function X(se,be,$e=null){if(se.rank===0)return Ms(se);if(se.rank!==1&&$e===null)return X(Ge(se,[-1]),be,$e);if(se.rank===1||typeof $e=="number"||Array.isArray($e)&&$e.length===1){if(be===1)return vn(Ms(se),$e);if(be===1/0)return Qr(Ms(se),$e);if(be===-1/0)return ba(Ms(se),$e);if(be==="euclidean"||be===2)return Vr(vn(Jr(Ms(se),xn(2,"int32")),$e));throw new Error("Error in norm: invalid ord value: "+be)}if(Array.isArray($e)&&$e.length===2){if(be===1)return Qr(vn(Ms(se),$e[0]),$e[1]-1);if(be===1/0)return Qr(vn(Ms(se),$e[1]),$e[0]);if(be===-1/0)return ba(vn(Ms(se),$e[1]),$e[0]);if(be==="fro"||be==="euclidean")return Vr(vn(vs(se),$e));throw new Error("Error in norm: invalid ord value: "+be)}throw new Error("Error in norm: invalid axis: "+$e)}(S=Object(B.a)(S,"x","norm"),C,$);let q=L.shape;if(k){const X=Object(T.I)($,S.shape);q=Ks(L.shape,X)}return Ge(L,q)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(D.a)({gramSchmidt_:function(S){let C;if(Array.isArray(S)){C=!1,Object(T.b)(S!=null&&S.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const L=S[0].shape[0];for(let q=1;q<S.length;++q)Object(T.b)(S[q].shape[0]===L,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${S[q].shape[0]} vs. ${L})`)}else C=!0,S=Zr(S,S.shape[0],0).map(L=>ls(L,[0]));Object(T.b)(S.length<=S[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${S.length}) exceeds number of dimensions (${S[0].shape[0]}).`);const $=[],k=S;for(let L=0;L<S.length;++L)$.push(a.a.tidy(()=>{let q=k[L];if(L>0)for(let X=0;X<L;++X){const se=Ot(vn(Ot($[X],q)),$[X]);q=Kt(q,se)}return kn(q,xa(q,"euclidean"))}));return C?ko($,0):$}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Es(S){Object(l.b)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(S+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Va(){return a.a}function va(S,C){return a.a.tidy(S,C)}function qa(S){Object(Ze.a)(S).forEach(C=>C.dispose())}function _n(S,C,$=1){return a.a.registerBackend(S,C,$)}Object(we.d)(Es);const ja=Object(D.a)({eye_:function(S,C,$,k="float32"){C==null&&(C=S);const L=Le([S,C],k),q=S<=C?S:C;for(let se=0;se<q;++se)L.set(1,se,se);const X=Ge(L.toTensor(),[S,C]);if($==null)return X;if($.length===1)return eo(Br(X,0),[$[0],1,1]);if($.length===2)return eo(Br(Br(X,0),0),[$[0],$[1],1,1]);if($.length===3)return eo(Br(Br(Br(X,0),0),0),[$[0],$[1],$[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${$.length}D.`)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yo=Object(D.a)({greater_:function(S,C){let $=Object(B.a)(S,"a","greater"),k=Object(B.a)(C,"b","greater");[$,k]=Object(Ze.b)($,k),Wn($.shape,k.shape);const L={a:$,b:k};return a.a.runKernelFunc(q=>q.greater($,k),L,null,pe.gb)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ws=Object(D.a)({neg_:function(S){const C=Object(B.a)(S,"x","neg"),$={x:C};return a.a.runKernelFunc(k=>k.neg(C),$,null,pe.Lb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yo(S,C=!1){return a.a.tidy(()=>{Object(T.b)(S.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${S.shape.length}D Tensor.`);const $=S.shape[0],k=S.shape[1];let L=ja($),q=he(S);const X=ci([[1]],[1,1]);let se=he(X);const be=$>=k?k:$;for(let $e=0;$e<be;++$e){const Fe=q,Ke=se,nt=L;[se,q,L]=a.a.tidy(()=>{const dt=Zn(q,[$e,$e],[$-$e,1]),$t=xa(dt),Et=Zn(q,[$e,$e],[1,1]),qt=lr(yo(Et,0),ci([[-1]]),ci([[1]])),mn=Kt(Et,Ot(qt,$t)),an=kn(dt,mn);se=an.shape[0]===1?he(X):Hn([X,Zn(an,[1,0],[an.shape[0]-1,an.shape[1]])],0);const gn=ws(kn(Jn(qt,mn),$t)),En=Zn(q,[$e,0],[$-$e,k]),On=Ot(gn,se),Mn=ss(se);if($e===0)q=Kt(En,Jn(On,Jn(Mn,En)));else{const Ts=Kt(En,Jn(On,Jn(Mn,En)));q=Hn([Zn(q,[0,0],[$e,k]),Ts],0)}const Zs=ss(On),Pn=Zn(L,[0,$e],[$,L.shape[1]-$e]);if($e===0)L=Kt(Pn,Jn(Jn(Pn,se),Zs));else{const Ts=Kt(Pn,Jn(Jn(Pn,se),Zs));L=Hn([Zn(L,[0,0],[$,$e]),Ts],1)}return[se,q,L]}),qa([Fe,Ke,nt])}return!C&&$>k&&(L=Zn(L,[0,0],[$,k]),q=Zn(q,[0,0],[k,k])),[L,q]})}Object(D.a)({qr_:function(S,C=!1){if(Object(T.b)(S.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank "+S.rank),S.rank===2)return Yo(S,C);{const $=S.shape.slice(0,S.shape.length-2).reduce((X,se)=>X*se),k=ya(Ge(S,[$,S.shape[S.shape.length-2],S.shape[S.shape.length-1]]),0),L=[],q=[];return k.forEach(X=>{const[se,be]=Yo(X,C);L.push(se),q.push(be)}),[Ge(ko(L,0),S.shape),Ge(ko(q,0),S.shape)]}}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ys;function ji(S){return a.a.customGrad(S)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qo(S,C="float32"){if(C==="complex64"){const k=Qo(S,"float32"),L=ms(S,"float32");return Object(xr.a)(k,L)}const $=Object(T.D)(Object(T.N)(S),C);return a.a.makeTensor($,S,C)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(function(S){S[S.NONE=0]="NONE",S[S.MEAN=1]="MEAN",S[S.SUM=2]="SUM",S[S.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Ys||(Ys={}));const wa=Object(D.a)({mean_:function(S,C=null,$=!1){const k=Object(B.a)(S,"x","mean"),L=Object(T.I)(C,k.shape),q=Di(k.shape,L)[1],X=Object(T.N)(q),se={x:k},be={axis:C,keepDims:$},$e=()=>{const Fe=xn(X),Ke=Fe.dtype===k.dtype?k:H(k,Fe.dtype),nt=kn(Ke,Fe);return vn(nt,C,$)};return ji(Fe=>({value:a.a.runKernelFunc($e,se,null,pe.Fb,be),gradFunc:Ke=>{const nt=Fe.shape.slice();L.forEach($t=>{nt[$t]=1});const dt=Ge(Ke,nt);return kn(Ot(dt,Qo(Fe.shape,"float32")),X)}}))(k)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hi=Object(D.a)({notEqual_:function(S,C){let $=Object(B.a)(S,"a","notEqual"),k=Object(B.a)(C,"b","notEqual");[$,k]=Object(Ze.b)($,k),Wn($.shape,k.shape);const L={a:$,b:k};return a.a.runKernelFunc(q=>q.notEqual($,k),L,null,pe.Pb)}}),to=Object(D.a)({computeWeightedLoss_:function(S,C,$=Ys.SUM_BY_NONZERO_WEIGHTS){const k=Object(B.a)(S,"losses","computeWeightedLoss");let L=null;C!=null&&(L=Object(B.a)(C,"weights","computeWeightedLoss"));const q=L==null?k:Ot(k,L);if($===Ys.NONE)return q;if($===Ys.SUM)return vn(q);if($===Ys.MEAN){if(L==null)return wa(q);{const X=k.size/L.size,se=kn(vn(q),vn(L));return X>1?kn(se,xn(X)):se}}if($===Ys.SUM_BY_NONZERO_WEIGHTS){if(L==null)return kn(vn(q),xn(k.size));{const X=Ot(L,Qo(k.shape)),se=H(vn(hi(X,xn(0))),"float32");return kn(vn(q),se)}}throw Error("Unknown reduction: "+$)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(D.a)({absoluteDifference_:function(S,C,$,k=Ys.SUM_BY_NONZERO_WEIGHTS){const L=Object(B.a)(S,"labels","absoluteDifference"),q=Object(B.a)(C,"predictions","absoluteDifference");let X=null;$!=null&&(X=Object(B.a)($,"weights","absoluteDifference")),Object(T.e)(L.shape,q.shape,"Error in absoluteDifference: ");const se=Ms(Kt(L,q));return to(se,X,k)}}),Object(D.a)({cosineDistance_:function(S,C,$,k,L=Ys.SUM_BY_NONZERO_WEIGHTS){const q=Object(B.a)(S,"labels","cosineDistance"),X=Object(B.a)(C,"predictions","cosineDistance");let se=null;k!=null&&(se=Object(B.a)(k,"weights","cosineDistance")),Object(T.e)(q.shape,X.shape,"Error in cosineDistance: ");const be=xn(1),$e=Kt(be,vn(Ot(q,X),$,!0));return to($e,se,L)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const di=Object(D.a)({relu_:function(S){const C=Object(B.a)(S,"x","relu"),$={x:C};return a.a.runKernelFunc((k,L)=>(L([C]),C.dtype==="bool"?H(C,"int32"):k.relu(C)),$,null,pe.Zb)}});Object(D.a)({hingeLoss_:function(S,C,$,k=Ys.SUM_BY_NONZERO_WEIGHTS){let L=Object(B.a)(S,"labels","hingeLoss");const q=Object(B.a)(C,"predictions","hingeLoss");let X=null;$!=null&&(X=Object(B.a)($,"weights","hingeLoss")),Object(T.e)(L.shape,q.shape,"Error in hingeLoss: ");const se=xn(1);L=Kt(Ot(xn(2),L),se);const be=di(Kt(se,Ot(L,q)));return to(be,X,k)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jo=Object(D.a)({minimum_:function(S,C){let $=Object(B.a)(S,"a","minimum"),k=Object(B.a)(C,"b","minimum");[$,k]=Object(Ze.b)($,k),$.dtype==="bool"&&($=H($,"int32"),k=H(k,"int32")),Wn($.shape,k.shape);const L={a:$,b:k};return a.a.runKernelFunc((q,X)=>{const se=q.minimum($,k);return X([$,k]),se},L,null,pe.Hb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(D.a)({huberLoss_:function(S,C,$,k=1,L=Ys.SUM_BY_NONZERO_WEIGHTS){const q=Object(B.a)(S,"labels","huberLoss"),X=Object(B.a)(C,"predictions","huberLoss");let se=null;$!=null&&(se=Object(B.a)($,"weights","huberLoss")),Object(T.e)(q.shape,X.shape,"Error in huberLoss: ");const be=xn(k),$e=Ms(Kt(X,q)),Fe=Jo($e,be),Ke=Kt($e,Fe),nt=Ct(Ot(xn(.5),vs(Fe)),Ot(be,Ke));return to(nt,se,L)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eo=Object(D.a)({log_:function(S){const C=Object(B.a)(S,"x","log"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.log(C);return L([C]),q},$,null,pe.sb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(D.a)({logLoss_:function(S,C,$,k=1e-7,L=Ys.SUM_BY_NONZERO_WEIGHTS){const q=Object(B.a)(S,"labels","logLoss"),X=Object(B.a)(C,"predictions","logLoss");let se=null;$!=null&&(se=Object(B.a)($,"weights","logLoss")),Object(T.e)(q.shape,X.shape,"Error in logLoss: ");const be=xn(1),$e=xn(k),Fe=ws(Ot(q,Eo(Ct(X,$e)))),Ke=Ot(Kt(be,q),Eo(Ct(Kt(be,X),$e))),nt=Kt(Fe,Ke);return to(nt,se,L)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pi=Object(D.a)({squaredDifference_:function(S,C){let $=Object(B.a)(S,"a","squaredDifference"),k=Object(B.a)(C,"b","squaredDifference");[$,k]=Object(Ze.b)($,k),Wn($.shape,k.shape);const L={a:$,b:k};return a.a.runKernelFunc((q,X)=>{const se=q.squaredDifference($,k);return X([$,k]),se},L,null,pe.xc,{})}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(D.a)({meanSquaredError_:function(S,C,$,k=Ys.SUM_BY_NONZERO_WEIGHTS){const L=Object(B.a)(S,"labels","meanSquaredError"),q=Object(B.a)(C,"predictions","meanSquaredError");let X=null;$!=null&&(X=Object(B.a)($,"weights","meanSquaredError")),Object(T.e)(L.shape,q.shape,"Error in meanSquaredError: ");const se=pi(L,q);return to(se,X,k)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Er=Object(D.a)({exp_:function(S){const C=Object(B.a)(S,"x","exp"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.exp(C);return L([q]),q},$,null,pe.W)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const no=Object(D.a)({log1p_:function(S){const C=Object(B.a)(S,"x","log1p"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.log1p(C);return L([C]),q},$,null,pe.tb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(D.a)({sigmoidCrossEntropy_:function(S,C,$,k=0,L=Ys.SUM_BY_NONZERO_WEIGHTS){let q=Object(B.a)(S,"multiClassLabels","sigmoidCrossEntropy");const X=Object(B.a)(C,"logits","sigmoidCrossEntropy");let se=null;if($!=null&&(se=Object(B.a)($,"weights","sigmoidCrossEntropy")),Object(T.e)(q.shape,X.shape,"Error in sigmoidCrossEntropy: "),k>0){const $e=xn(k),Fe=xn(1),Ke=xn(.5);q=Ct(Ot(q,Kt(Fe,$e)),Ot(Ke,$e))}const be=function($e,Fe){const Ke=Object(B.a)($e,"labels","sigmoidCrossEntropyWithLogits"),nt=Object(B.a)(Fe,"logits","sigmoidCrossEntropyWithLogits");Object(T.e)(Ke.shape,nt.shape,"Error in sigmoidCrossEntropyWithLogits: ");const dt=di(nt),$t=Ot(nt,Ke),Et=no(Er(ws(Ms(nt))));return Ct(Kt(dt,$t),Et)}(q,X);return to(be,se,L)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ua=Object(D.a)({logSumExp_:function(S,C=null,$=!1){const k=Object(B.a)(S,"x","logSumExp"),L=Object(T.I)(C,k.shape),q=Qr(k,L,!0),X=Kt(k,q),se=Er(X),be=vn(se,L),$e=Eo(be),Fe=Ct(Ge(q,$e.shape),$e);if($){const Ke=Ks(Fe.shape,L);return Ge(Fe,Ke)}return Fe}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Object(D.a)({softmaxCrossEntropy_:function(S,C,$,k=0,L=Ys.SUM_BY_NONZERO_WEIGHTS){let q=Object(B.a)(S,"onehotLabels","softmaxCrossEntropy");const X=Object(B.a)(C,"logits","softmaxCrossEntropy");let se=null;if($!=null&&(se=Object(B.a)($,"weights","softmaxCrossEntropy")),Object(T.e)(q.shape,X.shape,"Error in softmaxCrossEntropy: "),k>0){const $e=xn(k),Fe=xn(1),Ke=xn(q.shape[1]);q=Ct(Ot(q,Kt(Fe,$e)),kn($e,Ke))}const be=function($e,Fe,Ke=-1){if(Ke===-1&&(Ke=Fe.rank-1),Ke!==Fe.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${Fe.rank} and dim was `+Ke);return ji((nt,dt,$t)=>{const Et=Ua(dt,[Ke],!0),qt=Kt(H(dt,"float32"),Et);$t([nt,qt]);const mn=ws(Ot(qt,nt));return{value:vn(mn,[Ke]),gradFunc:(an,gn)=>{const[En,On]=gn,Mn=Ks(an.shape,[Ke]);return[Ot(Ge(an,Mn),Kt(H(En,"float32"),Er(On))),Ot(Ge(an,Mn),Kt(Er(On),H(En,"float32")))]}}})($e,Fe)}(q,X);return to(be,se,L)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ui=t(26),Nc=t(78);const Ga=Object(D.a)({elu_:function(S){const C=Object(B.a)(S,"x","elu"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.elu(C);return L([q]),q},$,null,pe.S)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wa=Object(D.a)({prelu_:function(S,C){const $=Object(B.a)(S,"x","prelu"),k=Object(B.a)(C,"alpha","prelu"),L={x:$,alpha:k};return a.a.runKernelFunc((q,X)=>{const se=q.prelu($,k);return X([$,k]),se},L,null,pe.Ub)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ha=Object(D.a)({relu6_:function(S){const C=Object(B.a)(S,"x","relu6"),$={x:C};return a.a.runKernelFunc((k,L)=>(L([C]),C.dtype==="bool"?H(C,"int32"):k.relu6(C)),$,null,pe.ac)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const No=Object(D.a)({step_:function(S,C=0){const $=Object(B.a)(S,"x","step"),k={x:$},L={alpha:C};return a.a.runKernelFunc(q=>q.step($,C),k,null,pe.yc,L)}});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fi(S,C,$){if($==null||$==="linear")return S;if($==="relu")return Ot(S,No(C));throw new Error(`Cannot compute gradient for fused activation ${$}.`)}function Ac(S,C){let $=C;const k=hs(S.shape,C.shape);return k.length>0&&($=vn($,k)),Ge($,S.shape)}function so(S,C,$){if(C==="linear")return S;if(C==="relu")return di(S);if(C==="elu")return Ga(S);if(C==="relu6")return Ha(S);if(C==="prelu")return Wa(S,$);throw new Error(`Unknown fused activation ${C}.`)}const Oc=(S,C)=>!(S>0)||C==="linear",bo=30;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ka(S){return S<=bo?S:Object(T.G)(S,Math.floor(Math.sqrt(S)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zo(S,C,$){return[$*(typeof S=="number"?S:S[0]),C*(typeof S=="number"?S:S[1])]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ao(S,C,$,k=!0){let L=[];if(k)L=L.concat(C.slice(0)),L.push(S[0]/$),L=L.concat(S.slice(1));else{L=L.concat(S[0]);const q=C.length;for(let X=0;X<q;++X)L=L.concat([S[X+1]/C[X],C[X]]);L=L.concat(S.slice(q+1))}return L}function Xa(S,C,$=!0){const k=[];if($){k.push(C);for(let L=C+1;L<S;++L)L<=2*C?(k.push(L),k.push(L-(C+1))):k.push(L)}else{const L=[],q=[];for(let X=1;X<S;++X)X>=2*C+1||X%2==1?q.push(X):L.push(X);k.push(...L),k.push(0),k.push(...q)}return k}function Rc(S,C,$,k=!0){const L=[];k?L.push(S[0]/$):L.push(S[0]*$);for(let q=1;q<S.length;++q)q<=C.length?k?L.push(C[q-1]*S[q]):L.push(S[q]/C[q-1]):L.push(S[q]);return L}function Dc(S,C){const $=[0];for(let k=0;k<C;++k)$.push(S[k][0]);return $}function Pc(S,C,$){const k=S.slice(0,1);for(let L=0;L<$;++L)k.push(S[L+1]-C[L][0]-C[L][1]);return k}function Ya(S,C){if(S.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${S.rank}.`);if(C.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${C.rank}.`);if(C.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${C.dtype}.`);if(C.shape[C.rank-1]>S.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${C.shape[C.rank-1]} vs. ${S.rank}`);if(S.size===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${S.shape}.`);const $=C.shape,k=$[$.length-1];let L=1;for(let $e=0;$e<$.length-1;++$e)L*=$[$e];const q=S.shape,X=$.slice();X.pop();let se=1;for(let $e=k;$e<S.rank;++$e)se*=q[$e],X.push(q[$e]);const be=[...Object(T.j)(S.shape).map($e=>$e/se),1].slice(0,k);return[X,L,se,be]}function Qa(S,C,$){const k=C.rank>1?C.shape[C.rank-1]:1,L=C.rank>1?C.rank-1:1,q="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+$.shape+`, indices.shape: ${C.shape}, shape: ${S}, sliceDim: ${k}, and batchDim: ${L}.`;if($.rank<L)throw new Error(q+` update.rank < ${L}. `);if(S.length<k+($.rank-L))throw new Error(q+" Output shape length < "+(k+($.rank-L)));if($.rank!==L+S.length-k)throw new Error(q+" update.rank != "+(L+S.length-k));for(let X=0;X<L;++X)if($.shape[X]!==C.shape[X])throw new Error(q+` updates.shape[${X}] (${$.shape[X]}) != indices.shape[${X}] (${C.shape[X]}).`);for(let X=0;X<$.rank-L;++X)if($.shape[X+L]!==S[X+k])throw new Error(q+` updates.shape[${X+L}] (${$.shape[X+L]}) != shape[${X+L}] (${S[X+L]})`)}function Fc(S,C,$){if(C.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${C.rank}.`);if(S.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${S.rank}.`);if(C.dtype!=="int32")throw new Error("The dtype of 'indices' should be int32, but got dtype: "+C.dtype);if($.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+$);if($.length===0){if(C.size===0)throw new Error("Indices specified for empty output. indices shape: "+C.shape);if(S.size===0)throw new Error("Updates specified for empty output. updates shape: "+S.shape)}Qa($,C,S)}function Mc(S,C,$){const k=C.shape.length,L=k>1?C.shape[k-1]:1,q=$.length;let X=1;for(let be=L;be<q;++be)X*=$[be];const se=L<1?1:L;return{sliceRank:L,numUpdates:Object(T.N)(C.shape)/se,sliceSize:X,strides:[...Object(T.j)($.slice(0,L)),1],outputSize:Object(T.N)($)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ja=1.7580993408473768,Za=1.0507009873554805,ec=.3275911,Sa=.254829592,Ta=-.284496736,tc=1.421413741,Lc=-1.453152027,nc=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sc(...S){Object(l.b)().getBool("IS_TEST")||console.warn(...S)}function Gi(...S){Object(l.b)().getBool("IS_TEST")||console.log(...S)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rc(S,C){if(S.length!==C.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${S.length}, imag: ${C.length}.`);const $=new Float32Array(2*S.length);for(let k=0;k<$.length;k+=2)$[k]=S[k/2],$[k+1]=C[k/2];return $}function zc(S){const C=new Float32Array(S.length/2),$=new Float32Array(S.length/2);for(let k=0;k<S.length;k+=2)C[k/2]=S[k],$[k/2]=S[k+1];return{real:C,imag:$}}function ro(S){const C=Math.ceil(S.length/4),$=new Float32Array(C),k=new Float32Array(C);for(let L=0;L<S.length;L+=4)$[Math.floor(L/4)]=S[L],k[Math.floor(L/4)]=S[L+1];return{real:$,imag:k}}function Bc(S){const C=Math.floor(S.length/4),$=new Float32Array(C),k=new Float32Array(C);for(let L=2;L<S.length;L+=4)$[Math.floor(L/4)]=S[L],k[Math.floor(L/4)]=S[L+1];return{real:$,imag:k}}function Vc(S,C){return{real:S[2*C],imag:S[2*C+1]}}function oc(S,C,$,k){S[2*k]=C,S[2*k+1]=$}function qc(S,C){const $=new Float32Array(S/2),k=new Float32Array(S/2);for(let L=0;L<Math.ceil(S/2);L++){const q=(C?2:-2)*Math.PI*(L/S);$[L]=Math.cos(q),k[L]=Math.sin(q)}return{real:$,imag:k}}function jc(S,C,$){const k=($?2:-2)*Math.PI*(S/C);return{real:Math.cos(k),imag:Math.sin(k)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uc(S,C){let $,k=!1;for(S<=bo?($=S,k=!0):$=Object(T.G)(S,Math.floor(Math.sqrt(S)));!k;)$>C||$===S?k=!0:$=Object(T.G)(S,$+1);return $}function ic(S,C,$){const k=[],L=S.length;for(let q=0;q<L;q++)q!==C?k.push(S[q]):k.push($);return k}function Ca(S,C,$){const k=S.shape[$],L=[];let q=1,X=1;for(let se=0;se<$;se++)L.push(S.shape[se]),q*=S.shape[se];for(let se=0;se<C.rank;se++)L.push(C.shape[se]);for(let se=$+1;se<S.rank;se++)L.push(S.shape[se]),X*=S.shape[se];return{batchSize:q,sliceSize:X,dimSize:k,outputShape:L}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gc(S,C,$){if(C==="complex64"){if(S.dtype==="complex64")return S.clone();const k=ms(S.shape),L=H(S,"float32"),q=$.complex(L,k);return k.dispose(),L.dispose(),q}if(!Object(T.p)(S.dtype,C))return a.a.makeTensorFromDataId(S.dataId,S.shape,C);if(S.dtype==="complex64"){const k=$.real(S),L=H(k,C);return k.dispose(),L}if(C==="int32")return $.int(S);if(C==="bool"){const k=xn(0,S.dtype),L=$.notEqual(S,k);return k.dispose(),L}throw new Error(`Error in Cast: failed to cast ${S.dtype} to ${C}`)}function Wc(S,C){return a.a.makeTensorFromDataId(S.dataId,C,S.dtype)}function Hc(S,C,$){const k=(C-S)/($-1),L=Object(T.F)($,"float32");L[0]=S;for(let q=1;q<L.length;q++)L[q]=L[q-1]+k;return Ir(L,"float32")}var nr=t(46);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wn(S,C,$){const k=new Array(S.rank).fill(0),L=S.shape.slice();return C.map(q=>{const X=[...L];X[$]=q;const se=Zn(S,k,X);return k[$]+=q,se})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ac(S,C){const $=new Array(S.rank);for(let L=0;L<$.length;L++)$[L]=S.shape[L]*C[L];const k=Le($,S.dtype);for(let L=0;L<k.values.length;++L){const q=k.indexToLoc(L),X=new Array(S.rank);for(let be=0;be<X.length;be++)X[be]=q[be]%S.shape[be];const se=S.locToIndex(X);k.values[L]=S.values[se]}return k.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ns(S,C,$,k,L){const q=C[C.length-1],[X,se]=[S.length/q,q],be=Object(T.o)($,X*k),$e=Object(T.o)("int32",X*k);for(let Ke=0;Ke<X;Ke++){const nt=Ke*se,dt=S.subarray(nt,nt+se),$t=[];for(let an=0;an<dt.length;an++)$t.push({value:dt[an],index:an});$t.sort((an,gn)=>gn.value-an.value);const Et=Ke*k,qt=be.subarray(Et,Et+k),mn=$e.subarray(Et,Et+k);for(let an=0;an<k;an++)qt[an]=$t[an].value,mn[an]=$t[an].index}const Fe=C.slice();return Fe[Fe.length-1]=k,[Object(In.a)(be,Fe,$),Object(In.a)($e,Fe,"int32")]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oo(S,C){const $=[];for(let q=0;q<C.length;q++)C[q]&&$.push(q);const k=Le(S,"int32"),L=Le([$.length,S.length],"int32");for(let q=0;q<$.length;q++){const X=k.indexToLoc($[q]),se=q*S.length;L.values.set(X,se)}return L.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var mi=t(39);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const As={kernelName:pe.a,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>Ot(S,No(H($,"float32"),-1))}}},Nr={kernelName:pe.b,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>{const k=vs(H($,"float32")),L=Vr(Kt(xn(1),k));return ws(kn(S,L))}}}},gi={kernelName:pe.c,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>{const k=Vr(Kt(vs(H($,"float32")),1));return kn(S,k)}}}},en={kernelName:pe.d,inputsToSave:["a","b"],gradFunc:(S,C)=>{const[$,k]=C,L=Wn($.shape,k.shape);return{a:()=>{let q=S;const X=hs($.shape,L);return X.length>0&&(q=vn(q,X)),Ge(q,$.shape)},b:()=>{let q=S;const X=hs(k.shape,L);return X.length>0&&(q=vn(q,X)),Ge(q,k.shape)}}}},Ls={kernelName:pe.e,saveAllInputs:!0,gradFunc:(S,C)=>{const $={};return C.forEach((k,L)=>{$[L]=()=>S.clone()}),$}},$a={kernelName:pe.h,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>Dn($)}}},cc={kernelName:pe.i,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>Dn($)}}},uc={kernelName:pe.j,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>kn(S,Vr(Kt(xn(1),vs(H($,"float32")))))}}},_a={kernelName:pe.k,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>{const k=Vr(Ct(xn(1),vs(H($,"float32"))));return kn(S,k)}}}},lc={kernelName:pe.m,inputsToSave:["a","b"],gradFunc:(S,C)=>{const[$,k]=C,L=Wn($.shape,k.shape);return{a:()=>{const q=Ct(vs($),vs(k));let X=Ot(S,kn(k,q));const se=hs($.shape,L);return se.length>0&&(X=vn(X,se)),Ge(X,$.shape)},b:()=>{const q=Ct(vs($),vs(k));let X=ws(Ot(S,kn($,q)));const se=hs(k.shape,L);return se.length>0&&(X=vn(X,se)),Ge(X,k.shape)}}}},Ia={kernelName:pe.l,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>kn(S,Ct(vs(H($,"float32")),1))}}},Kc={kernelName:pe.n,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>kn(S,Kt(xn(1),vs(H($,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hc=Object(D.a)({avgPool3dBackprop_:function(S,C,$,k,L=[1,1,1],q,X){const se=Object(B.a)(S,"dy","avgPool3dBackprop"),be=Object(B.a)(C,"input","avgPool3dBackprop");let $e=se,Fe=be,Ke=!1;be.rank===4&&(Ke=!0,$e=Ge(se,[1,se.shape[0],se.shape[1],se.shape[2],se.shape[3]]),Fe=Ge(be,[1,be.shape[0],be.shape[1],be.shape[2],be.shape[3]])),T.b($e.rank===5,()=>"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+$e.rank+"."),T.b(Fe.rank===5,()=>"Error in avgPool3dBackprop: input must be rank 5 but got rank "+Fe.rank+"."),T.b(Gt(k,L),()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${k} and dilations '${L}'`),X!=null&&T.b(T.v(q),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${X} but got pad ${q}.`);const nt={dy:$e,input:Fe},dt={filterSize:$,strides:k,dilations:L,pad:q,dimRoundingMode:X},$t=a.a.runKernelFunc(Et=>{const qt=Pe(Fe.shape,$,k,L,q,X);return Et.avgPool3dBackprop($e,Fe,qt)},nt,null,pe.q,dt);return Ke?Ge($t,[$t.shape[1],$t.shape[2],$t.shape[3],$t.shape[4]]):$t}}),ei={kernelName:pe.p,inputsToSave:["x"],gradFunc:(S,C,$)=>{const[k]=C,{filterSize:L,strides:q,dilations:X,pad:se,dimRoundingMode:be}=$,$e=X??[1,1,1];return{x:()=>hc(S,k,L,q,$e,se,be)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jr=Object(D.a)({avgPoolBackprop_:function(S,C,$,k,L){const q=Object(B.a)(S,"dy","avgPoolBackprop"),X=Object(B.a)(C,"input","avgPoolBackprop");T.b(X.rank===q.rank,()=>`Rank of input (${X.rank}) does not match rank of dy (${q.rank})`);let se=X,be=q,$e=!1;X.rank===3&&($e=!0,se=Ge(X,[1,X.shape[0],X.shape[1],X.shape[2]]),be=Ge(q,[1,q.shape[0],q.shape[1],q.shape[2]])),T.b(be.rank===4,()=>"Error in avgPoolBackprop: dy must be rank 4 but got rank "+be.rank+"."),T.b(se.rank===4,()=>"Error in avgPoolBackprop: input must be rank 4 but got rank "+se.rank+".");const Fe={dy:be,input:se},Ke={filterSize:$,strides:k,pad:L},nt=a.a.runKernelFunc(dt=>{const $t=Ie(se.shape,$,k,1,L);return dt.avgPoolBackprop(be,se,$t)},Fe,null,pe.r,Ke);return $e?Ge(nt,[nt.shape[1],nt.shape[2],nt.shape[3]]):nt}}),dc={kernelName:pe.o,inputsToSave:["x"],gradFunc:(S,C,$)=>{const[k]=C,{filterSize:L,strides:q,pad:X}=$;return{x:()=>jr(S,k,L,q,X)}}},Ar={kernelName:pe.s,inputsToSave:["a","b"],gradFunc:(S,C,$)=>{const[k,L]=C,{transposeA:q,transposeB:X}=$;return q||X?!q&&X?{a:()=>Jn(S,L,!1,!1),b:()=>Jn(S,k,!0,!1)}:q&&!X?{a:()=>Jn(L,S,!1,!0),b:()=>Jn(k,S,!1,!1)}:{a:()=>Jn(L,S,!0,!0),b:()=>Jn(S,k,!0,!0)}:{a:()=>Jn(S,L,!1,!0),b:()=>Jn(k,S,!0,!1)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qn=Object(D.a)({spaceToBatchND_:function(S,C,$){const k=Object(B.a)(S,"x","spaceToBatchND");T.b(k.rank>=1+C.length,()=>`input rank ${k.rank} should be > than [blockShape] ${C.length}`),T.b($.length===C.length,()=>`paddings.shape[0] ${$.length} must be equal to [blockShape] ${C.length}`),T.b(k.shape.reduce((X,se,be)=>be>0&&be<=C.length?X&&(se+$[be-1][0]+$[be-1][1])%C[be-1]==0:X,!0),()=>`input spatial dimensions ${k.shape.slice(1)} with paddings ${$.toString()} must be divisible by blockShapes ${C.toString()}`);const L={x:k},q={blockShape:C,paddings:$};return a.a.runKernelFunc(X=>X.spaceToBatchND(k,C,$),L,null,pe.tc,q)}}),Xc={kernelName:pe.t,gradFunc:(S,C,$)=>{const{blockShape:k,crops:L}=$;return{x:()=>qn(S,k,L)}}},Oo={kernelName:pe.u,gradFunc:(S,C,$)=>{const k=$,L=k.inputShape,q=k.shape,X=Array.from(q);for(let be=L.length-1;be>=0;be--)if(L[be]===q[be])X[be]=1;else if(L[be]!==1)throw new Error(`broadcastTo(): [${L}] cannot be broadcast to [${q}].`);const se=[];for(let be=0;be<X.length;be++)X[be]>1&&se.push(be);return{x:()=>vn(S,se,!0)}}},xo={kernelName:pe.v,gradFunc:S=>({x:()=>S.clone()})},Wi={kernelName:pe.w,gradFunc:S=>({x:()=>Dn(S)})},ti={kernelName:pe.x,inputsToSave:["x"],gradFunc:(S,C,$)=>{const[k]=C,{clipValueMin:L,clipValueMax:q}=$;return{x:()=>lr(Xo(hr(k,L),Ko(k,q)),S,Dn(S))}}},Yc={kernelName:pe.z,saveAllInputs:!0,gradFunc:(S,C,$)=>{const k=C.map(se=>se.shape),{axis:L}=$,q=Object(T.I)(L,C[0].shape)[0],X=k.map(se=>se[q]);return Zr(S,X,q).map(se=>()=>se)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dr=Object(D.a)({conv2DBackpropFilter_:function(S,C,$,k,L,q="NHWC",X){let se=S;S.rank===3&&(se=Ge(S,[1,S.shape[0],S.shape[1],S.shape[2]]));let be=C;be.rank===3&&(be=Ge(C,[1,C.shape[0],C.shape[1],C.shape[2]])),T.b(se.rank===4,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+se.shape+"."),T.b(be.rank===4,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+be.shape+"."),T.b($.length===4,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+$+".");const $e=q==="NHWC"?se.shape[3]:se.shape[1],Fe=q==="NHWC"?be.shape[3]:be.shape[1];T.b($e===$[2],()=>`Error in conv2dDerFilter: depth of input ${$e}) must match input depth in filter (${$[2]}.`),T.b(Fe===$[3],()=>`Error in conv2dDerFilter: depth of dy (${Fe}) must match output depth for filter (${$[3]}).`),X!=null&&T.b(T.v(L),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${X} but got pad ${L}.`);const Ke={x:se,dy:be},nt={strides:k,pad:L,dataFormat:q,dimRoundingMode:X,filterShape:$};return a.a.runKernelFunc(dt=>{const $t=Tn(q),Et=Ye(se.shape,$,k,1,L,X,!1,$t);return dt.conv2dDerFilter(se,be,Et)},Ke,null,pe.B,nt)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const We=Object(D.a)({conv2DBackpropInput_:function(S,C,$,k,L,q="NHWC",X){T.b(S.length===C.rank,()=>`Length of inShape (${S.length}) and rank of dy (${C.rank}) must match`);let se=S,be=C,$e=!1;C.rank===3&&($e=!0,be=Ge(C,[1,C.shape[0],C.shape[1],C.shape[2]]),se=[1,S[0],S[1],S[2]]),T.b(se.length===4,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+se.length+"."),T.b(be.rank===4,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+be.rank),T.b($.rank===4,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+$.rank);const Fe=q==="NHWC"?se[3]:se[1],Ke=q==="NHWC"?be.shape[3]:be.shape[1];T.b(Fe===$.shape[2],()=>`Error in conv2dDerInput: depth of input (${Fe}) must match input depth for filter ${$.shape[2]}.`),T.b(Ke===$.shape[3],()=>`Error in conv2dDerInput: depth of output (${Ke}) must match output depth for filter ${$.shape[3]}.`),X!=null&&T.b(T.v(L),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${X} but got pad ${L}.`);const nt={dy:be,filter:$},dt={strides:k,pad:L,dataFormat:q,dimRoundingMode:X,inputShape:se},$t=a.a.runKernelFunc((Et,qt)=>{const mn=Tn(q),an=Ye(se,$.shape,k,1,L,X,!1,mn),gn=Et.conv2dDerInput(be,$,an);return qt([be,$]),gn},nt,null,pe.C,dt);return $e?Ge($t,[$t.shape[1],$t.shape[2],$t.shape[3]]):$t}}),wr={kernelName:pe.A,inputsToSave:["x","filter"],gradFunc:(S,C,$)=>{const[k,L]=C,{dilations:q,strides:X,pad:se,dataFormat:be}=$;return T.b(Ht(q),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${q}'`),{x:()=>We(k.shape,S,L,X,se,be),filter:()=>dr(k,S,L.shape,X,se,be)}}},zs={kernelName:pe.C,inputsToSave:["dy","filter"],gradFunc:(S,C,$)=>{const[k,L]=C,{strides:q,pad:X,dataFormat:se,dimRoundingMode:be}=$;return{dy:()=>ns(S,L,q,X,se,1,be),filter:()=>dr(S,k,L.shape,q,X,se,be)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ao=Object(D.a)({conv3DBackpropFilter_:function(S,C,$,k,L){let q=S;S.rank===4&&(q=Ge(S,[1,S.shape[0],S.shape[1],S.shape[2],S.shape[3]]));let X=C;X.rank===4&&(X=Ge(C,[1,C.shape[0],C.shape[1],C.shape[2],C.shape[3]])),T.b(q.rank===5,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+q.shape+"."),T.b(X.rank===5,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+X.shape+"."),T.b($.length===5,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+$+"."),T.b(q.shape[4]===$[3],()=>`Error in conv3dDerFilter: depth of input ${q.shape[4]}) must match input depth in filter (${$[3]}.`),T.b(X.shape[4]===$[4],()=>`Error in conv3dDerFilter: depth of dy (${X.shape[4]}) must match output depth for filter (${$[4]}).`);const se={x:q,dy:X},be={strides:k,pad:L,filterShape:$};return a.a.runKernelFunc($e=>{const Fe=yt(q.shape,$,k,1,L);return $e.conv3dDerFilter(q,X,Fe)},se,null,pe.E,be)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ka=Object(D.a)({conv3DBackpropInput_:function(S,C,$,k,L){T.b(S.length===C.rank,()=>`Length of inShape (${S.length}) and rank of dy (${C.rank}) must match`);let q=S,X=C,se=!1;C.rank===4&&(se=!0,X=Ge(C,[1,C.shape[0],C.shape[1],C.shape[2],C.shape[3]]),q=[1,S[0],S[1],S[2],S[3]]);const be=q[4],$e=X.shape[4];T.b(q.length===5,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+q.length+"."),T.b(X.rank===5,()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+X.rank),T.b($.rank===5,()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+$.rank),T.b(be===$.shape[3],()=>`Error in conv3dDerInput: depth of input (${be}) must match input depth for filter ${$.shape[3]}.`),T.b($e===$.shape[4],()=>`Error in conv3dDerInput: depth of output (${$e}) must match output depth for filter ${$.shape[4]}.`);const Fe={dy:X,filter:$},Ke={pad:L,strides:k,inputShape:q},nt=a.a.runKernelFunc(dt=>{const $t=yt(q,$.shape,k,1,L);return dt.conv3dDerInput(X,$,$t)},Fe,null,pe.F,Ke);return se?Ge(nt,[nt.shape[1],nt.shape[2],nt.shape[3],nt.shape[4]]):nt}}),Ro={kernelName:pe.D,inputsToSave:["x","filter"],gradFunc:(S,C,$)=>{const{dilations:k,strides:L,pad:q}=$;T.b(Ht(k),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${k}'`);const[X,se]=C;return{x:()=>ka(X.shape,S,se,L,q),filter:()=>ao(X,S,se.shape,L,q)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hi=Object(D.a)({sin_:function(S){const C=Object(B.a)(S,"x","sin"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.sin(C);return L([C]),q},$,null,pe.oc)}}),Ki={kernelName:pe.G,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>Ot(ws(Hi(H($,"float32"))),S)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sr=Object(D.a)({sinh_:function(S){const C=Object(B.a)(S,"x","sinh"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.sinh(C);return L([C]),q},$,null,pe.pc)}}),Do={kernelName:pe.H,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>Ot(Sr(H($,"float32")),S)}}},Cn={kernelName:pe.J,inputsToSave:["x"],gradFunc:(S,C,$)=>{const[k]=C,{axis:L,exclusive:q,reverse:X}=$;return{x:()=>{const se=tr([L],k.rank);let be=qo(S,L,q,!X);return se!=null&&(be=ss(be,se)),be}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vo=Object(D.a)({depthwiseConv2dNativeBackpropFilter_:function(S,C,$,k,L,q=[1,1],X){let se=S;S.rank===3&&(se=Ge(S,[1,S.shape[0],S.shape[1],S.shape[2]]));let be=C;be.rank===3&&(be=Ge(C,[1,C.shape[0],C.shape[1],C.shape[2]]));const $e={x:se,dy:be},Fe={strides:k,pad:L,dimRoundingMode:X,dilations:q,filterShape:$};return a.a.runKernelFunc(Ke=>{const nt=Ye(S.shape,$,k,q,L,X,!0);return Ke.depthwiseConv2DDerFilter(se,be,nt)},$e,null,pe.M,Fe)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yi=Object(D.a)({depthwiseConv2dNativeBackpropInput_:function(S,C,$,k,L,q=[1,1],X){let se=C,be=!1;C.rank===3&&(be=!0,se=Ge(C,[1,C.shape[0],C.shape[1],C.shape[2]]));const $e={dy:se,filter:$},Fe={strides:k,pad:L,dimRoundingMode:X,dilations:q,inputShape:S},Ke=a.a.runKernelFunc(nt=>{const dt=Ye(S,$.shape,k,q,L,X,!0);return nt.depthwiseConv2DDerInput(se,$,dt)},$e,null,pe.N,Fe);return be?Ge(Ke,[Ke.shape[1],Ke.shape[2],Ke.shape[3]]):Ke}}),Xi={kernelName:pe.L,inputsToSave:["x","filter"],gradFunc:(S,C,$)=>{const{dilations:k,strides:L,pad:q,dimRoundingMode:X}=$,se=k??[1,1];T.b(Ht(se),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${se}'`);const[be,$e]=C;return T.b(be.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${be.rank}.`),T.b($e.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${$e.rank}.`),T.b(be.shape[3]===$e.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${be.shape[3]}) must match the inChannels dimension in filter ${$e.shape[2]}.`),T.b(Gt(L,se),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${L} and dilations '${se}'.`),X!=null&&T.b(T.v(q),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${X} but got pad ${q}.`),{x:()=>yi(be.shape,S,$e,L,q,k,X),filter:()=>vo(be,S,$e.shape,L,q,k,X)}}},Po={kernelName:pe.O,inputsToSave:["x","filter"],gradFunc:(S,C,$)=>{const[k,L]=C,q={x:k,filter:L,dy:S},X={x:k,filter:L,dy:S};return{x:()=>a.a.runKernel(pe.Q,q,$),filter:()=>a.a.runKernel(pe.P,X,$)}}},Fo={kernelName:pe.R,inputsToSave:["a","b"],gradFunc:(S,C)=>{const[$,k]=C,L=Wn($.shape,k.shape);return{a:()=>{const q=kn(S,H(k,"float32")),X=hs($.shape,L);return X.length>0?Ge(vn(q,X),$.shape):q},b:()=>{let q=Ot(S,H($,"float32"));const X=hs(k.shape,L);X.length>0&&(q=Ge(vn(q,X),k.shape));const se=vs(k);return ws(kn(q,H(se,"float32")))}}}},Ea={kernelName:pe.S,outputsToSave:[!0],gradFunc:(S,C)=>{const[$]=C,k=q=>q.eluDer(S,$),L={dy:S,y:$};return{x:()=>a.a.runKernelFunc(k,L,null,pe.T)}}},Mo={kernelName:pe.V,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C,k=Ot(Er(ws(vs($))),2/Math.sqrt(Math.PI));return{x:()=>Ot(S,k)}}},cn={kernelName:pe.W,outputsToSave:[!0],gradFunc:(S,C)=>{const[$]=C;return{x:()=>Ot(S,$)}}},bi={kernelName:pe.X,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>Ot(S,Er($))}}},Z={kernelName:pe.bb,gradFunc:S=>({x:()=>Dn(S)})},v={kernelName:pe.cb,inputsToSave:["a","b"],gradFunc:(S,C)=>{const[$,k]=C,L=Wn($.shape,k.shape);return{a:()=>{const q=kn(S,H(k,"float32")),X=hs($.shape,L);return X.length>0?Ge(vn(q,X),$.shape):q},b:()=>{let q=Ot(S,H($,"float32"));const X=hs(k.shape,L);X.length>0&&(q=Ge(vn(q,X),k.shape));const se=vs(k);return ws(kn(q,H(se,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E=Object(D.a)({rsqrt_:function(S){const C=Object(B.a)(S,"x","rsqrt"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.rsqrt(C);return L([C]),q},$,null,pe.jc)}}),R={kernelName:pe.eb,inputsToSave:["x","mean","variance","scale"],gradFunc:(S,C,$)=>{const{varianceEpsilon:k}=$,[L,q,X,se]=C,be=se??xn(1),$e=hs(q.shape,L.shape),Fe=[];if(q.rank===1){for(let Et=0;Et<L.shape.length-1;++Et)Fe.push(L.shape[Et]);Fe.push(1)}const Ke=Kt(L,q),nt=Ot(S,be),dt=E(Ct(X,xn(k))),$t=Ot(Ot(Ot(dt,dt),dt),xn(-.5));return{x:()=>q.rank===1?Ge(Ot(Ot(S,eo(Ge(dt,[1,1,1,q.shape[0]]),Fe)),be),L.shape):Ge(Ot(Ot(S,dt),be),L.shape),mean:()=>{let Et=Ot(Ot(dt,xn(-1)),nt);return q.rank===1&&(Et=vn(Et,$e)),Ge(Et,q.shape)},variance:()=>{let Et=Ot(Ot($t,Ke),nt);return q.rank===1&&(Et=vn(Et,$e)),Ge(Et,q.shape)},scale:()=>{const Et=Ot(Ke,dt);let qt=Ot(S,Et);return q.rank===1&&(qt=vn(qt,$e)),Ge(qt,q.shape)},offset:()=>{let Et=S;return q.rank===1&&(Et=vn(Et,$e)),Ge(Et,q.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V=Object(D.a)({unsortedSegmentSum_:function(S,C,$){const k=Object(B.a)(S,"x","unsortedSegmentSum"),L=Object(B.a)(C,"segmentIds","unsortedSegmentSum","int32");Object(T.b)(Object(T.v)($),()=>"numSegments must be of dtype int");const q={x:k,segmentIds:L},X={numSegments:$};return a.a.runKernelFunc((se,be)=>{const $e=se.unsortedSegmentSum(k,L,$);return be([L]),$e},q,null,pe.Jc,X)}}),W={kernelName:pe.fb,inputsToSave:["x","indices"],gradFunc:(S,C,$)=>{const[k,L]=C,{axis:q}=$,X=Object(T.I)(q,k.shape)[0];return{x:()=>{const se=k.shape,be=L.size,$e=se.slice(0,X),Fe=$e.length,Ke=se.slice(q,se.length).slice(1),nt=Ke.length,dt=K(0,Fe),$t=K(Fe+1,Fe+1+nt),Et=re([$e,[be],Ke]),qt=Ge(S,Et),mn=Ge(L,[be]),an=re([[Fe],dt,$t]),gn=ss(qt,an);let En=V(gn,mn,k.shape[X]);const On=Xs(an);return En=ss(En,On),En},indices:()=>L}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K(S,C){const $=[];for(let k=S;k<C;++k)$.push(k);return $}function re(S){const C=[];for(let $=0;$<S.length;++$)for(let k=0;k<S[$].length;++k)C.push(S[$][k]);return C}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ie={kernelName:pe.hb,inputsToSave:["a","b"],gradFunc:(S,C)=>{const[$,k]=C;return{a:()=>Dn($),b:()=>Dn(k)}}},fe={kernelName:pe.jb,gradFunc:S=>({x:()=>H(S,"float32")})},Se={kernelName:pe.lb,gradFunc:S=>({x:()=>Dn(S)})},De={kernelName:pe.mb,gradFunc:S=>({x:()=>Dn(S)})},ke={kernelName:pe.nb,gradFunc:S=>({x:()=>Dn(S)})},Be={kernelName:pe.tb,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>kn(S,Ct($,1))}}},Ve={kernelName:pe.sb,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>kn(S,H($,"float32"))}}},Me={kernelName:pe.ub,inputsToSave:[],outputsToSave:[!0],gradFunc:(S,C,$)=>{const[k]=C,{axis:L}=$;return{logits:()=>{const q=Er(k);return Kt(S,Ot(vn(S,L,!0),q))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ue=Object(D.a)({localResponseNormalizationBackprop_:function(S,C,$,k=5,L=1,q=1,X=.5){const se={x:S,y:C,dy:$},be={depthRadius:k,bias:L,alpha:q,beta:X};return a.a.runKernelFunc($e=>$e.LRNGrad($,S,C,k,L,q,X),se,null,pe.pb,be)}}),mt={kernelName:pe.ob,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(S,C,$)=>{const[k,L]=C,{depthRadius:q,bias:X,alpha:se,beta:be}=$;return{x:()=>Ue(k,L,S,q,X,se,be)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kt=Object(D.a)({equal_:function(S,C){let $=Object(B.a)(S,"a","equal"),k=Object(B.a)(C,"b","equal");[$,k]=Object(Ze.b)($,k),Wn($.shape,k.shape);const L={a:$,b:k};return a.a.runKernelFunc(q=>q.equal($,k),L,null,pe.U)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dt(S,C,$,k){return C.rank<$.rank&&(C=Ge(C,Ks(C.shape,k))),S.rank<$.rank&&(S=Ge(S,Ks(S.shape,k))),{x:()=>Ot(S,H(kt($,C),S.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const it={kernelName:pe.yb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(S,C,$)=>{const k=$,{reductionIndices:L}=k,q=C[0],X=Dt(S,C[1],q,T.I(L,q.shape));return{x:()=>X.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const St=Object(D.a)({less_:function(S,C){let $=Object(B.a)(S,"a","less"),k=Object(B.a)(C,"b","less");[$,k]=Object(Ze.b)($,k),Wn($.shape,k.shape);const L={a:$,b:k};return a.a.runKernelFunc(q=>q.less($,k),L,null,pe.qb)}}),at={kernelName:pe.Eb,inputsToSave:["a","b"],gradFunc:(S,C)=>{const[$,k]=C;return{a:()=>Ot(S,H(hr($,k),"float32")),b:()=>Ot(S,H(St($,k),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wt=Object(D.a)({maxPool3dBackprop_:function(S,C,$,k,L,q=[1,1,1],X,se){const be=Object(B.a)(S,"dy","maxPool3dBackprop"),$e=Object(B.a)(C,"input","maxPool3dBackprop"),Fe=Object(B.a)($,"output","maxPool3dBackprop");let Ke=be,nt=$e,dt=Fe,$t=!1;$e.rank===4&&($t=!0,Ke=Ge(be,[1,be.shape[0],be.shape[1],be.shape[2],be.shape[3]]),nt=Ge($e,[1,$e.shape[0],$e.shape[1],$e.shape[2],$e.shape[3]]),dt=Ge(Fe,[1,Fe.shape[0],Fe.shape[1],Fe.shape[2],Fe.shape[3]])),T.b(Ke.rank===5,()=>"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+Ke.rank+"."),T.b(nt.rank===5,()=>"Error in maxPool3dBackprop: input must be rank 5 but got rank "+nt.rank+"."),T.b(dt.rank===5,()=>"Error in maxPool3dBackprop: output must be rank 5 but got rank "+dt.rank+"."),T.b(Gt(L,q),()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${L} and dilations '${q}'`),se!=null&&T.b(T.v(X),()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${se} but got pad ${X}.`);const Et={dy:Ke,input:nt,output:dt},qt={filterSize:k,strides:L,dilations:q,pad:X,dimRoundingMode:se},mn=a.a.runKernelFunc(an=>{const gn=Pe(nt.shape,k,L,q,X,se);return an.maxPool3dBackprop(Ke,nt,dt,gn)},Et,null,pe.Bb,qt);return $t?Ge(mn,[mn.shape[1],mn.shape[2],mn.shape[3],mn.shape[4]]):mn}}),Ft={kernelName:pe.Ab,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(S,C,$)=>{const[k,L]=C,{filterSize:q,strides:X,dilations:se,pad:be,dimRoundingMode:$e}=$,Fe=se??[1,1,1];return{x:()=>Wt(S,k,L,q,X,Fe,be,$e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dn=Object(D.a)({maxPoolBackprop_:function(S,C,$,k,L,q,X){const se=Object(B.a)(S,"dy","maxPoolBackprop"),be=Object(B.a)(C,"input","maxPoolBackprop"),$e=Object(B.a)($,"output","maxPoolBackprop");T.b(be.rank===se.rank,()=>`Rank of input (${be.rank}) does not match rank of dy (${se.rank})`),T.b(se.rank===4,()=>"Error in maxPoolBackprop: dy must be rank 4 but got rank "+se.rank+"."),T.b(be.rank===4,()=>"Error in maxPoolBackprop: input must be rank 4 but got rank "+be.rank+"."),X!=null&&T.b(T.v(q),()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${X} but got pad ${q}.`);const Fe={dy:se,input:be,output:$e},Ke={filterSize:k,strides:L,pad:q,dimRoundingMode:X};return a.a.runKernelFunc(nt=>{const dt=Ie(be.shape,k,L,1,q,X);return nt.maxPoolBackprop(se,be,$e,dt)},Fe,null,pe.Cb,Ke)}}),Vt={kernelName:pe.zb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(S,C,$)=>{const[k,L]=C,{filterSize:q,strides:X,pad:se}=$;return{x:()=>dn(S,k,L,q,X,se)}}},vt={kernelName:pe.Gb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(S,C,$)=>{const k=$,{axis:L}=k,[q,X]=C,se=Dt(S,X,q,T.I(L,q.shape));return{x:()=>se.x()}}},fn={kernelName:pe.Hb,inputsToSave:["a","b"],gradFunc:(S,C)=>{const[$,k]=C;return{a:()=>Ot(S,H(Ko($,k),"float32")),b:()=>Ot(S,H(yo($,k),"float32"))}}},bn={kernelName:pe.Ib,inputsToSave:["x"],gradFunc:(S,C,$)=>{const k=C[0],{paddings:L}=$,q=L.map(X=>X[0]);return{x:()=>Zn(S,q,k.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xn=Object(D.a)({floor_:function(S){const C=Object(B.a)(S,"x","floor"),$={x:C};return a.a.runKernelFunc(k=>k.floor(C),$,null,pe.bb)}}),sr={kernelName:pe.Jb,inputsToSave:["a","b"],gradFunc:(S,C)=>{const[$,k]=C,L=Wn($.shape,k.shape);return{a:()=>{const q=hs($.shape,L);return q.length>0?Ge(vn(S,q),$.shape):S},b:()=>{const q=Ot(S,ws(Xn(kn($,k)))),X=hs(k.shape,L);return X.length>0?Ge(vn(q,X),k.shape):q}}}},Ut={kernelName:pe.Kb,inputsToSave:["a","b"],gradFunc:(S,C)=>{const[$,k]=C,L=Wn($.shape,k.shape);return{a:()=>{const q=Ot(S,H(k,"float32")),X=hs($.shape,L);return X.length>0?Ge(vn(q,X),$.shape):q},b:()=>{const q=Ot(S,H($,"float32")),X=hs(k.shape,L);return X.length>0?Ge(vn(q,X),k.shape):q}}}},os={kernelName:pe.Lb,gradFunc:S=>({x:()=>ws(S)})},Ss={kernelName:pe.Qb,inputsToSave:["indices"],gradFunc:(S,C)=>{const $=C[0];return{indices:()=>ms($.shape,"float32")}}},Xt={kernelName:pe.Rb,gradFunc:S=>({x:()=>Dn(S)})},gs={kernelName:pe.Sb,inputsToSave:["x"],gradFunc:(S,C,$)=>{const k=C[0],{paddings:L}=$,q=L.map(X=>X[0]);return{x:()=>Zn(S,q,k.shape)}}},rr={kernelName:pe.Tb,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(S,C)=>{const[$,k,L]=C,q=$,X=k,se=Wn(q.shape,X.shape);return{a:()=>{const be=H(X,"float32");let $e=Ot(S,Ot(be,Jr(q,Kt(be,xn(1)))));const Fe=hs(q.shape,se);return Fe.length>0&&($e=vn($e,Fe)),Ge($e,q.shape)},b:()=>{const be=yo(q,0),$e=lr(be,Eo(q),Dn(q));let Fe=Ot(S,Ot(L,$e));const Ke=hs(X.shape,se);return Ke.length>0&&(Fe=vn(Fe,Ke)),Ge(Fe,X.shape)}}}},Qs={kernelName:pe.Ub,inputsToSave:["x","alpha"],gradFunc:(S,C)=>{const[$,k]=C,L=yo($,0);return{x:()=>lr(L,S,Ot(S,k)),alpha:()=>{let q=lr(L,Dn(S),Ot(S,$));const X=hs(k.shape,S.shape);return X.length>0&&(q=vn(q,X)),Ge(q,k.shape)}}}},Is={kernelName:pe.Yb,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>kn(S,ws(vs($)))}}},Js={kernelName:pe.ac,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C,k=Ot(Ko($,6),No($));return{x:()=>Ot(S,H(k,"float32"))}}},Bs={kernelName:pe.Zb,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>Ot(S,H(No($),"float32"))}}},Qc={kernelName:pe.bc,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>Ge(S,$.shape)}}},Yi={kernelName:pe.cc,inputsToSave:["images"],gradFunc:(S,C,$)=>{const[k]=C,L=X=>{const{alignCorners:se}=$;return X.resizeBilinearBackprop(S,k,se)},q={images:k};return{images:()=>a.a.runKernelFunc(L,q,null,pe.dc,$)}}},Qi={kernelName:pe.ec,inputsToSave:["images"],gradFunc:(S,C,$)=>{const[k]=C,L=X=>{const{alignCorners:se}=$;return X.resizeNearestNeighborBackprop(S,k,se)},q={images:k};return{images:()=>a.a.runKernelFunc(L,q,null,pe.fc,$)}}},xu={kernelName:pe.gc,gradFunc:(S,C,$)=>{const{dims:k}=$,L=Object(T.I)(k,S.shape);return{x:()=>Ho(S,L)}}},ds={kernelName:pe.ic,gradFunc:S=>({x:()=>Dn(S)})},vu={kernelName:pe.jc,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>ws(kn(S,Ot(Jr($,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jc=Object(D.a)({logicalNot_:function(S){const C=Object(B.a)(S,"x","logicalNot","bool"),$={x:C};return a.a.runKernelFunc(k=>k.logicalNot(C),$,null,pe.wb)}}),au={kernelName:pe.kc,inputsToSave:["condition"],gradFunc:(S,C)=>{const[$]=C;return{condition:()=>H(Dn($),"float32"),t:()=>Ot(S,H($,S.dtype)),e:()=>Ot(S,H(Jc($),S.dtype))}}},wu={kernelName:pe.lc,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>{const k=yo($,xn(0)),L=xn(Ja),q=xn(Za),X=Ot(S,q),se=Ot(Ot(S,L),Er(H($,"float32")));return lr(k,X,se)}}}},wo={kernelName:pe.mc,outputsToSave:[!0],gradFunc:(S,C)=>{const[$]=C;return{x:()=>Ot(S,Ot($,Kt(xn(1),$)))}}},pc={kernelName:pe.nc,gradFunc:S=>({x:()=>Dn(S)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zc=Object(D.a)({cos_:function(S){const C=Object(B.a)(S,"x","cos"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.cos(C);return L([C]),q},$,null,pe.G)}}),Or={kernelName:pe.oc,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>Ot(Zc(H($,"float32")),S)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rr=Object(D.a)({cosh_:function(S){const C=Object(B.a)(S,"x","cosh"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.cosh(C);return L([C]),q},$,null,pe.H)}}),xi={kernelName:pe.pc,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>Ot(Rr(H($,"float32")),S)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lo=Object(D.a)({pad_:function(S,C,$=0){const k=Object(B.a)(S,"x","pad");if(k.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const L={paddings:C,constantValue:$},q={x:k};return a.a.runKernelFunc((X,se)=>(se([k]),X.pad(k,C,$)),q,null,pe.Sb,L)}}),eu={kernelName:pe.qc,inputsToSave:["x"],gradFunc:(S,C,$)=>{const[k]=C,{begin:L,size:q}=$,X=k.shape,[se,be]=cr(k,L,q),$e=[];for(let Fe=0;Fe<S.rank;Fe++)$e.push([se[Fe],X[Fe]-se[Fe]-be[Fe]]);return{x:()=>Lo(S,$e)}}},Na={kernelName:pe.rc,outputsToSave:[!0],gradFunc:(S,C,$)=>{const[k]=C,{dim:L}=$,q=Ot(S,k);return{logits:()=>Kt(q,Ot(vn(q,[L],!0),k))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ps=Object(D.a)({sigmoid_:function(S){const C=Object(B.a)(S,"x","sigmoid"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.sigmoid(C);return L([q]),q},$,null,pe.mc)}}),zo={kernelName:pe.sc,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>Ot(S,ps($))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const co=Object(D.a)({batchToSpaceND_:function(S,C,$){const k=Object(B.a)(S,"x","batchToSpaceND"),L=C.reduce((se,be)=>se*be);T.b(k.rank>=1+C.length,()=>`input rank is ${k.rank} but should be > than blockShape.length ${C.length}`),T.b($.length===C.length,()=>`crops.length is ${$.length} but should be equal to blockShape.length  ${C.length}`),T.b(k.shape[0]%L==0,()=>`input tensor batch is ${k.shape[0]} but is not divisible by the product of the elements of blockShape ${C.join(" * ")} === ${L}`);const q={x:k},X={blockShape:C,crops:$};return a.a.runKernelFunc(se=>se.batchToSpaceND(k,C,$),q,null,pe.t,X)}}),vi={kernelName:pe.tc,gradFunc:(S,C,$)=>{const{blockShape:k,paddings:L}=$;return{x:()=>co(S,k,L)}}},So={kernelName:pe.uc,gradFunc:(S,C,$)=>{const{axis:k}=$;return{x:()=>Hn(S,k)}}},cu={kernelName:pe.vc,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>kn(S,Ot(Vr(H($,"float32")),2))}}},Ji={kernelName:pe.wc,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>Ot(S,Ot(H($,"float32"),2))}}},wi={kernelName:pe.xc,inputsToSave:["a","b"],gradFunc:(S,C)=>{const[$,k]=C,L=xn(2);return{a:()=>Ot(S,Ot(L,Kt($,k))),b:()=>Ot(S,Ot(L,Kt(k,$)))}}},Zi={kernelName:pe.yc,gradFunc:S=>({x:()=>Dn(S)})},as={kernelName:pe.Ac,inputsToSave:["a","b"],gradFunc:(S,C)=>{const[$,k]=C,L=Wn($.shape,k.shape);return{a:()=>{let q=S;const X=hs($.shape,L);return X.length>0&&(q=vn(q,X)),Ge(q,$.shape)},b:()=>{let q=S;const X=hs(k.shape,L);return X.length>0&&(q=vn(q,X)),Ge(ws(q),k.shape)}}}},fc={kernelName:pe.Bc,inputsToSave:["x"],gradFunc:(S,C,$)=>{const[k]=C,L=k.shape.slice(),{axis:q}=$;Object(T.I)(q,k.shape).forEach(be=>{L[be]=1});const X=Ge(S,L),se=Ot(X,Qo(k.shape,"float32"));return{x:()=>se}}},cs={kernelName:pe.Cc,inputsToSave:["x"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>kn(S,vs(Zc($)))}}},ea={kernelName:pe.Dc,outputsToSave:[!0],gradFunc:(S,C)=>{const[$]=C;return{x:()=>Ot(Kt(xn(1),vs($)),S)}}},Si={kernelName:pe.Ec,inputsToSave:["x"],gradFunc:(S,C,$)=>{const[k]=C,{reps:L}=$;return{x:()=>{let q=Dn(k);if(k.rank===1)for(let X=0;X<L[0];++X)q=Ct(q,Zn(S,[X*k.shape[0]],[k.shape[0]]));else if(k.rank===2)for(let X=0;X<L[0];++X)for(let se=0;se<L[1];++se)q=Ct(q,Zn(S,[X*k.shape[0],se*k.shape[1]],[k.shape[0],k.shape[1]]));else if(k.rank===3)for(let X=0;X<L[0];++X)for(let se=0;se<L[1];++se)for(let be=0;be<L[2];++be)q=Ct(q,Zn(S,[X*k.shape[0],se*k.shape[1],be*k.shape[2]],[k.shape[0],k.shape[1],k.shape[2]]));else{if(k.rank!==4)throw new Error("Gradient for tile operation is not implemented for rank-"+k.rank+" tensors yet.");for(let X=0;X<L[0];++X)for(let se=0;se<L[1];++se)for(let be=0;be<L[2];++be)for(let $e=0;$e<L[3];++$e)q=Ct(q,Zn(S,[X*k.shape[0],se*k.shape[1],be*k.shape[2],$e*k.shape[3]],[k.shape[0],k.shape[1],k.shape[2],k.shape[3]]))}return q}}}},Ti={kernelName:pe.Gc,gradFunc:(S,C,$)=>{const k=$,{perm:L}=k,q=Xs(L);return{x:()=>ss(S,q)}}},ta={kernelName:pe.Ic,gradFunc:(S,C,$)=>{const k=$,{axis:L}=k;return{value:()=>ko(S,L)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ci=Object(D.a)({gather_:function(S,C,$=0){const k=Object(B.a)(S,"x","gather"),L=Object(B.a)(C,"indices","gather","int32"),q={x:k,indices:L},X={axis:$};return a.a.runKernelFunc((se,be)=>{const $e=Object(T.I)($,k.shape)[0],Fe=Ca(k,L,$e),Ke=se.gather(k,Ge(L,[L.size]),$e);return be([k,L]),Ge(Ke,Fe.outputShape)},q,null,pe.fb,X)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aa=Object(D.a)({maximum_:function(S,C){let $=Object(B.a)(S,"a","maximum"),k=Object(B.a)(C,"b","maximum");[$,k]=Object(Ze.b)($,k),$.dtype==="bool"&&($=H($,"int32"),k=H(k,"int32")),Wn($.shape,k.shape);const L={a:$,b:k};return a.a.runKernelFunc((q,X)=>{const se=q.maximum($,k);return X([$,k]),se},L,null,pe.Eb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const To=[As,Nr,gi,en,Ls,$a,cc,uc,_a,lc,Ia,Kc,ei,dc,Ar,Xc,Oo,xo,Wi,ti,Yc,zs,wr,Ro,Ki,Do,Cn,Xi,Po,Fo,Ea,Mo,cn,bi,v,Z,R,W,ie,fe,Se,De,ke,Be,Ve,Me,mt,it,it,at,Ft,Vt,vt,fn,bn,sr,Ut,os,Ss,Xt,gs,gs,rr,Qs,Is,Js,Bs,Qc,Yi,Qi,xu,ds,vu,au,wu,wo,pc,Or,xi,eu,Na,zo,vi,vi,So,So,cu,wi,Ji,Zi,as,fc,cs,ea,Si,Ti,ta,{kernelName:pe.Jc,inputsToSave:["segmentIds"],gradFunc:(S,C)=>{const[$]=C;return{x:()=>function(k,L){const q=Aa(L,Dn(L)),X=Ci(k,q);let se=hr(L,xn(0,"int32"));const be=X.rank-se.rank;for(let Fe=0;Fe<be;++Fe)se=Br(se,Fe+1);se=Xo(se,Qo(X.shape,"bool"));const $e=Dn(X);return lr(se,X,$e)}(S,$)}}},{kernelName:pe.Kc,gradFunc:S=>({x:()=>Dn(S)})}];/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const S of To)Object(Ui.d)(S);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.abs=function(){return this.throwIfDisposed(),Ms(this)};const $i=Object(D.a)({acos_:function(S){const C=Object(B.a)(S,"x","acos"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.acos(C);return L([C]),q},$,null,pe.b)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.acos=function(){return this.throwIfDisposed(),$i(this)};const Co=Object(D.a)({acosh_:function(S){const C=Object(B.a)(S,"x","acosh"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.acosh(C);return L([C]),q},$,null,pe.c)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.acosh=function(){return this.throwIfDisposed(),Co(this)};const Oa=Object(D.a)({mod_:function(S,C){let $=Object(B.a)(S,"a","mod"),k=Object(B.a)(C,"b","mod");[$,k]=Object(Ze.b)($,k);const L={a:$,b:k};return a.a.runKernelFunc((q,X)=>{const se=q.mod($,k);return X([$,k]),se},L,null,pe.Jb)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const or=Object(D.a)({addStrict_:function(S,C){Es("strict variants of ops have been deprecated and will be removed in future");const $=Object(B.a)(S,"a","addStrict"),k=Object(B.a)(C,"b","addStrict");return T.e($.shape,k.shape,"Error in addStrict: "),Ct($,k)}}),uu=Object(D.a)({divStrict_:function(S,C){Es("strict variants of ops have been deprecated and will be removed in future");const $=Object(B.a)(S,"a","div"),k=Object(B.a)(C,"b","div");return T.e($.shape,k.shape,"Error in divideStrict: "),kn($,k)}}),Bo=Object(D.a)({maximumStrict_:function(S,C){Es("strict variants of ops have been deprecated and will be removed in future");const $=Object(B.a)(S,"a","maximumStrict"),k=Object(B.a)(C,"b","maximumStrict");return T.e($.shape,k.shape,"Error in maximumStrict: "),Aa($,k)}}),_i=Object(D.a)({minimumStrict_:function(S,C){Es("strict variants of ops have been deprecated and will be removed in future");const $=Object(B.a)(S,"a","minimumStrict"),k=Object(B.a)(C,"b","minimumStrict");return T.e($.shape,k.shape,"Error in minimumStrict: "),Jo($,k)}}),mc=Object(D.a)({modStrict_:function(S,C){Es("strict variants of ops have been deprecated and will be removed in future");const $=Object(B.a)(S,"a","modStrict"),k=Object(B.a)(C,"b","modStrict");return T.e($.shape,k.shape,"Error in modStrict: "),Oa($,k)}}),gc=Object(D.a)({mulStrict_:function(S,C){Es("strict variants of ops have been deprecated and will be removed in future");const $=Object(B.a)(S,"a","mul"),k=Object(B.a)(C,"b","mul");return T.e($.shape,k.shape,"Error in multiplyStrict: "),Ot($,k)}}),lu=Object(D.a)({powStrict_:function(S,C){return Es("strict variants of ops have been deprecated and will be removed in future"),T.e(S.shape,C.shape,"Error in powStrict: "),Jr(S,C)}}),hu=Object(D.a)({squaredDifferenceStrict_:function(S,C){Es("strict variants of ops have been deprecated and will be removed in future");const $=Object(B.a)(S,"a","squaredDifferenceStrict"),k=Object(B.a)(C,"b","squaredDifferenceStrict");return T.e($.shape,k.shape,"Error in squaredDifferenceStrict: "),pi($,k)}}),tu=Object(D.a)({subStrict_:function(S,C){Es("strict variants of ops have been deprecated and will be removed in future");const $=Object(B.a)(S,"a","subStrict"),k=Object(B.a)(C,"b","subStrict");return T.e($.shape,k.shape,"Error in subStrict: "),Kt($,k)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.addStrict=function(S){return this.throwIfDisposed(),or(this,S)},we.a.prototype.add=function(S){return this.throwIfDisposed(),Ct(this,S)};const Ii=Object(D.a)({all_:function(S,C=null,$=!1){let k=Object(B.a)(S,"x","all","bool");const L={x:k},q={axis:C,keepDims:$};return a.a.runKernelFunc(X=>{const se=Object(T.I)(C,k.shape);let be=se;const $e=tr(be,k.rank);$e!=null&&(k=ss(k,$e),be=ur(be.length,k.rank));const Fe=X.all(k,be);if($){const Ke=Ks(Fe.shape,se);return Ge(Fe,Ke)}return Fe},L,null,pe.f,q)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.all=function(S,C){return this.throwIfDisposed(),Ii(this,S,C)};const yc=Object(D.a)({any_:function(S,C=null,$=!1){let k=Object(B.a)(S,"x","any","bool");const L={x:k},q={axis:C,keepDims:$};return a.a.runKernelFunc(X=>{const se=Object(T.I)(C,k.shape);let be=se;const $e=tr(be,k.rank);$e!=null&&(k=ss(k,$e),be=ur(be.length,k.rank));const Fe=X.any(k,be);if($){const Ke=Ks(Fe.shape,se);return Ge(Fe,Ke)}return Fe},L,null,pe.g,q)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.any=function(S,C){return this.throwIfDisposed(),yc(this,S,C)};const Ra=Object(D.a)({argMax_:function(S,C=0){let $=Object(B.a)(S,"x","argMax");const k={x:$},L={axis:C};return a.a.runKernelFunc((q,X)=>{X([$]);let se=T.I(C,$.shape);const be=tr(se,$.rank);return be!=null&&($=ss($,be),se=ur(se.length,$.rank)),q.argMax($,se[0])},k,null,pe.h,L)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.argMax=function(S){return this.throwIfDisposed(),Ra(this,S)};const Da=Object(D.a)({argMin_:function(S,C=0){let $=Object(B.a)(S,"x","argMin");const k={x:$},L={axis:C};return a.a.runKernelFunc((q,X)=>{X([$]),C==null&&(C=0);let se=T.I(C,$.shape);const be=tr(se,$.rank);return be!=null&&($=ss($,be),se=ur(se.length,$.rank)),q.argMin($,se[0])},k,null,pe.i,L)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.argMin=function(S){return this.throwIfDisposed(),Da(this,S)},we.a.prototype.asScalar=function(){return this.throwIfDisposed(),Object(T.b)(this.size===1,()=>"The array must have only 1 element."),Ge(this,[])},we.a.prototype.asType=function(S){return this.throwIfDisposed(),H(this,S)},we.a.prototype.as1D=function(){return this.throwIfDisposed(),Ge(this,[this.size])},we.a.prototype.as2D=function(S,C){return this.throwIfDisposed(),Ge(this,[S,C])},we.a.prototype.as3D=function(S,C,$){return this.throwIfDisposed(),Ge(this,[S,C,$])},we.a.prototype.as4D=function(S,C,$,k){return this.throwIfDisposed(),Ge(this,[S,C,$,k])},we.a.prototype.as5D=function(S,C,$,k,L){return this.throwIfDisposed(),Ge(this,[S,C,$,k,L])};const Su=Object(D.a)({asin_:function(S){const C=Object(B.a)(S,"x","asin"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.asin(C);return L([C]),q},$,null,pe.j)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.asin=function(){return this.throwIfDisposed(),Su(this)};const js=Object(D.a)({asinh_:function(S){const C=Object(B.a)(S,"x","asinh"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.asinh(C);return L([C]),q},$,null,pe.k)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.asinh=function(){return this.throwIfDisposed(),js(this)};const bc=Object(D.a)({atan_:function(S){const C=Object(B.a)(S,"x","atan"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.atan(C);return L([C]),q},$,null,pe.l)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.atan=function(){return this.throwIfDisposed(),bc(this)};const Dr=Object(D.a)({atan2_:function(S,C){let $=Object(B.a)(S,"a","atan2"),k=Object(B.a)(C,"b","atan2");[$,k]=Object(Ze.b)($,k);const L={a:$,b:k};return a.a.runKernelFunc((q,X)=>{const se=q.atan2($,k);return X([$,k]),se},L,null,pe.m)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.atan2=function(S){return this.throwIfDisposed(),Dr(this,S)};const Us=Object(D.a)({atanh_:function(S){const C=Object(B.a)(S,"x","atanh"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.atanh(C);return L([C]),q},$,null,pe.n)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.atanh=function(){return this.throwIfDisposed(),Us(this)};const ki=Object(D.a)({avgPool_:function(S,C,$,k,L){const q=Object(B.a)(S,"x","avgPool","float32");T.b(Gt($,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${$} and dilations '1'`);let X=q,se=!1;q.rank===3&&(se=!0,X=Ge(q,[1,q.shape[0],q.shape[1],q.shape[2]])),T.b(X.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${X.rank}.`),L!=null&&T.b(T.v(k),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${L} but got pad ${k}.`);const be={x:X},$e={filterSize:C,strides:$,pad:k,dimRoundingMode:L};let Fe=a.a.runKernelFunc((Ke,nt)=>{const dt=Ie(X.shape,C,$,1,k,L);return nt([X]),dt.filterWidth===1&&dt.filterHeight===1&&T.a(dt.inShape,dt.outShape)?X.clone():Ke.avgPool(X,dt)},be,null,pe.o,$e);return Fe=H(Fe,q.dtype),se?Ge(Fe,[Fe.shape[1],Fe.shape[2],Fe.shape[3]]):Fe}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.avgPool=function(S,C,$,k){return this.throwIfDisposed(),ki(this,S,C,$,k)},we.a.prototype.batchToSpaceND=function(S,C){return this.throwIfDisposed(),co(this,S,C)},we.a.prototype.batchNorm=function(S,C,$,k,L){return this.throwIfDisposed(),sn(this,S,C,$,k,L)},we.a.prototype.broadcastTo=function(S){return this.throwIfDisposed(),Go(this,S)},we.a.prototype.cast=function(S){return this.throwIfDisposed(),H(this,S)};const Vo=Object(D.a)({ceil_:function(S){const C=Object(B.a)(S,"x","ceil"),$={x:C};return a.a.runKernelFunc(k=>k.ceil(C),$,null,pe.w)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.ceil=function(){return this.throwIfDisposed(),Vo(this)};const na=Object(D.a)({clipByValue_:function(S,C,$){const k=Object(B.a)(S,"x","clipByValue");T.b(C<=$,()=>`Error in clip: min (${C}) must be less than or equal to max (${$}).`);const L={x:k},q={clipValueMin:C,clipValueMax:$};return a.a.runKernelFunc((X,se)=>{const be=X.clip(k,C,$);return se([k]),be},L,null,pe.x,q)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.clipByValue=function(S,C){return this.throwIfDisposed(),na(this,S,C)},we.a.prototype.concat=function(S,C){return this.throwIfDisposed(),S instanceof we.a&&(S=[S]),Hn([this,...S],C)};const nu=Object(D.a)({conv1d_:function(S,C,$,k,L="NWC",q=1,X){const se=Object(B.a)(S,"x","conv1d"),be=Object(B.a)(C,"filter","conv1d");let $e=se,Fe=!1;se.rank===2&&(Fe=!0,$e=Ge(se,[1,se.shape[0],se.shape[1]])),T.b($e.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${$e.rank}.`),T.b(be.rank===3,()=>"Error in conv1d: filter must be rank 3, but got rank "+be.rank+"."),X!=null&&T.b(T.v(k),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${X} but got pad ${k}.`),T.b($e.shape[2]===be.shape[1],()=>`Error in conv1d: depth of input (${$e.shape[2]}) must match input depth for filter ${be.shape[1]}.`),T.b(Gt($,q),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${$} and dilation '${q}'`),T.b(L==="NWC",()=>`Error in conv1d: got dataFormat of ${L} but only NWC is currently supported.`);const Ke=Ge(be,[1,be.shape[0],be.shape[1],be.shape[2]]),nt=Ge($e,[$e.shape[0],1,$e.shape[1],$e.shape[2]]),dt=ns(nt,Ke,[1,$],k,"NHWC",[1,q],X);return Ge(dt,Fe?[dt.shape[2],dt.shape[3]]:[dt.shape[0],dt.shape[2],dt.shape[3]])}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.conv1d=function(S,C,$,k,L,q){return this.throwIfDisposed(),nu(this,S,C,$,k,L,q)};const sa=Object(D.a)({conv2dTranspose_:function(S,C,$,k,L,q){const X=Object(B.a)(S,"x","conv2dTranspose"),se=Object(B.a)(C,"filter","conv2dTranspose");return We($,X,se,k,L,"NHWC",q)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.conv2dTranspose=function(S,C,$,k,L){return this.throwIfDisposed(),sa(this,S,C,$,k,L)},we.a.prototype.conv2d=function(S,C,$,k,L,q){return this.throwIfDisposed(),ns(this,S,C,$,k,L,q)},we.a.prototype.cos=function(){return this.throwIfDisposed(),Zc(this)},we.a.prototype.cosh=function(){return this.throwIfDisposed(),Rr(this)},we.a.prototype.cumsum=function(S,C,$){return this.throwIfDisposed(),qo(this,S,C,$)};const Tr=Object(D.a)({depthToSpace_:function(S,C,$="NHWC"){const k=Object(B.a)(S,"x","depthToSpace"),L=$==="NHWC"?k.shape[1]:k.shape[2],q=$==="NHWC"?k.shape[2]:k.shape[3],X=$==="NHWC"?k.shape[3]:k.shape[1];T.b(L*C>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${L} and ${C}  for depthToSpace with input shape
    ${k.shape}`),T.b(q*C>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${q} and ${C} for depthToSpace with input shape
        ${k.shape}`),T.b(X%(C*C)==0,()=>`Dimension size must be evenly divisible by ${C*C} but is ${X} for depthToSpace with input shape ${k.shape}`);const se={x:k},be={blockSize:C,dataFormat:$};return a.a.runKernelFunc($e=>$e.depthToSpace(k,C,$),se,null,pe.K,be)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.depthToSpace=function(S,C){return this.throwIfDisposed(),Tr(this,S,C)},we.a.prototype.depthwiseConv2D=function(S,C,$,k,L,q){return Es("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),po(this,S,C,$,k,L,q)},we.a.prototype.depthwiseConv2d=function(S,C,$,k,L,q){return this.throwIfDisposed(),po(this,S,C,$,k,L,q)};const ra=Object(D.a)({dilation2d_:function(S,C,$,k,L=[1,1],q="NHWC"){const X=Object(B.a)(S,"x","dilation2d"),se=Object(B.a)(C,"filter","dilation2d");T.b(X.rank===3||X.rank===4,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+X.rank+"."),T.b(se.rank===3,()=>"Error in dilation2d: filter must be rank 3, but got rank "+se.rank+"."),T.b(q==="NHWC",()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+q);let be=X,$e=!1;X.rank===3&&(be=Ge(X,[1,X.shape[0],X.shape[1],X.shape[2]]),$e=!0);const Fe={x:be,filter:se},Ke={strides:$,pad:k,dilations:L},nt=a.a.runKernel(pe.O,Fe,Ke);return $e?Ge(nt,[nt.shape[1],nt.shape[2],nt.shape[3]]):nt}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.dilation2d=function(S,C,$,k,L){return this.throwIfDisposed(),ra(this,S,C,$,k,L)};const ni=Object(D.a)({divNoNan_:function(S,C){let $=Object(B.a)(S,"a","div"),k=Object(B.a)(C,"b","div");[$,k]=Object(Ze.b)($,k);const L=kn($,k),q=Dn(L),X=kt(k,q);return lr(X,q,L)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.divNoNan=function(S){return this.throwIfDisposed(),ni(this,S)},we.a.prototype.divStrict=function(S){return this.throwIfDisposed(),uu(this,S)},we.a.prototype.div=function(S){return this.throwIfDisposed(),kn(this,S)};const xc=Object(D.a)({dot_:function(S,C){const $=Object(B.a)(S,"t1","dot"),k=Object(B.a)(C,"t2","dot");T.b(!($.rank!==1&&$.rank!==2||k.rank!==1&&k.rank!==2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${$.rank} and ${k.rank}.`);const L=$.rank===1?$.size:$.shape[1],q=k.rank===1?k.size:k.shape[0];if(T.b(L===q,()=>`Error in dot: inner dimensions of inputs must match, but got ${L} and ${q}.`),$.rank===1&&k.rank===1){const X=Ge($,[1,-1]),se=Ge(k,[-1,1]),be=Jn(X,se);return Ge(be,[])}if($.rank===1&&k.rank===2){const X=Ge($,[1,-1]),se=Ge(k,[k.shape[0],k.shape[1]]),be=Jn(X,se);return Ge(be,[be.size])}if($.rank===2&&k.rank===1){const X=Ge(k,[-1,1]),se=Jn($,X);return Ge(se,[se.size])}{const X=Ge(k,[k.shape[0],k.shape[1]]);return Jn($,X)}}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.dot=function(S){return this.throwIfDisposed(),xc(this,S)},we.a.prototype.elu=function(){return this.throwIfDisposed(),Ga(this)};const vc=Object(D.a)({equalStrict_:function(S,C){Es("strict variants of ops have been deprecated and will be removed in future");const $=Object(B.a)(S,"a","equalStrict"),k=Object(B.a)(C,"b","equalStrict");return Object(T.e)($.shape,k.shape,"Error in equalStrict: "),kt($,k)}}),du=Object(D.a)({greaterEqualStrict_:function(S,C){Es("strict variants of ops have been deprecated and will be removed in future");const $=Object(B.a)(S,"a","greaterEqualStrict"),k=Object(B.a)(C,"b","greaterEqualStrict");return Object(T.e)($.shape,k.shape,"Error in greaterEqualStrict: "),hr($,k)}}),wc=Object(D.a)({greaterStrict_:function(S,C){Es("strict variants of ops have been deprecated and will be removed in future");const $=Object(B.a)(S,"a","greaterStrict"),k=Object(B.a)(C,"b","greaterStrict");return Object(T.e)($.shape,k.shape,"Error in greaterStrict: "),yo($,k)}}),oa=Object(D.a)({lessEqualStrict_:function(S,C){Es("strict variants of ops have been deprecated and will be removed in future");const $=Object(B.a)(S,"a","lessEqualStrict"),k=Object(B.a)(C,"b","lessEqualStrict");return Object(T.e)($.shape,k.shape,"Error in lessEqualStrict: "),Ko($,k)}}),Sc=Object(D.a)({lessStrict_:function(S,C){Es("strict variants of ops have been deprecated and will be removed in future");const $=Object(B.a)(S,"a","lessStrict"),k=Object(B.a)(C,"b","lessStrict");return Object(T.e)($.shape,k.shape,"Error in lessStrict: "),St($,k)}}),su=Object(D.a)({notEqualStrict_:function(S,C){Es("strict variants of ops have been deprecated and will be removed in future");const $=Object(B.a)(S,"a","notEqualStrict"),k=Object(B.a)(C,"b","notEqualStrict");return Object(T.e)($.shape,k.shape,"Error in notEqualStrict: "),hi($,k)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.equalStrict=function(S){return this.throwIfDisposed(),vc(this,S)},we.a.prototype.equal=function(S){return this.throwIfDisposed(),kt(this,S)};const ru=Object(D.a)({erf_:function(S){let C=Object(B.a)(S,"x","erf");T.b(C.dtype==="int32"||C.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),C.dtype==="int32"&&(C=H(C,"float32"));const $={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.erf(C);return L([C]),q},$,null,pe.V)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.erf=function(){return this.throwIfDisposed(),ru(this)},we.a.prototype.exp=function(){return this.throwIfDisposed(),Er(this)},we.a.prototype.expandDims=function(S){return this.throwIfDisposed(),Br(this,S)};const pu=Object(D.a)({expm1_:function(S){const C=Object(B.a)(S,"x","expm1"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.expm1(C);return L([C]),q},$,null,pe.X)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.expm1=function(){return this.throwIfDisposed(),pu(this)},we.a.prototype.fft=function(){return this.throwIfDisposed(),Bi(this)},we.a.prototype.flatten=function(){return this.throwIfDisposed(),Ge(this,[this.size])},we.a.prototype.floor=function(){return this.throwIfDisposed(),Xn(this)},we.a.prototype.floorDiv=function(S){return this.throwIfDisposed(),ii(this,S)},we.a.prototype.gather=function(S,C){return this.throwIfDisposed(),Ci(this,S,C)},we.a.prototype.greaterEqualStrict=function(S){return this.throwIfDisposed(),du(this,S)},we.a.prototype.greaterEqual=function(S){return this.throwIfDisposed(),hr(this,S)},we.a.prototype.greaterStrict=function(S){return this.throwIfDisposed(),wc(this,S)},we.a.prototype.greater=function(S){return this.throwIfDisposed(),yo(this,S)},we.a.prototype.ifft=function(){return this.throwIfDisposed(),ai(this)},we.a.prototype.irfft=function(){return this.throwIfDisposed(),ga(this)};const ou=Object(D.a)({isFinite_:function(S){const C=Object(B.a)(S,"x","isFinite"),$={x:C};return a.a.runKernelFunc(k=>k.isFinite(C),$,null,pe.lb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.isFinite=function(){return this.throwIfDisposed(),ou(this)};const fu=Object(D.a)({isInf_:function(S){const C=Object(B.a)(S,"x","isInf"),$={x:C};return a.a.runKernelFunc(k=>k.isInf(C),$,null,pe.mb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.isInf=function(){return this.throwIfDisposed(),fu(this)};const ia=Object(D.a)({isNaN_:function(S){const C=Object(B.a)(S,"x","isNaN"),$={x:C};return a.a.runKernelFunc(k=>k.isNaN(C),$,null,pe.nb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.isNaN=function(){return this.throwIfDisposed(),ia(this)};const aa=Object(D.a)({leakyRelu_:function(S,C=.2){const $=Object(B.a)(S,"x","leakyRelu");return Aa(Ot(xn(C),$),$)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.leakyRelu=function(S){return this.throwIfDisposed(),aa(this,S)},we.a.prototype.lessEqualStrict=function(S){return this.throwIfDisposed(),oa(this,S)},we.a.prototype.lessEqual=function(S){return this.throwIfDisposed(),Ko(this,S)},we.a.prototype.lessStrict=function(S){return this.throwIfDisposed(),Sc(this,S)},we.a.prototype.less=function(S){return this.throwIfDisposed(),St(this,S)};const ca=Object(D.a)({localResponseNormalization_:function(S,C=5,$=1,k=1,L=.5){const q=Object(B.a)(S,"x","localResponseNormalization");T.b(q.rank===4||q.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${q.rank}.`),T.b(T.v(C),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${C}.`);let X=q,se=!1;q.rank===3&&(se=!0,X=Ge(q,[1,q.shape[0],q.shape[1],q.shape[2]]));const be={x:X},$e={depthRadius:C,bias:$,alpha:k,beta:L},Fe=a.a.runKernelFunc((Ke,nt)=>{const dt=Ke.localResponseNormalization4D(X,C,$,k,L);return nt([X,dt]),dt},be,null,pe.ob,$e);return se?Ge(Fe,[Fe.shape[1],Fe.shape[2],Fe.shape[3]]):Fe}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.localResponseNormalization=function(S,C,$,k){return this.throwIfDisposed(),ca(this,S,C,$,k)};const Pa=Object(D.a)({softplus_:function(S){const C=Object(B.a)(S,"x","softplus"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.softplus(C);return L([C]),q},$,null,pe.sc)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tc=Object(D.a)({logSigmoid_:function(S){const C=Object(B.a)(S,"x","logSigmoid");return ji($=>({value:ws(Pa(ws($))),gradFunc:k=>Ot(k,ps(ws($)))}))(C)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.logSigmoid=function(){return this.throwIfDisposed(),Tc(this)};const ua=Object(D.a)({logSoftmax_:function(S,C=-1){const $=Object(B.a)(S,"logits","logSoftmax");if(C===-1&&(C=$.rank-1),C!==$.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${$.rank} and axis was ${C}`);const k={logits:$},L={axis:C};return a.a.runKernelFunc((q,X)=>{const se=Qr(S,C,!0),be=Kt(S,se),$e=Kt(H(be,"float32"),Eo(vn(Er(be),C,!0)));return X([$e]),$e},k,null,pe.ub,L)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.logSoftmax=function(S){return this.throwIfDisposed(),ua(this,S)},we.a.prototype.logSumExp=function(S,C){return this.throwIfDisposed(),Ua(this,S,C)},we.a.prototype.log=function(){return this.throwIfDisposed(),Eo(this)},we.a.prototype.log1p=function(){return this.throwIfDisposed(),no(this)},we.a.prototype.logicalAnd=function(S){return this.throwIfDisposed(),Xo(this,S)},we.a.prototype.logicalNot=function(){return this.throwIfDisposed(),Jc(this)};const Ur=Object(D.a)({logicalOr_:function(S,C){const $=Object(B.a)(S,"a","logicalOr","bool"),k=Object(B.a)(C,"b","logicalOr","bool");Wn($.shape,k.shape);const L={a:$,b:k};return a.a.runKernelFunc(q=>q.logicalOr($,k),L,null,pe.xb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.logicalOr=function(S){return this.throwIfDisposed(),Ur(this,S)};const la=Object(D.a)({logicalXor_:function(S,C){const $=Object(B.a)(S,"a","logicalXor","bool"),k=Object(B.a)(C,"b","logicalXor","bool");return Wn($.shape,k.shape),Xo(Ur(S,C),Jc(Xo(S,C)))}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.logicalXor=function(S){return this.throwIfDisposed(),la(this,S)},we.a.prototype.matMul=function(S,C,$){return this.throwIfDisposed(),Jn(this,S,C,$)},we.a.prototype.maxPool=function(S,C,$,k){return this.throwIfDisposed(),jo(this,S,C,$,k)},we.a.prototype.max=function(S,C){return this.throwIfDisposed(),Qr(this,S,C)},we.a.prototype.maximumStrict=function(S){return this.throwIfDisposed(),Bo(this,S)},we.a.prototype.maximum=function(S){return this.throwIfDisposed(),Aa(this,S)},we.a.prototype.mean=function(S,C){return this.throwIfDisposed(),wa(this,S,C)},we.a.prototype.min=function(S,C){return this.throwIfDisposed(),ba(this,S,C)},we.a.prototype.minimumStrict=function(S){return this.throwIfDisposed(),_i(this,S)},we.a.prototype.minimum=function(S){return this.throwIfDisposed(),Jo(this,S)};const ha=Object(D.a)({mirrorPad_:function(S,C,$){T.b($==="reflect"||$==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${$}.`);const k=Object(B.a)(S,"x","mirrorPad");if(k.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");T.b(C.length===k.rank,()=>`Padding doesn't match input. Must be ${k.rank}. Got ${C.length}.`);const L=$==="reflect"?1:0;for(let se=0;se<k.rank;se++)T.b(C[se].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),T.b(C[se][0]>=0&&C[se][0]<=k.shape[se]-L&&C[se][1]>=0&&C[se][1]<=k.shape[se]-L,()=>`Padding in dimension ${se} cannot be greater than or equal to ${k.shape[se]-L} or less than 0 for input of shape `+k.shape);const q={paddings:C,mode:$},X={x:k};return a.a.runKernel(pe.Ib,X,q)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.mirrorPad=function(S,C){return this.throwIfDisposed(),ha(this,S,C)},we.a.prototype.modStrict=function(S){return this.throwIfDisposed(),mc(this,S)},we.a.prototype.mod=function(S){return this.throwIfDisposed(),Oa(this,S)},we.a.prototype.mulStrict=function(S){return this.throwIfDisposed(),gc(this,S)},we.a.prototype.mul=function(S){return this.throwIfDisposed(),Ot(this,S)},we.a.prototype.neg=function(){return this.throwIfDisposed(),ws(this)},we.a.prototype.norm=function(S,C,$){return this.throwIfDisposed(),xa(this,S,C,$)},we.a.prototype.notEqualStrict=function(S){return this.throwIfDisposed(),su(this,S)},we.a.prototype.notEqual=function(S){return this.throwIfDisposed(),hi(this,S)},we.a.prototype.oneHot=function(S,C=1,$=0){return this.throwIfDisposed(),Pi(this,S,C,$)};const mu=Object(D.a)({onesLike_:function(S){const C=Object(B.a)(S,"x","onesLike"),$={x:C};return a.a.runKernelFunc((k,L)=>{if(C.dtype==="complex64"){const q=mu(Wo(C)),X=Dn(rs(C));return Object(xr.a)(q,X)}return k.onesLike(C)},$,null,pe.Rb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.onesLike=function(){return this.throwIfDisposed(),mu(this)},we.a.prototype.pad=function(S,C){return this.throwIfDisposed(),Lo(this,S,C)};const Tu=Object(D.a)({pool_:function(S,C,$,k,L,q){L==null&&(L=[1,1]),q==null&&(q=1),k===0&&(k="valid");const X=Object(B.a)(S,"x","maxPool");let se=X,be=!1;X.rank===3&&(be=!0,se=Ge(X,[1,X.shape[0],X.shape[1],X.shape[2]])),T.b(Gt(q,L),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${q} and dilations '${L}'`);const $e=Ie(se.shape,C,q,L,k),Fe=[$e.dilationHeight,$e.dilationWidth];let Ke;Ke=k==="same"?function(gn,En){const On=gn.map((Pn,Ts)=>Pn+(Pn-1)*(En[Ts]-1)).map(Pn=>Pn-1),Mn=On.map(Pn=>Math.floor(Pn/2)),Zs=On.map((Pn,Ts)=>Pn-Mn[Ts]);return On.map((Pn,Ts)=>[Mn[Ts],Zs[Ts]])}([$e.filterHeight,$e.filterWidth],Fe):[[0,0],[0,0]];const nt=Fe[0]===1&&Fe[1]===1,[dt,$t]=function(gn,En,On){const Mn=On.map(fs=>fs[0]),Zs=On.map(fs=>fs[1]),Pn=gn.concat(Mn,Zs),Ts=En.map((fs,Os)=>(fs-Pn[Os]%fs)%fs),is=Zs.map((fs,Os)=>fs+Ts[Os]),Gr=En.map((fs,Os)=>[Mn[Os],is[Os]]),Cr=En.map((fs,Os)=>[0,Ts[Os]]);return[Gr,Cr]}([$e.inHeight,$e.inWidth],Fe,Ke),Et=nt?k:"valid",qt=nt?se:qn(se,Fe,dt),mn=($==="avg"?()=>ki(qt,C,q,Et):()=>jo(qt,C,q,Et))(),an=nt?mn:co(mn,Fe,$t);return be?Ge(an,[an.shape[1],an.shape[2],an.shape[3]]):an}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.pool=function(S,C,$,k,L){return this.throwIfDisposed(),Tu(this,S,C,$,k,L)},we.a.prototype.powStrict=function(S){return this.throwIfDisposed(),lu(this,S)},we.a.prototype.pow=function(S){return this.throwIfDisposed(),Jr(this,S)},we.a.prototype.prelu=function(S){return this.throwIfDisposed(),Wa(this,S)};const Fa=Object(D.a)({prod_:function(S,C=null,$=!1){let k=Object(B.a)(S,"x","prod");k.dtype==="bool"&&(k=H(k,"int32"));const L={x:k},q={axis:C,keepDims:$};return a.a.runKernelFunc(X=>{const se=Object(T.I)(C,k.shape),be=tr(se,k.rank);let $e=se,Fe=k;be!=null&&(Fe=ss(k,be),$e=ur($e.length,k.rank));let Ke=X.prod(Fe,$e);if($){const nt=Ks(Ke.shape,se);Ke=Ge(Ke,nt)}return Ke},L,null,pe.Vb,q)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.prod=function(S,C){return this.throwIfDisposed(),Fa(this,S,C)};const gu=Object(D.a)({reciprocal_:function(S){const C=Object(B.a)(S,"x","reciprocal"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.reciprocal(C);return L([C]),q},$,null,pe.Yb)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.reciprocal=function(){return this.throwIfDisposed(),gu(this)},we.a.prototype.relu=function(){return this.throwIfDisposed(),di(this)},we.a.prototype.relu6=function(){return this.throwIfDisposed(),Ha(this)},we.a.prototype.reshapeAs=function(S){return this.throwIfDisposed(),Ge(this,S.shape)},we.a.prototype.reshape=function(S){return this.throwIfDisposed(),Ge(this,S)},we.a.prototype.resizeBilinear=function(S,C){return this.throwIfDisposed(),go(this,S,C)},we.a.prototype.resizeNearestNeighbor=function(S,C){return this.throwIfDisposed(),Ec(this,S,C)},we.a.prototype.reverse=function(S){return this.throwIfDisposed(),Ho(this,S)},we.a.prototype.rfft=function(){return this.throwIfDisposed(),ma(this)};const Cu=Object(D.a)({round_:function(S){const C=Object(B.a)(S,"x","round"),$={x:C};return a.a.runKernelFunc(k=>k.round(C),$,null,pe.ic)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.round=function(){return this.throwIfDisposed(),Cu(this)},we.a.prototype.rsqrt=function(){return this.throwIfDisposed(),E(this)};const $u=Object(D.a)({selu_:function(S){const C=Object(B.a)(S,"x","selu"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.selu(C);return L([C]),q},$,null,pe.lc)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.selu=function(){return this.throwIfDisposed(),$u(this)},we.a.prototype.separableConv2d=function(S,C,$,k,L,q){return this.throwIfDisposed(),xs(this,S,C,$,k,L,q)},we.a.prototype.sigmoid=function(){return this.throwIfDisposed(),ps(this)};const _u=Object(D.a)({sign_:function(S){const C=Object(B.a)(S,"x","sign"),$={x:C};return a.a.runKernelFunc(k=>k.sign(C),$,null,pe.nc)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.sign=function(){return this.throwIfDisposed(),_u(this)},we.a.prototype.sin=function(){return this.throwIfDisposed(),Hi(this)},we.a.prototype.sinh=function(){return this.throwIfDisposed(),Sr(this)},we.a.prototype.slice=function(S,C){return this.throwIfDisposed(),Zn(this,S,C)},we.a.prototype.softmax=function(S){return this.throwIfDisposed(),zi(this,S)},we.a.prototype.softplus=function(){return this.throwIfDisposed(),Pa(this)},we.a.prototype.spaceToBatchND=function(S,C){return this.throwIfDisposed(),qn(this,S,C)},we.a.prototype.split=function(S,C){return this.throwIfDisposed(),Zr(this,S,C)},we.a.prototype.sqrt=function(){return this.throwIfDisposed(),Vr(this)},we.a.prototype.square=function(){return this.throwIfDisposed(),vs(this)},we.a.prototype.squaredDifference=function(S){return this.throwIfDisposed(),pi(this,S)},we.a.prototype.squaredDifferenceStrict=function(S){return this.throwIfDisposed(),hu(this,S)},we.a.prototype.squeeze=function(S){return this.throwIfDisposed(),ls(this,S)},we.a.prototype.stack=function(S,C){this.throwIfDisposed();const $=S instanceof we.a?[this,S]:[this,...S];return ko($,C)},we.a.prototype.step=function(S){return this.throwIfDisposed(),No(this,S)};const yu=Object(D.a)({stridedSlice_:function(S,C,$,k,L=0,q=0,X=0,se=0,be=0){let $e=Object(B.a)(S,"x","stridedSlice");const Fe={x:$e},Ke={begin:C,end:$,strides:k,beginMask:L,endMask:q,ellipsisMask:X,newAxisMask:se,shrinkAxisMask:be};return a.a.runKernelFunc(nt=>{k==null&&(k=new Array(C.length));const dt=Qn(X);if(dt.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(X!==0&&se!==0)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(X!==0&&be!==0)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const $t=$e.rank-C.length,Et=Qn(se),qt=$e.shape.slice();Et.forEach(Pn=>{C[Pn]=0,$[Pn]=1,qt.splice(Pn,0,1)}),$e=Ge($e,qt);const{begin:mn,end:an,strides:gn}=gr($e.shape,dt,$t,C,$,k,L,q,X);C=mn,$=an,k=gn;const En=Qn(be);En.forEach(Pn=>{$[Pn]=C[Pn]+1,k[Pn]=1});const On=$s(C,$,k),Mn=On.filter((Pn,Ts)=>En.indexOf(Ts)===-1);if(k.every(Pn=>Pn===1))return Ge(Zn($e,C,On),Mn);const Zs=nt.stridedSlice($e,C,$,k);return Ge(Zs,Mn)},Fe,null,pe.zc,Ke)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.stridedSlice=function(S,C,$,k,L,q,X,se){return this.throwIfDisposed(),yu(this,S,C,$,k,L,q,X,se)},we.a.prototype.subStrict=function(S){return this.throwIfDisposed(),tu(this,S)},we.a.prototype.sub=function(S){return this.throwIfDisposed(),Kt(this,S)},we.a.prototype.sum=function(S,C){return this.throwIfDisposed(),vn(this,S,C)};const Cc=Object(D.a)({tan_:function(S){const C=Object(B.a)(S,"x","tan"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.tan(C);return L([C]),q},$,null,pe.Cc)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.tan=function(){return this.throwIfDisposed(),Cc(this)};const $c=Object(D.a)({tanh_:function(S){const C=Object(B.a)(S,"x","tanh"),$={x:C};return a.a.runKernelFunc((k,L)=>{const q=k.tanh(C);return L([q]),q},$,null,pe.Dc)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.tanh=function(){return this.throwIfDisposed(),$c(this)},we.a.prototype.tile=function(S){return this.throwIfDisposed(),eo(this,S)},we.a.prototype.toBool=function(){return this.throwIfDisposed(),H(this,"bool")},we.a.prototype.toFloat=function(){return this.throwIfDisposed(),H(this,"float32")},we.a.prototype.toInt=function(){return this.throwIfDisposed(),H(this,"int32")};const Ei=Object(D.a)({topk_:function(S,C=1,$=!0){const k=Object(B.a)(S,"x","topk");if(k.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const L=k.shape[k.shape.length-1];if(C>L)throw new Error(`'k' passed to topk() must be <= the last dimension (${L}) but got `+C);const q={x:k},X={k:C,sorted:$},[se,be]=a.a.runKernelFunc($e=>$e.topk(k,C,$),q,null,pe.Fc,X);return{values:se,indices:be}}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.topk=function(S,C){return this.throwIfDisposed(),Ei(this,S,C)},we.a.prototype.transpose=function(S){return this.throwIfDisposed(),ss(this,S)};const Vs=Object(D.a)({unique_:function(S,C=0){const $=Object(B.a)(S,"x","unique",null);Object(T.b)($.rank>0,()=>"The input tensor must be at least 1D");const k={x:$},L={axis:C},[q,X]=a.a.runKernel(pe.Hc,k,L);return{values:q,indices:X}}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */we.a.prototype.unique=function(S){return this.throwIfDisposed(),Vs(this,S)},we.a.prototype.unsortedSegmentSum=function(S,C){return this.throwIfDisposed(),V(this,S,C)},we.a.prototype.unstack=function(S){return this.throwIfDisposed(),ya(this,S)},we.a.prototype.where=function(S,C){return this.throwIfDisposed(),lr(S,this,C)},we.a.prototype.zerosLike=function(){return this.throwIfDisposed(),Dn(this)}},function(n,e,t){t.d(e,"a",function(){return s}),t.d(e,"b",function(){return r}),t.d(e,"c",function(){return o}),t.d(e,"d",function(){return i}),t.d(e,"e",function(){return c}),t.d(e,"f",function(){return a}),t.d(e,"g",function(){return l}),t.d(e,"h",function(){return d}),t.d(e,"i",function(){return f}),t.d(e,"j",function(){return y}),t.d(e,"k",function(){return m}),t.d(e,"l",function(){return h}),t.d(e,"n",function(){return g}),t.d(e,"m",function(){return x}),t.d(e,"o",function(){return w}),t.d(e,"r",function(){return I}),t.d(e,"p",function(){return N}),t.d(e,"q",function(){return A}),t.d(e,"s",function(){return T}),t.d(e,"t",function(){return P}),t.d(e,"u",function(){return O}),t.d(e,"v",function(){return F}),t.d(e,"w",function(){return G}),t.d(e,"x",function(){return U}),t.d(e,"y",function(){return Q}),t.d(e,"z",function(){return ne}),t.d(e,"A",function(){return J}),t.d(e,"B",function(){return oe}),t.d(e,"C",function(){return le}),t.d(e,"D",function(){return ge}),t.d(e,"E",function(){return te}),t.d(e,"F",function(){return ce}),t.d(e,"G",function(){return ue}),t.d(e,"H",function(){return Te}),t.d(e,"J",function(){return Ce}),t.d(e,"I",function(){return Ne}),t.d(e,"K",function(){return Re}),t.d(e,"L",function(){return Ae}),t.d(e,"M",function(){return we}),t.d(e,"N",function(){return Le}),t.d(e,"O",function(){return pe}),t.d(e,"Q",function(){return B}),t.d(e,"P",function(){return D}),t.d(e,"R",function(){return H}),t.d(e,"S",function(){return he}),t.d(e,"T",function(){return j}),t.d(e,"V",function(){return ee}),t.d(e,"U",function(){return ye}),t.d(e,"W",function(){return Oe}),t.d(e,"X",function(){return ze}),t.d(e,"Y",function(){return Xe}),t.d(e,"Z",function(){return ot}),t.d(e,"ab",function(){return st}),t.d(e,"bb",function(){return pt}),t.d(e,"cb",function(){return gt}),t.d(e,"eb",function(){return ht}),t.d(e,"fb",function(){return Tt}),t.d(e,"gb",function(){return xt}),t.d(e,"hb",function(){return Pt}),t.d(e,"jb",function(){return tn}),t.d(e,"ib",function(){return ln}),t.d(e,"kb",function(){return on}),t.d(e,"lb",function(){return An}),t.d(e,"mb",function(){return zn}),t.d(e,"nb",function(){return Kn}),t.d(e,"qb",function(){return Qn}),t.d(e,"rb",function(){return $s}),t.d(e,"sb",function(){return Ps}),t.d(e,"tb",function(){return Bn}),t.d(e,"vb",function(){return Rn}),t.d(e,"wb",function(){return gr}),t.d(e,"xb",function(){return qs}),t.d(e,"ub",function(){return yr}),t.d(e,"ob",function(){return Mr}),t.d(e,"pb",function(){return ts}),t.d(e,"yb",function(){return Gn}),t.d(e,"Eb",function(){return _r}),t.d(e,"zb",function(){return Ws}),t.d(e,"Cb",function(){return cr}),t.d(e,"Ab",function(){return br}),t.d(e,"Bb",function(){return ft}),t.d(e,"Db",function(){return Ze}),t.d(e,"Fb",function(){return Ct}),t.d(e,"Gb",function(){return Ge}),t.d(e,"Hb",function(){return jt}),t.d(e,"Ib",function(){return sn}),t.d(e,"Jb",function(){return hn}),t.d(e,"Kb",function(){return Jt}),t.d(e,"Lb",function(){return In}),t.d(e,"Pb",function(){return Hn}),t.d(e,"Mb",function(){return me}),t.d(e,"Nb",function(){return Ie}),t.d(e,"Ob",function(){return Pe}),t.d(e,"Rb",function(){return Ye}),t.d(e,"Qb",function(){return yt}),t.d(e,"Sb",function(){return _t}),t.d(e,"Tb",function(){return Bt}),t.d(e,"Ub",function(){return Zt}),t.d(e,"Vb",function(){return un}),t.d(e,"Wb",function(){return pn}),t.d(e,"Xb",function(){return Ht}),t.d(e,"Yb",function(){return Gt}),t.d(e,"Zb",function(){return Tn}),t.d(e,"bc",function(){return ns}),t.d(e,"ec",function(){return Hs}),t.d(e,"fc",function(){return Ri}),t.d(e,"cc",function(){return Di}),t.d(e,"dc",function(){return Ks}),t.d(e,"ac",function(){return _s}),t.d(e,"gc",function(){return tr}),t.d(e,"ic",function(){return Xs}),t.d(e,"jc",function(){return ur}),t.d(e,"kc",function(){return ss}),t.d(e,"lc",function(){return qo}),t.d(e,"qc",function(){return po}),t.d(e,"oc",function(){return ii}),t.d(e,"pc",function(){return kn}),t.d(e,"nc",function(){return Jn}),t.d(e,"mc",function(){return Qr}),t.d(e,"sc",function(){return jo}),t.d(e,"vc",function(){return Ot}),t.d(e,"Bc",function(){return Pi}),t.d(e,"tc",function(){return Jr}),t.d(e,"uc",function(){return Fi}),t.d(e,"rc",function(){return Mi}),t.d(e,"xc",function(){return Li}),t.d(e,"wc",function(){return Fs}),t.d(e,"Ac",function(){return Ir}),t.d(e,"zc",function(){return xr}),t.d(e,"Cc",function(){return ms}),t.d(e,"Dc",function(){return Uo}),t.d(e,"Ec",function(){return xn}),t.d(e,"Fc",function(){return xs}),t.d(e,"Gc",function(){return zi}),t.d(e,"Hc",function(){return Vn}),t.d(e,"Ic",function(){return Zr}),t.d(e,"Jc",function(){return ls}),t.d(e,"Kc",function(){return Kt}),t.d(e,"yc",function(){return eo}),t.d(e,"db",function(){return Go}),t.d(e,"hc",function(){return Lr});const s="Abs",r="Acos",o="Acosh",i="Add",c="AddN",a="All",l="Any",d="ArgMax",f="ArgMin",y="Asin",m="Asinh",h="Atan",g="Atanh",x="Atan2",w="AvgPool",I="AvgPoolBackprop",N="AvgPool3D",A="AvgPool3DBackprop",T="BatchMatMul",P="BatchToSpaceND",O="BroadcastTo",F="Cast",G="Ceil",U="ClipByValue",Q="Complex",ne="Concat",J="Conv2D",oe="Conv2DBackpropFilter",le="Conv2DBackpropInput",ge="Conv3D",te="Conv3DBackpropFilterV2",ce="Conv3DBackpropInputV2",ue="Cos",Te="Cosh",Ce="Cumsum",Ne="CropAndResize",Re="DepthToSpace",Ae="DepthwiseConv2dNative",we="DepthwiseConv2dNativeBackpropFilter",Le="DepthwiseConv2dNativeBackpropInput",pe="Dilation2D",B="Dilation2DBackpropInput",D="Dilation2DBackpropFilter",H="Div",he="Elu",j="EluGrad",ee="Erf",ye="Equal",Oe="Exp",ze="Expm1",Xe="FFT",ot="Fill",st="FlipLeftRight",pt="Floor",gt="FloorDiv",ht="FusedBatchNorm",Tt="GatherV2",xt="Greater",Pt="GreaterEqual",tn="Identity",ln="IFFT",on="Imag",An="IsFinite",zn="IsInf",Kn="IsNan",Qn="Less",$s="LessEqual",Ps="Log",Bn="Log1p",Rn="LogicalAnd",gr="LogicalNot",qs="LogicalOr",yr="LogSoftmax",Mr="LRN",ts="LRNBackprop",Gn="Max",_r="Maximum",Ws="MaxPool",cr="MaxPoolBackprop",br="MaxPool3D",ft="MaxPool3DBackprop",Ze="MaxPoolWithArgmax",Ct="Mean",Ge="Min",jt="Minimum",sn="MirrorPad",hn="Mod",Jt="Multiply",In="Negate",Hn="NotEqual",me="NonMaxSuppressionV3",Ie="NonMaxSuppressionV4",Pe="NonMaxSuppressionV5",Ye="OnesLike",yt="OneHot",_t="PadV2",Bt="Pow",Zt="Prelu",un="Prod",pn="Range",Ht="Real",Gt="Reciprocal",Tn="Relu",ns="Reshape",Hs="ResizeNearestNeighbor",Ri="ResizeNearestNeighborGrad",Di="ResizeBilinear",Ks="ResizeBilinearGrad",_s="Relu6",tr="Reverse",Xs="Round",ur="Rsqrt",ss="SelectV2",qo="Selu",po="Slice",ii="Sin",kn="Sinh",Jn="Sign",Qr="Sigmoid",jo="Softplus",Ot="Sqrt",Pi="Sum",Jr="SpaceToBatchND",Fi="SplitV",Mi="Softmax",Li="SquaredDifference",Fs="Square",Ir="Sub",xr="StridedSlice",ms="Tan",Uo="Tanh",xn="Tile",xs="TopK",zi="Transpose",Vn="Unique",Zr="Unpack",ls="UnsortedSegmentSum",Kt="ZerosLike",eo="Step",Go="FromPixels",Lr="RotateWithOffset"},function(n,e){n.exports=__WEBPACK_EXTERNAL_MODULE__2__},function(n,e,t){t.d(e,"c",function(){return a}),t.d(e,"a",function(){return d}),t.d(e,"b",function(){return f});var s=t(6),r=t(11),o=t(5),i=t(16),c=t(7);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a(y,m){let h=y;if(Object(i.A)(y))return m==="string"?[]:[y.length];if(!Array.isArray(y))return[];const g=[];for(;Array.isArray(h)||Object(i.A)(h)&&m!=="string";)g.push(h.length),h=h[0];return Array.isArray(y)&&Object(r.b)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function x(w,I,N){if(N=N||[],!Array.isArray(w)&&!Object(i.A)(w))return void Object(i.b)(I.length===0,()=>`Element arr[${N.join("][")}] is a primitive, but should be an array/TypedArray of ${I[0]} elements`);Object(i.b)(I.length>0,()=>`Element arr[${N.join("][")}] should be a primitive, but is an array of ${w.length} elements`),Object(i.b)(w.length===I[0],()=>`Element arr[${N.join("][")}] should have ${I[0]} elements, but has ${w.length} elements`);const A=I.slice(1);for(let T=0;T<w.length;++T)x(w[T],A,N.concat(T))}(y,g,[]),g}function l(y,m,h,g){if(y!=null&&(y!=="numeric"&&y!==m||y==="numeric"&&m==="string"))throw new Error(`Argument '${h}' passed to '${g}' must be ${y} tensor, but got ${m} tensor`)}function d(y,m,h,g="numeric"){if(y instanceof o.a)return l(g,y.dtype,m,h),y;let x=Object(i.r)(y);if(x!=="string"&&["bool","int32","float32"].indexOf(g)>=0&&(x=g),l(g,x,m,h),y==null||!Object(i.A)(y)&&!Array.isArray(y)&&typeof y!="number"&&typeof y!="boolean"&&typeof y!="string"){const N=y==null?"null":y.constructor.name;throw new Error(`Argument '${m}' passed to '${h}' must be a Tensor or TensorLike, but got '${N}'`)}const w=a(y,x);Object(i.A)(y)||Array.isArray(y)||(y=[y]);const I=x!=="string"?Object(c.toTypedArray)(y,x):Object(i.m)(y,[],!0);return s.a.makeTensor(I,w,x)}function f(y,m,h,g="numeric"){if(!Array.isArray(y))throw new Error(`Argument ${m} passed to ${h} must be a \`Tensor[]\` or \`TensorLike[]\``);return y.map((x,w)=>d(x,`${m}[${w}]`,h),g)}},function(n,e,t){t.d(e,"a",function(){return o});var s=t(6),r=t(16);function o(i){const c=Object.keys(i);if(c.length!==1)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+c.length+" keys.");let a=c[0];const l=i[a];a.endsWith("_")&&(a=a.substring(0,a.length-1)),a+="__op";const d=(...f)=>{s.a.startScope(a);try{const y=l(...f);return Object(r.x)(y)&&console.error("Cannot return a Promise inside of tidy."),s.a.endScope(y),y}catch(y){throw s.a.endScope(null),y}};return Object.defineProperty(d,"name",{value:a,configurable:!0}),d}},function(n,e,t){t.d(e,"b",function(){return l}),t.d(e,"f",function(){return y}),t.d(e,"e",function(){return m}),t.d(e,"d",function(){return h}),t.d(e,"a",function(){return g}),t.d(e,"c",function(){return x});var s=t(16);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r(w,I,N,A){const T=Object(s.j)(I),P=function(U,Q,ne,J){const oe=Object(s.N)(Q),le=J[J.length-1],ge=new Array(le).fill(0),te=Q.length,ce=ne==="complex64"?c(U):U;if(te>1)for(let ue=0;ue<oe/le;ue++){const Te=ue*le;for(let Ce=0;Ce<le;Ce++)ge[Ce]=Math.max(ge[Ce],o(ce[Te+Ce],0,ne).length)}return ge}(w,I,N,T),O=I.length,F=function U(Q,ne,J,oe,le,ge=!0){const te=J==="complex64"?2:1,ce=ne[0],ue=ne.length;if(ue===0)return J==="complex64"?[o(c(Q)[0],0,J)]:J==="bool"?[i(Q[0])]:[Q[0].toString()];if(ue===1){if(ce>20){const Le=3*te;let pe=Array.from(Q.slice(0,Le)),B=Array.from(Q.slice((ce-3)*te,ce*te));return J==="complex64"&&(pe=c(pe),B=c(B)),["["+pe.map((D,H)=>o(D,le[H],J)).join(", ")+", ..., "+B.map((D,H)=>o(D,le[ce-3+H],J)).join(", ")+"]"]}return["["+(J==="complex64"?c(Q):Array.from(Q)).map((Le,pe)=>o(Le,le[pe],J)).join(", ")+"]"]}const Te=ne.slice(1),Ce=oe.slice(1),Ne=oe[0]*te,Re=[];if(ce>20){for(let Le=0;Le<3;Le++){const pe=Le*Ne,B=pe+Ne;Re.push(...U(Q.slice(pe,B),Te,J,Ce,le,!1))}Re.push("...");for(let Le=ce-3;Le<ce;Le++){const pe=Le*Ne,B=pe+Ne;Re.push(...U(Q.slice(pe,B),Te,J,Ce,le,Le===ce-1))}}else for(let Le=0;Le<ce;Le++){const pe=Le*Ne,B=pe+Ne;Re.push(...U(Q.slice(pe,B),Te,J,Ce,le,Le===ce-1))}const Ae=ue===2?",":"";Re[0]="["+Re[0]+Ae;for(let Le=1;Le<Re.length-1;Le++)Re[Le]=" "+Re[Le]+Ae;let we=`,
`;for(let Le=2;Le<ue;Le++)we+=`
`;return Re[Re.length-1]=" "+Re[Re.length-1]+"]"+(ge?"":we),Re}(w,I,N,T,P),G=["Tensor"];return A&&(G.push("  dtype: "+N),G.push("  rank: "+O),G.push(`  shape: [${I}]`),G.push("  values:")),G.push(F.map(U=>"    "+U).join(`
`)),G.join(`
`)}function o(w,I,N){let A;return A=Array.isArray(w)?parseFloat(w[0].toFixed(7))+" + "+parseFloat(w[1].toFixed(7))+"j":Object(s.z)(w)?`'${w}'`:N==="bool"?i(w):parseFloat(w.toFixed(7)).toString(),Object(s.L)(A,I)}function i(w){return w===0?"false":"true"}function c(w){const I=[];for(let N=0;N<w.length;N+=2)I.push([w[N],w[N+1]]);return I}var a=t(7);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l{constructor(I,N,A){if(this.dtype=N,this.shape=I.slice(),this.size=s.N(I),A!=null){const T=A.length;s.b(T===this.size,()=>`Length of values '${T}' does not match the size inferred by the shape '${this.size}'.`)}if(N==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=A||s.n(N,this.size),this.strides=Object(s.j)(I)}set(I,...N){N.length===0&&(N=[0]),s.b(N.length===this.rank,()=>`The number of provided coordinates (${N.length}) must match the rank (${this.rank})`);const A=this.locToIndex(N);this.values[A]=I}get(...I){I.length===0&&(I=[0]);let N=0;for(const T of I){if(T<0||T>=this.shape[N]){const P=`Requested out of range element at ${I}.   Buffer shape=`+this.shape;throw new Error(P)}N++}let A=I[I.length-1];for(let T=0;T<I.length-1;++T)A+=this.strides[T]*I[T];return this.values[A]}locToIndex(I){if(this.rank===0)return 0;if(this.rank===1)return I[0];let N=I[I.length-1];for(let A=0;A<I.length-1;++A)N+=this.strides[A]*I[A];return N}indexToLoc(I){if(this.rank===0)return[];if(this.rank===1)return[I];const N=new Array(this.shape.length);for(let A=0;A<N.length-1;++A)N[A]=Math.floor(I/this.strides[A]),I-=N[A]*this.strides[A];return N[N.length-1]=I,N}get rank(){return this.shape.length}toTensor(){return d().makeTensor(this.values,this.shape,this.dtype)}}let d=null,f=null;function y(w){d=w}function m(w){f=w}function h(w){}class g{constructor(I,N,A,T){this.kept=!1,this.isDisposedInternal=!1,this.shape=I.slice(),this.dtype=N||"float32",this.size=s.N(I),this.strides=Object(s.j)(I),this.dataId=A,this.id=T,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const I=await this.data();return f.buffer(this.shape,this.dtype,I)}bufferSync(){return f.buffer(this.shape,this.dtype,this.dataSync())}async array(){const I=await this.data();return Object(s.S)(this.shape,I)}arraySync(){return Object(s.S)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const I=d().read(this.dataId);if(this.dtype==="string"){const N=await I;try{return N.map(A=>a.decodeString(A))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return I}dataSync(){this.throwIfDisposed();const I=d().readSync(this.dataId);if(this.dtype==="string")try{return I.map(N=>a.decodeString(N))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return I}async bytes(){this.throwIfDisposed();const I=await d().read(this.dataId);return this.dtype==="string"?I:new Uint8Array(I.buffer)}dispose(){this.isDisposed||(d().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(I=!1){return f.print(this,I)}clone(){return this.throwIfDisposed(),f.clone(this)}toString(I=!1){return r(this.dataSync(),this.shape,this.dtype,I)}cast(I){return this.throwIfDisposed(),f.cast(this,I)}variable(I=!0,N,A){return this.throwIfDisposed(),d().makeVariable(this,I,N,A)}}Object.defineProperty(g,Symbol.hasInstance,{value:w=>!!w&&w.data!=null&&w.dataSync!=null&&w.throwIfDisposed!=null});class x extends g{constructor(I,N,A,T){super(I.shape,I.dtype,I.dataId,T),this.trainable=N,this.name=A}assign(I){if(I.dtype!==this.dtype)throw new Error(`dtype of the new value (${I.dtype}) and previous value (${this.dtype}) must match`);if(!s.a(I.shape,this.shape))throw new Error(`shape of the new value (${I.shape}) and previous value (${this.shape}) must match`);d().disposeTensor(this),this.dataId=I.dataId,d().incRef(this,null)}dispose(){d().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(x,Symbol.hasInstance,{value:w=>w instanceof g&&w.assign!=null&&w.assign instanceof Function})},function(n,e,t){t.d(e,"b",function(){return w}),t.d(e,"a",function(){return I});var s=t(39),r=t(11),o=t(40),i=t(1),c=t(26),a=t(16);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l{constructor(T,P){this.backendTimer=T,this.logger=P,P==null&&(this.logger=new f)}profileKernel(T,P,O){let F;const G=this.backendTimer.time(()=>{F=O()});for(let U=0;U<F.length;U++){const Q=F[U];Q.data().then(ne=>{d(ne,Q.dtype,T)})}return{kernelName:T,outputs:F,inputs:P,timeMs:G.then(U=>U.kernelMs),extraInfo:G.then(U=>U.getExtraProfileInfo!=null?U.getExtraProfileInfo():"")}}logKernelProfile(T){const{kernelName:P,outputs:O,timeMs:F,inputs:G,extraInfo:U}=T;O.forEach(Q=>{Promise.all([Q.data(),F,U]).then(ne=>{this.logger.logKernelProfile(P,Q,ne[0],ne[1],G,ne[2])})})}}function d(A,T,P){if(T!=="float32")return!1;for(let O=0;O<A.length;O++){const F=A[O];if(isNaN(F)||!isFinite(F))return console.warn(`Found ${F} in the result of '${P}'`),!0}return!1}class f{logKernelProfile(T,P,O,F,G,U){const Q=typeof F=="number"?a.L(F+"ms",9):F.error,ne=a.L(T,25),J=P.rank,oe=P.size,le=a.L(P.shape.toString(),14);let ge="";for(const te in G){const ce=G[te];if(ce!=null){const ue=ce.shape||P.shape,Te=ue.length;ge+=`${te}: ${Te}D ${Te>0?ue:""} `}}console.log(`%c${ne}	%c${Q}	%c${J}D ${le}	%c${oe}	%c${ge}	%c${U}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var y=t(5),m=t(14),h=t(7);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const T in this.registeredVariables)this.registeredVariables[T].dispose()}}class x{constructor(T){this.ENV=T,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new g}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const T=this.getSortedBackends();for(let P=0;P<T.length;P++){const O=T[P];if(await this.initializeBackend(O).success)return void await this.setBackend(O)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:T,asyncInit:P}=this.initializeBackendsAndReturnBest();if(P)throw new Error(`The highest priority backend '${T}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(T)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(T){if(!(T in this.registry)){if(!(T in this.registryFactory))return null;{const{asyncInit:P}=this.initializeBackend(T);if(P)return null}}return this.registry[T]}findBackendFactory(T){return T in this.registryFactory?this.registryFactory[T].factory:null}registerBackend(T,P,O=1){return T in this.registryFactory?(console.warn(T+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[T]={factory:P,priority:O},!0)}async setBackend(T){if(this.registryFactory[T]==null)throw new Error(`Backend name '${T}' not found in registry`);if(this.backendName=T,this.registry[T]==null){this.backendInstance=null;const{success:P,asyncInit:O}=this.initializeBackend(T);if(!(O?await P:P))return!1}return this.backendInstance=this.registry[T],this.setupRegisteredKernels(),this.profiler=new l(this.backendInstance),!0}setupRegisteredKernels(){Object(c.c)(this.backendName).forEach(T=>{T.setupFunc!=null&&T.setupFunc(this.backendInstance)})}disposeRegisteredKernels(T){Object(c.c)(T).forEach(P=>{P.disposeFunc!=null&&P.disposeFunc(this.registry[T])})}initializeBackend(T){const P=this.registryFactory[T];if(P==null)throw new Error(`Cannot initialize backend ${T}, no registration found.`);try{const O=P.factory();if(!O||O instanceof s.b||typeof O.then!="function")return this.registry[T]=O,{success:!0,asyncInit:!1};{const F=++this.pendingBackendInitId,G=O.then(U=>!(F<this.pendingBackendInitId)&&(this.registry[T]=U,this.pendingBackendInit=null,!0)).catch(U=>(F<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${T} failed`),console.warn(U.stack||U.message)),!1));return this.pendingBackendInit=G,{success:G,asyncInit:!0}}}catch(O){return console.warn(`Initialization of backend ${T} failed`),console.warn(O.stack||O.message),{success:!1,asyncInit:!1}}}removeBackend(T){if(!(T in this.registryFactory))throw new Error(T+" backend not found in registry");this.backendName===T&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,T in this.registry&&(this.disposeRegisteredKernels(T),this.registry[T].dispose(),delete this.registry[T]),delete this.registryFactory[T],this.backendName===T&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((T,P)=>this.registryFactory[P].priority-this.registryFactory[T].priority)}initializeBackendsAndReturnBest(){const T=this.getSortedBackends();for(let P=0;P<T.length;P++){const O=T[P],{success:F,asyncInit:G}=this.initializeBackend(O);if(G||F)return{name:O,asyncInit:G}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(T,P){const O=this.state.tensorInfo.get(P),F=O.backend,G=this.readSync(P);F.disposeData(P),O.backend=T,T.move(P,G,O.shape,O.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(T,P){let O,F=null;if(P==null){if(typeof T!="function")throw new Error("Please provide a function to tidy()");P=T}else{if(typeof T!="string"&&!(T instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof P!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");F=T}return this.scopedRun(()=>this.startScope(F),()=>this.endScope(O),()=>(O=P(),O instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),O))}scopedRun(T,P,O){T();try{const F=O();return P(),F}catch(F){throw P(),F}}nextTensorId(){return x.nextTensorId++}nextVariableId(){return x.nextVariableId++}clone(T){const P=this.makeTensorFromDataId(T.dataId,T.shape,T.dtype),O={x:T};return this.addTapeNode(this.state.activeScope.name,O,[P],F=>({x:()=>{const G={x:F},U={dtype:"float32"};return I.runKernelFunc(Q=>Q.cast(F,"float32"),G,null,i.v,U)}}),[],{}),P}runKernel(T,P,O,F,G){return this.runKernelFunc(null,P,null,T,O,F,G)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(T,P,O){const F=this.backend.numDataIds();let G=0;O.forEach(ne=>{G+=ne.dtype==="complex64"?3:1});const U=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],Q=F-P-G-U;if(Q>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${Q} data ids) after running '${T}'`)}runKernelFunc(T,P,O,F,G,U,Q){let ne,J=[];const oe=this.isTapeOn();F==null&&(F=this.state.activeScope!=null?this.state.activeScope.name:"");const le=this.state.numBytes,ge=this.state.numTensors;let te;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const ce=Object(c.b)(F,this.backendName);let ue,Te;if(ce!=null)te=()=>{const Ce=this.backend.numDataIds();ue=ce.kernelFunc({inputs:P,attrs:G,backend:this.backend});const Ne=Array.isArray(ue)?ue:[ue];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(F,Ce,Ne);const Re=Ne.map(({dataId:Ae,shape:we,dtype:Le})=>this.makeTensorFromDataId(Ae,we,Le));if(oe){let Ae=this.getTensorsForGradient(F,P,Re);if(Ae==null){Q==null&&(Q=[]);const we=Re.filter((Le,pe)=>Q[pe]);Ae=(U||[]).slice().concat(we)}J=this.saveTensorsForBackwardMode(Ae)}return Re};else{const Ce=Ne=>{oe&&(J=Ne.map(Re=>this.keep(this.clone(Re))))};te=()=>{const Ne=this.backend.numDataIds();ue=this.tidy(()=>T(this.backend,Ce));const Re=Array.isArray(ue)?ue:[ue];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(F,Ne,Re),Re}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(Te=this.profiler.profileKernel(F,P,()=>te()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(Te),ne=Te.outputs):ne=te()}),oe&&this.addTapeNode(F,P,ne,O,J,G),this.state.profiling&&this.state.activeProfile.kernels.push({name:F,bytesAdded:this.state.numBytes-le,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-ge,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(P).map(Ce=>P[Ce]!=null?P[Ce].shape:null),outputShapes:ne.map(Ce=>Ce.shape),kernelTimeMs:Te.timeMs,extraInfo:Te.extraInfo}),Array.isArray(ue)?ne:ne[0]}saveTensorsForBackwardMode(T){return T.map(P=>this.keep(this.clone(P)))}getTensorsForGradient(T,P,O){const F=Object(c.a)(T);if(F!=null){const G=F.inputsToSave||[],U=F.outputsToSave||[];let Q;F.saveAllInputs?(a.b(Array.isArray(P),()=>"saveAllInputs is true, expected inputs to be an array."),Q=Object.keys(P).map(J=>P[J])):Q=G.map(J=>P[J]);const ne=O.filter((J,oe)=>U[oe]);return Q.concat(ne)}return null}makeTensor(T,P,O,F){if(T==null)throw new Error("Values passed to engine.makeTensor() are null");O=O||"float32",F=F||this.backend;let G=T;O==="string"&&a.z(T[0])&&(G=T.map(ne=>h.encodeString(ne)));const U=F.write(G,P,O),Q=new y.a(P,O,U,this.nextTensorId());if(this.incRef(Q,F),O==="string"){const ne=this.state.tensorInfo.get(U),J=Object(a.f)(G);this.state.numBytes+=J-ne.bytes,ne.bytes=J}return Q}makeTensorFromDataId(T,P,O,F){O=O||"float32";const G=new y.a(P,O,T,this.nextTensorId());return this.incRef(G,F),G}makeVariable(T,P=!0,O,F){O=O||this.nextVariableId().toString(),F!=null&&F!==T.dtype&&(T=T.cast(F));const G=new y.c(T,P,O,this.nextTensorId());if(this.state.registeredVariables[G.name]!=null)throw new Error(`Variable with name ${G.name} was already registered`);return this.state.registeredVariables[G.name]=G,this.incRef(G,this.backend),G}incRef(T,P){const O=this.state.tensorInfo.has(T.dataId)?this.state.tensorInfo.get(T.dataId).refCount:0;if(this.state.numTensors++,T.dtype==="string"&&this.state.numStringTensors++,O===0){this.state.numDataBuffers++;let F=0;T.dtype!=="complex64"&&T.dtype!=="string"&&(F=T.size*a.g(T.dtype)),this.state.tensorInfo.set(T.dataId,{backend:P||this.backend,dtype:T.dtype,shape:T.shape,bytes:F,refCount:0}),this.state.numBytes+=F}this.state.tensorInfo.get(T.dataId).refCount++,T instanceof y.c||this.track(T)}disposeTensor(T){if(!this.state.tensorInfo.has(T.dataId))return;this.state.numTensors--,T.dtype==="string"&&this.state.numStringTensors--;const P=this.state.tensorInfo.get(T.dataId);P.refCount<=1?(T.dtype!=="complex64"&&(this.state.numBytes-=P.bytes),this.state.numDataBuffers--,P.backend.disposeData(T.dataId),this.state.tensorInfo.delete(T.dataId)):this.state.tensorInfo.get(T.dataId).refCount--}disposeVariables(){for(const T in this.state.registeredVariables){const P=this.state.registeredVariables[T];this.disposeVariable(P)}}disposeVariable(T){this.disposeTensor(T),this.state.registeredVariables[T.name]!=null&&delete this.state.registeredVariables[T.name]}memory(){const T=this.backend.memory();return T.numTensors=this.state.numTensors,T.numDataBuffers=this.state.numDataBuffers,T.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(T.unreliable=!0,T.reasons==null&&(T.reasons=[]),T.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),T}async profile(T){this.state.profiling=!0;const P=this.state.numBytes,O=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await T(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(F=>F.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-P,this.state.activeProfile.newTensors=this.state.numTensors-O;for(const F of this.state.activeProfile.kernels)F.kernelTimeMs=await F.kernelTimeMs,F.extraInfo=await F.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(T,P,O,F,G,U){const Q={id:this.state.nextTapeNodeId++,kernelName:T,inputs:P,outputs:O,saved:G},ne=Object(c.a)(T);ne!=null&&(F=ne.gradFunc),F!=null&&(Q.gradient=J=>(J=J.map((oe,le)=>{if(oe==null){const ge=O[le],te=a.F(ge.size,ge.dtype);return this.makeTensor(te,ge.shape,ge.dtype)}return oe}),F(J.length>1?J:J[0],G,U))),this.state.activeTape.push(Q)}keep(T){return T.kept=!0,T}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(T){const P={track:[],name:"unnamed scope",id:this.state.nextScopeId++};T&&(P.name=T),this.state.scopeStack.push(P),this.state.activeScope=P}endScope(T){const P=Object(m.a)(T),O=new Set(P.map(G=>G.id));for(let G=0;G<this.state.activeScope.track.length;G++){const U=this.state.activeScope.track[G];U.kept||O.has(U.id)||U.dispose()}const F=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],P.forEach(G=>{G.kept||G.scopeId!==F.id||this.track(G)})}gradients(T,P,O,F=!1){if(a.b(P.length>0,()=>"gradients() received an empty list of xs."),O!=null&&O.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${O.dtype}'`);const G=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",T));a.b(G instanceof y.a,()=>"The result y returned by f() must be a tensor.");const U=function(Q,ne,J){const oe={},le={};for(let ue=0;ue<ne.length;ue++)oe[ne[ue].id]=!0;for(let ue=0;ue<Q.length;ue++){const Te=Q[ue],Ce=Te.inputs;for(const Ne in Ce){const Re=Ce[Ne];let Ae=!1;for(let we=0;we<ne.length;we++)if(oe[Re.id]){Te.outputs.forEach(Le=>oe[Le.id]=!0),Ae=!0,le[Te.id]=!0;break}if(Ae)break}}const ge={};ge[J.id]=!0;const te={};for(let ue=Q.length-1;ue>=0;ue--){const Te=Q[ue],Ce=Te.inputs;for(let Ne=0;Ne<Te.outputs.length;Ne++)if(ge[Te.outputs[Ne].id]){for(const Re in Ce)ge[Ce[Re].id]=!0,te[Te.id]=!0;break}}const ce=[];for(let ue=0;ue<Q.length;ue++){const Te=Q[ue];if(le[Te.id]&&te[Te.id]){const Ce={};for(const Re in Te.inputs){const Ae=Te.inputs[Re];oe[Ae.id]&&(Ce[Re]=Ae)}const Ne=Object.assign({},Te);Ne.inputs=Ce,Ne.outputs=Te.outputs,ce.push(Ne)}}return ce}(this.state.activeTape,P,G);if(!F&&U.length===0&&P.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const Q={};Q[G.id]=O??function(J){const oe=Object(a.D)(Object(a.N)(J),"float32");return I.makeTensor(oe,J,"float32")}(G.shape),function(J,oe,le,ge){for(let te=oe.length-1;te>=0;te--){const ce=oe[te],ue=[];if(ce.outputs.forEach(Ce=>{const Ne=J[Ce.id];Ne!=null?ue.push(Ne):ue.push(null)}),ce.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${ce.kernelName}.`);const Te=ce.gradient(ue);for(const Ce in ce.inputs){if(!(Ce in Te))throw new Error(`Cannot backprop through input ${Ce}. Available gradients found: ${Object.keys(Te)}.`);const Ne=le(()=>Te[Ce]());if(Ne.dtype!=="float32")throw new Error(`Error in gradient for op ${ce.kernelName}. The gradient of input ${Ce} must have 'float32' dtype, but has '${Ne.dtype}'`);const Re=ce.inputs[Ce];if(!a.a(Ne.shape,Re.shape))throw new Error(`Error in gradient for op ${ce.kernelName}. The gradient of input '${Ce}' has shape '${Ne.shape}', which does not match the shape of the input '${Re.shape}'`);if(J[Re.id]==null)J[Re.id]=Ne;else{const Ae=J[Re.id];J[Re.id]=ge(Ae,Ne),Ae.dispose()}}}}(Q,U,J=>this.tidy(J),N);const ne=P.map(J=>Q[J.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(J=>{for(const oe of J.saved)oe.dispose()}),this.state.activeTape=null),{value:G,grads:ne}})}customGrad(T){return a.b(a.u(T),()=>"The f passed in customGrad(f) must be a function."),(...P)=>{let O;a.b(P.every(G=>G instanceof y.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const F={};return P.forEach((G,U)=>{F[U]=G}),this.runKernelFunc((G,U)=>(O=T(...P,U),a.b(O.value instanceof y.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),a.b(a.u(O.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),O.value),F,(G,U)=>{const Q=O.gradFunc(G,U),ne=Array.isArray(Q)?Q:[Q];a.b(ne.length===P.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),a.b(ne.every(oe=>oe instanceof y.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const J={};return ne.forEach((oe,le)=>{J[le]=()=>oe}),J})}}readSync(T){return this.state.tensorInfo.get(T).backend.readSync(T)}read(T){return this.state.tensorInfo.get(T).backend.read(T)}async time(T){const P=Object(h.now)(),O=await this.backend.time(T);return O.wallMs=Object(h.now)()-P,O}track(T){return this.state.activeScope!=null&&(T.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(T)),T}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new g;for(const T in this.registry)this.disposeRegisteredKernels(T),this.registry[T].dispose(),delete this.registry[T];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function w(){const A=Object(o.b)();if(A._tfengine==null){const T=new r.a(A);A._tfengine=new x(T)}return Object(r.c)(A._tfengine.ENV),Object(y.f)(()=>A._tfengine),A._tfengine}x.nextTensorId=0,x.nextVariableId=0;const I=w();function N(A,T){const P={a:A,b:T};return I.runKernelFunc((O,F)=>{const G=O.add(A,T);return F([A,T]),G},P,null,i.d)}},function(n,e,t){t.r(e),t.d(e,"createScalarValue",function(){return o}),t.d(e,"toTypedArray",function(){return i}),t.d(e,"now",function(){return c}),t.d(e,"fetch",function(){return a}),t.d(e,"encodeString",function(){return l}),t.d(e,"decodeString",function(){return d});var s=t(11),r=t(16);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o(f,y){return y==="string"?l(f):i([f],y)}function i(f,y){if(y==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(f)&&(f=r.m(f)),Object(s.b)().getBool("DEBUG")&&r.h(f,y),function(m,h){return m instanceof Float32Array&&h==="float32"||m instanceof Int32Array&&h==="int32"||m instanceof Uint8Array&&h==="bool"}(f,y))return f;if(y==null||y==="float32"||y==="complex64")return new Float32Array(f);if(y==="int32")return new Int32Array(f);if(y==="bool"){const m=new Uint8Array(f.length);for(let h=0;h<m.length;++h)Math.round(f[h])!==0&&(m[h]=1);return m}throw new Error("Unknown data type "+y)}function c(){return Object(s.b)().platform.now()}function a(f,y){return Object(s.b)().platform.fetch(f,y)}function l(f,y="utf-8"){return y=y||"utf-8",Object(s.b)().platform.encode(f,y)}function d(f,y="utf-8"){return y=y||"utf-8",Object(s.b)().platform.decode(f,y)}t.d(e,"shuffle",function(){return r.M}),t.d(e,"clamp",function(){return r.i}),t.d(e,"nearestLargerEven",function(){return r.H}),t.d(e,"sum",function(){return r.Q}),t.d(e,"randUniform",function(){return r.J}),t.d(e,"distSquared",function(){return r.l}),t.d(e,"assert",function(){return r.b}),t.d(e,"assertShapesMatch",function(){return r.e}),t.d(e,"assertNonNull",function(){return r.d}),t.d(e,"flatten",function(){return r.m}),t.d(e,"sizeFromShape",function(){return r.N}),t.d(e,"isScalarShape",function(){return r.y}),t.d(e,"arraysEqual",function(){return r.a}),t.d(e,"isInt",function(){return r.v}),t.d(e,"tanh",function(){return r.R}),t.d(e,"sizeToSquarishShape",function(){return r.O}),t.d(e,"createShuffledIndices",function(){return r.k}),t.d(e,"rightPad",function(){return r.L}),t.d(e,"repeatedTry",function(){return r.K}),t.d(e,"inferFromImplicitShape",function(){return r.s}),t.d(e,"parseAxisParam",function(){return r.I}),t.d(e,"squeezeShape",function(){return r.P}),t.d(e,"getTypedArrayFromDType",function(){return r.o}),t.d(e,"getArrayFromDType",function(){return r.n}),t.d(e,"checkConversionForErrors",function(){return r.h}),t.d(e,"isValidDtype",function(){return r.B}),t.d(e,"hasEncodingLoss",function(){return r.p}),t.d(e,"isTypedArray",function(){return r.A}),t.d(e,"bytesPerElement",function(){return r.g}),t.d(e,"bytesFromStringArray",function(){return r.f}),t.d(e,"isString",function(){return r.z}),t.d(e,"isBoolean",function(){return r.t}),t.d(e,"isNumber",function(){return r.w}),t.d(e,"inferDtype",function(){return r.r}),t.d(e,"isFunction",function(){return r.u}),t.d(e,"nearestDivisor",function(){return r.G}),t.d(e,"computeStrides",function(){return r.j}),t.d(e,"toNestedArray",function(){return r.S}),t.d(e,"makeOnesTypedArray",function(){return r.D}),t.d(e,"makeZerosTypedArray",function(){return r.F}),t.d(e,"makeZerosNestedTypedArray",function(){return r.E}),t.d(e,"assertNonNegativeIntegerDimensions",function(){return r.c}),t.d(e,"locToIndex",function(){return r.C}),t.d(e,"indexToLoc",function(){return r.q}),t.d(e,"isPromise",function(){return r.x})},function(n,e,t){t.r(e),t.d(e,"DEFAULT_QUARTERS_PER_MINUTE",function(){return s}),t.d(e,"DEFAULT_STEPS_PER_BAR",function(){return r}),t.d(e,"DEFAULT_STEPS_PER_QUARTER",function(){return o}),t.d(e,"DEFAULT_STEPS_PER_SECOND",function(){return i}),t.d(e,"DEFAULT_VELOCITY",function(){return c}),t.d(e,"DEFAULT_PROGRAM",function(){return a}),t.d(e,"DEFAULT_TICKS_PER_QUARTER",function(){return l}),t.d(e,"DEFAULT_CHANNEL",function(){return d}),t.d(e,"DRUM_CHANNEL",function(){return f}),t.d(e,"NON_DRUM_CHANNELS",function(){return y}),t.d(e,"DEFAULT_DRUM_PITCH_CLASSES",function(){return m}),t.d(e,"MIN_MIDI_VELOCITY",function(){return h}),t.d(e,"MAX_MIDI_VELOCITY",function(){return g}),t.d(e,"MIDI_VELOCITIES",function(){return x}),t.d(e,"NO_CHORD",function(){return w}),t.d(e,"NUM_PITCH_CLASSES",function(){return I}),t.d(e,"MIN_MIDI_PITCH",function(){return N}),t.d(e,"MAX_MIDI_PITCH",function(){return A}),t.d(e,"MIDI_PITCHES",function(){return T}),t.d(e,"MIN_PIANO_PITCH",function(){return P}),t.d(e,"MAX_PIANO_PITCH",function(){return O}),t.d(e,"MIN_DRUM_PITCH",function(){return F}),t.d(e,"MAX_DRUM_PITCH",function(){return G}),t.d(e,"MIN_MIDI_PROGRAM",function(){return U}),t.d(e,"MAX_MIDI_PROGRAM",function(){return Q}),t.d(e,"LO_CLICK_PITCH",function(){return ne}),t.d(e,"HI_CLICK_PITCH",function(){return J}),t.d(e,"LO_CLICK_CLASS",function(){return oe}),t.d(e,"HI_CLICK_CLASS",function(){return le});const s=120,r=16,o=4,i=100,c=80,a=0,l=220,d=0,f=9,y=[0,1,2,3,4,5,6,7,8,10,11,12,13,14,15],m=[[36,35],[38,27,28,31,32,33,34,37,39,40,56,65,66,75,85],[42,44,54,68,69,70,71,73,78,80],[46,67,72,74,79,81],[45,29,41,61,64,84],[48,47,60,63,77,86,87],[50,30,43,62,76,83],[49,55,57,58],[51,52,53,59,82]],h=0,g=127,x=g-h+1,w="N.C.",I=12,N=0,A=127,T=A-N+1,P=21,O=108,F=35,G=81,U=0,Q=127,ne=89,J=90,oe=9,le=10},function(n,e){n.exports=__WEBPACK_EXTERNAL_MODULE__9__},function(n,e,t){t.d(e,"a",function(){return r});var s=t(35),r=s.tensorflow.magenta.NoteSequence},function(n,e,t){t.d(e,"a",function(){return r}),t.d(e,"b",function(){return o}),t.d(e,"c",function(){return c});var s=t(16);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r{constructor(l){this.global=l,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(l,d){this.platform!=null&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${d}.`),this.platformName=l,this.platform=d}registerFlag(l,d,f){if(this.flagRegistry[l]={evaluationFn:d,setHook:f},this.urlFlags[l]!=null){const y=this.urlFlags[l];console.warn(`Setting feature override from URL ${l}: ${y}.`),this.set(l,y)}}async getAsync(l){return l in this.flags||(this.flags[l]=await this.evaluateFlag(l)),this.flags[l]}get(l){if(l in this.flags)return this.flags[l];const d=this.evaluateFlag(l);if(Object(s.x)(d))throw new Error(`Flag ${l} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[l]=d,this.flags[l]}getNumber(l){return this.get(l)}getBool(l){return this.get(l)}getFlags(){return this.flags}get features(){return this.flags}set(l,d){if(this.flagRegistry[l]==null)throw new Error(`Cannot set flag ${l} as it has not been registered.`);this.flags[l]=d,this.flagRegistry[l].setHook!=null&&this.flagRegistry[l].setHook(d)}evaluateFlag(l){if(this.flagRegistry[l]==null)throw new Error(`Cannot evaluate flag '${l}': no evaluation function found.`);return this.flagRegistry[l].evaluationFn()}setFlags(l){this.flags=Object.assign({},l)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(this.global===void 0||this.global.location===void 0||this.global.location.search===void 0)return;const l=function(d){const f={};return d.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(y,...m)=>(function(h,g,x){h[decodeURIComponent(g)]=decodeURIComponent(x||"")}(f,m[0],m[1]),m.join("="))),f}(this.global.location.search);"tfjsflags"in l&&l.tfjsflags.split(",").forEach(d=>{const[f,y]=d.split(":");this.urlFlags[f]=function(m,h){if((h=h.toLowerCase())==="true"||h==="false")return h==="true";if(""+ +h===h)return+h;throw new Error(`Could not parse value flag value ${h} for flag ${m}.`)}(f,y)})}}function o(){return i}let i=null;function c(a){i=a}},function(n,e,t){t.r(e),t.d(e,"Level",function(){return s}),t.d(e,"verbosity",function(){return o}),t.d(e,"setVerbosity",function(){return i}),t.d(e,"log",function(){return c}),t.d(e,"logWithDuration",function(){return a});var s,r=t(15);(function(l){l[l.NONE=0]="NONE",l[l.WARN=5]="WARN",l[l.INFO=10]="INFO",l[l.DEBUG=20]="DEBUG"})(s||(s={}));let o=10;function i(l){}function c(l,d="Magenta.js",f=10){if(f===0)throw Error("Logging level cannot be NONE.");o>=f&&(f===5?console.warn:console.log)(`%c ${d} `,"background:magenta; color:white",l)}function a(l,d,f="Magenta.js",y=10){c(`${l} in ${((r.d.now()-d)/1e3).toPrecision(3)}s`,f,y)}},function(n,e,t){t.r(e),t.d(e,"MultipleTimeSignatureException",function(){return o}),t.d(e,"BadTimeSignatureException",function(){return i}),t.d(e,"NegativeTimeException",function(){return c}),t.d(e,"MultipleTempoException",function(){return a}),t.d(e,"QuantizationStatusException",function(){return l}),t.d(e,"clone",function(){return d}),t.d(e,"stepsPerQuarterToStepsPerSecond",function(){return f}),t.d(e,"quantizeToStep",function(){return y}),t.d(e,"quantizeNoteSequence",function(){return g}),t.d(e,"isQuantizedSequence",function(){return x}),t.d(e,"assertIsQuantizedSequence",function(){return w}),t.d(e,"isRelativeQuantizedSequence",function(){return I}),t.d(e,"assertIsRelativeQuantizedSequence",function(){return N}),t.d(e,"isAbsoluteQuantizedSequence",function(){return A}),t.d(e,"assertIsAbsoluteQuantizedSequence",function(){return T}),t.d(e,"unquantizeSequence",function(){return P}),t.d(e,"createQuantizedNoteSequence",function(){return O}),t.d(e,"mergeInstruments",function(){return F}),t.d(e,"replaceInstruments",function(){return G}),t.d(e,"mergeConsecutiveNotes",function(){return U}),t.d(e,"applySustainControlChanges",function(){return Q}),t.d(e,"concatenate",function(){return ne}),t.d(e,"trim",function(){return J}),t.d(e,"split",function(){return ge});var s=t(10),r=t(8);class o extends Error{constructor(ce){super(ce),Object.setPrototypeOf(this,new.target.prototype)}}class i extends Error{constructor(ce){super(ce),Object.setPrototypeOf(this,new.target.prototype)}}class c extends Error{constructor(ce){super(ce),Object.setPrototypeOf(this,new.target.prototype)}}class a extends Error{constructor(ce){super(ce),Object.setPrototypeOf(this,new.target.prototype)}}class l extends Error{constructor(ce){super(ce),Object.setPrototypeOf(this,new.target.prototype)}}function d(te){return s.a.decode(s.a.encode(te).finish())}function f(te,ce){return te*ce/60}function y(te,ce,ue=.5){const Te=te*ce;return Math.floor(Te+(1-ue))}function m(te){return te.controlChanges.concat(te.textAnnotations)}function h(te){if(te.tempos&&te.tempos.length!==0){if(te.tempos.sort((ce,ue)=>ce.time-ue.time),te.tempos[0].time!==0&&te.tempos[0].qpm!==r.DEFAULT_QUARTERS_PER_MINUTE)throw new a("NoteSequence has an implicit tempo change from initial "+r.DEFAULT_QUARTERS_PER_MINUTE+` qpm to ${te.tempos[0].qpm} qpm at ${te.tempos[0].time} seconds.`);for(let ce=1;ce<te.tempos.length;ce++)if(te.tempos[ce].qpm!==te.tempos[0].qpm)throw new a(`NoteSequence has at least one tempo change from ${te.tempos[0].qpm} qpm to ${te.tempos[ce].qpm}qpm at ${te.tempos[ce].time} seconds.`)}}function g(te,ce){const ue=d(te);if(ue.quantizationInfo=s.a.QuantizationInfo.create({stepsPerQuarter:ce}),ue.timeSignatures.length>0){if(ue.timeSignatures.sort((Re,Ae)=>Re.time-Ae.time),ue.timeSignatures[0].time!==0&&(ue.timeSignatures[0].numerator!==4||ue.timeSignatures[0].denominator!==4))throw new o(`NoteSequence has an implicit change from initial 4/4 time signature to ${ue.timeSignatures[0].numerator}/`+ue.timeSignatures[0].denominator+" at "+ue.timeSignatures[0].time+" seconds.");for(let Re=1;Re<ue.timeSignatures.length;Re++){const Ae=ue.timeSignatures[Re];if(Ae.numerator!==ue.timeSignatures[0].numerator||Ae.denominator!==ue.timeSignatures[0].denominator)throw new o("NoteSequence has at least one time signature change from "+ue.timeSignatures[0].numerator+"/"+ue.timeSignatures[0].denominator+` to ${Ae.numerator}/${Ae.denominator} at ${Ae.time} seconds`)}ue.timeSignatures[0].time=0,ue.timeSignatures=[ue.timeSignatures[0]]}else{const Re=s.a.TimeSignature.create({numerator:4,denominator:4,time:0});ue.timeSignatures.push(Re)}const Te=ue.timeSignatures[0];if(!(Ce=Te.denominator)||(Ce&Ce-1)!=0)throw new i(`Denominator is not a power of 2. Time signature: ${Te.numerator}/${Te.denominator}`);var Ce;if(Te.numerator===0)throw new i(`Numerator is 0. Time signature: ${Te.numerator}/${Te.denominator}`);if(ue.tempos.length>0)h(ue),ue.tempos[0].time=0,ue.tempos=[ue.tempos[0]];else{const Re=s.a.Tempo.create({qpm:r.DEFAULT_QUARTERS_PER_MINUTE,time:0});ue.tempos.push(Re)}const Ne=f(ce,ue.tempos[0].qpm);return ue.totalQuantizedSteps=y(te.totalTime,Ne),function(Re,Ae){for(const we of Re.notes){if(we.quantizedStartStep=y(we.startTime,Ae),we.quantizedEndStep=y(we.endTime,Ae),we.quantizedEndStep===we.quantizedStartStep&&(we.quantizedEndStep+=1),we.quantizedStartStep<0||we.quantizedEndStep<0)throw new c("Got negative note time: start_step = "+we.quantizedStartStep+", end_step = "+we.quantizedEndStep);we.quantizedEndStep>Re.totalQuantizedSteps&&(Re.totalQuantizedSteps=we.quantizedEndStep)}m(Re).forEach(we=>{if(we.quantizedStep=y(we.time,Ae),we.quantizedStep<0)throw new c("Got negative event time: step = "+we.quantizedStep)})}(ue,Ne),ue}function x(te){return te.quantizationInfo&&(te.quantizationInfo.stepsPerQuarter>0||te.quantizationInfo.stepsPerSecond>0)}function w(te){if(!x(te))throw new l(`NoteSequence ${te.id} is not quantized (missing quantizationInfo)`)}function I(te){return te.quantizationInfo&&te.quantizationInfo.stepsPerQuarter>0}function N(te){if(!I(te))throw new l(`NoteSequence ${te.id} is not quantized or is quantized based on absolute timing`)}function A(te){return te.quantizationInfo&&te.quantizationInfo.stepsPerSecond>0}function T(te){if(!A(te))throw new l(`NoteSequence ${te.id} is not quantized or is quantized based on relative timing`)}function P(te,ce){N(te),h(te);const ue=d(te);ce?ue.tempos&&ue.tempos.length>0?ue.tempos[0].qpm=ce:ue.tempos.push(s.a.Tempo.create({time:0,qpm:ce})):ce=te.tempos&&te.tempos.length>0?ue.tempos[0].qpm:r.DEFAULT_QUARTERS_PER_MINUTE;const Te=Ce=>Ce/ue.quantizationInfo.stepsPerQuarter*(60/ce);return ue.totalTime=Te(ue.totalQuantizedSteps),ue.notes.forEach(Ce=>{Ce.startTime=Te(Ce.quantizedStartStep),Ce.endTime=Te(Ce.quantizedEndStep),ue.totalTime=Math.max(ue.totalTime,Ce.endTime),delete Ce.quantizedStartStep,delete Ce.quantizedEndStep}),m(ue).forEach(Ce=>{Ce.time=Te(Ce.time)}),delete ue.totalQuantizedSteps,delete ue.quantizationInfo,ue}function O(te=r.DEFAULT_STEPS_PER_QUARTER,ce=r.DEFAULT_QUARTERS_PER_MINUTE){return s.a.create({quantizationInfo:{stepsPerQuarter:te},tempos:[{qpm:ce}]})}function F(te){const ce=d(te),ue=ce.notes.concat(ce.pitchBends).concat(ce.controlChanges),Te=Array.from(new Set(ue.filter(Ce=>!Ce.isDrum).map(Ce=>Ce.program)));return ue.forEach(Ce=>{Ce.isDrum?(Ce.program=0,Ce.instrument=Te.length):Ce.instrument=Te.indexOf(Ce.program)}),ce}function G(te,ce){const ue=new Set(te.notes.map(Re=>Re.instrument)),Te=new Set(ce.notes.map(Re=>Re.instrument)),Ce=[];te.notes.forEach(Re=>{Te.has(Re.instrument)||Ce.push(s.a.Note.create(Re))}),ce.notes.forEach(Re=>{ue.has(Re.instrument)&&Ce.push(s.a.Note.create(Re))});const Ne=d(te);return Ne.notes=Ce.sort((Re,Ae)=>Re.instrument-Ae.instrument||Re.quantizedStartStep-Ae.quantizedStartStep),Ne}function U(te){w(te);const ce=d(te);ce.notes=[];const ue=te.notes.sort((Ne,Re)=>Ne.instrument-Re.instrument||Ne.quantizedStartStep-Re.quantizedStartStep),Te=new s.a.Note;Te.pitch=ue[0].pitch,Te.instrument=ue[0].instrument,Te.quantizedStartStep=ue[0].quantizedStartStep,Te.quantizedEndStep=ue[0].quantizedEndStep,ce.notes.push(Te);let Ce=0;for(let Ne=1;Ne<ue.length;Ne++){const Re=ue[Ne],Ae=ce.notes[Ce];if(Ae.instrument===Re.instrument&&Ae.pitch===Re.pitch&&Re.quantizedStartStep===Ae.quantizedEndStep&&Re.quantizedStartStep%16!=0)ce.notes[Ce].quantizedEndStep+=Re.quantizedEndStep-Re.quantizedStartStep;else{const we=new s.a.Note;we.pitch=ue[Ne].pitch,we.instrument=ue[Ne].instrument,we.quantizedStartStep=ue[Ne].quantizedStartStep,we.quantizedEndStep=ue[Ne].quantizedEndStep,ce.notes.push(we),Ce++}}return ce}function Q(te,ce=64){let ue;if(function(we){we[we.SUSTAIN_ON=0]="SUSTAIN_ON",we[we.SUSTAIN_OFF=1]="SUSTAIN_OFF",we[we.NOTE_ON=2]="NOTE_ON",we[we.NOTE_OFF=3]="NOTE_OFF"}(ue||(ue={})),x(te))throw new Error("Can only apply sustain to unquantized NoteSequence.");const Te=d(te),Ce=[];for(const we of Te.notes)we.isDrum===!1&&(we.startTime!==null&&Ce.push({time:we.startTime,type:ue.NOTE_ON,event:we}),we.endTime!==null&&Ce.push({time:we.endTime,type:ue.NOTE_OFF,event:we}));for(const we of Te.controlChanges)if(we.controlNumber===ce){const Le=we.controlValue;Le>=64?Ce.push({time:we.time,type:ue.SUSTAIN_ON,event:we}):Le<64&&Ce.push({time:we.time,type:ue.SUSTAIN_OFF,event:we})}Ce.sort((we,Le)=>we.time-Le.time);const Ne={},Re={};let Ae=0;for(const we of Ce){Ae=we.time;const Le=we.type,pe=we.event;if(Le===ue.SUSTAIN_ON)Re[pe.instrument]=!0;else if(Le===ue.SUSTAIN_OFF){Re[pe.instrument]=!1;const B=[];pe.instrument in Ne||(Ne[pe.instrument]=[]);for(const D of Ne[pe.instrument])D.endTime<Ae?(D.endTime=Ae,Ae>Te.totalTime&&(Te.totalTime=Ae)):B.push(D);Ne[pe.instrument]=B}else if(Le===ue.NOTE_ON){if(Re[pe.instrument]===!0){const B=[];pe.instrument in Ne||(Ne[pe.instrument]=[]);for(const D of Ne[pe.instrument])D.pitch===pe.pitch?(D.endTime=Ae,D.startTime===D.endTime&&Te.notes.push(D)):B.push(D);Ne[pe.instrument]=B}pe.instrument in Ne||(Ne[pe.instrument]=[]),Ne[pe.instrument].push(pe)}else if(Le===ue.NOTE_OFF&&Re[pe.instrument]!==!0){const B=Ne[pe.instrument].indexOf(pe);B>-1&&Ne[pe.instrument].splice(B,1)}}for(const we of Object.values(Ne))for(const Le of we)Le.endTime=Ae,Te.totalTime=Ae;return Te}function ne(te,ce){if(ce&&ce.length!==te.length)throw new Error(`Number of sequences to concatenate and their individual
 durations does not match.`);if(x(te[0])){for(let ue=0;ue<te.length;++ue)if(w(te[ue]),te[ue].quantizationInfo.stepsPerQuarter!==te[0].quantizationInfo.stepsPerQuarter)throw new Error("Not all sequences have the same quantizationInfo");return oe(te,"totalQuantizedSteps","quantizedStartStep","quantizedEndStep",ce)}return oe(te,"totalTime","startTime","endTime",ce)}function J(te,ce,ue,Te){return x(te)?le(te,ce,ue,"totalQuantizedSteps","quantizedStartStep","quantizedEndStep",Te):le(te,ce,ue,"totalTime","startTime","endTime",Te)}function oe(te,ce,ue,Te,Ce){let Ne,Re=0;for(let Ae=0;Ae<te.length;++Ae){const we=Ce?Ce[Ae]:te[Ae][ce];if(we===0)throw Error(`Sequence ${te[Ae].id} has no ${ce}, and no individual duration was provided.`);Ae===0?Ne=d(te[0]):Array.prototype.push.apply(Ne.notes,te[Ae].notes.map(Le=>{const pe=s.a.Note.create(Le);return pe[ue]+=Re,pe[Te]+=Re,pe})),Re+=we}return Ne[ce]=Re,Ne}function le(te,ce,ue,Te,Ce,Ne,Re){const Ae=d(te);Ae[Te]=ue,Ae.notes=Ae.notes.filter(we=>we[Ce]>=ce&&we[Ce]<=ue&&(Re||we[Ne]<=ue)),Ae[Te]-=ce;for(let we=0;we<Ae.notes.length;we++)Ae.notes[we][Ce]-=ce,Ae.notes[we][Ne]-=ce,Re&&(Ae.notes[we][Ne]=Math.min(Ae.notes[we][Ne],Ae[Te]));return Ae}function ge(te,ce){w(te);const ue=d(te),Te=ue.notes.sort((Ae,we)=>Ae.quantizedStartStep-we.quantizedStartStep),Ce=[];let Ne=0,Re=[];for(let Ae=0;Ae<Te.length;Ae++){const we=Te[Ae],Le=we.quantizedStartStep,pe=we.quantizedEndStep;if(we.quantizedStartStep-=Ne,we.quantizedEndStep-=Ne,!(we.quantizedStartStep<0))if(we.quantizedEndStep<=ce)Re.push(we);else{if(we.quantizedStartStep<ce){const B=s.a.Note.create(we);B.quantizedEndStep=ce,B.startTime=B.endTime=void 0,Re.push(B),we.quantizedStartStep=Ne+ce,we.quantizedEndStep=pe}else we.quantizedStartStep=Le,we.quantizedEndStep=pe;if((we.quantizedEndStep>ce||we.quantizedStartStep>ce)&&(Ae-=1),Re.length!==0){const B=d(ue);B.notes=Re,B.totalQuantizedSteps=ce,Ce.push(B)}Re=[],Ne+=ce}}if(Re.length!==0){const Ae=d(ue);Ae.notes=Re,Ae.totalQuantizedSteps=ce,Ce.push(Ae)}return Ce}},function(n,e,t){t.d(e,"b",function(){return o}),t.d(e,"a",function(){return i});var s=t(5),r=t(27);t(16);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o(c,a){if(c.dtype===a.dtype)return[c,a];const l=Object(r.b)(c.dtype,a.dtype);return[c.cast(l),a.cast(l)]}function i(c){const a=[];return function l(d,f,y){if(d==null)return;if(d instanceof s.a)return void f.push(d);if(m=d,!Array.isArray(m)&&typeof m!="object")return;var m;const h=d;for(const g in h){const x=h[g];y.has(x)||(y.add(x),l(x,f,y))}}(c,a,new Set),a}},function(n,e,t){(function(s){t.d(e,"a",function(){return o}),t.d(e,"d",function(){return i}),t.d(e,"c",function(){return c}),t.d(e,"b",function(){return l});const r=function(){if(typeof globalThis<"u")return globalThis;if(typeof self<"u")return self;if(typeof window<"u")return window;if(s!==void 0)return s;throw new Error("cannot find the global object")}(),o=r.fetch.bind(r),i=r.performance,c=(r.navigator,!!r.webkitOfflineAudioContext),a=r.WorkerGlobalScope!==void 0;function l(d){if(d=c?44100:d,a)throw new Error("Cannot use offline audio context in a web worker.");const f=r.webkitOfflineAudioContext;return c?new f(1,d,d):new r.OfflineAudioContext(1,d,d)}}).call(this,t(21))},function(n,e,t){/**
* @license
* Copyright 2020 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/function s(j){let ee=j.length,ye=0,Oe=0;for(;ee>0;)Oe=Math.random()*ee|0,ee--,ye=j[ee],j[ee]=j[Oe],j[Oe]=ye}function r(j,ee,ye){return Math.max(j,Math.min(ee,ye))}function o(j){return j%2==0?j:j+1}function i(j){let ee=0;for(let ye=0;ye<j.length;ye++)ee+=j[ye];return ee}function c(j,ee){const ye=Math.random();return ee*ye+(1-ye)*j}function a(j,ee){let ye=0;for(let Oe=0;Oe<j.length;Oe++){const ze=Number(j[Oe])-Number(ee[Oe]);ye+=ze*ze}return ye}function l(j,ee){if(!j)throw new Error(typeof ee=="string"?ee:ee())}function d(j,ee,ye=""){l(g(j,ee),()=>ye+` Shapes ${j} and ${ee} must match`)}function f(j){l(j!=null,()=>"The input to the tensor constructor must be a non-null value.")}function y(j,ee=[],ye=!1){if(ee==null&&(ee=[]),Array.isArray(j)||oe(j)&&!ye)for(let Oe=0;Oe<j.length;++Oe)y(j[Oe],ee,ye);else ee.push(j);return ee}function m(j){if(j.length===0)return 1;let ee=j[0];for(let ye=1;ye<j.length;ye++)ee*=j[ye];return ee}function h(j){return j.length===0}function g(j,ee){if(j===ee)return!0;if(j==null||ee==null||j.length!==ee.length)return!1;for(let ye=0;ye<j.length;ye++)if(j[ye]!==ee[ye])return!1;return!0}function x(j){return j%1==0}function w(j){if(Math.tanh!=null)return Math.tanh(j);if(j===1/0)return 1;if(j===-1/0)return-1;{const ee=Math.exp(2*j);return(ee-1)/(ee+1)}}function I(j){const ee=Math.ceil(Math.sqrt(j));return[ee,Math.ceil(j/ee)]}function N(j){const ee=new Uint32Array(j);for(let ye=0;ye<j;++ye)ee[ye]=ye;return s(ee),ee}function A(j,ee){return ee<=j.length?j:j+" ".repeat(ee-j.length)}function T(j,ee=Oe=>0,ye){return new Promise((Oe,ze)=>{let Xe=0;const ot=()=>{if(j())return void Oe();Xe++;const st=ee(Xe);ye!=null&&Xe>=ye?ze():setTimeout(ot,st)};ot()})}function P(j,ee){let ye=1,Oe=-1;for(let Xe=0;Xe<j.length;++Xe)if(j[Xe]>=0)ye*=j[Xe];else if(j[Xe]===-1){if(Oe!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${Oe} and dim ${Xe}`);Oe=Xe}else if(j[Xe]<0)throw Error(`Shapes can not be < 0. Found ${j[Xe]} at dim ${Xe}`);if(Oe===-1){if(ee>0&&ee!==ye)throw Error(`Size(${ee}) must match the product of shape ${j}`);return j}if(ye===0)throw Error(`Cannot infer the missing size in [${j}] when there are 0 elements`);if(ee%ye!=0)throw Error(`The implicit shape can't be a fractional number. Got ${ee} / ${ye}`);const ze=j.slice();return ze[Oe]=ee/ye,ze}function O(j,ee){const ye=ee.length;return l((j=j==null?ee.map((Oe,ze)=>ze):[].concat(j)).every(Oe=>Oe>=-ye&&Oe<ye),()=>`All values in axis param must be in range [-${ye}, ${ye}) but got axis `+j),l(j.every(Oe=>x(Oe)),()=>"All values in axis param must be integers but got axis "+j),j.map(Oe=>Oe<0?ye+Oe:Oe)}function F(j,ee){const ye=[],Oe=[],ze=ee!=null&&Array.isArray(ee)&&ee.length===0,Xe=ee==null||ze?null:O(ee,j).sort();let ot=0;for(let st=0;st<j.length;++st){if(Xe!=null){if(Xe[ot]===st&&j[st]!==1)throw new Error(`Can't squeeze axis ${st} since its dim '${j[st]}' is not 1`);(Xe[ot]==null||Xe[ot]>st)&&j[st]===1&&(ye.push(j[st]),Oe.push(st)),Xe[ot]<=st&&ot++}j[st]!==1&&(ye.push(j[st]),Oe.push(st))}return{newShape:ye,keptDims:Oe}}function G(j,ee){let ye=null;if(j==null||j==="float32")ye=new Float32Array(ee);else if(j==="int32")ye=new Int32Array(ee);else{if(j!=="bool")throw new Error("Unknown data type "+j);ye=new Uint8Array(ee)}return ye}function U(j,ee){let ye=null;if(j==null||j==="float32")ye=new Float32Array(ee);else if(j==="int32")ye=new Int32Array(ee);else if(j==="bool")ye=new Uint8Array(ee);else{if(j!=="string")throw new Error("Unknown data type "+j);ye=new Array(ee)}return ye}function Q(j,ee){for(let ye=0;ye<j.length;ye++){const Oe=j[ye];if(isNaN(Oe)||!isFinite(Oe))throw Error(`A tensor of type ${ee} being uploaded contains ${Oe}.`)}}function ne(j){return j==="bool"||j==="complex64"||j==="float32"||j==="int32"||j==="string"}function J(j,ee){return ee!=="complex64"&&(ee!=="float32"||j==="complex64")&&(ee!=="int32"||j==="float32"||j==="complex64")&&(ee!=="bool"||j!=="bool")}function oe(j){return j instanceof Float32Array||j instanceof Int32Array||j instanceof Uint8Array}function le(j){if(j==="float32"||j==="int32")return 4;if(j==="complex64")return 8;if(j==="bool")return 1;throw new Error("Unknown dtype "+j)}function ge(j){if(j==null)return 0;let ee=0;return j.forEach(ye=>ee+=ye.length),ee}function te(j){return typeof j=="string"||j instanceof String}function ce(j){return typeof j=="boolean"}function ue(j){return typeof j=="number"}function Te(j){return Array.isArray(j)?Te(j[0]):j instanceof Float32Array?"float32":j instanceof Int32Array||j instanceof Uint8Array?"int32":ue(j)?"float32":te(j)?"string":ce(j)?"bool":"float32"}function Ce(j){return!!(j&&j.constructor&&j.call&&j.apply)}function Ne(j,ee){for(let ye=ee;ye<j;++ye)if(j%ye==0)return ye;return j}function Re(j){const ee=j.length;if(ee<2)return[];const ye=new Array(ee-1);ye[ee-2]=j[ee-1];for(let Oe=ee-3;Oe>=0;--Oe)ye[Oe]=ye[Oe+1]*j[Oe+1];return ye}function Ae(j,ee){if(j.length===0)return ee[0];const ye=j.reduce((Oe,ze)=>Oe*ze);if(ye===0)return[];if(ye!==ee.length)throw new Error(`[${j}] does not match the input size ${ee.length}.`);return function Oe(ze,Xe,ot){const st=new Array;if(Xe.length===1){const pt=Xe[0];for(let gt=0;gt<pt;gt++)st[gt]=ot[ze+gt]}else{const pt=Xe[0],gt=Xe.slice(1),ht=gt.reduce((Tt,xt)=>Tt*xt);for(let Tt=0;Tt<pt;Tt++)st[Tt]=Oe(ze+Tt*ht,gt,ot)}return st}(0,j,ee)}function we(j,ee){const ye=Le(j,ee);for(let Oe=0;Oe<ye.length;Oe++)ye[Oe]=1;return ye}function Le(j,ee){if(ee==null||ee==="float32"||ee==="complex64")return new Float32Array(j);if(ee==="int32")return new Int32Array(j);if(ee==="bool")return new Uint8Array(j);throw new Error("Unknown data type "+ee)}function pe(j,ee){const ye=j.reduce((Oe,ze)=>Oe*ze,1);if(ee==null||ee==="float32")return Ae(j,new Float32Array(ye));if(ee==="int32")return Ae(j,new Int32Array(ye));if(ee==="bool")return Ae(j,new Uint8Array(ye));throw new Error("Unknown data type "+ee)}function B(j){j.forEach(ee=>{l(Number.isInteger(ee)&&ee>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${j}].`)})}function D(j,ee,ye){if(ee===0)return 0;if(ee===1)return j[0];let Oe=j[j.length-1];for(let ze=0;ze<j.length-1;++ze)Oe+=ye[ze]*j[ze];return Oe}function H(j,ee,ye){if(ee===0)return[];if(ee===1)return[j];const Oe=new Array(ee);for(let ze=0;ze<Oe.length-1;++ze)Oe[ze]=Math.floor(j/ye[ze]),j-=Oe[ze]*ye[ze];return Oe[Oe.length-1]=j,Oe}function he(j){return j&&j.then&&typeof j.then=="function"}t.d(e,"M",function(){return s}),t.d(e,"i",function(){return r}),t.d(e,"H",function(){return o}),t.d(e,"Q",function(){return i}),t.d(e,"J",function(){return c}),t.d(e,"l",function(){return a}),t.d(e,"b",function(){return l}),t.d(e,"e",function(){return d}),t.d(e,"d",function(){return f}),t.d(e,"m",function(){return y}),t.d(e,"N",function(){return m}),t.d(e,"y",function(){return h}),t.d(e,"a",function(){return g}),t.d(e,"v",function(){return x}),t.d(e,"R",function(){return w}),t.d(e,"O",function(){return I}),t.d(e,"k",function(){return N}),t.d(e,"L",function(){return A}),t.d(e,"K",function(){return T}),t.d(e,"s",function(){return P}),t.d(e,"I",function(){return O}),t.d(e,"P",function(){return F}),t.d(e,"o",function(){return G}),t.d(e,"n",function(){return U}),t.d(e,"h",function(){return Q}),t.d(e,"B",function(){return ne}),t.d(e,"p",function(){return J}),t.d(e,"A",function(){return oe}),t.d(e,"g",function(){return le}),t.d(e,"f",function(){return ge}),t.d(e,"z",function(){return te}),t.d(e,"t",function(){return ce}),t.d(e,"w",function(){return ue}),t.d(e,"r",function(){return Te}),t.d(e,"u",function(){return Ce}),t.d(e,"G",function(){return Ne}),t.d(e,"j",function(){return Re}),t.d(e,"S",function(){return Ae}),t.d(e,"D",function(){return we}),t.d(e,"F",function(){return Le}),t.d(e,"E",function(){return pe}),t.d(e,"c",function(){return B}),t.d(e,"C",function(){return D}),t.d(e,"q",function(){return H}),t.d(e,"x",function(){return he})},function(n,e,t){(function(s){t.d(e,"f",function(){return a}),t.d(e,"e",function(){return l}),t.d(e,"a",function(){return m}),t.d(e,"b",function(){return h}),t.d(e,"d",function(){return g}),t.d(e,"c",function(){return x}),t.d(e,"g",function(){return w});var r=t(19),o=t(24),i=t(16),c=t(41);async function a(N,A){const T=[],P=[],O=Array.isArray(N)?N.map(F=>F.name):Object.keys(N);for(let F=0;F<O.length;++F){const G=O[F],U=Array.isArray(N)?N[F].tensor:N[G];if(U.dtype!=="float32"&&U.dtype!=="int32"&&U.dtype!=="bool"&&U.dtype!=="string"&&U.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${G}': ${U.dtype}`);const Q={name:G,shape:U.shape,dtype:U.dtype};if(U.dtype==="string"){const ne=new Promise(async J=>{const oe=await U.bytes(),le=oe.reduce((ce,ue)=>ce+ue.length,0)+4*oe.length,ge=new Uint8Array(le);let te=0;for(let ce=0;ce<oe.length;ce++){const ue=oe[ce],Te=new Uint8Array(new Uint32Array([ue.length]).buffer);ge.set(Te,te),te+=4,ge.set(ue,te),te+=ue.length}J(ge)});P.push(ne)}else P.push(U.data());A!=null&&(Q.group=A),T.push(Q)}return{data:d(await Promise.all(P)),specs:T}}function l(N,A){const T={};let P,O=0;for(const F of A){const G=F.name,U=F.dtype,Q=F.shape,ne=Object(i.N)(Q);let J;if("quantization"in F){const oe=F.quantization;if(oe.dtype==="uint8"||oe.dtype==="uint16"){if(!("min"in oe)||!("scale"in oe))throw new Error(`Weight ${F.name} with quantization ${oe.dtype} doesn't have corresponding metadata min and scale.`)}else{if(oe.dtype!=="float16")throw new Error(`Weight ${F.name} has unknown quantization dtype ${oe.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if(U!=="float32")throw new Error(`Weight ${F.name} is quantized with ${oe.dtype} which only supports weights of type float32 not ${U}.`)}const le=c.a[oe.dtype],ge=N.slice(O,O+ne*le),te=oe.dtype==="uint8"?new Uint8Array(ge):new Uint16Array(ge);if(U==="float32")if(oe.dtype==="uint8"||oe.dtype==="uint16"){J=new Float32Array(te.length);for(let ce=0;ce<te.length;ce++){const ue=te[ce];J[ce]=ue*oe.scale+oe.min}}else{if(oe.dtype!=="float16")throw new Error(`Unsupported quantization type ${oe.dtype} for weight type float32.`);P===void 0&&(P=I()),J=P(te)}else{if(U!=="int32")throw new Error(`Unsupported dtype in weight '${G}': ${U}`);if(oe.dtype!=="uint8"&&oe.dtype!=="uint16")throw new Error(`Unsupported quantization type ${oe.dtype} for weight type int32.`);J=new Int32Array(te.length);for(let ce=0;ce<te.length;ce++){const ue=te[ce];J[ce]=Math.round(ue*oe.scale+oe.min)}}O+=ne*le}else if(U==="string"){const oe=Object(i.N)(F.shape);J=[];for(let le=0;le<oe;le++){const ge=new Uint32Array(N.slice(O,O+4))[0];O+=4;const te=new Uint8Array(N.slice(O,O+ge));J.push(te),O+=ge}}else{const oe=c.a[U],le=N.slice(O,O+ne*oe);if(U==="float32")J=new Float32Array(le);else if(U==="int32")J=new Int32Array(le);else if(U==="bool")J=new Uint8Array(le);else{if(U!=="complex64")throw new Error(`Unsupported dtype in weight '${G}': ${U}`);{J=new Float32Array(le);const ge=new Float32Array(J.length/2),te=new Float32Array(J.length/2);for(let Te=0;Te<ge.length;Te++)ge[Te]=J[2*Te],te[Te]=J[2*Te+1];const ce=Object(o.a)(ge,Q,"float32"),ue=Object(o.a)(te,Q,"float32");T[G]=Object(r.a)(ce,ue),ce.dispose(),ue.dispose()}}O+=ne*oe}U!=="complex64"&&(T[G]=Object(o.a)(J,Q,U))}return T}function d(N){if(N===null)throw new Error("Invalid input value: "+JSON.stringify(N));let A=0;const T=[];N.forEach(F=>{if(A+=F.byteLength,T.push(F.byteLength===F.buffer.byteLength?F:new F.constructor(F)),!(F instanceof Float32Array||F instanceof Int32Array||F instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+F.constructor.name)});const P=new Uint8Array(A);let O=0;return T.forEach(F=>{P.set(new Uint8Array(F.buffer),O),O+=F.byteLength}),P.buffer}const f=s!==void 0&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function y(N){return f?s.byteLength(N):new Blob([N]).size}function m(N){if(f)return s.from(N).toString("base64");const A=new Uint8Array(N);let T="";for(let P=0,O=A.length;P<O;P++)T+=String.fromCharCode(A[P]);return btoa(T)}function h(N){if(f){const P=s.from(N,"base64");return P.buffer.slice(P.byteOffset,P.byteOffset+P.byteLength)}const A=atob(N),T=new Uint8Array(A.length);for(let P=0;P<A.length;++P)T.set([A.charCodeAt(P)],P);return T.buffer}function g(N){if(N.length===1)return N[0];let A=0;N.forEach(O=>{A+=O.byteLength});const T=new Uint8Array(A);let P=0;return N.forEach(O=>{T.set(new Uint8Array(O),P),P+=O.byteLength}),T.buffer}function x(N){for(N=N.trim();N.endsWith("/");)N=N.slice(0,N.length-1);const A=N.split("/");return A[A.length-1]}function w(N){if(N.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:N.modelTopology==null?0:y(JSON.stringify(N.modelTopology)),weightSpecsBytes:N.weightSpecs==null?0:y(JSON.stringify(N.weightSpecs)),weightDataBytes:N.weightData==null?0:N.weightData.byteLength}}function I(){const N=function(){const P=F=>{let G=F<<13,U=0;for(;(8388608&G)==0;)U-=8388608,G<<=1;return G&=-8388609,U+=947912704,G|U},O=new Uint32Array(2048);O[0]=0;for(let F=1;F<1024;F++)O[F]=P(F);for(let F=1024;F<2048;F++)O[F]=939524096+(F-1024<<13);return O}(),A=function(){const P=new Uint32Array(64);P[0]=0,P[31]=1199570944,P[32]=2147483648,P[63]=3347054592;for(let O=1;O<31;O++)P[O]=O<<23;for(let O=33;O<63;O++)P[O]=2147483648+(O-32<<23);return P}(),T=function(){const P=new Uint32Array(64);for(let O=0;O<64;O++)P[O]=1024;return P[0]=P[32]=0,P}();return P=>{const O=new ArrayBuffer(4*P.length),F=new Uint32Array(O);for(let G=0;G<P.length;G++){const U=P[G],Q=N[T[U>>10]+(1023&U)]+A[U>>10];F[G]=Q}return new Float32Array(O)}}}).call(this,t(68).Buffer)},function(n,e,t){(function(s){var r=e;function o(c,a,l){for(var d=Object.keys(a),f=0;f<d.length;++f)c[d[f]]!==void 0&&l||(c[d[f]]=a[d[f]]);return c}function i(c){function a(l,d){if(!(this instanceof a))return new a(l,d);Object.defineProperty(this,"message",{get:function(){return l}}),Error.captureStackTrace?Error.captureStackTrace(this,a):Object.defineProperty(this,"stack",{value:new Error().stack||""}),d&&o(this,d)}return(a.prototype=Object.create(Error.prototype)).constructor=a,Object.defineProperty(a.prototype,"name",{get:function(){return c}}),a.prototype.toString=function(){return this.name+": "+this.message},a}r.asPromise=t(51),r.base64=t(52),r.EventEmitter=t(53),r.float=t(54),r.inquire=t(55),r.utf8=t(56),r.pool=t(57),r.LongBits=t(58),r.isNode=!!(s!==void 0&&s&&s.process&&s.process.versions&&s.process.versions.node),r.global=r.isNode&&s||typeof window<"u"&&window||typeof self<"u"&&self||this,r.emptyArray=Object.freeze?Object.freeze([]):[],r.emptyObject=Object.freeze?Object.freeze({}):{},r.isInteger=Number.isInteger||function(c){return typeof c=="number"&&isFinite(c)&&Math.floor(c)===c},r.isString=function(c){return typeof c=="string"||c instanceof String},r.isObject=function(c){return c&&typeof c=="object"},r.isset=r.isSet=function(c,a){var l=c[a];return!(l==null||!c.hasOwnProperty(a))&&(typeof l!="object"||(Array.isArray(l)?l.length:Object.keys(l).length)>0)},r.Buffer=function(){try{var c=r.inquire("buffer").Buffer;return c.prototype.utf8Write?c:null}catch{return null}}(),r._Buffer_from=null,r._Buffer_allocUnsafe=null,r.newBuffer=function(c){return typeof c=="number"?r.Buffer?r._Buffer_allocUnsafe(c):new r.Array(c):r.Buffer?r._Buffer_from(c):typeof Uint8Array>"u"?c:new Uint8Array(c)},r.Array=typeof Uint8Array<"u"?Uint8Array:Array,r.Long=r.global.dcodeIO&&r.global.dcodeIO.Long||r.global.Long||r.inquire("long"),r.key2Re=/^true|false|0|1$/,r.key32Re=/^-?(?:0|[1-9][0-9]*)$/,r.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,r.longToHash=function(c){return c?r.LongBits.from(c).toHash():r.LongBits.zeroHash},r.longFromHash=function(c,a){var l=r.LongBits.fromHash(c);return r.Long?r.Long.fromBits(l.lo,l.hi,a):l.toNumber(!!a)},r.merge=o,r.lcFirst=function(c){return c.charAt(0).toLowerCase()+c.substring(1)},r.newError=i,r.ProtocolError=i("ProtocolError"),r.oneOfGetter=function(c){for(var a={},l=0;l<c.length;++l)a[c[l]]=1;return function(){for(var d=Object.keys(this),f=d.length-1;f>-1;--f)if(a[d[f]]===1&&this[d[f]]!==void 0&&this[d[f]]!==null)return d[f]}},r.oneOfSetter=function(c){return function(a){for(var l=0;l<c.length;++l)c[l]!==a&&delete this[c[l]]}},r.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},r._configure=function(){var c=r.Buffer;c?(r._Buffer_from=c.from!==Uint8Array.from&&c.from||function(a,l){return new c(a,l)},r._Buffer_allocUnsafe=c.allocUnsafe||function(a){return new c(a)}):r._Buffer_from=r._Buffer_allocUnsafe=null}}).call(this,t(21))},function(n,e,t){t.d(e,"a",function(){return a});var s=t(6),r=t(1),o=t(3),i=t(16),c=t(4);const a=Object(c.a)({complex_:function(l,d){const f=Object(o.a)(l,"real","complex"),y=Object(o.a)(d,"imag","complex");i.e(f.shape,y.shape,`real and imag shapes, ${f.shape} and ${y.shape}, must match in call to tf.complex().`);const m={real:f,imag:y};return s.a.runKernelFunc(h=>h.complex(f,y),m,null,r.y)}})},function(n,e,t){t.d(e,"e",function(){return d}),t.d(e,"d",function(){return f}),t.d(e,"f",function(){return y}),t.d(e,"i",function(){return m}),t.d(e,"j",function(){return g}),t.d(e,"a",function(){return w}),t.d(e,"h",function(){return I}),t.d(e,"b",function(){return T}),t.d(e,"g",function(){return O}),t.d(e,"c",function(){return F});var s=t(2),r=t(43),o=t(30),i=t(74),c=t(15),a=t(12);const l=Object(c.b)(16e3);async function d(U){return Object(c.a)(U).then(Q=>Q.arrayBuffer()).then(Q=>l.decodeAudioData(Q))}async function f(U){const Q=new FileReader;return new Promise((ne,J)=>{Q.onerror=()=>{Q.abort(),J(new DOMException("Something went wrong reading that file."))},Q.onload=()=>{ne(Q.result)},Q.readAsArrayBuffer(U)}).then(ne=>l.decodeAudioData(ne))}function y(U,Q){Q.power||(Q.power=2);const ne=function(le,ge){const te=ge.nFft||2048,ce=ge.winLength||te,ue=ge.hopLength||Math.floor(ce/4);let Te=T(ce);Te=I(Te,te);const Ce=function(we,Le,pe){const B=Math.floor((we.length-Le)/pe)+1,D=Array.from({length:B},(H,he)=>new Float32Array(Le));for(let H=0;H<B;H++){const he=H*pe,j=we.slice(he,he+Le);D[H].set(j),j.length}return D}(le=function(we,Le){const pe=N(we,Le);for(let B=0;B<Le;B++)pe[B]=pe[2*Le-B],pe[pe.length-B-1]=pe[pe.length-2*Le+B-1];return pe}(le,Math.floor(te/2)),te,ue),Ne=[],Re=Ce.length,Ae=te+2;for(let we=0;we<Re;we++){const Le=new Float32Array(Ae);Ne[we]=Le}for(let we=0;we<Re;we++){const Le=A(w(Ce[we],Te));Ne[we].set(Le.slice(0,Ae))}return Ne}(U,Q),[J,oe]=function(le,ge){const te=le.map(ue=>function(Te,Ce){return Te.map(Ne=>Math.pow(Ne,Ce))}(function(Te){const Ce=new Float32Array(Te.length/2);for(let Ne=0;Ne<Te.length/2;Ne++)Ce[Ne]=Math.sqrt(Te[2*Ne]*Te[2*Ne]+Te[2*Ne+1]*Te[2*Ne+1]);return Ce}(ue),ge)),ce=le[0].length-1;return[te,ce]}(ne,Q.power);return Q.nFft=oe,function(le,ge){const te=[];for(let ce=0;ce<le.length;ce++)te[ce]=x(le[ce],ge);return te}(J,function(le){const ge=le.fMin||0,te=le.fMax||le.sampleRate/2,ce=le.nMels||128,ue=le.nFft||2048,Te=function(Le,pe){return P(0,Le/2,Math.floor(1+pe/2))}(le.sampleRate,ue),Ce=function(Le,pe,B){const D=G(pe),H=G(B);return P(D,H,Le).map(j=>function(ee){return 700*(Math.exp(ee/1125)-1)}(j))}(ce+2,ge,te),Ne=function(Le){const pe=new Float32Array(Le.length-1);for(let B=0;B<Le.length;B++)pe[B]=Le[B+1]-Le[B];return pe}(Ce),Re=function(Le,pe){const B=[];for(let D=0;D<Le.length;D++)B[D]=new Float32Array(pe.length);for(let D=0;D<Le.length;D++)for(let H=0;H<pe.length;H++)B[D][H]=Le[D]-pe[H];return B}(Ce,Te),Ae=Re[0].length,we=[];for(let Le=0;Le<ce;Le++){we[Le]=new Float32Array(Ae);for(let pe=0;pe<Re[Le].length;pe++){const B=-Re[Le][pe]/Ne[Le],D=Re[Le+2][pe]/Ne[Le+1],H=Math.max(0,Math.min(B,D));we[Le][pe]=H}}for(let Le=0;Le<we.length;Le++){const pe=2/(Ce[2+Le]-Ce[Le]);we[Le]=we[Le].map(B=>B*pe)}return we}(Q))}function m(U,Q=1e-10,ne=80){const J=U.length,oe=U[0].length,le=[];for(let ge=0;ge<J;ge++)le[ge]=new Float32Array(oe);for(let ge=0;ge<J;ge++)for(let te=0;te<oe;te++){const ce=U[ge][te];le[ge][te]=10*Math.log10(Math.max(Q,ce))}if(ne){if(ne<0)throw new Error("topDb must be non-negative.");for(let ge=0;ge<J;ge++){const te=le[ge].reduce((ce,ue)=>Math.max(ce,ue));for(let ce=0;ce<oe;ce++)le[ge][ce]=Math.max(le[ge][ce],te-ne)}}return le}function h(U){if(U.numberOfChannels===1)return U.getChannelData(0);if(U.numberOfChannels!==2)throw Error(U.numberOfChannels+" channel audio is not supported.");const Q=U.getChannelData(0),ne=U.getChannelData(1),J=new Float32Array(U.length);for(let oe=0;oe<U.length;++oe)J[oe]=(Q[oe]+ne[oe])/2;return J}async function g(U,Q=16e3){if(U.sampleRate===Q)return h(U);const ne=U.sampleRate,J=U.length*Q/ne;if(c.c){a.log("Safari does not support WebAudio resampling, so this may be slow.","O&F",5);const oe=h(U),le=new Float32Array(J);return i(o(le,[J]),o(oe,[oe.length])),le}{const oe=new OfflineAudioContext(U.numberOfChannels,U.duration*Q,Q),le=oe.createBufferSource();return le.buffer=U,le.connect(oe.destination),le.start(),oe.startRendering().then(ge=>ge.getChannelData(0))}}function x(U,Q){if(U.length!==Q[0].length)throw new Error(`Each entry in filterbank should have dimensions matching FFT. |mags| = ${U.length}, |filterbank[0]| = ${Q[0].length}.`);const ne=new Float32Array(Q.length);for(let J=0;J<Q.length;J++){const oe=w(U,Q[J]);ne[J]=oe.reduce((le,ge)=>le+ge)}return ne}function w(U,Q){if(U.length!==Q.length)return console.error(`Buffer length ${U.length} != window length ${Q.length}.`),null;const ne=new Float32Array(U.length);for(let J=0;J<U.length;J++)ne[J]=Q[J]*U[J];return ne}function I(U,Q){if(U.length>Q)throw new Error("Data is longer than length.");const ne=Math.floor((Q-U.length)/2);return N(U,[ne,Q-U.length-ne])}function N(U,Q){let ne,J;typeof Q=="object"?[ne,J]=Q:ne=J=Q;const oe=new Float32Array(U.length+ne+J);return oe.set(U,ne),oe}function A(U){const Q=new r(U.length),ne=Q.createComplexArray(),J=Q.toComplexArray(U);return Q.transform(ne,J),ne}function T(U){const Q=new Float32Array(U);for(let ne=0;ne<U;ne++)Q[ne]=.5*(1-Math.cos(2*Math.PI*ne/(U-1)));return Q}function P(U,Q,ne){const J=(Q-U)/(ne-1),oe=new Float32Array(ne);for(let le=0;le<ne;le++)oe[le]=U+J*le;return oe}function O(U){let Q=s.sub(U,69);return Q=s.div(Q,12),Q=s.pow(2,Q),Q=s.mul(440,Q),Q}async function F(U){let Q=s.sub(s.div(s.log(U),s.log(2)),s.div(s.log(440),s.log(2)));return Q=s.mul(12,Q),Q=s.add(Q,69),await Q.array()}function G(U){return 1125*Math.log(1+U/700)}},function(n,e){var t;t=function(){return this}();try{t=t||new Function("return this")()}catch{typeof window=="object"&&(t=window)}n.exports=t},function(n,e){n.exports=function(){throw new Error("define cannot be used indirect")}},function(n,e,t){t.r(e),t.d(e,"NO_EVENT",function(){return i}),t.d(e,"NOTE_OFF",function(){return c}),t.d(e,"Melody",function(){return a}),t.d(e,"MelodyRhythm",function(){return l}),t.d(e,"MelodyShape",function(){return d}),t.d(e,"MelodyRegister",function(){return f});var s=t(2),r=t(10),o=t(13);const i=0,c=1;class a{constructor(m,h,g){this.events=m,this.minPitch=h,this.maxPitch=g}static fromNoteSequence(m,h,g,x=!0,w){o.assertIsQuantizedSequence(m);const I=m.notes.sort((T,P)=>T.quantizedStartStep===P.quantizedStartStep?P.pitch-T.pitch:T.quantizedStartStep-P.quantizedStartStep),N=new Int32Array(w||m.totalQuantizedSteps);let A=-1;return I.forEach(T=>{if(T.quantizedStartStep===A){if(x)return;throw new Error("`NoteSequence` is not monophonic.")}if(T.pitch<h||T.pitch>g)throw Error("`NoteSequence` has a pitch outside of the valid range: "+T.pitch);N[T.quantizedStartStep]=T.pitch-h+2,N[T.quantizedEndStep]=c,A=T.quantizedStartStep}),new a(N,h,g)}toNoteSequence(m,h){const g=o.createQuantizedNoteSequence(m,h);let x=null;for(let w=0;w<this.events.length;++w){const I=this.events[w];switch(I){case i:break;case c:x&&(x.quantizedEndStep=w,g.notes.push(x),x=null);break;default:x&&(x.quantizedEndStep=w,g.notes.push(x)),x=r.a.Note.create({pitch:I-2+this.minPitch,quantizedStartStep:w})}}return x&&(x.quantizedEndStep=this.events.length,g.notes.push(x)),g.totalQuantizedSteps=this.events.length,g}}class l{constructor(){this.depth=1}extract(m){const h=m.events.length,g=s.buffer([h,1]);for(let x=0;x<h;++x)g.set(m.events[x]>=2?1:0,x,0);return g.toTensor().as2D(h,1)}}class d{constructor(){this.depth=3}extract(m){const h=m.events.length,g=s.buffer([h,3]);let x=null,w=null;for(let I=0;I<h;++I)if(m.events[I]>=2){if(x!==null){let N;g.get(x,0)===0&&g.get(x,1)===0&&g.get(x,2)===0&&(x=-1),N=m.events[I]<w?0:m.events[I]>w?2:1;for(let A=I;A>x;--A)g.set(1,A,N)}x=I,w=m.events[I]}if(x!==h-1)if(x===null||g.get(x,0)===0&&g.get(x,1)===0&&g.get(x,2)===0)for(let I=0;I<h;++I)g.set(1,I,1);else for(let I=h-1;I>x;--I)for(let N=0;N<3;N++)g.set(g.get(x,N),I,N);return g.toTensor().as2D(h,3)}}class f{constructor(m){this.boundaryPitches=m,this.depth=m.length+1}meanMelodyPitch(m){let h=0,g=0,x=null;for(let w=0;w<m.events.length;++w)m.events[w]===c?x=null:m.events[w]>=2&&(x=m.minPitch+m.events[w]-2),x!==null&&(h+=x,g+=1);return g?h/g:null}extract(m){const h=m.events.length,g=this.meanMelodyPitch(m);if(g===null)return s.zeros([h,this.depth]);let x=0;for(;x<this.boundaryPitches.length&&g>=this.boundaryPitches[x];)x++;const w=s.buffer([h,this.depth]);for(let I=0;I<h;++I)w.set(1,I,x);return w.toTensor().as2D(h,this.depth)}}},function(n,e,t){t.d(e,"a",function(){return o});var s=t(3),r=t(28);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o(i,c,a){const l=Object(s.c)(i,a);return Object(r.a)(i,c,l,a)}},function(n,e,t){t.d(e,"c",function(){return i}),t.d(e,"b",function(){return c}),t.d(e,"e",function(){return a}),t.d(e,"f",function(){return l}),t.d(e,"d",function(){return d}),t.d(e,"a",function(){return f}),t.d(e,"h",function(){return y}),t.d(e,"g",function(){return m});var s=t(2),r=t(20),o=t(42);const i=16e3,c=250,a=25.58,l=63.07,d=.002,f=.7;async function y(h){let g;return g=await s.loadGraphModel(h,{fromTFHub:!0}),g}async function m(h,g,x){if(s.getBackend()!=="webgl")throw new Error("Device does not support webgl.");const w=await Object(r.j)(h,i),I=w.length,N=await async function(P){const O=Math.floor(i/c),F=s.tensor1d(P,"float32"),G=P.length;if(F===null)return[];const U=F.mul(F).reshape([G,1]),Q=s.conv1d(U,s.ones([1024,1,1]).div(1024),O,"same").sqrt().squeeze(),ne=s.mul(s.log(s.maximum(1e-20,Q)).div(s.log(10)),20),J=ne.sub(20.7),oe=s.maximum(J,-120),le=await oe.array();return F.dispose(),U.dispose(),Q.dispose(),ne.dispose(),J.dispose(),oe.dispose(),le}(w),{pitches:A,confidences:T}=await Object(o.a)(g,w,x);return{f0_hz:A,loudness_db:N,confidences:T,originalRecordedBufferLength:I}}},function(n,e,t){t.d(e,"b",function(){return c}),t.d(e,"a",function(){return a}),t.d(e,"c",function(){return l}),t.d(e,"e",function(){return d}),t.d(e,"d",function(){return f});var s=t(11),r=t(40);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o=Object(r.a)("kernelRegistry",()=>new Map),i=Object(r.a)("gradRegistry",()=>new Map);function c(m,h){const g=y(m,h);return o.get(g)}function a(m){return i.get(m)}function l(m){const h=o.entries(),g=[];for(;;){const{done:x,value:w}=h.next();if(x)break;const[I,N]=w,[A]=I.split("_");A===m&&g.push(N)}return g}function d(m){const{kernelName:h,backendName:g}=m,x=y(h,g);o.has(x)&&console.warn(`The kernel '${h}' for backend '${g}' is already registered`),o.set(x,m)}function f(m){const{kernelName:h}=m;i.has(h)&&Object(s.b)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${h}'`),i.set(h,m)}function y(m,h){return`${h}_${m}`}},function(n,e,t){/**
* @license
* Copyright 2017 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/var s,r,o,i,c;t.d(e,"b",function(){return l}),t.d(e,"a",function(){return d}),function(f){f.R0="R0",f.R1="R1",f.R2="R2",f.R3="R3",f.R4="R4",f.R5="R5",f.R6="R6"}(s||(s={})),function(f){f.float32="float32",f.int32="int32",f.bool="int32",f.complex64="complex64"}(r||(r={})),function(f){f.float32="float32",f.int32="int32",f.bool="bool",f.complex64="complex64"}(o||(o={})),function(f){f.float32="float32",f.int32="float32",f.bool="float32",f.complex64="complex64"}(i||(i={})),function(f){f.float32="complex64",f.int32="complex64",f.bool="complex64",f.complex64="complex64"}(c||(c={}));const a={float32:i,int32:r,bool:o,complex64:c};function l(f,y){if(f==="string"||y==="string"){if(f==="string"&&y==="string")return"string";throw new Error(`Can not upcast ${f} with ${y}`)}return a[f][y]}function d(f){return l(f,"int32")}},function(n,e,t){t.d(e,"a",function(){return i});var s=t(6),r=t(16),o=t(7);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i(c,a,l,d){if(d==null&&(d=Object(r.r)(c)),d==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(r.A)(c)&&!Array.isArray(c)&&typeof c!="number"&&typeof c!="boolean"&&typeof c!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(a!=null){Object(r.c)(a);const f=Object(r.N)(a),y=Object(r.N)(l);Object(r.b)(f===y,()=>`Based on the provided shape, [${a}], the tensor should have ${f} values but has ${y}`);for(let m=0;m<l.length;++m){const h=l[m],g=m!==l.length-1||h!==Object(r.N)(a.slice(m));Object(r.b)(l[m]===a[m]||!g,()=>`Error creating a new Tensor. Inferred shape (${l}) does not match the provided shape (${a}). `)}}return Object(r.A)(c)||Array.isArray(c)||(c=[c]),a=a||l,c=d!=="string"?Object(o.toTypedArray)(c,d):Object(r.m)(c,[],!0),s.a.makeTensor(c,a,d)}},function(n,e,t){t.r(e),t.d(e,"Performance",function(){return c});var s=t(10),r=t(8),o=t(13),i=t(12);class c{constructor(l,d,f,y,m){this.events=l,this.maxShiftSteps=d,this.numVelocityBins=f,this.program=y,this.isDrum=m}static fromNoteSequence(l,d,f,y){o.assertIsQuantizedSequence(l);const m=l.notes.filter((U,Q)=>y===void 0||U.instrument===y),h=m.sort((U,Q)=>U.startTime===Q.startTime?U.pitch-Q.pitch:U.startTime-Q.startTime),g=h.map((U,Q)=>({step:U.quantizedStartStep,index:Q,isOffset:0})),x=h.map((U,Q)=>({step:U.quantizedEndStep,index:Q,isOffset:1})),w=g.concat(x).sort((U,Q)=>U.step===Q.step?U.index===Q.index?U.isOffset-Q.isOffset:U.index-Q.index:U.step-Q.step),I=f?Math.ceil((r.MIDI_VELOCITIES-1)/f):void 0,N=[];let A=0,T=f;for(const U of w){if(U.step>A){for(;U.step>A+d;)N.push({type:"time-shift",steps:d}),A+=d;N.push({type:"time-shift",steps:U.step-A}),A=U.step}if(U.isOffset)N.push({type:"note-off",pitch:h[U.index].pitch});else{if(I){const Q=Math.floor((h[U.index].velocity-r.MIN_MIDI_VELOCITY-1)/I)+1;Q!==T&&(N.push({type:"velocity-change",velocityBin:Q}),T=Q)}N.push({type:"note-on",pitch:h[U.index].pitch})}}const P=!!m.some(U=>U.isDrum)&&(!m.some(U=>!U.isDrum)||void 0),O=Array.from(new Set(m.map(U=>U.program))),F=P||O.length!==1?void 0:O[0],G=new c(N,d,f,F,P);return G.setNumSteps(l.totalQuantizedSteps),G}getNumSteps(){return this.events.filter(l=>l.type==="time-shift").map(l=>l.steps).reduce((l,d)=>l+d,0)}setNumSteps(l){let d=this.getNumSteps();if(d<l){if(this.events.length){const f=this.events[this.events.length-1];if(f.type==="time-shift"){const y=Math.min(l-d,this.maxShiftSteps-f.steps);f.steps+=y,d+=y}}for(;d<l;)d+this.maxShiftSteps>l?(this.events.push({type:"time-shift",steps:l-d}),d=l):(this.events.push({type:"time-shift",steps:this.maxShiftSteps}),d+=this.maxShiftSteps)}else if(d>l)for(;this.events.length&&d>l;){const f=this.events[this.events.length-1];f.type==="time-shift"?d-f.steps<l?(f.steps-=d-l,d=l):(this.events.pop(),d-=f.steps):this.events.pop()}}toNoteSequence(l){const d=this.numVelocityBins?Math.ceil((r.MIDI_VELOCITIES-1)/this.numVelocityBins):void 0,f=s.a.create();let y=0,m;const h=new Map;for(let g=r.MIN_MIDI_PITCH;g<=r.MAX_MIDI_PITCH;++g)h.set(g,[]);for(const g of this.events)switch(g.type){case"note-on":h.get(g.pitch).push([y,m]);break;case"note-off":const x=h.get(g.pitch);if(x.length){const[w,I]=x.shift();y>w?f.notes.push(s.a.Note.create({pitch:g.pitch,velocity:I,instrument:l,quantizedStartStep:w,quantizedEndStep:y,program:this.program,isDrum:this.isDrum})):i.log(`Ignoring zero-length note: (pitch = ${g.pitch}, step = ${y})`,"Performance")}else i.log(`Ignoring note-off with no previous note-on:(pitch = ${g.pitch}, step = ${y})`,"Performance");break;case"time-shift":y+=g.steps;break;case"velocity-change":if(!d)throw new Error("Unexpected velocity change event: "+g);m=r.MIN_MIDI_VELOCITY+(g.velocityBin-1)*d+1;break;default:throw new Error("Unrecognized performance event: "+g)}return h.forEach((g,x)=>{for(const[w,I]of g)y>w?f.notes.push(s.a.Note.create({pitch:x,velocity:I,instrument:l,quantizedStartStep:w,quantizedEndStep:y,program:this.program,isDrum:this.isDrum})):i.log(`Ignoring zero-length note: (pitch = ${x}, step = ${y})`,"Performance")}),f.totalQuantizedSteps=y,f}}},function(n,e,t){var s=t(84),r=t(85),o=typeof Float64Array<"u";function i(d,f){return d[0]-f[0]}function c(){var d,f=this.stride,y=new Array(f.length);for(d=0;d<y.length;++d)y[d]=[Math.abs(f[d]),d];y.sort(i);var m=new Array(y.length);for(d=0;d<m.length;++d)m[d]=y[d][1];return m}function a(d,f){var y=["View",f,"d",d].join("");f<0&&(y="View_Nil"+d);var m=d==="generic";if(f===-1){var h="function "+y+"(a){this.data=a;};var proto="+y+".prototype;proto.dtype='"+d+"';proto.index=function(){return -1};proto.size=0;proto.dimension=-1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function(){return new "+y+"(this.data);};proto.get=proto.set=function(){};proto.pick=function(){return null};return function construct_"+y+"(a){return new "+y+"(a);}";return new Function(h)()}if(f===0)return h="function "+y+"(a,d) {this.data = a;this.offset = d};var proto="+y+".prototype;proto.dtype='"+d+"';proto.index=function(){return this.offset};proto.dimension=0;proto.size=1;proto.shape=proto.stride=proto.order=[];proto.lo=proto.hi=proto.transpose=proto.step=function "+y+"_copy() {return new "+y+"(this.data,this.offset)};proto.pick=function "+y+"_pick(){return TrivialArray(this.data);};proto.valueOf=proto.get=function "+y+"_get(){return "+(m?"this.data.get(this.offset)":"this.data[this.offset]")+"};proto.set=function "+y+"_set(v){return "+(m?"this.data.set(this.offset,v)":"this.data[this.offset]=v")+"};return function construct_"+y+"(a,b,c,d){return new "+y+"(a,d)}",new Function("TrivialArray",h)(l[d][0]);h=["'use strict'"];var g=s(f),x=g.map(function(G){return"i"+G}),w="this.offset+"+g.map(function(G){return"this.stride["+G+"]*i"+G}).join("+"),I=g.map(function(G){return"b"+G}).join(","),N=g.map(function(G){return"c"+G}).join(",");h.push("function "+y+"(a,"+I+","+N+",d){this.data=a","this.shape=["+I+"]","this.stride=["+N+"]","this.offset=d|0}","var proto="+y+".prototype","proto.dtype='"+d+"'","proto.dimension="+f),h.push("Object.defineProperty(proto,'size',{get:function "+y+"_size(){return "+g.map(function(G){return"this.shape["+G+"]"}).join("*"),"}})"),f===1?h.push("proto.order=[0]"):(h.push("Object.defineProperty(proto,'order',{get:"),f<4?(h.push("function "+y+"_order(){"),f===2?h.push("return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})"):f===3&&h.push("var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);if(s0>s1){if(s1>s2){return [2,1,0];}else if(s0>s2){return [1,2,0];}else{return [1,0,2];}}else if(s0>s2){return [2,0,1];}else if(s2>s1){return [0,1,2];}else{return [0,2,1];}}})")):h.push("ORDER})")),h.push("proto.set=function "+y+"_set("+x.join(",")+",v){"),m?h.push("return this.data.set("+w+",v)}"):h.push("return this.data["+w+"]=v}"),h.push("proto.get=function "+y+"_get("+x.join(",")+"){"),m?h.push("return this.data.get("+w+")}"):h.push("return this.data["+w+"]}"),h.push("proto.index=function "+y+"_index(",x.join(),"){return "+w+"}"),h.push("proto.hi=function "+y+"_hi("+x.join(",")+"){return new "+y+"(this.data,"+g.map(function(G){return["(typeof i",G,"!=='number'||i",G,"<0)?this.shape[",G,"]:i",G,"|0"].join("")}).join(",")+","+g.map(function(G){return"this.stride["+G+"]"}).join(",")+",this.offset)}");var A=g.map(function(G){return"a"+G+"=this.shape["+G+"]"}),T=g.map(function(G){return"c"+G+"=this.stride["+G+"]"});h.push("proto.lo=function "+y+"_lo("+x.join(",")+"){var b=this.offset,d=0,"+A.join(",")+","+T.join(","));for(var P=0;P<f;++P)h.push("if(typeof i"+P+"==='number'&&i"+P+">=0){d=i"+P+"|0;b+=c"+P+"*d;a"+P+"-=d}");for(h.push("return new "+y+"(this.data,"+g.map(function(G){return"a"+G}).join(",")+","+g.map(function(G){return"c"+G}).join(",")+",b)}"),h.push("proto.step=function "+y+"_step("+x.join(",")+"){var "+g.map(function(G){return"a"+G+"=this.shape["+G+"]"}).join(",")+","+g.map(function(G){return"b"+G+"=this.stride["+G+"]"}).join(",")+",c=this.offset,d=0,ceil=Math.ceil"),P=0;P<f;++P)h.push("if(typeof i"+P+"==='number'){d=i"+P+"|0;if(d<0){c+=b"+P+"*(a"+P+"-1);a"+P+"=ceil(-a"+P+"/d)}else{a"+P+"=ceil(a"+P+"/d)}b"+P+"*=d}");h.push("return new "+y+"(this.data,"+g.map(function(G){return"a"+G}).join(",")+","+g.map(function(G){return"b"+G}).join(",")+",c)}");var O=new Array(f),F=new Array(f);for(P=0;P<f;++P)O[P]="a[i"+P+"]",F[P]="b[i"+P+"]";for(h.push("proto.transpose=function "+y+"_transpose("+x+"){"+x.map(function(G,U){return G+"=("+G+"===undefined?"+U+":"+G+"|0)"}).join(";"),"var a=this.shape,b=this.stride;return new "+y+"(this.data,"+O.join(",")+","+F.join(",")+",this.offset)}"),h.push("proto.pick=function "+y+"_pick("+x+"){var a=[],b=[],c=this.offset"),P=0;P<f;++P)h.push("if(typeof i"+P+"==='number'&&i"+P+">=0){c=(c+this.stride["+P+"]*i"+P+")|0}else{a.push(this.shape["+P+"]);b.push(this.stride["+P+"])}");return h.push("var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}"),h.push("return function construct_"+y+"(data,shape,stride,offset){return new "+y+"(data,"+g.map(function(G){return"shape["+G+"]"}).join(",")+","+g.map(function(G){return"stride["+G+"]"}).join(",")+",offset)}"),new Function("CTOR_LIST","ORDER",h.join(`
`))(l[d],c)}var l={float32:[],float64:[],int8:[],int16:[],int32:[],uint8:[],uint16:[],uint32:[],array:[],uint8_clamped:[],bigint64:[],biguint64:[],buffer:[],generic:[]};n.exports=function(d,f,y,m){if(d===void 0)return(0,l.array[0])([]);typeof d=="number"&&(d=[d]),f===void 0&&(f=[d.length]);var h=f.length;if(y===void 0){y=new Array(h);for(var g=h-1,x=1;g>=0;--g)y[g]=x,x*=f[g]}if(m===void 0)for(m=0,g=0;g<h;++g)y[g]<0&&(m-=(f[g]-1)*y[g]);for(var w=function(N){if(r(N))return"buffer";if(o)switch(Object.prototype.toString.call(N)){case"[object Float64Array]":return"float64";case"[object Float32Array]":return"float32";case"[object Int8Array]":return"int8";case"[object Int16Array]":return"int16";case"[object Int32Array]":return"int32";case"[object Uint8Array]":return"uint8";case"[object Uint16Array]":return"uint16";case"[object Uint32Array]":return"uint32";case"[object Uint8ClampedArray]":return"uint8_clamped";case"[object BigInt64Array]":return"bigint64";case"[object BigUint64Array]":return"biguint64"}return Array.isArray(N)?"array":"generic"}(d),I=l[w];I.length<=h+1;)I.push(a(w,I.length-1));return(0,I[h+1])(d,f,y,m)}},function(n,e){n.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(n,e){(function(t){n.exports=t}).call(this,{})},function(n,e,t){n.exports=f;var s,r=t(18),o=r.LongBits,i=r.base64,c=r.utf8;function a(I,N,A){this.fn=I,this.len=N,this.next=void 0,this.val=A}function l(){}function d(I){this.head=I.head,this.tail=I.tail,this.len=I.len,this.next=I.states}function f(){this.len=0,this.head=new a(l,0,0),this.tail=this.head,this.states=null}var y=function(){return r.Buffer?function(){return(f.create=function(){return new s})()}:function(){return new f}};function m(I,N,A){N[A]=255&I}function h(I,N){this.len=I,this.next=void 0,this.val=N}function g(I,N,A){for(;I.hi;)N[A++]=127&I.lo|128,I.lo=(I.lo>>>7|I.hi<<25)>>>0,I.hi>>>=7;for(;I.lo>127;)N[A++]=127&I.lo|128,I.lo=I.lo>>>7;N[A++]=I.lo}function x(I,N,A){N[A]=255&I,N[A+1]=I>>>8&255,N[A+2]=I>>>16&255,N[A+3]=I>>>24}f.create=y(),f.alloc=function(I){return new r.Array(I)},r.Array!==Array&&(f.alloc=r.pool(f.alloc,r.Array.prototype.subarray)),f.prototype._push=function(I,N,A){return this.tail=this.tail.next=new a(I,N,A),this.len+=N,this},h.prototype=Object.create(a.prototype),h.prototype.fn=function(I,N,A){for(;I>127;)N[A++]=127&I|128,I>>>=7;N[A]=I},f.prototype.uint32=function(I){return this.len+=(this.tail=this.tail.next=new h((I>>>=0)<128?1:I<16384?2:I<2097152?3:I<268435456?4:5,I)).len,this},f.prototype.int32=function(I){return I<0?this._push(g,10,o.fromNumber(I)):this.uint32(I)},f.prototype.sint32=function(I){return this.uint32((I<<1^I>>31)>>>0)},f.prototype.uint64=function(I){var N=o.from(I);return this._push(g,N.length(),N)},f.prototype.int64=f.prototype.uint64,f.prototype.sint64=function(I){var N=o.from(I).zzEncode();return this._push(g,N.length(),N)},f.prototype.bool=function(I){return this._push(m,1,I?1:0)},f.prototype.fixed32=function(I){return this._push(x,4,I>>>0)},f.prototype.sfixed32=f.prototype.fixed32,f.prototype.fixed64=function(I){var N=o.from(I);return this._push(x,4,N.lo)._push(x,4,N.hi)},f.prototype.sfixed64=f.prototype.fixed64,f.prototype.float=function(I){return this._push(r.float.writeFloatLE,4,I)},f.prototype.double=function(I){return this._push(r.float.writeDoubleLE,8,I)};var w=r.Array.prototype.set?function(I,N,A){N.set(I,A)}:function(I,N,A){for(var T=0;T<I.length;++T)N[A+T]=I[T]};f.prototype.bytes=function(I){var N=I.length>>>0;if(!N)return this._push(m,1,0);if(r.isString(I)){var A=f.alloc(N=i.length(I));i.decode(I,A,0),I=A}return this.uint32(N)._push(w,N,I)},f.prototype.string=function(I){var N=c.length(I);return N?this.uint32(N)._push(c.write,N,I):this._push(m,1,0)},f.prototype.fork=function(){return this.states=new d(this),this.head=this.tail=new a(l,0,0),this.len=0,this},f.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new a(l,0,0),this.len=0),this},f.prototype.ldelim=function(){var I=this.head,N=this.tail,A=this.len;return this.reset().uint32(A),A&&(this.tail.next=I.next,this.tail=N,this.len+=A),this},f.prototype.finish=function(){for(var I=this.head.next,N=this.constructor.alloc(this.len),A=0;I;)I.fn(I.val,N,A),A+=I.len,I=I.next;return N},f._configure=function(I){s=I,f.create=y(),s._configure()}},function(n,e,t){n.exports=a;var s,r=t(18),o=r.LongBits,i=r.utf8;function c(g,x){return RangeError("index out of range: "+g.pos+" + "+(x||1)+" > "+g.len)}function a(g){this.buf=g,this.pos=0,this.len=g.length}var l,d=typeof Uint8Array<"u"?function(g){if(g instanceof Uint8Array||Array.isArray(g))return new a(g);throw Error("illegal buffer")}:function(g){if(Array.isArray(g))return new a(g);throw Error("illegal buffer")},f=function(){return r.Buffer?function(g){return(a.create=function(x){return r.Buffer.isBuffer(x)?new s(x):d(x)})(g)}:d};function y(){var g=new o(0,0),x=0;if(!(this.len-this.pos>4)){for(;x<3;++x){if(this.pos>=this.len)throw c(this);if(g.lo=(g.lo|(127&this.buf[this.pos])<<7*x)>>>0,this.buf[this.pos++]<128)return g}return g.lo=(g.lo|(127&this.buf[this.pos++])<<7*x)>>>0,g}for(;x<4;++x)if(g.lo=(g.lo|(127&this.buf[this.pos])<<7*x)>>>0,this.buf[this.pos++]<128)return g;if(g.lo=(g.lo|(127&this.buf[this.pos])<<28)>>>0,g.hi=(g.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return g;if(x=0,this.len-this.pos>4){for(;x<5;++x)if(g.hi=(g.hi|(127&this.buf[this.pos])<<7*x+3)>>>0,this.buf[this.pos++]<128)return g}else for(;x<5;++x){if(this.pos>=this.len)throw c(this);if(g.hi=(g.hi|(127&this.buf[this.pos])<<7*x+3)>>>0,this.buf[this.pos++]<128)return g}throw Error("invalid varint encoding")}function m(g,x){return(g[x-4]|g[x-3]<<8|g[x-2]<<16|g[x-1]<<24)>>>0}function h(){if(this.pos+8>this.len)throw c(this,8);return new o(m(this.buf,this.pos+=4),m(this.buf,this.pos+=4))}a.create=f(),a.prototype._slice=r.Array.prototype.subarray||r.Array.prototype.slice,a.prototype.uint32=(l=4294967295,function(){if(l=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128||(l=(l|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)||(l=(l|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)||(l=(l|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)||(l=(l|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128))return l;if((this.pos+=5)>this.len)throw this.pos=this.len,c(this,10);return l}),a.prototype.int32=function(){return 0|this.uint32()},a.prototype.sint32=function(){var g=this.uint32();return g>>>1^-(1&g)|0},a.prototype.bool=function(){return this.uint32()!==0},a.prototype.fixed32=function(){if(this.pos+4>this.len)throw c(this,4);return m(this.buf,this.pos+=4)},a.prototype.sfixed32=function(){if(this.pos+4>this.len)throw c(this,4);return 0|m(this.buf,this.pos+=4)},a.prototype.float=function(){if(this.pos+4>this.len)throw c(this,4);var g=r.float.readFloatLE(this.buf,this.pos);return this.pos+=4,g},a.prototype.double=function(){if(this.pos+8>this.len)throw c(this,4);var g=r.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,g},a.prototype.bytes=function(){var g=this.uint32(),x=this.pos,w=this.pos+g;if(w>this.len)throw c(this,g);return this.pos+=g,Array.isArray(this.buf)?this.buf.slice(x,w):x===w?new this.buf.constructor(0):this._slice.call(this.buf,x,w)},a.prototype.string=function(){var g=this.bytes();return i.read(g,0,g.length)},a.prototype.skip=function(g){if(typeof g=="number"){if(this.pos+g>this.len)throw c(this,g);this.pos+=g}else do if(this.pos>=this.len)throw c(this);while(128&this.buf[this.pos++]);return this},a.prototype.skipType=function(g){switch(g){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;(g=7&this.uint32())!=4;)this.skipType(g);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+g+" at offset "+this.pos)}return this},a._configure=function(g){s=g,a.create=f(),s._configure();var x=r.Long?"toLong":"toNumber";r.merge(a.prototype,{int64:function(){return y.call(this)[x](!1)},uint64:function(){return y.call(this)[x](!0)},sint64:function(){return y.call(this).zzDecode()[x](!1)},fixed64:function(){return h.call(this)[x](!0)},sfixed64:function(){return h.call(this)[x](!1)}})}},function(n,e,t){var s,r,o=t(49),i=o.Reader,c=o.Writer,a=o.util,l=o.roots.default||(o.roots.default={});l.tensorflow=((r={}).magenta=((s={}).NoteSequence=function(){function d(m){if(this.timeSignatures=[],this.keySignatures=[],this.tempos=[],this.notes=[],this.pitchBends=[],this.controlChanges=[],this.partInfos=[],this.textAnnotations=[],this.sectionAnnotations=[],this.sectionGroups=[],m)for(var h=Object.keys(m),g=0;g<h.length;++g)m[h[g]]!=null&&(this[h[g]]=m[h[g]])}var f,y;return d.prototype.id="",d.prototype.filename="",d.prototype.referenceNumber=a.Long?a.Long.fromBits(0,0,!1):0,d.prototype.collectionName="",d.prototype.ticksPerQuarter=0,d.prototype.timeSignatures=a.emptyArray,d.prototype.keySignatures=a.emptyArray,d.prototype.tempos=a.emptyArray,d.prototype.notes=a.emptyArray,d.prototype.totalTime=0,d.prototype.totalQuantizedSteps=a.Long?a.Long.fromBits(0,0,!1):0,d.prototype.pitchBends=a.emptyArray,d.prototype.controlChanges=a.emptyArray,d.prototype.partInfos=a.emptyArray,d.prototype.sourceInfo=null,d.prototype.textAnnotations=a.emptyArray,d.prototype.sectionAnnotations=a.emptyArray,d.prototype.sectionGroups=a.emptyArray,d.prototype.quantizationInfo=null,d.prototype.subsequenceInfo=null,d.prototype.sequenceMetadata=null,d.create=function(m){return new d(m)},d.encode=function(m,h){if(h||(h=c.create()),m.id!=null&&m.hasOwnProperty("id")&&h.uint32(10).string(m.id),m.filename!=null&&m.hasOwnProperty("filename")&&h.uint32(18).string(m.filename),m.collectionName!=null&&m.hasOwnProperty("collectionName")&&h.uint32(26).string(m.collectionName),m.ticksPerQuarter!=null&&m.hasOwnProperty("ticksPerQuarter")&&h.uint32(32).int32(m.ticksPerQuarter),m.timeSignatures!=null&&m.timeSignatures.length)for(var g=0;g<m.timeSignatures.length;++g)l.tensorflow.magenta.NoteSequence.TimeSignature.encode(m.timeSignatures[g],h.uint32(42).fork()).ldelim();if(m.keySignatures!=null&&m.keySignatures.length)for(g=0;g<m.keySignatures.length;++g)l.tensorflow.magenta.NoteSequence.KeySignature.encode(m.keySignatures[g],h.uint32(50).fork()).ldelim();if(m.tempos!=null&&m.tempos.length)for(g=0;g<m.tempos.length;++g)l.tensorflow.magenta.NoteSequence.Tempo.encode(m.tempos[g],h.uint32(58).fork()).ldelim();if(m.notes!=null&&m.notes.length)for(g=0;g<m.notes.length;++g)l.tensorflow.magenta.NoteSequence.Note.encode(m.notes[g],h.uint32(66).fork()).ldelim();if(m.totalTime!=null&&m.hasOwnProperty("totalTime")&&h.uint32(73).double(m.totalTime),m.pitchBends!=null&&m.pitchBends.length)for(g=0;g<m.pitchBends.length;++g)l.tensorflow.magenta.NoteSequence.PitchBend.encode(m.pitchBends[g],h.uint32(82).fork()).ldelim();if(m.controlChanges!=null&&m.controlChanges.length)for(g=0;g<m.controlChanges.length;++g)l.tensorflow.magenta.NoteSequence.ControlChange.encode(m.controlChanges[g],h.uint32(90).fork()).ldelim();if(m.partInfos!=null&&m.partInfos.length)for(g=0;g<m.partInfos.length;++g)l.tensorflow.magenta.NoteSequence.PartInfo.encode(m.partInfos[g],h.uint32(98).fork()).ldelim();if(m.sourceInfo!=null&&m.hasOwnProperty("sourceInfo")&&l.tensorflow.magenta.NoteSequence.SourceInfo.encode(m.sourceInfo,h.uint32(106).fork()).ldelim(),m.textAnnotations!=null&&m.textAnnotations.length)for(g=0;g<m.textAnnotations.length;++g)l.tensorflow.magenta.NoteSequence.TextAnnotation.encode(m.textAnnotations[g],h.uint32(114).fork()).ldelim();if(m.quantizationInfo!=null&&m.hasOwnProperty("quantizationInfo")&&l.tensorflow.magenta.NoteSequence.QuantizationInfo.encode(m.quantizationInfo,h.uint32(122).fork()).ldelim(),m.totalQuantizedSteps!=null&&m.hasOwnProperty("totalQuantizedSteps")&&h.uint32(128).int64(m.totalQuantizedSteps),m.subsequenceInfo!=null&&m.hasOwnProperty("subsequenceInfo")&&l.tensorflow.magenta.NoteSequence.SubsequenceInfo.encode(m.subsequenceInfo,h.uint32(138).fork()).ldelim(),m.referenceNumber!=null&&m.hasOwnProperty("referenceNumber")&&h.uint32(144).int64(m.referenceNumber),m.sequenceMetadata!=null&&m.hasOwnProperty("sequenceMetadata")&&l.tensorflow.magenta.SequenceMetadata.encode(m.sequenceMetadata,h.uint32(154).fork()).ldelim(),m.sectionAnnotations!=null&&m.sectionAnnotations.length)for(g=0;g<m.sectionAnnotations.length;++g)l.tensorflow.magenta.NoteSequence.SectionAnnotation.encode(m.sectionAnnotations[g],h.uint32(162).fork()).ldelim();if(m.sectionGroups!=null&&m.sectionGroups.length)for(g=0;g<m.sectionGroups.length;++g)l.tensorflow.magenta.NoteSequence.SectionGroup.encode(m.sectionGroups[g],h.uint32(170).fork()).ldelim();return h},d.encodeDelimited=function(m,h){return this.encode(m,h).ldelim()},d.decode=function(m,h){m instanceof i||(m=i.create(m));for(var g=h===void 0?m.len:m.pos+h,x=new l.tensorflow.magenta.NoteSequence;m.pos<g;){var w=m.uint32();switch(w>>>3){case 1:x.id=m.string();break;case 2:x.filename=m.string();break;case 18:x.referenceNumber=a.Long?m.int64().toNumber():m.int64();break;case 3:x.collectionName=m.string();break;case 4:x.ticksPerQuarter=m.int32();break;case 5:x.timeSignatures&&x.timeSignatures.length||(x.timeSignatures=[]),x.timeSignatures.push(l.tensorflow.magenta.NoteSequence.TimeSignature.decode(m,m.uint32()));break;case 6:x.keySignatures&&x.keySignatures.length||(x.keySignatures=[]),x.keySignatures.push(l.tensorflow.magenta.NoteSequence.KeySignature.decode(m,m.uint32()));break;case 7:x.tempos&&x.tempos.length||(x.tempos=[]),x.tempos.push(l.tensorflow.magenta.NoteSequence.Tempo.decode(m,m.uint32()));break;case 8:x.notes&&x.notes.length||(x.notes=[]),x.notes.push(l.tensorflow.magenta.NoteSequence.Note.decode(m,m.uint32()));break;case 9:x.totalTime=m.double();break;case 16:x.totalQuantizedSteps=a.Long?m.int64().toNumber():m.int64();break;case 10:x.pitchBends&&x.pitchBends.length||(x.pitchBends=[]),x.pitchBends.push(l.tensorflow.magenta.NoteSequence.PitchBend.decode(m,m.uint32()));break;case 11:x.controlChanges&&x.controlChanges.length||(x.controlChanges=[]),x.controlChanges.push(l.tensorflow.magenta.NoteSequence.ControlChange.decode(m,m.uint32()));break;case 12:x.partInfos&&x.partInfos.length||(x.partInfos=[]),x.partInfos.push(l.tensorflow.magenta.NoteSequence.PartInfo.decode(m,m.uint32()));break;case 13:x.sourceInfo=l.tensorflow.magenta.NoteSequence.SourceInfo.decode(m,m.uint32());break;case 14:x.textAnnotations&&x.textAnnotations.length||(x.textAnnotations=[]),x.textAnnotations.push(l.tensorflow.magenta.NoteSequence.TextAnnotation.decode(m,m.uint32()));break;case 20:x.sectionAnnotations&&x.sectionAnnotations.length||(x.sectionAnnotations=[]),x.sectionAnnotations.push(l.tensorflow.magenta.NoteSequence.SectionAnnotation.decode(m,m.uint32()));break;case 21:x.sectionGroups&&x.sectionGroups.length||(x.sectionGroups=[]),x.sectionGroups.push(l.tensorflow.magenta.NoteSequence.SectionGroup.decode(m,m.uint32()));break;case 15:x.quantizationInfo=l.tensorflow.magenta.NoteSequence.QuantizationInfo.decode(m,m.uint32());break;case 17:x.subsequenceInfo=l.tensorflow.magenta.NoteSequence.SubsequenceInfo.decode(m,m.uint32());break;case 19:x.sequenceMetadata=l.tensorflow.magenta.SequenceMetadata.decode(m,m.uint32());break;default:m.skipType(7&w)}}return x},d.decodeDelimited=function(m){return m instanceof i||(m=new i(m)),this.decode(m,m.uint32())},d.verify=function(m){if(typeof m!="object"||m===null)return"object expected";if(m.id!=null&&m.hasOwnProperty("id")&&!a.isString(m.id))return"id: string expected";if(m.filename!=null&&m.hasOwnProperty("filename")&&!a.isString(m.filename))return"filename: string expected";if(m.referenceNumber!=null&&m.hasOwnProperty("referenceNumber")&&!(a.isInteger(m.referenceNumber)||m.referenceNumber&&a.isInteger(m.referenceNumber.low)&&a.isInteger(m.referenceNumber.high)))return"referenceNumber: integer|Long expected";if(m.collectionName!=null&&m.hasOwnProperty("collectionName")&&!a.isString(m.collectionName))return"collectionName: string expected";if(m.ticksPerQuarter!=null&&m.hasOwnProperty("ticksPerQuarter")&&!a.isInteger(m.ticksPerQuarter))return"ticksPerQuarter: integer expected";if(m.timeSignatures!=null&&m.hasOwnProperty("timeSignatures")){if(!Array.isArray(m.timeSignatures))return"timeSignatures: array expected";for(var h=0;h<m.timeSignatures.length;++h)if(g=l.tensorflow.magenta.NoteSequence.TimeSignature.verify(m.timeSignatures[h]))return"timeSignatures."+g}if(m.keySignatures!=null&&m.hasOwnProperty("keySignatures")){if(!Array.isArray(m.keySignatures))return"keySignatures: array expected";for(h=0;h<m.keySignatures.length;++h)if(g=l.tensorflow.magenta.NoteSequence.KeySignature.verify(m.keySignatures[h]))return"keySignatures."+g}if(m.tempos!=null&&m.hasOwnProperty("tempos")){if(!Array.isArray(m.tempos))return"tempos: array expected";for(h=0;h<m.tempos.length;++h)if(g=l.tensorflow.magenta.NoteSequence.Tempo.verify(m.tempos[h]))return"tempos."+g}if(m.notes!=null&&m.hasOwnProperty("notes")){if(!Array.isArray(m.notes))return"notes: array expected";for(h=0;h<m.notes.length;++h)if(g=l.tensorflow.magenta.NoteSequence.Note.verify(m.notes[h]))return"notes."+g}if(m.totalTime!=null&&m.hasOwnProperty("totalTime")&&typeof m.totalTime!="number")return"totalTime: number expected";if(m.totalQuantizedSteps!=null&&m.hasOwnProperty("totalQuantizedSteps")&&!(a.isInteger(m.totalQuantizedSteps)||m.totalQuantizedSteps&&a.isInteger(m.totalQuantizedSteps.low)&&a.isInteger(m.totalQuantizedSteps.high)))return"totalQuantizedSteps: integer|Long expected";if(m.pitchBends!=null&&m.hasOwnProperty("pitchBends")){if(!Array.isArray(m.pitchBends))return"pitchBends: array expected";for(h=0;h<m.pitchBends.length;++h)if(g=l.tensorflow.magenta.NoteSequence.PitchBend.verify(m.pitchBends[h]))return"pitchBends."+g}if(m.controlChanges!=null&&m.hasOwnProperty("controlChanges")){if(!Array.isArray(m.controlChanges))return"controlChanges: array expected";for(h=0;h<m.controlChanges.length;++h)if(g=l.tensorflow.magenta.NoteSequence.ControlChange.verify(m.controlChanges[h]))return"controlChanges."+g}if(m.partInfos!=null&&m.hasOwnProperty("partInfos")){if(!Array.isArray(m.partInfos))return"partInfos: array expected";for(h=0;h<m.partInfos.length;++h)if(g=l.tensorflow.magenta.NoteSequence.PartInfo.verify(m.partInfos[h]))return"partInfos."+g}if(m.sourceInfo!=null&&m.hasOwnProperty("sourceInfo")&&(g=l.tensorflow.magenta.NoteSequence.SourceInfo.verify(m.sourceInfo)))return"sourceInfo."+g;if(m.textAnnotations!=null&&m.hasOwnProperty("textAnnotations")){if(!Array.isArray(m.textAnnotations))return"textAnnotations: array expected";for(h=0;h<m.textAnnotations.length;++h)if(g=l.tensorflow.magenta.NoteSequence.TextAnnotation.verify(m.textAnnotations[h]))return"textAnnotations."+g}if(m.sectionAnnotations!=null&&m.hasOwnProperty("sectionAnnotations")){if(!Array.isArray(m.sectionAnnotations))return"sectionAnnotations: array expected";for(h=0;h<m.sectionAnnotations.length;++h)if(g=l.tensorflow.magenta.NoteSequence.SectionAnnotation.verify(m.sectionAnnotations[h]))return"sectionAnnotations."+g}if(m.sectionGroups!=null&&m.hasOwnProperty("sectionGroups")){if(!Array.isArray(m.sectionGroups))return"sectionGroups: array expected";for(h=0;h<m.sectionGroups.length;++h){var g;if(g=l.tensorflow.magenta.NoteSequence.SectionGroup.verify(m.sectionGroups[h]))return"sectionGroups."+g}}return m.quantizationInfo!=null&&m.hasOwnProperty("quantizationInfo")&&(g=l.tensorflow.magenta.NoteSequence.QuantizationInfo.verify(m.quantizationInfo))?"quantizationInfo."+g:m.subsequenceInfo!=null&&m.hasOwnProperty("subsequenceInfo")&&(g=l.tensorflow.magenta.NoteSequence.SubsequenceInfo.verify(m.subsequenceInfo))?"subsequenceInfo."+g:m.sequenceMetadata!=null&&m.hasOwnProperty("sequenceMetadata")&&(g=l.tensorflow.magenta.SequenceMetadata.verify(m.sequenceMetadata))?"sequenceMetadata."+g:null},d.fromObject=function(m){if(m instanceof l.tensorflow.magenta.NoteSequence)return m;var h=new l.tensorflow.magenta.NoteSequence;if(m.id!=null&&(h.id=String(m.id)),m.filename!=null&&(h.filename=String(m.filename)),m.referenceNumber!=null&&(a.Long?(h.referenceNumber=a.Long.fromValue(m.referenceNumber)).unsigned=!1:typeof m.referenceNumber=="string"?h.referenceNumber=parseInt(m.referenceNumber,10):typeof m.referenceNumber=="number"?h.referenceNumber=m.referenceNumber:typeof m.referenceNumber=="object"&&(h.referenceNumber=new a.LongBits(m.referenceNumber.low>>>0,m.referenceNumber.high>>>0).toNumber())),m.collectionName!=null&&(h.collectionName=String(m.collectionName)),m.ticksPerQuarter!=null&&(h.ticksPerQuarter=0|m.ticksPerQuarter),m.timeSignatures){if(!Array.isArray(m.timeSignatures))throw TypeError(".tensorflow.magenta.NoteSequence.timeSignatures: array expected");h.timeSignatures=[];for(var g=0;g<m.timeSignatures.length;++g){if(typeof m.timeSignatures[g]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.timeSignatures: object expected");h.timeSignatures[g]=l.tensorflow.magenta.NoteSequence.TimeSignature.fromObject(m.timeSignatures[g])}}if(m.keySignatures){if(!Array.isArray(m.keySignatures))throw TypeError(".tensorflow.magenta.NoteSequence.keySignatures: array expected");for(h.keySignatures=[],g=0;g<m.keySignatures.length;++g){if(typeof m.keySignatures[g]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.keySignatures: object expected");h.keySignatures[g]=l.tensorflow.magenta.NoteSequence.KeySignature.fromObject(m.keySignatures[g])}}if(m.tempos){if(!Array.isArray(m.tempos))throw TypeError(".tensorflow.magenta.NoteSequence.tempos: array expected");for(h.tempos=[],g=0;g<m.tempos.length;++g){if(typeof m.tempos[g]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.tempos: object expected");h.tempos[g]=l.tensorflow.magenta.NoteSequence.Tempo.fromObject(m.tempos[g])}}if(m.notes){if(!Array.isArray(m.notes))throw TypeError(".tensorflow.magenta.NoteSequence.notes: array expected");for(h.notes=[],g=0;g<m.notes.length;++g){if(typeof m.notes[g]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.notes: object expected");h.notes[g]=l.tensorflow.magenta.NoteSequence.Note.fromObject(m.notes[g])}}if(m.totalTime!=null&&(h.totalTime=Number(m.totalTime)),m.totalQuantizedSteps!=null&&(a.Long?(h.totalQuantizedSteps=a.Long.fromValue(m.totalQuantizedSteps)).unsigned=!1:typeof m.totalQuantizedSteps=="string"?h.totalQuantizedSteps=parseInt(m.totalQuantizedSteps,10):typeof m.totalQuantizedSteps=="number"?h.totalQuantizedSteps=m.totalQuantizedSteps:typeof m.totalQuantizedSteps=="object"&&(h.totalQuantizedSteps=new a.LongBits(m.totalQuantizedSteps.low>>>0,m.totalQuantizedSteps.high>>>0).toNumber())),m.pitchBends){if(!Array.isArray(m.pitchBends))throw TypeError(".tensorflow.magenta.NoteSequence.pitchBends: array expected");for(h.pitchBends=[],g=0;g<m.pitchBends.length;++g){if(typeof m.pitchBends[g]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.pitchBends: object expected");h.pitchBends[g]=l.tensorflow.magenta.NoteSequence.PitchBend.fromObject(m.pitchBends[g])}}if(m.controlChanges){if(!Array.isArray(m.controlChanges))throw TypeError(".tensorflow.magenta.NoteSequence.controlChanges: array expected");for(h.controlChanges=[],g=0;g<m.controlChanges.length;++g){if(typeof m.controlChanges[g]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.controlChanges: object expected");h.controlChanges[g]=l.tensorflow.magenta.NoteSequence.ControlChange.fromObject(m.controlChanges[g])}}if(m.partInfos){if(!Array.isArray(m.partInfos))throw TypeError(".tensorflow.magenta.NoteSequence.partInfos: array expected");for(h.partInfos=[],g=0;g<m.partInfos.length;++g){if(typeof m.partInfos[g]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.partInfos: object expected");h.partInfos[g]=l.tensorflow.magenta.NoteSequence.PartInfo.fromObject(m.partInfos[g])}}if(m.sourceInfo!=null){if(typeof m.sourceInfo!="object")throw TypeError(".tensorflow.magenta.NoteSequence.sourceInfo: object expected");h.sourceInfo=l.tensorflow.magenta.NoteSequence.SourceInfo.fromObject(m.sourceInfo)}if(m.textAnnotations){if(!Array.isArray(m.textAnnotations))throw TypeError(".tensorflow.magenta.NoteSequence.textAnnotations: array expected");for(h.textAnnotations=[],g=0;g<m.textAnnotations.length;++g){if(typeof m.textAnnotations[g]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.textAnnotations: object expected");h.textAnnotations[g]=l.tensorflow.magenta.NoteSequence.TextAnnotation.fromObject(m.textAnnotations[g])}}if(m.sectionAnnotations){if(!Array.isArray(m.sectionAnnotations))throw TypeError(".tensorflow.magenta.NoteSequence.sectionAnnotations: array expected");for(h.sectionAnnotations=[],g=0;g<m.sectionAnnotations.length;++g){if(typeof m.sectionAnnotations[g]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.sectionAnnotations: object expected");h.sectionAnnotations[g]=l.tensorflow.magenta.NoteSequence.SectionAnnotation.fromObject(m.sectionAnnotations[g])}}if(m.sectionGroups){if(!Array.isArray(m.sectionGroups))throw TypeError(".tensorflow.magenta.NoteSequence.sectionGroups: array expected");for(h.sectionGroups=[],g=0;g<m.sectionGroups.length;++g){if(typeof m.sectionGroups[g]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.sectionGroups: object expected");h.sectionGroups[g]=l.tensorflow.magenta.NoteSequence.SectionGroup.fromObject(m.sectionGroups[g])}}if(m.quantizationInfo!=null){if(typeof m.quantizationInfo!="object")throw TypeError(".tensorflow.magenta.NoteSequence.quantizationInfo: object expected");h.quantizationInfo=l.tensorflow.magenta.NoteSequence.QuantizationInfo.fromObject(m.quantizationInfo)}if(m.subsequenceInfo!=null){if(typeof m.subsequenceInfo!="object")throw TypeError(".tensorflow.magenta.NoteSequence.subsequenceInfo: object expected");h.subsequenceInfo=l.tensorflow.magenta.NoteSequence.SubsequenceInfo.fromObject(m.subsequenceInfo)}if(m.sequenceMetadata!=null){if(typeof m.sequenceMetadata!="object")throw TypeError(".tensorflow.magenta.NoteSequence.sequenceMetadata: object expected");h.sequenceMetadata=l.tensorflow.magenta.SequenceMetadata.fromObject(m.sequenceMetadata)}return h},d.toObject=function(m,h){h||(h={});var g={};if((h.arrays||h.defaults)&&(g.timeSignatures=[],g.keySignatures=[],g.tempos=[],g.notes=[],g.pitchBends=[],g.controlChanges=[],g.partInfos=[],g.textAnnotations=[],g.sectionAnnotations=[],g.sectionGroups=[]),h.defaults){if(g.id="",g.filename="",g.collectionName="",g.ticksPerQuarter=0,g.totalTime=0,g.sourceInfo=null,g.quantizationInfo=null,a.Long){var x=new a.Long(0,0,!1);g.totalQuantizedSteps=h.longs===String?x.toString():h.longs===Number?x.toNumber():x}else g.totalQuantizedSteps=h.longs===String?"0":0;g.subsequenceInfo=null,a.Long?(x=new a.Long(0,0,!1),g.referenceNumber=h.longs===String?x.toString():h.longs===Number?x.toNumber():x):g.referenceNumber=h.longs===String?"0":0,g.sequenceMetadata=null}if(m.id!=null&&m.hasOwnProperty("id")&&(g.id=m.id),m.filename!=null&&m.hasOwnProperty("filename")&&(g.filename=m.filename),m.collectionName!=null&&m.hasOwnProperty("collectionName")&&(g.collectionName=m.collectionName),m.ticksPerQuarter!=null&&m.hasOwnProperty("ticksPerQuarter")&&(g.ticksPerQuarter=m.ticksPerQuarter),m.timeSignatures&&m.timeSignatures.length){g.timeSignatures=[];for(var w=0;w<m.timeSignatures.length;++w)g.timeSignatures[w]=l.tensorflow.magenta.NoteSequence.TimeSignature.toObject(m.timeSignatures[w],h)}if(m.keySignatures&&m.keySignatures.length)for(g.keySignatures=[],w=0;w<m.keySignatures.length;++w)g.keySignatures[w]=l.tensorflow.magenta.NoteSequence.KeySignature.toObject(m.keySignatures[w],h);if(m.tempos&&m.tempos.length)for(g.tempos=[],w=0;w<m.tempos.length;++w)g.tempos[w]=l.tensorflow.magenta.NoteSequence.Tempo.toObject(m.tempos[w],h);if(m.notes&&m.notes.length)for(g.notes=[],w=0;w<m.notes.length;++w)g.notes[w]=l.tensorflow.magenta.NoteSequence.Note.toObject(m.notes[w],h);if(m.totalTime!=null&&m.hasOwnProperty("totalTime")&&(g.totalTime=h.json&&!isFinite(m.totalTime)?String(m.totalTime):m.totalTime),m.pitchBends&&m.pitchBends.length)for(g.pitchBends=[],w=0;w<m.pitchBends.length;++w)g.pitchBends[w]=l.tensorflow.magenta.NoteSequence.PitchBend.toObject(m.pitchBends[w],h);if(m.controlChanges&&m.controlChanges.length)for(g.controlChanges=[],w=0;w<m.controlChanges.length;++w)g.controlChanges[w]=l.tensorflow.magenta.NoteSequence.ControlChange.toObject(m.controlChanges[w],h);if(m.partInfos&&m.partInfos.length)for(g.partInfos=[],w=0;w<m.partInfos.length;++w)g.partInfos[w]=l.tensorflow.magenta.NoteSequence.PartInfo.toObject(m.partInfos[w],h);if(m.sourceInfo!=null&&m.hasOwnProperty("sourceInfo")&&(g.sourceInfo=l.tensorflow.magenta.NoteSequence.SourceInfo.toObject(m.sourceInfo,h)),m.textAnnotations&&m.textAnnotations.length)for(g.textAnnotations=[],w=0;w<m.textAnnotations.length;++w)g.textAnnotations[w]=l.tensorflow.magenta.NoteSequence.TextAnnotation.toObject(m.textAnnotations[w],h);if(m.quantizationInfo!=null&&m.hasOwnProperty("quantizationInfo")&&(g.quantizationInfo=l.tensorflow.magenta.NoteSequence.QuantizationInfo.toObject(m.quantizationInfo,h)),m.totalQuantizedSteps!=null&&m.hasOwnProperty("totalQuantizedSteps")&&(typeof m.totalQuantizedSteps=="number"?g.totalQuantizedSteps=h.longs===String?String(m.totalQuantizedSteps):m.totalQuantizedSteps:g.totalQuantizedSteps=h.longs===String?a.Long.prototype.toString.call(m.totalQuantizedSteps):h.longs===Number?new a.LongBits(m.totalQuantizedSteps.low>>>0,m.totalQuantizedSteps.high>>>0).toNumber():m.totalQuantizedSteps),m.subsequenceInfo!=null&&m.hasOwnProperty("subsequenceInfo")&&(g.subsequenceInfo=l.tensorflow.magenta.NoteSequence.SubsequenceInfo.toObject(m.subsequenceInfo,h)),m.referenceNumber!=null&&m.hasOwnProperty("referenceNumber")&&(typeof m.referenceNumber=="number"?g.referenceNumber=h.longs===String?String(m.referenceNumber):m.referenceNumber:g.referenceNumber=h.longs===String?a.Long.prototype.toString.call(m.referenceNumber):h.longs===Number?new a.LongBits(m.referenceNumber.low>>>0,m.referenceNumber.high>>>0).toNumber():m.referenceNumber),m.sequenceMetadata!=null&&m.hasOwnProperty("sequenceMetadata")&&(g.sequenceMetadata=l.tensorflow.magenta.SequenceMetadata.toObject(m.sequenceMetadata,h)),m.sectionAnnotations&&m.sectionAnnotations.length)for(g.sectionAnnotations=[],w=0;w<m.sectionAnnotations.length;++w)g.sectionAnnotations[w]=l.tensorflow.magenta.NoteSequence.SectionAnnotation.toObject(m.sectionAnnotations[w],h);if(m.sectionGroups&&m.sectionGroups.length)for(g.sectionGroups=[],w=0;w<m.sectionGroups.length;++w)g.sectionGroups[w]=l.tensorflow.magenta.NoteSequence.SectionGroup.toObject(m.sectionGroups[w],h);return g},d.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},d.Note=function(){function m(h){if(h)for(var g=Object.keys(h),x=0;x<g.length;++x)h[g[x]]!=null&&(this[g[x]]=h[g[x]])}return m.prototype.pitch=0,m.prototype.pitchName=0,m.prototype.velocity=0,m.prototype.startTime=0,m.prototype.quantizedStartStep=a.Long?a.Long.fromBits(0,0,!1):0,m.prototype.endTime=0,m.prototype.quantizedEndStep=a.Long?a.Long.fromBits(0,0,!1):0,m.prototype.numerator=0,m.prototype.denominator=0,m.prototype.instrument=0,m.prototype.program=0,m.prototype.isDrum=!1,m.prototype.part=0,m.prototype.voice=0,m.create=function(h){return new m(h)},m.encode=function(h,g){return g||(g=c.create()),h.pitch!=null&&h.hasOwnProperty("pitch")&&g.uint32(8).int32(h.pitch),h.velocity!=null&&h.hasOwnProperty("velocity")&&g.uint32(16).int32(h.velocity),h.startTime!=null&&h.hasOwnProperty("startTime")&&g.uint32(25).double(h.startTime),h.endTime!=null&&h.hasOwnProperty("endTime")&&g.uint32(33).double(h.endTime),h.numerator!=null&&h.hasOwnProperty("numerator")&&g.uint32(40).int32(h.numerator),h.denominator!=null&&h.hasOwnProperty("denominator")&&g.uint32(48).int32(h.denominator),h.instrument!=null&&h.hasOwnProperty("instrument")&&g.uint32(56).int32(h.instrument),h.program!=null&&h.hasOwnProperty("program")&&g.uint32(64).int32(h.program),h.isDrum!=null&&h.hasOwnProperty("isDrum")&&g.uint32(72).bool(h.isDrum),h.part!=null&&h.hasOwnProperty("part")&&g.uint32(80).int32(h.part),h.pitchName!=null&&h.hasOwnProperty("pitchName")&&g.uint32(88).int32(h.pitchName),h.voice!=null&&h.hasOwnProperty("voice")&&g.uint32(96).int32(h.voice),h.quantizedStartStep!=null&&h.hasOwnProperty("quantizedStartStep")&&g.uint32(104).int64(h.quantizedStartStep),h.quantizedEndStep!=null&&h.hasOwnProperty("quantizedEndStep")&&g.uint32(112).int64(h.quantizedEndStep),g},m.encodeDelimited=function(h,g){return this.encode(h,g).ldelim()},m.decode=function(h,g){h instanceof i||(h=i.create(h));for(var x=g===void 0?h.len:h.pos+g,w=new l.tensorflow.magenta.NoteSequence.Note;h.pos<x;){var I=h.uint32();switch(I>>>3){case 1:w.pitch=h.int32();break;case 11:w.pitchName=h.int32();break;case 2:w.velocity=h.int32();break;case 3:w.startTime=h.double();break;case 13:w.quantizedStartStep=a.Long?h.int64().toNumber():h.int64();break;case 4:w.endTime=h.double();break;case 14:w.quantizedEndStep=a.Long?h.int64().toNumber():h.int64();break;case 5:w.numerator=h.int32();break;case 6:w.denominator=h.int32();break;case 7:w.instrument=h.int32();break;case 8:w.program=h.int32();break;case 9:w.isDrum=h.bool();break;case 10:w.part=h.int32();break;case 12:w.voice=h.int32();break;default:h.skipType(7&I)}}return w},m.decodeDelimited=function(h){return h instanceof i||(h=new i(h)),this.decode(h,h.uint32())},m.verify=function(h){if(typeof h!="object"||h===null)return"object expected";if(h.pitch!=null&&h.hasOwnProperty("pitch")&&!a.isInteger(h.pitch))return"pitch: integer expected";if(h.pitchName!=null&&h.hasOwnProperty("pitchName"))switch(h.pitchName){default:return"pitchName: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:case 22:case 23:case 24:case 25:case 26:case 27:case 28:case 29:case 30:case 31:case 32:case 33:case 34:case 35:}return h.velocity!=null&&h.hasOwnProperty("velocity")&&!a.isInteger(h.velocity)?"velocity: integer expected":h.startTime!=null&&h.hasOwnProperty("startTime")&&typeof h.startTime!="number"?"startTime: number expected":h.quantizedStartStep!=null&&h.hasOwnProperty("quantizedStartStep")&&!(a.isInteger(h.quantizedStartStep)||h.quantizedStartStep&&a.isInteger(h.quantizedStartStep.low)&&a.isInteger(h.quantizedStartStep.high))?"quantizedStartStep: integer|Long expected":h.endTime!=null&&h.hasOwnProperty("endTime")&&typeof h.endTime!="number"?"endTime: number expected":h.quantizedEndStep!=null&&h.hasOwnProperty("quantizedEndStep")&&!(a.isInteger(h.quantizedEndStep)||h.quantizedEndStep&&a.isInteger(h.quantizedEndStep.low)&&a.isInteger(h.quantizedEndStep.high))?"quantizedEndStep: integer|Long expected":h.numerator!=null&&h.hasOwnProperty("numerator")&&!a.isInteger(h.numerator)?"numerator: integer expected":h.denominator!=null&&h.hasOwnProperty("denominator")&&!a.isInteger(h.denominator)?"denominator: integer expected":h.instrument!=null&&h.hasOwnProperty("instrument")&&!a.isInteger(h.instrument)?"instrument: integer expected":h.program!=null&&h.hasOwnProperty("program")&&!a.isInteger(h.program)?"program: integer expected":h.isDrum!=null&&h.hasOwnProperty("isDrum")&&typeof h.isDrum!="boolean"?"isDrum: boolean expected":h.part!=null&&h.hasOwnProperty("part")&&!a.isInteger(h.part)?"part: integer expected":h.voice!=null&&h.hasOwnProperty("voice")&&!a.isInteger(h.voice)?"voice: integer expected":null},m.fromObject=function(h){if(h instanceof l.tensorflow.magenta.NoteSequence.Note)return h;var g=new l.tensorflow.magenta.NoteSequence.Note;switch(h.pitch!=null&&(g.pitch=0|h.pitch),h.pitchName){case"UNKNOWN_PITCH_NAME":case 0:g.pitchName=0;break;case"F_FLAT_FLAT":case 1:g.pitchName=1;break;case"C_FLAT_FLAT":case 2:g.pitchName=2;break;case"G_FLAT_FLAT":case 3:g.pitchName=3;break;case"D_FLAT_FLAT":case 4:g.pitchName=4;break;case"A_FLAT_FLAT":case 5:g.pitchName=5;break;case"E_FLAT_FLAT":case 6:g.pitchName=6;break;case"B_FLAT_FLAT":case 7:g.pitchName=7;break;case"F_FLAT":case 8:g.pitchName=8;break;case"C_FLAT":case 9:g.pitchName=9;break;case"G_FLAT":case 10:g.pitchName=10;break;case"D_FLAT":case 11:g.pitchName=11;break;case"A_FLAT":case 12:g.pitchName=12;break;case"E_FLAT":case 13:g.pitchName=13;break;case"B_FLAT":case 14:g.pitchName=14;break;case"F":case 15:g.pitchName=15;break;case"C":case 16:g.pitchName=16;break;case"G":case 17:g.pitchName=17;break;case"D":case 18:g.pitchName=18;break;case"A":case 19:g.pitchName=19;break;case"E":case 20:g.pitchName=20;break;case"B":case 21:g.pitchName=21;break;case"F_SHARP":case 22:g.pitchName=22;break;case"C_SHARP":case 23:g.pitchName=23;break;case"G_SHARP":case 24:g.pitchName=24;break;case"D_SHARP":case 25:g.pitchName=25;break;case"A_SHARP":case 26:g.pitchName=26;break;case"E_SHARP":case 27:g.pitchName=27;break;case"B_SHARP":case 28:g.pitchName=28;break;case"F_SHARP_SHARP":case 29:g.pitchName=29;break;case"C_SHARP_SHARP":case 30:g.pitchName=30;break;case"G_SHARP_SHARP":case 31:g.pitchName=31;break;case"D_SHARP_SHARP":case 32:g.pitchName=32;break;case"A_SHARP_SHARP":case 33:g.pitchName=33;break;case"E_SHARP_SHARP":case 34:g.pitchName=34;break;case"B_SHARP_SHARP":case 35:g.pitchName=35}return h.velocity!=null&&(g.velocity=0|h.velocity),h.startTime!=null&&(g.startTime=Number(h.startTime)),h.quantizedStartStep!=null&&(a.Long?(g.quantizedStartStep=a.Long.fromValue(h.quantizedStartStep)).unsigned=!1:typeof h.quantizedStartStep=="string"?g.quantizedStartStep=parseInt(h.quantizedStartStep,10):typeof h.quantizedStartStep=="number"?g.quantizedStartStep=h.quantizedStartStep:typeof h.quantizedStartStep=="object"&&(g.quantizedStartStep=new a.LongBits(h.quantizedStartStep.low>>>0,h.quantizedStartStep.high>>>0).toNumber())),h.endTime!=null&&(g.endTime=Number(h.endTime)),h.quantizedEndStep!=null&&(a.Long?(g.quantizedEndStep=a.Long.fromValue(h.quantizedEndStep)).unsigned=!1:typeof h.quantizedEndStep=="string"?g.quantizedEndStep=parseInt(h.quantizedEndStep,10):typeof h.quantizedEndStep=="number"?g.quantizedEndStep=h.quantizedEndStep:typeof h.quantizedEndStep=="object"&&(g.quantizedEndStep=new a.LongBits(h.quantizedEndStep.low>>>0,h.quantizedEndStep.high>>>0).toNumber())),h.numerator!=null&&(g.numerator=0|h.numerator),h.denominator!=null&&(g.denominator=0|h.denominator),h.instrument!=null&&(g.instrument=0|h.instrument),h.program!=null&&(g.program=0|h.program),h.isDrum!=null&&(g.isDrum=!!h.isDrum),h.part!=null&&(g.part=0|h.part),h.voice!=null&&(g.voice=0|h.voice),g},m.toObject=function(h,g){g||(g={});var x={};if(g.defaults){if(x.pitch=0,x.velocity=0,x.startTime=0,x.endTime=0,x.numerator=0,x.denominator=0,x.instrument=0,x.program=0,x.isDrum=!1,x.part=0,x.pitchName=g.enums===String?"UNKNOWN_PITCH_NAME":0,x.voice=0,a.Long){var w=new a.Long(0,0,!1);x.quantizedStartStep=g.longs===String?w.toString():g.longs===Number?w.toNumber():w}else x.quantizedStartStep=g.longs===String?"0":0;a.Long?(w=new a.Long(0,0,!1),x.quantizedEndStep=g.longs===String?w.toString():g.longs===Number?w.toNumber():w):x.quantizedEndStep=g.longs===String?"0":0}return h.pitch!=null&&h.hasOwnProperty("pitch")&&(x.pitch=h.pitch),h.velocity!=null&&h.hasOwnProperty("velocity")&&(x.velocity=h.velocity),h.startTime!=null&&h.hasOwnProperty("startTime")&&(x.startTime=g.json&&!isFinite(h.startTime)?String(h.startTime):h.startTime),h.endTime!=null&&h.hasOwnProperty("endTime")&&(x.endTime=g.json&&!isFinite(h.endTime)?String(h.endTime):h.endTime),h.numerator!=null&&h.hasOwnProperty("numerator")&&(x.numerator=h.numerator),h.denominator!=null&&h.hasOwnProperty("denominator")&&(x.denominator=h.denominator),h.instrument!=null&&h.hasOwnProperty("instrument")&&(x.instrument=h.instrument),h.program!=null&&h.hasOwnProperty("program")&&(x.program=h.program),h.isDrum!=null&&h.hasOwnProperty("isDrum")&&(x.isDrum=h.isDrum),h.part!=null&&h.hasOwnProperty("part")&&(x.part=h.part),h.pitchName!=null&&h.hasOwnProperty("pitchName")&&(x.pitchName=g.enums===String?l.tensorflow.magenta.NoteSequence.PitchName[h.pitchName]:h.pitchName),h.voice!=null&&h.hasOwnProperty("voice")&&(x.voice=h.voice),h.quantizedStartStep!=null&&h.hasOwnProperty("quantizedStartStep")&&(typeof h.quantizedStartStep=="number"?x.quantizedStartStep=g.longs===String?String(h.quantizedStartStep):h.quantizedStartStep:x.quantizedStartStep=g.longs===String?a.Long.prototype.toString.call(h.quantizedStartStep):g.longs===Number?new a.LongBits(h.quantizedStartStep.low>>>0,h.quantizedStartStep.high>>>0).toNumber():h.quantizedStartStep),h.quantizedEndStep!=null&&h.hasOwnProperty("quantizedEndStep")&&(typeof h.quantizedEndStep=="number"?x.quantizedEndStep=g.longs===String?String(h.quantizedEndStep):h.quantizedEndStep:x.quantizedEndStep=g.longs===String?a.Long.prototype.toString.call(h.quantizedEndStep):g.longs===Number?new a.LongBits(h.quantizedEndStep.low>>>0,h.quantizedEndStep.high>>>0).toNumber():h.quantizedEndStep),x},m.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},m}(),d.PitchName=(f={},(y=Object.create(f))[f[0]="UNKNOWN_PITCH_NAME"]=0,y[f[1]="F_FLAT_FLAT"]=1,y[f[2]="C_FLAT_FLAT"]=2,y[f[3]="G_FLAT_FLAT"]=3,y[f[4]="D_FLAT_FLAT"]=4,y[f[5]="A_FLAT_FLAT"]=5,y[f[6]="E_FLAT_FLAT"]=6,y[f[7]="B_FLAT_FLAT"]=7,y[f[8]="F_FLAT"]=8,y[f[9]="C_FLAT"]=9,y[f[10]="G_FLAT"]=10,y[f[11]="D_FLAT"]=11,y[f[12]="A_FLAT"]=12,y[f[13]="E_FLAT"]=13,y[f[14]="B_FLAT"]=14,y[f[15]="F"]=15,y[f[16]="C"]=16,y[f[17]="G"]=17,y[f[18]="D"]=18,y[f[19]="A"]=19,y[f[20]="E"]=20,y[f[21]="B"]=21,y[f[22]="F_SHARP"]=22,y[f[23]="C_SHARP"]=23,y[f[24]="G_SHARP"]=24,y[f[25]="D_SHARP"]=25,y[f[26]="A_SHARP"]=26,y[f[27]="E_SHARP"]=27,y[f[28]="B_SHARP"]=28,y[f[29]="F_SHARP_SHARP"]=29,y[f[30]="C_SHARP_SHARP"]=30,y[f[31]="G_SHARP_SHARP"]=31,y[f[32]="D_SHARP_SHARP"]=32,y[f[33]="A_SHARP_SHARP"]=33,y[f[34]="E_SHARP_SHARP"]=34,y[f[35]="B_SHARP_SHARP"]=35,y),d.TimeSignature=function(){function m(h){if(h)for(var g=Object.keys(h),x=0;x<g.length;++x)h[g[x]]!=null&&(this[g[x]]=h[g[x]])}return m.prototype.time=0,m.prototype.numerator=0,m.prototype.denominator=0,m.create=function(h){return new m(h)},m.encode=function(h,g){return g||(g=c.create()),h.time!=null&&h.hasOwnProperty("time")&&g.uint32(9).double(h.time),h.numerator!=null&&h.hasOwnProperty("numerator")&&g.uint32(16).int32(h.numerator),h.denominator!=null&&h.hasOwnProperty("denominator")&&g.uint32(24).int32(h.denominator),g},m.encodeDelimited=function(h,g){return this.encode(h,g).ldelim()},m.decode=function(h,g){h instanceof i||(h=i.create(h));for(var x=g===void 0?h.len:h.pos+g,w=new l.tensorflow.magenta.NoteSequence.TimeSignature;h.pos<x;){var I=h.uint32();switch(I>>>3){case 1:w.time=h.double();break;case 2:w.numerator=h.int32();break;case 3:w.denominator=h.int32();break;default:h.skipType(7&I)}}return w},m.decodeDelimited=function(h){return h instanceof i||(h=new i(h)),this.decode(h,h.uint32())},m.verify=function(h){return typeof h!="object"||h===null?"object expected":h.time!=null&&h.hasOwnProperty("time")&&typeof h.time!="number"?"time: number expected":h.numerator!=null&&h.hasOwnProperty("numerator")&&!a.isInteger(h.numerator)?"numerator: integer expected":h.denominator!=null&&h.hasOwnProperty("denominator")&&!a.isInteger(h.denominator)?"denominator: integer expected":null},m.fromObject=function(h){if(h instanceof l.tensorflow.magenta.NoteSequence.TimeSignature)return h;var g=new l.tensorflow.magenta.NoteSequence.TimeSignature;return h.time!=null&&(g.time=Number(h.time)),h.numerator!=null&&(g.numerator=0|h.numerator),h.denominator!=null&&(g.denominator=0|h.denominator),g},m.toObject=function(h,g){g||(g={});var x={};return g.defaults&&(x.time=0,x.numerator=0,x.denominator=0),h.time!=null&&h.hasOwnProperty("time")&&(x.time=g.json&&!isFinite(h.time)?String(h.time):h.time),h.numerator!=null&&h.hasOwnProperty("numerator")&&(x.numerator=h.numerator),h.denominator!=null&&h.hasOwnProperty("denominator")&&(x.denominator=h.denominator),x},m.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},m}(),d.KeySignature=function(){function m(h){if(h)for(var g=Object.keys(h),x=0;x<g.length;++x)h[g[x]]!=null&&(this[g[x]]=h[g[x]])}return m.prototype.time=0,m.prototype.key=0,m.prototype.mode=0,m.create=function(h){return new m(h)},m.encode=function(h,g){return g||(g=c.create()),h.time!=null&&h.hasOwnProperty("time")&&g.uint32(9).double(h.time),h.key!=null&&h.hasOwnProperty("key")&&g.uint32(16).int32(h.key),h.mode!=null&&h.hasOwnProperty("mode")&&g.uint32(24).int32(h.mode),g},m.encodeDelimited=function(h,g){return this.encode(h,g).ldelim()},m.decode=function(h,g){h instanceof i||(h=i.create(h));for(var x=g===void 0?h.len:h.pos+g,w=new l.tensorflow.magenta.NoteSequence.KeySignature;h.pos<x;){var I=h.uint32();switch(I>>>3){case 1:w.time=h.double();break;case 2:w.key=h.int32();break;case 3:w.mode=h.int32();break;default:h.skipType(7&I)}}return w},m.decodeDelimited=function(h){return h instanceof i||(h=new i(h)),this.decode(h,h.uint32())},m.verify=function(h){if(typeof h!="object"||h===null)return"object expected";if(h.time!=null&&h.hasOwnProperty("time")&&typeof h.time!="number")return"time: number expected";if(h.key!=null&&h.hasOwnProperty("key"))switch(h.key){default:return"key: enum value expected";case 0:case 1:case 1:case 2:case 3:case 3:case 4:case 5:case 6:case 6:case 7:case 8:case 8:case 9:case 10:case 10:case 11:}if(h.mode!=null&&h.hasOwnProperty("mode"))switch(h.mode){default:return"mode: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:}return null},m.fromObject=function(h){if(h instanceof l.tensorflow.magenta.NoteSequence.KeySignature)return h;var g=new l.tensorflow.magenta.NoteSequence.KeySignature;switch(h.time!=null&&(g.time=Number(h.time)),h.key){case"C":case 0:g.key=0;break;case"C_SHARP":case 1:g.key=1;break;case"D_FLAT":case 1:g.key=1;break;case"D":case 2:g.key=2;break;case"D_SHARP":case 3:g.key=3;break;case"E_FLAT":case 3:g.key=3;break;case"E":case 4:g.key=4;break;case"F":case 5:g.key=5;break;case"F_SHARP":case 6:g.key=6;break;case"G_FLAT":case 6:g.key=6;break;case"G":case 7:g.key=7;break;case"G_SHARP":case 8:g.key=8;break;case"A_FLAT":case 8:g.key=8;break;case"A":case 9:g.key=9;break;case"A_SHARP":case 10:g.key=10;break;case"B_FLAT":case 10:g.key=10;break;case"B":case 11:g.key=11}switch(h.mode){case"MAJOR":case 0:g.mode=0;break;case"MINOR":case 1:g.mode=1;break;case"NOT_SPECIFIED":case 2:g.mode=2;break;case"MIXOLYDIAN":case 3:g.mode=3;break;case"DORIAN":case 4:g.mode=4;break;case"PHRYGIAN":case 5:g.mode=5;break;case"LYDIAN":case 6:g.mode=6;break;case"LOCRIAN":case 7:g.mode=7}return g},m.toObject=function(h,g){g||(g={});var x={};return g.defaults&&(x.time=0,x.key=g.enums===String?"C":0,x.mode=g.enums===String?"MAJOR":0),h.time!=null&&h.hasOwnProperty("time")&&(x.time=g.json&&!isFinite(h.time)?String(h.time):h.time),h.key!=null&&h.hasOwnProperty("key")&&(x.key=g.enums===String?l.tensorflow.magenta.NoteSequence.KeySignature.Key[h.key]:h.key),h.mode!=null&&h.hasOwnProperty("mode")&&(x.mode=g.enums===String?l.tensorflow.magenta.NoteSequence.KeySignature.Mode[h.mode]:h.mode),x},m.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},m.Key=function(){var h={},g=Object.create(h);return g[h[0]="C"]=0,g[h[1]="C_SHARP"]=1,g.D_FLAT=1,g[h[2]="D"]=2,g[h[3]="D_SHARP"]=3,g.E_FLAT=3,g[h[4]="E"]=4,g[h[5]="F"]=5,g[h[6]="F_SHARP"]=6,g.G_FLAT=6,g[h[7]="G"]=7,g[h[8]="G_SHARP"]=8,g.A_FLAT=8,g[h[9]="A"]=9,g[h[10]="A_SHARP"]=10,g.B_FLAT=10,g[h[11]="B"]=11,g}(),m.Mode=function(){var h={},g=Object.create(h);return g[h[0]="MAJOR"]=0,g[h[1]="MINOR"]=1,g[h[2]="NOT_SPECIFIED"]=2,g[h[3]="MIXOLYDIAN"]=3,g[h[4]="DORIAN"]=4,g[h[5]="PHRYGIAN"]=5,g[h[6]="LYDIAN"]=6,g[h[7]="LOCRIAN"]=7,g}(),m}(),d.Tempo=function(){function m(h){if(h)for(var g=Object.keys(h),x=0;x<g.length;++x)h[g[x]]!=null&&(this[g[x]]=h[g[x]])}return m.prototype.time=0,m.prototype.qpm=0,m.create=function(h){return new m(h)},m.encode=function(h,g){return g||(g=c.create()),h.time!=null&&h.hasOwnProperty("time")&&g.uint32(9).double(h.time),h.qpm!=null&&h.hasOwnProperty("qpm")&&g.uint32(17).double(h.qpm),g},m.encodeDelimited=function(h,g){return this.encode(h,g).ldelim()},m.decode=function(h,g){h instanceof i||(h=i.create(h));for(var x=g===void 0?h.len:h.pos+g,w=new l.tensorflow.magenta.NoteSequence.Tempo;h.pos<x;){var I=h.uint32();switch(I>>>3){case 1:w.time=h.double();break;case 2:w.qpm=h.double();break;default:h.skipType(7&I)}}return w},m.decodeDelimited=function(h){return h instanceof i||(h=new i(h)),this.decode(h,h.uint32())},m.verify=function(h){return typeof h!="object"||h===null?"object expected":h.time!=null&&h.hasOwnProperty("time")&&typeof h.time!="number"?"time: number expected":h.qpm!=null&&h.hasOwnProperty("qpm")&&typeof h.qpm!="number"?"qpm: number expected":null},m.fromObject=function(h){if(h instanceof l.tensorflow.magenta.NoteSequence.Tempo)return h;var g=new l.tensorflow.magenta.NoteSequence.Tempo;return h.time!=null&&(g.time=Number(h.time)),h.qpm!=null&&(g.qpm=Number(h.qpm)),g},m.toObject=function(h,g){g||(g={});var x={};return g.defaults&&(x.time=0,x.qpm=0),h.time!=null&&h.hasOwnProperty("time")&&(x.time=g.json&&!isFinite(h.time)?String(h.time):h.time),h.qpm!=null&&h.hasOwnProperty("qpm")&&(x.qpm=g.json&&!isFinite(h.qpm)?String(h.qpm):h.qpm),x},m.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},m}(),d.PitchBend=function(){function m(h){if(h)for(var g=Object.keys(h),x=0;x<g.length;++x)h[g[x]]!=null&&(this[g[x]]=h[g[x]])}return m.prototype.time=0,m.prototype.bend=0,m.prototype.instrument=0,m.prototype.program=0,m.prototype.isDrum=!1,m.create=function(h){return new m(h)},m.encode=function(h,g){return g||(g=c.create()),h.time!=null&&h.hasOwnProperty("time")&&g.uint32(9).double(h.time),h.bend!=null&&h.hasOwnProperty("bend")&&g.uint32(16).int32(h.bend),h.instrument!=null&&h.hasOwnProperty("instrument")&&g.uint32(24).int32(h.instrument),h.program!=null&&h.hasOwnProperty("program")&&g.uint32(32).int32(h.program),h.isDrum!=null&&h.hasOwnProperty("isDrum")&&g.uint32(40).bool(h.isDrum),g},m.encodeDelimited=function(h,g){return this.encode(h,g).ldelim()},m.decode=function(h,g){h instanceof i||(h=i.create(h));for(var x=g===void 0?h.len:h.pos+g,w=new l.tensorflow.magenta.NoteSequence.PitchBend;h.pos<x;){var I=h.uint32();switch(I>>>3){case 1:w.time=h.double();break;case 2:w.bend=h.int32();break;case 3:w.instrument=h.int32();break;case 4:w.program=h.int32();break;case 5:w.isDrum=h.bool();break;default:h.skipType(7&I)}}return w},m.decodeDelimited=function(h){return h instanceof i||(h=new i(h)),this.decode(h,h.uint32())},m.verify=function(h){return typeof h!="object"||h===null?"object expected":h.time!=null&&h.hasOwnProperty("time")&&typeof h.time!="number"?"time: number expected":h.bend!=null&&h.hasOwnProperty("bend")&&!a.isInteger(h.bend)?"bend: integer expected":h.instrument!=null&&h.hasOwnProperty("instrument")&&!a.isInteger(h.instrument)?"instrument: integer expected":h.program!=null&&h.hasOwnProperty("program")&&!a.isInteger(h.program)?"program: integer expected":h.isDrum!=null&&h.hasOwnProperty("isDrum")&&typeof h.isDrum!="boolean"?"isDrum: boolean expected":null},m.fromObject=function(h){if(h instanceof l.tensorflow.magenta.NoteSequence.PitchBend)return h;var g=new l.tensorflow.magenta.NoteSequence.PitchBend;return h.time!=null&&(g.time=Number(h.time)),h.bend!=null&&(g.bend=0|h.bend),h.instrument!=null&&(g.instrument=0|h.instrument),h.program!=null&&(g.program=0|h.program),h.isDrum!=null&&(g.isDrum=!!h.isDrum),g},m.toObject=function(h,g){g||(g={});var x={};return g.defaults&&(x.time=0,x.bend=0,x.instrument=0,x.program=0,x.isDrum=!1),h.time!=null&&h.hasOwnProperty("time")&&(x.time=g.json&&!isFinite(h.time)?String(h.time):h.time),h.bend!=null&&h.hasOwnProperty("bend")&&(x.bend=h.bend),h.instrument!=null&&h.hasOwnProperty("instrument")&&(x.instrument=h.instrument),h.program!=null&&h.hasOwnProperty("program")&&(x.program=h.program),h.isDrum!=null&&h.hasOwnProperty("isDrum")&&(x.isDrum=h.isDrum),x},m.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},m}(),d.ControlChange=function(){function m(h){if(h)for(var g=Object.keys(h),x=0;x<g.length;++x)h[g[x]]!=null&&(this[g[x]]=h[g[x]])}return m.prototype.time=0,m.prototype.quantizedStep=a.Long?a.Long.fromBits(0,0,!1):0,m.prototype.controlNumber=0,m.prototype.controlValue=0,m.prototype.instrument=0,m.prototype.program=0,m.prototype.isDrum=!1,m.create=function(h){return new m(h)},m.encode=function(h,g){return g||(g=c.create()),h.time!=null&&h.hasOwnProperty("time")&&g.uint32(9).double(h.time),h.controlNumber!=null&&h.hasOwnProperty("controlNumber")&&g.uint32(16).int32(h.controlNumber),h.controlValue!=null&&h.hasOwnProperty("controlValue")&&g.uint32(24).int32(h.controlValue),h.instrument!=null&&h.hasOwnProperty("instrument")&&g.uint32(32).int32(h.instrument),h.program!=null&&h.hasOwnProperty("program")&&g.uint32(40).int32(h.program),h.isDrum!=null&&h.hasOwnProperty("isDrum")&&g.uint32(48).bool(h.isDrum),h.quantizedStep!=null&&h.hasOwnProperty("quantizedStep")&&g.uint32(56).int64(h.quantizedStep),g},m.encodeDelimited=function(h,g){return this.encode(h,g).ldelim()},m.decode=function(h,g){h instanceof i||(h=i.create(h));for(var x=g===void 0?h.len:h.pos+g,w=new l.tensorflow.magenta.NoteSequence.ControlChange;h.pos<x;){var I=h.uint32();switch(I>>>3){case 1:w.time=h.double();break;case 7:w.quantizedStep=a.Long?h.int64().toNumber():h.int64();break;case 2:w.controlNumber=h.int32();break;case 3:w.controlValue=h.int32();break;case 4:w.instrument=h.int32();break;case 5:w.program=h.int32();break;case 6:w.isDrum=h.bool();break;default:h.skipType(7&I)}}return w},m.decodeDelimited=function(h){return h instanceof i||(h=new i(h)),this.decode(h,h.uint32())},m.verify=function(h){return typeof h!="object"||h===null?"object expected":h.time!=null&&h.hasOwnProperty("time")&&typeof h.time!="number"?"time: number expected":h.quantizedStep!=null&&h.hasOwnProperty("quantizedStep")&&!(a.isInteger(h.quantizedStep)||h.quantizedStep&&a.isInteger(h.quantizedStep.low)&&a.isInteger(h.quantizedStep.high))?"quantizedStep: integer|Long expected":h.controlNumber!=null&&h.hasOwnProperty("controlNumber")&&!a.isInteger(h.controlNumber)?"controlNumber: integer expected":h.controlValue!=null&&h.hasOwnProperty("controlValue")&&!a.isInteger(h.controlValue)?"controlValue: integer expected":h.instrument!=null&&h.hasOwnProperty("instrument")&&!a.isInteger(h.instrument)?"instrument: integer expected":h.program!=null&&h.hasOwnProperty("program")&&!a.isInteger(h.program)?"program: integer expected":h.isDrum!=null&&h.hasOwnProperty("isDrum")&&typeof h.isDrum!="boolean"?"isDrum: boolean expected":null},m.fromObject=function(h){if(h instanceof l.tensorflow.magenta.NoteSequence.ControlChange)return h;var g=new l.tensorflow.magenta.NoteSequence.ControlChange;return h.time!=null&&(g.time=Number(h.time)),h.quantizedStep!=null&&(a.Long?(g.quantizedStep=a.Long.fromValue(h.quantizedStep)).unsigned=!1:typeof h.quantizedStep=="string"?g.quantizedStep=parseInt(h.quantizedStep,10):typeof h.quantizedStep=="number"?g.quantizedStep=h.quantizedStep:typeof h.quantizedStep=="object"&&(g.quantizedStep=new a.LongBits(h.quantizedStep.low>>>0,h.quantizedStep.high>>>0).toNumber())),h.controlNumber!=null&&(g.controlNumber=0|h.controlNumber),h.controlValue!=null&&(g.controlValue=0|h.controlValue),h.instrument!=null&&(g.instrument=0|h.instrument),h.program!=null&&(g.program=0|h.program),h.isDrum!=null&&(g.isDrum=!!h.isDrum),g},m.toObject=function(h,g){g||(g={});var x={};if(g.defaults)if(x.time=0,x.controlNumber=0,x.controlValue=0,x.instrument=0,x.program=0,x.isDrum=!1,a.Long){var w=new a.Long(0,0,!1);x.quantizedStep=g.longs===String?w.toString():g.longs===Number?w.toNumber():w}else x.quantizedStep=g.longs===String?"0":0;return h.time!=null&&h.hasOwnProperty("time")&&(x.time=g.json&&!isFinite(h.time)?String(h.time):h.time),h.controlNumber!=null&&h.hasOwnProperty("controlNumber")&&(x.controlNumber=h.controlNumber),h.controlValue!=null&&h.hasOwnProperty("controlValue")&&(x.controlValue=h.controlValue),h.instrument!=null&&h.hasOwnProperty("instrument")&&(x.instrument=h.instrument),h.program!=null&&h.hasOwnProperty("program")&&(x.program=h.program),h.isDrum!=null&&h.hasOwnProperty("isDrum")&&(x.isDrum=h.isDrum),h.quantizedStep!=null&&h.hasOwnProperty("quantizedStep")&&(typeof h.quantizedStep=="number"?x.quantizedStep=g.longs===String?String(h.quantizedStep):h.quantizedStep:x.quantizedStep=g.longs===String?a.Long.prototype.toString.call(h.quantizedStep):g.longs===Number?new a.LongBits(h.quantizedStep.low>>>0,h.quantizedStep.high>>>0).toNumber():h.quantizedStep),x},m.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},m}(),d.PartInfo=function(){function m(h){if(h)for(var g=Object.keys(h),x=0;x<g.length;++x)h[g[x]]!=null&&(this[g[x]]=h[g[x]])}return m.prototype.part=0,m.prototype.name="",m.create=function(h){return new m(h)},m.encode=function(h,g){return g||(g=c.create()),h.part!=null&&h.hasOwnProperty("part")&&g.uint32(8).int32(h.part),h.name!=null&&h.hasOwnProperty("name")&&g.uint32(18).string(h.name),g},m.encodeDelimited=function(h,g){return this.encode(h,g).ldelim()},m.decode=function(h,g){h instanceof i||(h=i.create(h));for(var x=g===void 0?h.len:h.pos+g,w=new l.tensorflow.magenta.NoteSequence.PartInfo;h.pos<x;){var I=h.uint32();switch(I>>>3){case 1:w.part=h.int32();break;case 2:w.name=h.string();break;default:h.skipType(7&I)}}return w},m.decodeDelimited=function(h){return h instanceof i||(h=new i(h)),this.decode(h,h.uint32())},m.verify=function(h){return typeof h!="object"||h===null?"object expected":h.part!=null&&h.hasOwnProperty("part")&&!a.isInteger(h.part)?"part: integer expected":h.name!=null&&h.hasOwnProperty("name")&&!a.isString(h.name)?"name: string expected":null},m.fromObject=function(h){if(h instanceof l.tensorflow.magenta.NoteSequence.PartInfo)return h;var g=new l.tensorflow.magenta.NoteSequence.PartInfo;return h.part!=null&&(g.part=0|h.part),h.name!=null&&(g.name=String(h.name)),g},m.toObject=function(h,g){g||(g={});var x={};return g.defaults&&(x.part=0,x.name=""),h.part!=null&&h.hasOwnProperty("part")&&(x.part=h.part),h.name!=null&&h.hasOwnProperty("name")&&(x.name=h.name),x},m.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},m}(),d.SourceInfo=function(){function m(h){if(h)for(var g=Object.keys(h),x=0;x<g.length;++x)h[g[x]]!=null&&(this[g[x]]=h[g[x]])}return m.prototype.sourceType=0,m.prototype.encodingType=0,m.prototype.parser=0,m.create=function(h){return new m(h)},m.encode=function(h,g){return g||(g=c.create()),h.sourceType!=null&&h.hasOwnProperty("sourceType")&&g.uint32(8).int32(h.sourceType),h.encodingType!=null&&h.hasOwnProperty("encodingType")&&g.uint32(16).int32(h.encodingType),h.parser!=null&&h.hasOwnProperty("parser")&&g.uint32(24).int32(h.parser),g},m.encodeDelimited=function(h,g){return this.encode(h,g).ldelim()},m.decode=function(h,g){h instanceof i||(h=i.create(h));for(var x=g===void 0?h.len:h.pos+g,w=new l.tensorflow.magenta.NoteSequence.SourceInfo;h.pos<x;){var I=h.uint32();switch(I>>>3){case 1:w.sourceType=h.int32();break;case 2:w.encodingType=h.int32();break;case 3:w.parser=h.int32();break;default:h.skipType(7&I)}}return w},m.decodeDelimited=function(h){return h instanceof i||(h=new i(h)),this.decode(h,h.uint32())},m.verify=function(h){if(typeof h!="object"||h===null)return"object expected";if(h.sourceType!=null&&h.hasOwnProperty("sourceType"))switch(h.sourceType){default:return"sourceType: enum value expected";case 0:case 1:case 2:}if(h.encodingType!=null&&h.hasOwnProperty("encodingType"))switch(h.encodingType){default:return"encodingType: enum value expected";case 0:case 1:case 2:case 3:case 4:}if(h.parser!=null&&h.hasOwnProperty("parser"))switch(h.parser){default:return"parser: enum value expected";case 0:case 1:case 2:case 3:case 4:case 5:case 6:}return null},m.fromObject=function(h){if(h instanceof l.tensorflow.magenta.NoteSequence.SourceInfo)return h;var g=new l.tensorflow.magenta.NoteSequence.SourceInfo;switch(h.sourceType){case"UNKNOWN_SOURCE_TYPE":case 0:g.sourceType=0;break;case"SCORE_BASED":case 1:g.sourceType=1;break;case"PERFORMANCE_BASED":case 2:g.sourceType=2}switch(h.encodingType){case"UNKNOWN_ENCODING_TYPE":case 0:g.encodingType=0;break;case"MUSIC_XML":case 1:g.encodingType=1;break;case"ABC":case 2:g.encodingType=2;break;case"MIDI":case 3:g.encodingType=3;break;case"MUSICNET":case 4:g.encodingType=4}switch(h.parser){case"UNKNOWN_PARSER":case 0:g.parser=0;break;case"MUSIC21":case 1:g.parser=1;break;case"PRETTY_MIDI":case 2:g.parser=2;break;case"MAGENTA_MUSIC_XML":case 3:g.parser=3;break;case"MAGENTA_MUSICNET":case 4:g.parser=4;break;case"MAGENTA_ABC":case 5:g.parser=5;break;case"TONEJS_MIDI_CONVERT":case 6:g.parser=6}return g},m.toObject=function(h,g){g||(g={});var x={};return g.defaults&&(x.sourceType=g.enums===String?"UNKNOWN_SOURCE_TYPE":0,x.encodingType=g.enums===String?"UNKNOWN_ENCODING_TYPE":0,x.parser=g.enums===String?"UNKNOWN_PARSER":0),h.sourceType!=null&&h.hasOwnProperty("sourceType")&&(x.sourceType=g.enums===String?l.tensorflow.magenta.NoteSequence.SourceInfo.SourceType[h.sourceType]:h.sourceType),h.encodingType!=null&&h.hasOwnProperty("encodingType")&&(x.encodingType=g.enums===String?l.tensorflow.magenta.NoteSequence.SourceInfo.EncodingType[h.encodingType]:h.encodingType),h.parser!=null&&h.hasOwnProperty("parser")&&(x.parser=g.enums===String?l.tensorflow.magenta.NoteSequence.SourceInfo.Parser[h.parser]:h.parser),x},m.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},m.SourceType=function(){var h={},g=Object.create(h);return g[h[0]="UNKNOWN_SOURCE_TYPE"]=0,g[h[1]="SCORE_BASED"]=1,g[h[2]="PERFORMANCE_BASED"]=2,g}(),m.EncodingType=function(){var h={},g=Object.create(h);return g[h[0]="UNKNOWN_ENCODING_TYPE"]=0,g[h[1]="MUSIC_XML"]=1,g[h[2]="ABC"]=2,g[h[3]="MIDI"]=3,g[h[4]="MUSICNET"]=4,g}(),m.Parser=function(){var h={},g=Object.create(h);return g[h[0]="UNKNOWN_PARSER"]=0,g[h[1]="MUSIC21"]=1,g[h[2]="PRETTY_MIDI"]=2,g[h[3]="MAGENTA_MUSIC_XML"]=3,g[h[4]="MAGENTA_MUSICNET"]=4,g[h[5]="MAGENTA_ABC"]=5,g[h[6]="TONEJS_MIDI_CONVERT"]=6,g}(),m}(),d.TextAnnotation=function(){function m(h){if(h)for(var g=Object.keys(h),x=0;x<g.length;++x)h[g[x]]!=null&&(this[g[x]]=h[g[x]])}return m.prototype.time=0,m.prototype.quantizedStep=a.Long?a.Long.fromBits(0,0,!1):0,m.prototype.text="",m.prototype.annotationType=0,m.create=function(h){return new m(h)},m.encode=function(h,g){return g||(g=c.create()),h.time!=null&&h.hasOwnProperty("time")&&g.uint32(9).double(h.time),h.text!=null&&h.hasOwnProperty("text")&&g.uint32(18).string(h.text),h.annotationType!=null&&h.hasOwnProperty("annotationType")&&g.uint32(24).int32(h.annotationType),h.quantizedStep!=null&&h.hasOwnProperty("quantizedStep")&&g.uint32(32).int64(h.quantizedStep),g},m.encodeDelimited=function(h,g){return this.encode(h,g).ldelim()},m.decode=function(h,g){h instanceof i||(h=i.create(h));for(var x=g===void 0?h.len:h.pos+g,w=new l.tensorflow.magenta.NoteSequence.TextAnnotation;h.pos<x;){var I=h.uint32();switch(I>>>3){case 1:w.time=h.double();break;case 4:w.quantizedStep=a.Long?h.int64().toNumber():h.int64();break;case 2:w.text=h.string();break;case 3:w.annotationType=h.int32();break;default:h.skipType(7&I)}}return w},m.decodeDelimited=function(h){return h instanceof i||(h=new i(h)),this.decode(h,h.uint32())},m.verify=function(h){if(typeof h!="object"||h===null)return"object expected";if(h.time!=null&&h.hasOwnProperty("time")&&typeof h.time!="number")return"time: number expected";if(h.quantizedStep!=null&&h.hasOwnProperty("quantizedStep")&&!(a.isInteger(h.quantizedStep)||h.quantizedStep&&a.isInteger(h.quantizedStep.low)&&a.isInteger(h.quantizedStep.high)))return"quantizedStep: integer|Long expected";if(h.text!=null&&h.hasOwnProperty("text")&&!a.isString(h.text))return"text: string expected";if(h.annotationType!=null&&h.hasOwnProperty("annotationType"))switch(h.annotationType){default:return"annotationType: enum value expected";case 0:case 1:case 2:}return null},m.fromObject=function(h){if(h instanceof l.tensorflow.magenta.NoteSequence.TextAnnotation)return h;var g=new l.tensorflow.magenta.NoteSequence.TextAnnotation;switch(h.time!=null&&(g.time=Number(h.time)),h.quantizedStep!=null&&(a.Long?(g.quantizedStep=a.Long.fromValue(h.quantizedStep)).unsigned=!1:typeof h.quantizedStep=="string"?g.quantizedStep=parseInt(h.quantizedStep,10):typeof h.quantizedStep=="number"?g.quantizedStep=h.quantizedStep:typeof h.quantizedStep=="object"&&(g.quantizedStep=new a.LongBits(h.quantizedStep.low>>>0,h.quantizedStep.high>>>0).toNumber())),h.text!=null&&(g.text=String(h.text)),h.annotationType){case"UNKNOWN":case 0:g.annotationType=0;break;case"CHORD_SYMBOL":case 1:g.annotationType=1;break;case"BEAT":case 2:g.annotationType=2}return g},m.toObject=function(h,g){g||(g={});var x={};if(g.defaults)if(x.time=0,x.text="",x.annotationType=g.enums===String?"UNKNOWN":0,a.Long){var w=new a.Long(0,0,!1);x.quantizedStep=g.longs===String?w.toString():g.longs===Number?w.toNumber():w}else x.quantizedStep=g.longs===String?"0":0;return h.time!=null&&h.hasOwnProperty("time")&&(x.time=g.json&&!isFinite(h.time)?String(h.time):h.time),h.text!=null&&h.hasOwnProperty("text")&&(x.text=h.text),h.annotationType!=null&&h.hasOwnProperty("annotationType")&&(x.annotationType=g.enums===String?l.tensorflow.magenta.NoteSequence.TextAnnotation.TextAnnotationType[h.annotationType]:h.annotationType),h.quantizedStep!=null&&h.hasOwnProperty("quantizedStep")&&(typeof h.quantizedStep=="number"?x.quantizedStep=g.longs===String?String(h.quantizedStep):h.quantizedStep:x.quantizedStep=g.longs===String?a.Long.prototype.toString.call(h.quantizedStep):g.longs===Number?new a.LongBits(h.quantizedStep.low>>>0,h.quantizedStep.high>>>0).toNumber():h.quantizedStep),x},m.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},m.TextAnnotationType=function(){var h={},g=Object.create(h);return g[h[0]="UNKNOWN"]=0,g[h[1]="CHORD_SYMBOL"]=1,g[h[2]="BEAT"]=2,g}(),m}(),d.QuantizationInfo=function(){function m(g){if(g)for(var x=Object.keys(g),w=0;w<x.length;++w)g[x[w]]!=null&&(this[x[w]]=g[x[w]])}var h;return m.prototype.stepsPerQuarter=0,m.prototype.stepsPerSecond=0,Object.defineProperty(m.prototype,"resolution",{get:a.oneOfGetter(h=["stepsPerQuarter","stepsPerSecond"]),set:a.oneOfSetter(h)}),m.create=function(g){return new m(g)},m.encode=function(g,x){return x||(x=c.create()),g.stepsPerQuarter!=null&&g.hasOwnProperty("stepsPerQuarter")&&x.uint32(8).int32(g.stepsPerQuarter),g.stepsPerSecond!=null&&g.hasOwnProperty("stepsPerSecond")&&x.uint32(16).int32(g.stepsPerSecond),x},m.encodeDelimited=function(g,x){return this.encode(g,x).ldelim()},m.decode=function(g,x){g instanceof i||(g=i.create(g));for(var w=x===void 0?g.len:g.pos+x,I=new l.tensorflow.magenta.NoteSequence.QuantizationInfo;g.pos<w;){var N=g.uint32();switch(N>>>3){case 1:I.stepsPerQuarter=g.int32();break;case 2:I.stepsPerSecond=g.int32();break;default:g.skipType(7&N)}}return I},m.decodeDelimited=function(g){return g instanceof i||(g=new i(g)),this.decode(g,g.uint32())},m.verify=function(g){if(typeof g!="object"||g===null)return"object expected";var x={};if(g.stepsPerQuarter!=null&&g.hasOwnProperty("stepsPerQuarter")&&(x.resolution=1,!a.isInteger(g.stepsPerQuarter)))return"stepsPerQuarter: integer expected";if(g.stepsPerSecond!=null&&g.hasOwnProperty("stepsPerSecond")){if(x.resolution===1)return"resolution: multiple values";if(x.resolution=1,!a.isInteger(g.stepsPerSecond))return"stepsPerSecond: integer expected"}return null},m.fromObject=function(g){if(g instanceof l.tensorflow.magenta.NoteSequence.QuantizationInfo)return g;var x=new l.tensorflow.magenta.NoteSequence.QuantizationInfo;return g.stepsPerQuarter!=null&&(x.stepsPerQuarter=0|g.stepsPerQuarter),g.stepsPerSecond!=null&&(x.stepsPerSecond=0|g.stepsPerSecond),x},m.toObject=function(g,x){x||(x={});var w={};return g.stepsPerQuarter!=null&&g.hasOwnProperty("stepsPerQuarter")&&(w.stepsPerQuarter=g.stepsPerQuarter,x.oneofs&&(w.resolution="stepsPerQuarter")),g.stepsPerSecond!=null&&g.hasOwnProperty("stepsPerSecond")&&(w.stepsPerSecond=g.stepsPerSecond,x.oneofs&&(w.resolution="stepsPerSecond")),w},m.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},m}(),d.SubsequenceInfo=function(){function m(h){if(h)for(var g=Object.keys(h),x=0;x<g.length;++x)h[g[x]]!=null&&(this[g[x]]=h[g[x]])}return m.prototype.startTimeOffset=0,m.prototype.endTimeOffset=0,m.create=function(h){return new m(h)},m.encode=function(h,g){return g||(g=c.create()),h.startTimeOffset!=null&&h.hasOwnProperty("startTimeOffset")&&g.uint32(9).double(h.startTimeOffset),h.endTimeOffset!=null&&h.hasOwnProperty("endTimeOffset")&&g.uint32(17).double(h.endTimeOffset),g},m.encodeDelimited=function(h,g){return this.encode(h,g).ldelim()},m.decode=function(h,g){h instanceof i||(h=i.create(h));for(var x=g===void 0?h.len:h.pos+g,w=new l.tensorflow.magenta.NoteSequence.SubsequenceInfo;h.pos<x;){var I=h.uint32();switch(I>>>3){case 1:w.startTimeOffset=h.double();break;case 2:w.endTimeOffset=h.double();break;default:h.skipType(7&I)}}return w},m.decodeDelimited=function(h){return h instanceof i||(h=new i(h)),this.decode(h,h.uint32())},m.verify=function(h){return typeof h!="object"||h===null?"object expected":h.startTimeOffset!=null&&h.hasOwnProperty("startTimeOffset")&&typeof h.startTimeOffset!="number"?"startTimeOffset: number expected":h.endTimeOffset!=null&&h.hasOwnProperty("endTimeOffset")&&typeof h.endTimeOffset!="number"?"endTimeOffset: number expected":null},m.fromObject=function(h){if(h instanceof l.tensorflow.magenta.NoteSequence.SubsequenceInfo)return h;var g=new l.tensorflow.magenta.NoteSequence.SubsequenceInfo;return h.startTimeOffset!=null&&(g.startTimeOffset=Number(h.startTimeOffset)),h.endTimeOffset!=null&&(g.endTimeOffset=Number(h.endTimeOffset)),g},m.toObject=function(h,g){g||(g={});var x={};return g.defaults&&(x.startTimeOffset=0,x.endTimeOffset=0),h.startTimeOffset!=null&&h.hasOwnProperty("startTimeOffset")&&(x.startTimeOffset=g.json&&!isFinite(h.startTimeOffset)?String(h.startTimeOffset):h.startTimeOffset),h.endTimeOffset!=null&&h.hasOwnProperty("endTimeOffset")&&(x.endTimeOffset=g.json&&!isFinite(h.endTimeOffset)?String(h.endTimeOffset):h.endTimeOffset),x},m.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},m}(),d.SectionAnnotation=function(){function m(h){if(h)for(var g=Object.keys(h),x=0;x<g.length;++x)h[g[x]]!=null&&(this[g[x]]=h[g[x]])}return m.prototype.time=0,m.prototype.sectionId=a.Long?a.Long.fromBits(0,0,!1):0,m.create=function(h){return new m(h)},m.encode=function(h,g){return g||(g=c.create()),h.time!=null&&h.hasOwnProperty("time")&&g.uint32(9).double(h.time),h.sectionId!=null&&h.hasOwnProperty("sectionId")&&g.uint32(32).int64(h.sectionId),g},m.encodeDelimited=function(h,g){return this.encode(h,g).ldelim()},m.decode=function(h,g){h instanceof i||(h=i.create(h));for(var x=g===void 0?h.len:h.pos+g,w=new l.tensorflow.magenta.NoteSequence.SectionAnnotation;h.pos<x;){var I=h.uint32();switch(I>>>3){case 1:w.time=h.double();break;case 4:w.sectionId=a.Long?h.int64().toNumber():h.int64();break;default:h.skipType(7&I)}}return w},m.decodeDelimited=function(h){return h instanceof i||(h=new i(h)),this.decode(h,h.uint32())},m.verify=function(h){return typeof h!="object"||h===null?"object expected":h.time!=null&&h.hasOwnProperty("time")&&typeof h.time!="number"?"time: number expected":h.sectionId!=null&&h.hasOwnProperty("sectionId")&&!(a.isInteger(h.sectionId)||h.sectionId&&a.isInteger(h.sectionId.low)&&a.isInteger(h.sectionId.high))?"sectionId: integer|Long expected":null},m.fromObject=function(h){if(h instanceof l.tensorflow.magenta.NoteSequence.SectionAnnotation)return h;var g=new l.tensorflow.magenta.NoteSequence.SectionAnnotation;return h.time!=null&&(g.time=Number(h.time)),h.sectionId!=null&&(a.Long?(g.sectionId=a.Long.fromValue(h.sectionId)).unsigned=!1:typeof h.sectionId=="string"?g.sectionId=parseInt(h.sectionId,10):typeof h.sectionId=="number"?g.sectionId=h.sectionId:typeof h.sectionId=="object"&&(g.sectionId=new a.LongBits(h.sectionId.low>>>0,h.sectionId.high>>>0).toNumber())),g},m.toObject=function(h,g){g||(g={});var x={};if(g.defaults)if(x.time=0,a.Long){var w=new a.Long(0,0,!1);x.sectionId=g.longs===String?w.toString():g.longs===Number?w.toNumber():w}else x.sectionId=g.longs===String?"0":0;return h.time!=null&&h.hasOwnProperty("time")&&(x.time=g.json&&!isFinite(h.time)?String(h.time):h.time),h.sectionId!=null&&h.hasOwnProperty("sectionId")&&(typeof h.sectionId=="number"?x.sectionId=g.longs===String?String(h.sectionId):h.sectionId:x.sectionId=g.longs===String?a.Long.prototype.toString.call(h.sectionId):g.longs===Number?new a.LongBits(h.sectionId.low>>>0,h.sectionId.high>>>0).toNumber():h.sectionId),x},m.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},m}(),d.Section=function(){function m(g){if(g)for(var x=Object.keys(g),w=0;w<x.length;++w)g[x[w]]!=null&&(this[x[w]]=g[x[w]])}var h;return m.prototype.sectionId=a.Long?a.Long.fromBits(0,0,!1):0,m.prototype.sectionGroup=null,Object.defineProperty(m.prototype,"sectionType",{get:a.oneOfGetter(h=["sectionId","sectionGroup"]),set:a.oneOfSetter(h)}),m.create=function(g){return new m(g)},m.encode=function(g,x){return x||(x=c.create()),g.sectionId!=null&&g.hasOwnProperty("sectionId")&&x.uint32(8).int64(g.sectionId),g.sectionGroup!=null&&g.hasOwnProperty("sectionGroup")&&l.tensorflow.magenta.NoteSequence.SectionGroup.encode(g.sectionGroup,x.uint32(18).fork()).ldelim(),x},m.encodeDelimited=function(g,x){return this.encode(g,x).ldelim()},m.decode=function(g,x){g instanceof i||(g=i.create(g));for(var w=x===void 0?g.len:g.pos+x,I=new l.tensorflow.magenta.NoteSequence.Section;g.pos<w;){var N=g.uint32();switch(N>>>3){case 1:I.sectionId=a.Long?g.int64().toNumber():g.int64();break;case 2:I.sectionGroup=l.tensorflow.magenta.NoteSequence.SectionGroup.decode(g,g.uint32());break;default:g.skipType(7&N)}}return I},m.decodeDelimited=function(g){return g instanceof i||(g=new i(g)),this.decode(g,g.uint32())},m.verify=function(g){if(typeof g!="object"||g===null)return"object expected";var x={};if(g.sectionId!=null&&g.hasOwnProperty("sectionId")&&(x.sectionType=1,!(a.isInteger(g.sectionId)||g.sectionId&&a.isInteger(g.sectionId.low)&&a.isInteger(g.sectionId.high))))return"sectionId: integer|Long expected";if(g.sectionGroup!=null&&g.hasOwnProperty("sectionGroup")){if(x.sectionType===1)return"sectionType: multiple values";x.sectionType=1;var w=l.tensorflow.magenta.NoteSequence.SectionGroup.verify(g.sectionGroup);if(w)return"sectionGroup."+w}return null},m.fromObject=function(g){if(g instanceof l.tensorflow.magenta.NoteSequence.Section)return g;var x=new l.tensorflow.magenta.NoteSequence.Section;if(g.sectionId!=null&&(a.Long?(x.sectionId=a.Long.fromValue(g.sectionId)).unsigned=!1:typeof g.sectionId=="string"?x.sectionId=parseInt(g.sectionId,10):typeof g.sectionId=="number"?x.sectionId=g.sectionId:typeof g.sectionId=="object"&&(x.sectionId=new a.LongBits(g.sectionId.low>>>0,g.sectionId.high>>>0).toNumber())),g.sectionGroup!=null){if(typeof g.sectionGroup!="object")throw TypeError(".tensorflow.magenta.NoteSequence.Section.sectionGroup: object expected");x.sectionGroup=l.tensorflow.magenta.NoteSequence.SectionGroup.fromObject(g.sectionGroup)}return x},m.toObject=function(g,x){x||(x={});var w={};return g.sectionId!=null&&g.hasOwnProperty("sectionId")&&(typeof g.sectionId=="number"?w.sectionId=x.longs===String?String(g.sectionId):g.sectionId:w.sectionId=x.longs===String?a.Long.prototype.toString.call(g.sectionId):x.longs===Number?new a.LongBits(g.sectionId.low>>>0,g.sectionId.high>>>0).toNumber():g.sectionId,x.oneofs&&(w.sectionType="sectionId")),g.sectionGroup!=null&&g.hasOwnProperty("sectionGroup")&&(w.sectionGroup=l.tensorflow.magenta.NoteSequence.SectionGroup.toObject(g.sectionGroup,x),x.oneofs&&(w.sectionType="sectionGroup")),w},m.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},m}(),d.SectionGroup=function(){function m(h){if(this.sections=[],h)for(var g=Object.keys(h),x=0;x<g.length;++x)h[g[x]]!=null&&(this[g[x]]=h[g[x]])}return m.prototype.sections=a.emptyArray,m.prototype.numTimes=0,m.create=function(h){return new m(h)},m.encode=function(h,g){if(g||(g=c.create()),h.sections!=null&&h.sections.length)for(var x=0;x<h.sections.length;++x)l.tensorflow.magenta.NoteSequence.Section.encode(h.sections[x],g.uint32(10).fork()).ldelim();return h.numTimes!=null&&h.hasOwnProperty("numTimes")&&g.uint32(16).int32(h.numTimes),g},m.encodeDelimited=function(h,g){return this.encode(h,g).ldelim()},m.decode=function(h,g){h instanceof i||(h=i.create(h));for(var x=g===void 0?h.len:h.pos+g,w=new l.tensorflow.magenta.NoteSequence.SectionGroup;h.pos<x;){var I=h.uint32();switch(I>>>3){case 1:w.sections&&w.sections.length||(w.sections=[]),w.sections.push(l.tensorflow.magenta.NoteSequence.Section.decode(h,h.uint32()));break;case 2:w.numTimes=h.int32();break;default:h.skipType(7&I)}}return w},m.decodeDelimited=function(h){return h instanceof i||(h=new i(h)),this.decode(h,h.uint32())},m.verify=function(h){if(typeof h!="object"||h===null)return"object expected";if(h.sections!=null&&h.hasOwnProperty("sections")){if(!Array.isArray(h.sections))return"sections: array expected";for(var g=0;g<h.sections.length;++g){var x=l.tensorflow.magenta.NoteSequence.Section.verify(h.sections[g]);if(x)return"sections."+x}}return h.numTimes!=null&&h.hasOwnProperty("numTimes")&&!a.isInteger(h.numTimes)?"numTimes: integer expected":null},m.fromObject=function(h){if(h instanceof l.tensorflow.magenta.NoteSequence.SectionGroup)return h;var g=new l.tensorflow.magenta.NoteSequence.SectionGroup;if(h.sections){if(!Array.isArray(h.sections))throw TypeError(".tensorflow.magenta.NoteSequence.SectionGroup.sections: array expected");g.sections=[];for(var x=0;x<h.sections.length;++x){if(typeof h.sections[x]!="object")throw TypeError(".tensorflow.magenta.NoteSequence.SectionGroup.sections: object expected");g.sections[x]=l.tensorflow.magenta.NoteSequence.Section.fromObject(h.sections[x])}}return h.numTimes!=null&&(g.numTimes=0|h.numTimes),g},m.toObject=function(h,g){g||(g={});var x={};if((g.arrays||g.defaults)&&(x.sections=[]),g.defaults&&(x.numTimes=0),h.sections&&h.sections.length){x.sections=[];for(var w=0;w<h.sections.length;++w)x.sections[w]=l.tensorflow.magenta.NoteSequence.Section.toObject(h.sections[w],g)}return h.numTimes!=null&&h.hasOwnProperty("numTimes")&&(x.numTimes=h.numTimes),x},m.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},m}(),d}(),s.SequenceMetadata=function(){function d(f){if(this.genre=[],this.composers=[],f)for(var y=Object.keys(f),m=0;m<y.length;++m)f[y[m]]!=null&&(this[y[m]]=f[y[m]])}return d.prototype.title="",d.prototype.artist="",d.prototype.genre=a.emptyArray,d.prototype.composers=a.emptyArray,d.create=function(f){return new d(f)},d.encode=function(f,y){if(y||(y=c.create()),f.title!=null&&f.hasOwnProperty("title")&&y.uint32(10).string(f.title),f.artist!=null&&f.hasOwnProperty("artist")&&y.uint32(18).string(f.artist),f.genre!=null&&f.genre.length)for(var m=0;m<f.genre.length;++m)y.uint32(26).string(f.genre[m]);if(f.composers!=null&&f.composers.length)for(m=0;m<f.composers.length;++m)y.uint32(34).string(f.composers[m]);return y},d.encodeDelimited=function(f,y){return this.encode(f,y).ldelim()},d.decode=function(f,y){f instanceof i||(f=i.create(f));for(var m=y===void 0?f.len:f.pos+y,h=new l.tensorflow.magenta.SequenceMetadata;f.pos<m;){var g=f.uint32();switch(g>>>3){case 1:h.title=f.string();break;case 2:h.artist=f.string();break;case 3:h.genre&&h.genre.length||(h.genre=[]),h.genre.push(f.string());break;case 4:h.composers&&h.composers.length||(h.composers=[]),h.composers.push(f.string());break;default:f.skipType(7&g)}}return h},d.decodeDelimited=function(f){return f instanceof i||(f=new i(f)),this.decode(f,f.uint32())},d.verify=function(f){if(typeof f!="object"||f===null)return"object expected";if(f.title!=null&&f.hasOwnProperty("title")&&!a.isString(f.title))return"title: string expected";if(f.artist!=null&&f.hasOwnProperty("artist")&&!a.isString(f.artist))return"artist: string expected";if(f.genre!=null&&f.hasOwnProperty("genre")){if(!Array.isArray(f.genre))return"genre: array expected";for(var y=0;y<f.genre.length;++y)if(!a.isString(f.genre[y]))return"genre: string[] expected"}if(f.composers!=null&&f.hasOwnProperty("composers")){if(!Array.isArray(f.composers))return"composers: array expected";for(y=0;y<f.composers.length;++y)if(!a.isString(f.composers[y]))return"composers: string[] expected"}return null},d.fromObject=function(f){if(f instanceof l.tensorflow.magenta.SequenceMetadata)return f;var y=new l.tensorflow.magenta.SequenceMetadata;if(f.title!=null&&(y.title=String(f.title)),f.artist!=null&&(y.artist=String(f.artist)),f.genre){if(!Array.isArray(f.genre))throw TypeError(".tensorflow.magenta.SequenceMetadata.genre: array expected");y.genre=[];for(var m=0;m<f.genre.length;++m)y.genre[m]=String(f.genre[m])}if(f.composers){if(!Array.isArray(f.composers))throw TypeError(".tensorflow.magenta.SequenceMetadata.composers: array expected");for(y.composers=[],m=0;m<f.composers.length;++m)y.composers[m]=String(f.composers[m])}return y},d.toObject=function(f,y){y||(y={});var m={};if((y.arrays||y.defaults)&&(m.genre=[],m.composers=[]),y.defaults&&(m.title="",m.artist=""),f.title!=null&&f.hasOwnProperty("title")&&(m.title=f.title),f.artist!=null&&f.hasOwnProperty("artist")&&(m.artist=f.artist),f.genre&&f.genre.length){m.genre=[];for(var h=0;h<f.genre.length;++h)m.genre[h]=f.genre[h]}if(f.composers&&f.composers.length)for(m.composers=[],h=0;h<f.composers.length;++h)m.composers[h]=f.composers[h];return m},d.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},d}(),s.VelocityRange=function(){function d(f){if(f)for(var y=Object.keys(f),m=0;m<y.length;++m)f[y[m]]!=null&&(this[y[m]]=f[y[m]])}return d.prototype.min=0,d.prototype.max=0,d.create=function(f){return new d(f)},d.encode=function(f,y){return y||(y=c.create()),f.min!=null&&f.hasOwnProperty("min")&&y.uint32(8).int32(f.min),f.max!=null&&f.hasOwnProperty("max")&&y.uint32(16).int32(f.max),y},d.encodeDelimited=function(f,y){return this.encode(f,y).ldelim()},d.decode=function(f,y){f instanceof i||(f=i.create(f));for(var m=y===void 0?f.len:f.pos+y,h=new l.tensorflow.magenta.VelocityRange;f.pos<m;){var g=f.uint32();switch(g>>>3){case 1:h.min=f.int32();break;case 2:h.max=f.int32();break;default:f.skipType(7&g)}}return h},d.decodeDelimited=function(f){return f instanceof i||(f=new i(f)),this.decode(f,f.uint32())},d.verify=function(f){return typeof f!="object"||f===null?"object expected":f.min!=null&&f.hasOwnProperty("min")&&!a.isInteger(f.min)?"min: integer expected":f.max!=null&&f.hasOwnProperty("max")&&!a.isInteger(f.max)?"max: integer expected":null},d.fromObject=function(f){if(f instanceof l.tensorflow.magenta.VelocityRange)return f;var y=new l.tensorflow.magenta.VelocityRange;return f.min!=null&&(y.min=0|f.min),f.max!=null&&(y.max=0|f.max),y},d.toObject=function(f,y){y||(y={});var m={};return y.defaults&&(m.min=0,m.max=0),f.min!=null&&f.hasOwnProperty("min")&&(m.min=f.min),f.max!=null&&f.hasOwnProperty("max")&&(m.max=f.max),m},d.prototype.toJSON=function(){return this.constructor.toObject(this,o.util.toJSONOptions)},d}(),s),r),n.exports=l},function(n,e,t){t.r(e),t.d(e,"converterFromSpec",function(){return d}),t.d(e,"DataConverter",function(){return f}),t.d(e,"DrumsConverter",function(){return y}),t.d(e,"DrumRollConverter",function(){return m}),t.d(e,"DrumsOneHotConverter",function(){return h}),t.d(e,"MelodyConverter",function(){return g}),t.d(e,"MelodyRhythmConverter",function(){return w}),t.d(e,"MelodyShapeConverter",function(){return I}),t.d(e,"TrioConverter",function(){return N}),t.d(e,"TrioRhythmConverter",function(){return A}),t.d(e,"MultitrackConverter",function(){return T}),t.d(e,"GrooveConverter",function(){return P});var s=t(2),r=t(10),o=t(8);t.d(e,"DEFAULT_DRUM_PITCH_CLASSES",function(){return o.DEFAULT_DRUM_PITCH_CLASSES});var i=t(12),c=t(23),a=t(29),l=t(13);function d(O){switch(O.type){case"MelodyConverter":return new g(O.args);case"MelodyRhythmConverter":return new w(O.args);case"MelodyShapeConverter":return new I(O.args);case"DrumsConverter":return new y(O.args);case"DrumRollConverter":return new m(O.args);case"TrioConverter":return new N(O.args);case"TrioRhythmConverter":return new A(O.args);case"DrumsOneHotConverter":return new h(O.args);case"MultitrackConverter":return new T(O.args);case"GrooveConverter":return new P(O.args);default:throw new Error("Unknown DataConverter type: "+O)}}class f{constructor(F){this.NUM_SPLITS=0,this.SEGMENTED_BY_TRACK=!1,this.numSteps=F.numSteps,this.numSegments=F.numSegments}tensorSteps(F){return s.scalar(F.shape[0],"int32")}}class y extends f{constructor(F){super(F),this.pitchClasses=F.pitchClasses||o.DEFAULT_DRUM_PITCH_CLASSES,this.pitchToClass=new Map;for(let G=0;G<this.pitchClasses.length;++G)this.pitchClasses[G].forEach(U=>{this.pitchToClass.set(U,G)});this.depth=this.pitchClasses.length+1}toTensor(F){l.assertIsQuantizedSequence(F);const G=this.numSteps||F.totalQuantizedSteps,U=s.buffer([G,this.pitchClasses.length+1],"int32");for(let Q=0;Q<G;++Q)U.set(1,Q,-1);return F.notes.forEach(Q=>{U.set(1,Q.quantizedStartStep,this.pitchToClass.get(Q.pitch)),U.set(0,Q.quantizedStartStep,-1)}),U.toTensor()}async toNoteSequence(F,G,U){const Q=l.createQuantizedNoteSequence(G,U),ne=F.argMax(1),J=await ne.data();ne.dispose();for(let oe=0;oe<J.length;++oe)for(let le=0;le<this.pitchClasses.length;le++)J[oe]>>le&1&&Q.notes.push(r.a.Note.create({pitch:this.pitchClasses[le][0],quantizedStartStep:oe,quantizedEndStep:oe+1,isDrum:!0}));return Q.totalQuantizedSteps=J.length,Q}}class m extends y{async toNoteSequence(F,G,U){const Q=l.createQuantizedNoteSequence(G,U),ne=await F.data();for(let J=0;J<F.shape[0];++J){const oe=ne.slice(J*this.pitchClasses.length,(J+1)*this.pitchClasses.length);for(let le=0;le<oe.length;++le)oe[le]&&Q.notes.push(r.a.Note.create({pitch:this.pitchClasses[le][0],quantizedStartStep:J,quantizedEndStep:J+1,isDrum:!0}))}return Q.totalQuantizedSteps=F.shape[0],Q}}class h extends y{constructor(F){super(F),this.depth=Math.pow(2,this.pitchClasses.length)}toTensor(F){l.assertIsRelativeQuantizedSequence(F);const G=this.numSteps||F.totalQuantizedSteps,U=Array(G).fill(0);for(const{pitch:Q,quantizedStartStep:ne}of F.notes)U[ne]+=Math.pow(2,this.pitchToClass.get(Q));return s.tidy(()=>s.oneHot(s.tensor1d(U,"int32"),this.depth))}}class g extends f{constructor(F){super(F),this.NOTE_OFF=1,this.FIRST_PITCH=2,this.minPitch=F.minPitch,this.maxPitch=F.maxPitch,this.ignorePolyphony=F.ignorePolyphony,this.depth=F.maxPitch-F.minPitch+1+this.FIRST_PITCH}toTensor(F){const G=c.Melody.fromNoteSequence(F,this.minPitch,this.maxPitch,this.ignorePolyphony,this.numSteps);return s.tidy(()=>s.oneHot(s.tensor(G.events,[G.events.length],"int32"),this.depth))}async toNoteSequence(F,G,U){const Q=F.argMax(1),ne=await Q.data();return Q.dispose(),new c.Melody(ne,this.minPitch,this.maxPitch).toNoteSequence(G,U)}}class x extends f{constructor(F,G){super(F),this.minPitch=F.minPitch,this.maxPitch=F.maxPitch,this.ignorePolyphony=F.ignorePolyphony,this.melodyControl=G,this.depth=G.depth}toTensor(F){const G=c.Melody.fromNoteSequence(F,this.minPitch,this.maxPitch,this.ignorePolyphony,this.numSteps);return this.melodyControl.extract(G)}}class w extends x{constructor(F){super(F,new c.MelodyRhythm)}async toNoteSequence(F,G,U){const Q=l.createQuantizedNoteSequence(G,U),ne=await F.data();for(let J=0;J<ne.length;++J)ne[J]&&Q.notes.push(r.a.Note.create({pitch:o.DEFAULT_DRUM_PITCH_CLASSES[1][0],quantizedStartStep:J,quantizedEndStep:J+1,isDrum:!0}));return Q.totalQuantizedSteps=ne.length,Q}}class I extends x{constructor(F){super(F,new c.MelodyShape)}async toNoteSequence(F,G,U){const Q=l.createQuantizedNoteSequence(G,U),ne=F.argMax(1),J=await ne.data();ne.dispose();let oe=Math.round((this.maxPitch+this.minPitch)/2);for(let le=0;le<J.length;++le){switch(J[le]){case 0:oe-=1,oe<this.minPitch&&(oe=this.minPitch,i.log("Pitch range exceeded when creating NoteSequence from shape.","MelodyShapeConverter"));break;case 2:oe+=1,oe>this.maxPitch&&(oe=this.maxPitch,i.log("Pitch range exceeded when creating NoteSequence from shape.","MelodyShapeConverter"))}Q.notes.push(r.a.Note.create({pitch:oe,quantizedStartStep:le,quantizedEndStep:le+1}))}return Q.totalQuantizedSteps=J.length,Q}}class N extends f{constructor(F){super(F),this.NUM_SPLITS=3,this.MEL_PROG_RANGE=[0,31],this.BASS_PROG_RANGE=[32,39],F.melArgs.numSteps=F.numSteps,F.bassArgs.numSteps=F.numSteps,F.drumsArgs.numSteps=F.numSteps,this.melConverter=new g(F.melArgs),this.bassConverter=new g(F.bassArgs),this.drumsConverter=new h(F.drumsArgs),this.depth=this.melConverter.depth+this.bassConverter.depth+this.drumsConverter.depth}toTensor(F){l.assertIsQuantizedSequence(F);const G=l.clone(F),U=l.clone(F),Q=l.clone(F);return G.notes=F.notes.filter(ne=>!ne.isDrum&&ne.program>=this.MEL_PROG_RANGE[0]&&ne.program<=this.MEL_PROG_RANGE[1]),U.notes=F.notes.filter(ne=>!ne.isDrum&&ne.program>=this.BASS_PROG_RANGE[0]&&ne.program<=this.BASS_PROG_RANGE[1]),Q.notes=F.notes.filter(ne=>ne.isDrum),s.tidy(()=>s.concat([this.melConverter.toTensor(G),this.bassConverter.toTensor(U),this.drumsConverter.toTensor(Q)],-1))}async toNoteSequence(F,G,U){const Q=s.split(F,[this.melConverter.depth,this.bassConverter.depth,this.drumsConverter.depth],-1),ne=await this.melConverter.toNoteSequence(Q[0],G,U);ne.notes.forEach(le=>{le.instrument=0,le.program=0});const J=await this.bassConverter.toNoteSequence(Q[1],G,U);ne.notes.push(...J.notes.map(le=>(le.instrument=1,le.program=this.BASS_PROG_RANGE[0],le)));const oe=await this.drumsConverter.toNoteSequence(Q[2],G,U);return ne.notes.push(...oe.notes.map(le=>(le.instrument=2,le))),Q.forEach(le=>le.dispose()),ne}}class A extends f{constructor(F){super(F),this.NUM_SPLITS=3,this.trioConverter=new N(F),this.depth=3}toTensor(F){return s.tidy(()=>{const G=this.trioConverter.toTensor(F),U=s.split(G,[this.trioConverter.melConverter.depth,this.trioConverter.bassConverter.depth,this.trioConverter.drumsConverter.depth],1),Q=s.argMax(U[0],1),ne=s.argMax(U[1],1),J=s.argMax(U[2],1),oe=s.greater(Q,1),le=s.greater(ne,1),ge=s.greater(J,0);return s.stack([oe,le,ge],1)})}async toNoteSequence(F,G,U){const Q=s.split(F,3,1),ne=await Promise.all(Q.map(oe=>oe.data())),J=l.createQuantizedNoteSequence(G,U);for(let oe=0;oe<this.numSteps;++oe)ne[0][oe]&&J.notes.push(r.a.Note.create({pitch:72,quantizedStartStep:oe,quantizedEndStep:oe+1,instrument:0,program:0})),ne[1][oe]&&J.notes.push(r.a.Note.create({pitch:36,quantizedStartStep:oe,quantizedEndStep:oe+1,instrument:1,program:32})),ne[2][oe]&&J.notes.push(r.a.Note.create({pitch:o.DEFAULT_DRUM_PITCH_CLASSES[1][0],quantizedStartStep:oe,quantizedEndStep:oe+1,instrument:2,isDrum:!0}));return J.totalQuantizedSteps=this.numSteps,J}}class T extends f{constructor(F){super(F),this.SEGMENTED_BY_TRACK=!0,this.stepsPerQuarter=F.stepsPerQuarter,this.totalSteps=F.totalSteps,this.numVelocityBins=F.numVelocityBins,this.minPitch=F.minPitch?F.minPitch:o.MIN_MIDI_PITCH,this.maxPitch=F.maxPitch?F.maxPitch:o.MAX_MIDI_PITCH,this.numPitches=this.maxPitch-this.minPitch+1,this.performanceEventDepth=2*this.numPitches+this.totalSteps+this.numVelocityBins,this.numPrograms=o.MAX_MIDI_PROGRAM-o.MIN_MIDI_PROGRAM+2,this.endToken=this.performanceEventDepth+this.numPrograms,this.depth=this.endToken+1,this.endTensor=s.tidy(()=>s.oneHot(s.tensor1d([this.endToken],"int32"),this.depth).as1D())}trackToTensor(F){const G=this.numSteps/this.numSegments;let U;if(F){for(;F.events.length>G-2;)F.events.pop();U=s.buffer([F.events.length+2],"int32"),U.set(this.performanceEventDepth+(F.isDrum?this.numPrograms-1:F.program),0),F.events.forEach((Q,ne)=>{switch(Q.type){case"note-on":U.set(Q.pitch-this.minPitch,ne+1);break;case"note-off":U.set(this.numPitches+Q.pitch-this.minPitch,ne+1);break;case"time-shift":U.set(2*this.numPitches+Q.steps-1,ne+1);break;case"velocity-change":U.set(2*this.numPitches+this.totalSteps+Q.velocityBin-1,ne+1);break;default:throw new Error("Unrecognized performance event: "+Q)}}),U.set(this.endToken,F.events.length+1)}else U=s.buffer([1],"int32",new Int32Array([this.endToken]));return s.tidy(()=>{const Q=s.oneHot(U.toTensor(),this.depth);return Q.pad([[0,G-Q.shape[0]],[0,0]])})}toTensor(F){if(l.assertIsRelativeQuantizedSequence(F),F.quantizationInfo.stepsPerQuarter!==this.stepsPerQuarter)throw new Error(`Steps per quarter note mismatch: ${F.quantizationInfo.stepsPerQuarter} != ${this.stepsPerQuarter}`);const G=l.clone(F);G.notes=F.notes.filter(ne=>ne.pitch>=this.minPitch&&ne.pitch<=this.maxPitch);const U=new Set(G.notes.map(ne=>ne.instrument)),Q=Array.from(U).map(ne=>a.Performance.fromNoteSequence(G,this.totalSteps,this.numVelocityBins,ne)).sort((ne,J)=>J.isDrum?-1:ne.isDrum?1:ne.program-J.program);for(;Q.length>this.numSegments;)Q.pop();for(Q.forEach(ne=>ne.setNumSteps(this.totalSteps));Q.length<this.numSegments;)Q.push(void 0);return s.tidy(()=>s.concat(Q.map(ne=>this.trackToTensor(ne)),0))}tokensToTrack(F){const G=F.indexOf(this.endToken),U=G>=0?G:F.length,Q=F.slice(0,U),ne=Q.filter(te=>te<this.performanceEventDepth),J=Q.filter(te=>te>=this.performanceEventDepth),[oe,le]=J.length?J[0]-this.performanceEventDepth<this.numPrograms-1?[J[0]-this.performanceEventDepth,!1]:[0,!0]:[0,!1],ge=Array.from(ne).map(te=>{if(te<this.numPitches)return{type:"note-on",pitch:this.minPitch+te};if(te<2*this.numPitches)return{type:"note-off",pitch:this.minPitch+te-this.numPitches};if(te<2*this.numPitches+this.totalSteps)return{type:"time-shift",steps:te-2*this.numPitches+1};if(te<2*this.numPitches+this.totalSteps+this.numVelocityBins)return{type:"velocity-change",velocityBin:te-2*this.numPitches-this.totalSteps+1};throw new Error("Invalid performance event token: "+te)});return new a.Performance(ge,this.totalSteps,this.numVelocityBins,oe,le)}async toNoteSequence(F,G=this.stepsPerQuarter,U){const Q=l.createQuantizedNoteSequence(G,U);Q.totalQuantizedSteps=this.totalSteps;const ne=s.tidy(()=>s.split(F.argMax(1),this.numSegments));return(await Promise.all(ne.map(async J=>{const oe=await J.data(),le=this.tokensToTrack(oe);return J.dispose(),le}))).forEach((J,oe)=>{J.setNumSteps(this.totalSteps),Q.notes.push(...J.toNoteSequence(oe).notes)}),Q}}class P extends f{constructor(F){super(F),this.TAPIFY_CHANNEL=3,this.stepsPerQuarter=F.stepsPerQuarter||o.DEFAULT_STEPS_PER_QUARTER,this.pitchClasses=F.pitchClasses||o.DEFAULT_DRUM_PITCH_CLASSES,this.pitchToClass=new Map;for(let G=0;G<this.pitchClasses.length;++G)this.pitchClasses[G].forEach(U=>{this.pitchToClass.set(U,G)});this.humanize=F.humanize||!1,this.tapify=F.tapify||!1,this.splitInstruments=F.splitInstruments||!1,this.depth=3}toTensor(F){const G=l.isRelativeQuantizedSequence(F)?F:l.quantizeNoteSequence(F,this.stepsPerQuarter),U=this.numSteps,Q=G.tempos&&G.tempos.length?G.tempos[0].qpm:o.DEFAULT_QUARTERS_PER_MINUTE,ne=60/Q/this.stepsPerQuarter,J=[];for(let ue=0;ue<U;++ue)J.push(new Map);G.notes.forEach(ue=>{if(!this.tapify&&!this.pitchToClass.has(ue.pitch))return;const Te=ue.quantizedStartStep;if(Te>=J.length)throw Error(`Model does not support sequences with more than ${U} steps (${U*ne} seconds at qpm ${Q}).`);const Ce=this.tapify?this.TAPIFY_CHANNEL:this.pitchToClass.get(ue.pitch);(!J[Te].has(Ce)||J[Te].get(Ce).velocity<ue.velocity)&&J[Te].set(Ce,ue)});const oe=this.pitchClasses.length,le=s.buffer([U,oe]),ge=s.buffer([U,oe]),te=s.buffer([U,oe]);function ce(ue){if(ue.startTime===void 0)return 0;const Te=ue.startTime;return 2*(ue.quantizedStartStep*ne-Te)/ne}for(let ue=0;ue<U;++ue)for(let Te=0;Te<oe;++Te){const Ce=J[ue].get(Te);le.set(Ce?1:0,ue,Te),this.humanize||this.tapify||ge.set(Ce?Ce.velocity/o.MAX_MIDI_VELOCITY:0,ue,Te),this.humanize||te.set(Ce?ce(Ce):0,ue,Te)}return s.tidy(()=>{const ue=le.toTensor(),Te=ge.toTensor(),Ce=te.toTensor(),Ne=this.splitInstruments?U*oe:U;return s.concat([ue.as2D(Ne,-1),Te.as2D(Ne,-1),Ce.as2D(Ne,-1)],1)})}async toNoteSequence(F,G,U=o.DEFAULT_QUARTERS_PER_MINUTE){if(G&&G!==this.stepsPerQuarter)throw Error("`stepsPerQuarter` is set by the model.");G=this.stepsPerQuarter;const Q=this.splitInstruments?F.shape[0]/this.pitchClasses.length:F.shape[0],ne=60/U/this.stepsPerQuarter,J=r.a.create({totalTime:Q*ne,tempos:[{qpm:U}]}),oe=await F.data();function le(te,ce,ue){return Math.min(Math.max(te,ce),ue)}const ge=this.pitchClasses.length;for(let te=0;te<Q;++te){const ce=oe.slice(te*ge*this.depth,(te+1)*ge*this.depth);for(let ue=0;ue<ge;++ue){const Te=ce[this.splitInstruments?ue*this.depth:ue],Ce=ce[this.splitInstruments?ue*this.depth+1:ge+ue],Ne=ce[this.splitInstruments?ue*this.depth+2:2*ge+ue];if(Te>.5){const Re=le(Math.round(Ce*o.MAX_MIDI_VELOCITY),o.MIN_MIDI_VELOCITY,o.MAX_MIDI_VELOCITY),Ae=le(Ne/2,-.5,.5);J.notes.push(r.a.Note.create({pitch:this.pitchClasses[ue][0],startTime:(te-Ae)*ne,endTime:(te-Ae+1)*ne,velocity:Re,isDrum:!0}))}}}return J}}},function(n,e,t){t.r(e),t.d(e,"ChordQuality",function(){return qs}),t.d(e,"ChordSymbolException",function(){return yr}),t.d(e,"ChordEncodingException",function(){return Mr}),t.d(e,"ChordSymbols",function(){return ts}),t.d(e,"ChordEncoder",function(){return Gn}),t.d(e,"chordEncoderFromType",function(){return _r}),t.d(e,"MajorMinorChordEncoder",function(){return Ws}),t.d(e,"TriadChordEncoder",function(){return cr}),t.d(e,"PitchChordEncoder",function(){return br});var s={};t.r(s),t.d(s,"names",function(){return c}),t.d(s,"tokenize",function(){return f}),t.d(s,"props",function(){return h}),t.d(s,"name",function(){return g}),t.d(s,"pc",function(){return x}),t.d(s,"midi",function(){return w}),t.d(s,"midiToFreq",function(){return I}),t.d(s,"freq",function(){return N}),t.d(s,"freqToMidi",function(){return P}),t.d(s,"chroma",function(){return O}),t.d(s,"oct",function(){return F}),t.d(s,"stepToLetter",function(){return G}),t.d(s,"altToAcc",function(){return Q}),t.d(s,"from",function(){return ne}),t.d(s,"build",function(){return J}),t.d(s,"fromMidi",function(){return oe}),t.d(s,"simplify",function(){return le}),t.d(s,"enharmonic",function(){return ge});var r={};t.r(r),t.d(r,"names",function(){return tn}),t.d(r,"props",function(){return on}),t.d(r,"intervals",function(){return An}),t.d(r,"notes",function(){return zn}),t.d(r,"exists",function(){return Kn}),t.d(r,"supersets",function(){return Qn}),t.d(r,"subsets",function(){return $s}),t.d(r,"tokenize",function(){return Bn});var o=t(2),i="C C# Db D D# Eb E F F# Gb G G# Ab A A# Bb B".split(" "),c=function(ft){return typeof ft!="string"?i.slice():i.filter(function(Ze){var Ct=Ze[1]||" ";return ft.indexOf(Ct)!==-1})},a=c(" #"),l=c(" b"),d=/^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\d*)\s*(.*)$/;function f(ft){typeof ft!="string"&&(ft="");var Ze=d.exec(ft);return[Ze[1].toUpperCase(),Ze[2].replace(/x/g,"##"),Ze[3],Ze[4]]}var y=Object.freeze({pc:null,name:null,step:null,alt:null,oct:null,octStr:null,chroma:null,midi:null,freq:null}),m=[0,2,4,5,7,9,11],h=function(ft,Ze){return Ze===void 0&&(Ze={}),function(Ct){return Ze[Ct]||(Ze[Ct]=ft(Ct))}}(function(ft){var Ze=f(ft);if(Ze[0]===""||Ze[3]!=="")return y;var Ct=Ze[0],Ge=Ze[1],jt=Ze[2],sn={letter:Ct,acc:Ge,octStr:jt,pc:Ct+Ge,name:Ct+Ge+jt,step:(Ct.charCodeAt(0)+3)%7,alt:Ge[0]==="b"?-Ge.length:Ge.length,oct:jt.length?+jt:null,chroma:0,midi:null,freq:null};return sn.chroma=(m[sn.step]+sn.alt+120)%12,sn.midi=sn.oct!==null?m[sn.step]+sn.alt+12*(sn.oct+1):null,sn.freq=I(sn.midi),Object.freeze(sn)}),g=function(ft){return h(ft).name},x=function(ft){return h(ft).pc},w=function(ft){if(typeof ft!="number"&&typeof ft!="string")return null;var Ze,Ct=h(ft).midi,Ge=Ct||Ct===0?Ct:+ft;return(Ze=Ge)>=0&&Ze<=127?Ge:null},I=function(ft,Ze){return Ze===void 0&&(Ze=440),typeof ft=="number"?Math.pow(2,(ft-69)/12)*Ze:null},N=function(ft){return h(ft).freq||I(ft)},A=Math.log(2),T=Math.log(440),P=function(ft){var Ze=12*(Math.log(ft)-T)/A+69;return Math.round(100*Ze)/100},O=function(ft){return h(ft).chroma},F=function(ft){return h(ft).oct},G=function(ft){return"CDEFGAB"[ft]},U=function(ft,Ze){return Array(Ze+1).join(ft)},Q=function(ft){return function(Ze,Ct){return typeof Ze!="number"?"":Ct(Ze)}(ft,function(Ze){return Ze<0?U("b",-Ze):U("#",Ze)})},ne=function(ft,Ze){ft===void 0&&(ft={}),Ze===void 0&&(Ze=null);var Ct=Ze?Object.assign({},h(Ze),ft):ft,Ge=Ct.step,jt=Ct.alt,sn=Ct.oct;if(typeof Ge!="number")return null;var hn=G(Ge);if(!hn)return null;var Jt=hn+Q(jt);return sn||sn===0?Jt+sn:Jt},J=ne;function oe(ft,Ze){return Ze===void 0&&(Ze=!1),ft=Math.round(ft),(Ze===!0?a:l)[ft%12]+(Math.floor(ft/12)-1)}var le=function(ft,Ze){Ze===void 0&&(Ze=!0);var Ct=h(ft),Ge=Ct.alt,jt=Ct.chroma,sn=Ct.midi;if(jt===null)return null;var hn=Ze===!1?Ge<0:Ge>0;return sn===null?x(oe(jt,hn)):oe(sn,hn)},ge=function(ft){return le(ft,!1)},te=new RegExp("^([-+]?\\d+)(d{1,4}|m|M|P|A{1,4})|(AA|A|P|M|m|d|dd)([-+]?\\d+)$"),ce=[0,2,4,5,7,9,11],ue=Object.freeze({name:null,num:null,q:null,step:null,alt:null,dir:null,type:null,simple:null,semitones:null,chroma:null,oct:null}),Te=function(ft){return(Math.abs(ft)-1)%7},Ce=function(ft){var Ze=function(sn){var hn=te.exec(""+sn);return hn===null?null:hn[1]?[hn[1],hn[2]]:[hn[4],hn[3]]}(ft);if(Ze===null)return ue;var Ct,Ge,jt={num:0,q:"d",name:"",type:"M",step:0,dir:-1,simple:1,alt:0,oct:0,semitones:0,chroma:0,ic:0};return jt.num=+Ze[0],jt.q=Ze[1],jt.step=Te(jt.num),jt.type="PMMPPMM"[jt.step],jt.type==="M"&&jt.q==="P"?ue:(jt.name=""+jt.num+jt.q,jt.dir=jt.num<0?-1:1,jt.simple=jt.num===8||jt.num===-8?jt.num:jt.dir*(jt.step+1),jt.alt=(Ct=jt.type,(Ge=jt.q)==="M"&&Ct==="M"||Ge==="P"&&Ct==="P"?0:Ge==="m"&&Ct==="M"?-1:/^A+$/.test(Ge)?Ge.length:/^d+$/.test(Ge)?Ct==="P"?-Ge.length:-Ge.length-1:null),jt.oct=Math.floor((Math.abs(jt.num)-1)/7),jt.semitones=jt.dir*(ce[jt.step]+jt.alt+12*jt.oct),jt.chroma=(jt.dir*(ce[jt.step]+jt.alt)%12+12)%12,Object.freeze(jt))},Ne={};function Re(ft){return typeof ft!="string"?ue:Ne[ft]||(Ne[ft]=Ce(ft))}var Ae=[0,2,4,-1,1,3,5],we=Ae.map(function(ft){return Math.floor(7*ft/12)}),Le=[3,0,4,1,5,2,6],pe=function(ft,Ze,Ct){var Ge=Le[function(sn){var hn=(sn+1)%7;return hn<0?7+hn:hn}(ft)],jt=Math.floor((ft+1)/7);return Ze===void 0?{step:Ge,alt:jt,dir:Ct}:{step:Ge,alt:jt,oct:Ze+4*jt+we[Ge],dir:Ct}},B=function(ft){return function(Ze,Ct){return Ct===void 0&&(Ct={}),function(Ge){return Ct[Ge]||(Ct[Ge]=Ze(Ge))}}(function(Ze){var Ct=ft(Ze);return Ct.name===null?null:function(Ge){var jt=Ge.step,sn=Ge.alt,hn=Ge.oct,Jt=Ge.dir;Jt===void 0&&(Jt=1);var In=Ae[jt]+7*sn;return hn===null?[Jt*In]:[Jt*In,Jt*(hn-we[jt]-4*sn)]}(Ct)})},D=B(h),H=B(Re);function he(ft,Ze){if(arguments.length===1)return function(sn){return he(ft,sn)};var Ct=D(ft),Ge=H(Ze);if(Ct===null||Ge===null)return null;var jt=Ct.length===1?[Ct[0]+Ge[0]]:[Ct[0]+Ge[0],Ct[1]+Ge[1]];return J(pe(jt[0],jt[1]))}var j=t(64),ee=t(65),ye=function(ft){return O(ft)||function(Ze){return Re(Ze).chroma}(ft)||0},Oe=function(ft){return parseInt(ze(ft),2)};function ze(ft){if(ot(ft))return ft;if(!Array.isArray(ft))return"";var Ze=[0,0,0,0,0,0,0,0,0,0,0,0];return ft.map(ye).forEach(function(Ct){Ze[Ct]=1}),Ze.join("")}var Xe=/^[01]{12}$/;function ot(ft){return Xe.test(ft)}function st(ft,Ze){return arguments.length>1?st(ft)(Ze):(ft=Oe(ft),function(Ct){return(Ct=Oe(Ct))!==ft&&(Ct&ft)===Ct})}function pt(ft,Ze){return arguments.length>1?pt(ft)(Ze):(ft=Oe(ft),function(Ct){return(Ct=Oe(Ct))!==ft&&(Ct|ft)===Ct})}var gt,ht,Tt=function(ft){var Ze=Object.keys(ft).sort(),Ct=[],Ge=[],jt=function(Jt,In,Hn){Ct[Jt]=In,Ge[Hn]=Ge[Hn]||[],Ge[Hn].push(Jt)};Ze.forEach(function(Jt){var In=ft[Jt][0].split(" "),Hn=ft[Jt][1],me=ze(In);jt(Jt,In,me),Hn&&Hn.forEach(function(Ie){return jt(Ie,In,me)})});var sn=Object.keys(Ct).sort(),hn=function(Jt){return Ct[Jt]};return hn.names=function(Jt){return typeof Jt=="string"?(Ge[Jt]||[]).slice():(Jt===!0?sn:Ze).slice()},hn},xt=Tt(j),Pt=Tt(ee);gt=xt,ht=Pt,(function(ft){return gt(ft)||ht(ft)}).names=function(ft){return gt.names(ft).concat(ht.names(ft))},Object.freeze({name:null,intervals:[],names:[],chroma:null,setnum:null}),xt.names;var tn=Pt.names,ln=Object.freeze({name:null,names:[],intervals:[],chroma:null,setnum:null}),on=function(ft,Ze){return Ze===void 0&&(Ze={}),function(Ct){return Ze[Ct]||(Ze[Ct]=ft(Ct))}}(function(ft){var Ze=Pt(ft);if(!Ze)return ln;var Ct={intervals:Ze,name:ft};return Ct.chroma=ze(Ze),Ct.setnum=parseInt(Ct.chroma,2),Ct.names=Pt.names(Ct.chroma),Ct}),An=function(ft){return on(Bn(ft)[1]).intervals};function zn(ft,Ze){if(Ze)return on(Ze).intervals.map(he(ft));var Ct=Bn(ft),Ge=Ct[0],jt=Ct[1];return on(jt).intervals.map(he(Ge))}var Kn=function(ft){return Pt(Bn(ft)[1])!==void 0},Qn=function(ft){if(!An(ft).length)return[];var Ze=pt(An(ft));return Pt.names().filter(function(Ct){return Ze(Pt(Ct))})},$s=function(ft){var Ze=st(An(ft));return Pt.names().filter(function(Ct){return Ze(Pt(Ct))})},Ps=/^(6|64|7|9|11|13)$/;function Bn(ft){var Ze=f(ft);return Ze[0]===""?["",ft]:Ze[0]==="A"&&Ze[3]==="ug"?["","aug"]:Ps.test(Ze[2])?[Ze[0]+Ze[1],Ze[2]+Ze[3]]:[Ze[0]+Ze[1]+Ze[2],Ze[3]]}var Rn=t(8);const gr=[["1P","3M","5P"],["1P","3m","5P"],["1P","3M","5A"],["1P","3m","5d"]];var qs;(function(ft){ft[ft.Major=0]="Major",ft[ft.Minor=1]="Minor",ft[ft.Augmented=2]="Augmented",ft[ft.Diminished=3]="Diminished",ft[ft.Other=4]="Other"})(qs||(qs={}));class yr extends Error{constructor(Ze){super(Ze),Object.setPrototypeOf(this,new.target.prototype)}}class Mr extends Error{constructor(Ze){super(Ze),Object.setPrototypeOf(this,new.target.prototype)}}class ts{static pitches(Ze){if(!r.tokenize(Ze)[0]||!r.exists(Ze))throw new yr("Unrecognized chord symbol: "+Ze);return r.notes(Ze).map(s.chroma)}static root(Ze){const Ct=r.tokenize(Ze)[0];if(!Ct)throw new yr("Chord symbol has unknown root: "+Ze);return s.chroma(Ct)}static quality(Ze){if(!r.exists(Ze))throw new yr("Unrecognized chord symbol: "+Ze);const Ct=r.intervals(Ze),Ge=gr.map(hn=>hn.every(Jt=>Ct.includes(Jt))),jt=Ge.indexOf(!0),sn=Ge.lastIndexOf(!0);return jt>=0&&jt===sn?jt:qs.Other}}class Gn{encodeProgression(Ze,Ct){const Ge=Ze.map(sn=>this.encode(sn)),jt=Array.from(Array(Ct).keys()).map(sn=>Math.floor(sn*Ge.length/Ct));return o.stack(jt.map(sn=>Ge[sn]))}}function _r(ft){switch(ft){case"MajorMinorChordEncoder":return new Ws;case"TriadChordEncoder":return new cr;case"PitchChordEncoder":return new br;default:throw new Error("Unknown chord encoder type: "+ft)}}class Ws extends Gn{constructor(){super(...arguments),this.depth=1+2*Rn.NUM_PITCH_CLASSES}index(Ze){if(Ze===Rn.NO_CHORD)return 0;const Ct=ts.root(Ze),Ge=1+ts.quality(Ze)*Rn.NUM_PITCH_CLASSES+Ct;if(Ge>=this.depth)throw new Mr("Chord is neither major nor minor: "+Ze);return Ge}encode(Ze){return o.tidy(()=>o.oneHot(o.tensor1d([this.index(Ze)],"int32"),this.depth).as1D())}}class cr extends Gn{constructor(){super(...arguments),this.depth=1+4*Rn.NUM_PITCH_CLASSES}index(Ze){if(Ze===Rn.NO_CHORD)return 0;const Ct=ts.root(Ze),Ge=1+ts.quality(Ze)*Rn.NUM_PITCH_CLASSES+Ct;if(Ge>=this.depth)throw new Mr("Chord is not a standard triad: "+Ze);return Ge}encode(Ze){return o.tidy(()=>o.oneHot(o.tensor1d([this.index(Ze)],"int32"),this.depth).as1D())}}class br extends Gn{constructor(){super(...arguments),this.depth=1+3*Rn.NUM_PITCH_CLASSES}encode(Ze){return o.tidy(()=>{if(Ze===Rn.NO_CHORD)return o.oneHot(o.tensor1d([0],"int32"),this.depth).as1D();const Ct=ts.root(Ze),Ge=o.oneHot(o.tensor1d([Ct],"int32"),Rn.NUM_PITCH_CLASSES).as1D(),jt=o.buffer([Rn.NUM_PITCH_CLASSES]);ts.pitches(Ze).forEach(Jt=>jt.set(1,Jt));const sn=jt.toTensor().as1D(),hn=Ge;return o.concat1d([o.tensor1d([0]),Ge,sn,hn])})}}},function(n,e,t){(function(s){var r=t(46),o=t(11);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i=Object(o.b)();i.registerFlag("DEBUG",()=>!1,c=>{c&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),i.registerFlag("IS_BROWSER",()=>r.isBrowser()),i.registerFlag("IS_NODE",()=>s!==void 0&&s.versions!==void 0&&s.versions.node!==void 0),i.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),i.registerFlag("PROD",()=>!1),i.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>i.getBool("DEBUG")),i.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),i.registerFlag("IS_TEST",()=>!1)}).call(this,t(44))},function(n,e,t){t.d(e,"a",function(){return s}),t.d(e,"b",function(){return r});class s{constructor(c,a){this.backend=c,this.dataMover=a,this.data=new WeakMap,this.dataIdsCount=0}get(c){return this.data.has(c)||this.dataMover.moveData(this.backend,c),this.data.get(c)}set(c,a){this.dataIdsCount++,this.data.set(c,a)}has(c){return this.data.has(c)}delete(c){return this.dataIdsCount--,this.data.delete(c)}numDataIds(){return this.dataIdsCount}}class r{time(c){return o("time")}read(c){return o("read")}readSync(c){return o("readSync")}numDataIds(){return o("numDataIds")}disposeData(c){return o("disposeData")}write(c,a,l){return o("write")}move(c,a,l,d){return o("move")}memory(){return o("memory")}floatPrecision(){return o("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}batchMatMul(c,a,l,d){return o("batchMatMul")}fusedBatchMatMul({a:c,b:a,transposeA:l,transposeB:d,bias:f,activation:y,preluActivationWeights:m}){return o("fusedBatchMatMul")}slice(c,a,l){return o("slice")}stridedSlice(c,a,l,d){return o("stridedSlice")}unstack(c,a){return o("unstack")}reverse(c,a){return o("reverse")}concat(c,a){return o("concat")}neg(c){return o("neg")}add(c,a){return o("add")}addN(c){return o("addN")}subtract(c,a){return o("subtract")}multiply(c,a){return o("multiply")}realDivide(c,a){return o("realDivide")}floorDiv(c,a){return o("floorDiv")}sum(c,a){return o("sum")}prod(c,a){return o("prod")}unsortedSegmentSum(c,a,l){return o("unsortedSegmentSum")}argMin(c,a){return o("argMin")}argMax(c,a){return o("argMax")}equal(c,a){return o("equal")}notEqual(c,a){return o("notEqual")}less(c,a){return o("less")}lessEqual(c,a){return o("lessEqual")}greater(c,a){return o("greater")}greaterEqual(c,a){return o("greaterEqual")}logicalNot(c){return o("logicalNot")}logicalAnd(c,a){return o("logicalAnd")}logicalOr(c,a){return o("logicalOr")}where(c){return o("where")}select(c,a,l){return o("select")}topk(c,a,l){return o("topk")}min(c,a){return o("min")}minimum(c,a){return o("minimum")}mod(c,a){return o("mod")}max(c,a){return o("max")}maximum(c,a){return o("maximum")}all(c,a){return o("all")}any(c,a){return o("any")}squaredDifference(c,a){return o("squaredDifference")}ceil(c){return o("ceil")}floor(c){return o("floor")}round(c){return o("round")}sign(c){return o("sign")}isNaN(c){return o("isNaN")}isInf(c){return o("isInf")}isFinite(c){return o("isFinite")}pow(c,a){return o("pow")}exp(c){return o("exp")}expm1(c){return o("expm1")}softmax(c,a){return o("softmax")}log(c){return o("log")}log1p(c){return o("log1p")}sqrt(c){return o("sqrt")}rsqrt(c){return o("rsqrt")}square(c){return o("square")}reciprocal(c){return o("reciprocal")}relu(c){return o("relu")}relu6(c){return o("relu6")}prelu(c,a){return o("prelu")}elu(c){return o("elu")}eluDer(c,a){return o("eluDer")}selu(c){return o("selu")}int(c){return o("int")}clip(c,a,l){return o("clip")}abs(c){return o("abs")}complexAbs(c){return o("complexAbs")}sigmoid(c){return o("sigmoid")}softplus(c){return o("softplus")}sin(c){return o("sin")}cos(c){return o("cos")}tan(c){return o("tan")}asin(c){return o("asin")}acos(c){return o("acos")}atan(c){return o("atan")}atan2(c,a){return o("atan2")}sinh(c){return o("sinh")}cosh(c){return o("cosh")}tanh(c){return o("tanh")}asinh(c){return o("asinh")}acosh(c){return o("acosh")}atanh(c){return o("atanh")}erf(c){return o("erf")}step(c,a){return o("step")}fusedConv2d({input:c,filter:a,convInfo:l,bias:d,activation:f,preluActivationWeights:y}){return o("fusedConv2d")}conv2d(c,a,l){return o("conv2d")}conv2dDerInput(c,a,l){return o("conv2dDerInput")}conv2dDerFilter(c,a,l){return o("conv2dDerFilter")}fusedDepthwiseConv2D({input:c,filter:a,convInfo:l,bias:d,activation:f,preluActivationWeights:y}){return o("fusedDepthwiseConv2D")}depthwiseConv2D(c,a,l){return o("depthwiseConv2D")}depthwiseConv2DDerInput(c,a,l){return o("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(c,a,l){return o("depthwiseConv2DDerFilter")}conv3d(c,a,l){return o("conv3d")}conv3dDerInput(c,a,l){return o("conv3dDerInput")}conv3dDerFilter(c,a,l){return o("conv3dDerFilter")}maxPool(c,a){return o("maxPool")}maxPoolBackprop(c,a,l,d){return o("maxPoolBackprop")}avgPool(c,a){return o("avgPool")}avgPoolBackprop(c,a,l){return o("avgPoolBackprop")}avgPool3d(c,a){return o("avgPool3d")}avgPool3dBackprop(c,a,l){return o("avgPool3dBackprop")}maxPool3d(c,a){return o("maxPool3d")}maxPool3dBackprop(c,a,l,d){return o("maxPool3dBackprop")}reshape(c,a){return o("reshape")}cast(c,a){return o("cast")}tile(c,a){return o("tile")}pad(c,a,l){return o("pad")}transpose(c,a){return o("transpose")}gather(c,a,l){return o("gather")}gatherND(c,a){return o("gatherND")}scatterND(c,a,l){return o("scatterND")}batchToSpaceND(c,a,l){return o("batchToSpaceND")}spaceToBatchND(c,a,l){return o("spaceToBatchND")}resizeBilinear(c,a,l,d){return o("resizeBilinear")}resizeBilinearBackprop(c,a,l){return o("resizeBilinearBackprop")}resizeNearestNeighbor(c,a,l,d){return o("resizeNearestNeighbor")}resizeNearestNeighborBackprop(c,a,l){return o("resizeNearestNeighborBackprop")}batchNorm(c,a,l,d,f,y){return o("batchNorm")}localResponseNormalization4D(c,a,l,d,f){return o("localResponseNormalization4D")}LRNGrad(c,a,l,d,f,y,m){return o("LRNGrad")}multinomial(c,a,l,d){return o("multinomial")}oneHot(c,a,l,d){return o("oneHot")}cumsum(c,a,l,d){return o("cumsum")}nonMaxSuppression(c,a,l,d,f){return o("nonMaxSuppression")}fft(c){return o("fft")}ifft(c){return o("ifft")}complex(c,a){return o("complex")}real(c){return o("real")}imag(c){return o("imag")}cropAndResize(c,a,l,d,f,y){return o("cropAndResize")}depthToSpace(c,a,l){return o("depthToSpace")}split(c,a,l){return o("split")}sparseToDense(c,a,l,d){return o("sparseToDense")}diag(c){return o("diag")}fill(c,a,l){return o("fill")}onesLike(c){return o("onesLike")}zerosLike(c){return o("zerosLike")}linspace(c,a,l){return o("linspace")}dispose(){return o("dispose")}}function o(i){throw new Error(`'${i}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},function(n,e,t){(function(s,r){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let o;function i(){if(o==null){let a;if(typeof window<"u")a=window;else if(s!==void 0)a=s;else if(r!==void 0)a=r;else{if(typeof self>"u")throw new Error("Could not find a global object");a=self}o=a}return o}function c(a,l){const d=function(){const f=i();return f._tfGlobals==null&&(f._tfGlobals=new Map),f._tfGlobals}();if(d.has(a))return d.get(a);{const f=l();return d.set(a,f),d.get(a)}}t.d(e,"b",function(){return i}),t.d(e,"a",function(){return c})}).call(this,t(21),t(44))},function(n,e,t){t.d(e,"a",function(){return s});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(n,e,t){t.d(e,"a",function(){return l}),t.d(e,"b",function(){return i}),t.d(e,"c",function(){return c});var s=t(2),r=t(20),o=t(25);function i(d,f=0){return s.tidy(()=>{let y=s.mul(d,s.pow(2,f));return y=y.clipByValue(0,Object(r.g)(110).dataSync()[0]),y})}function c(d,f,y){return d.splice(y),function(m,h){const g=[],x=Math.floor(h/m.length),w=h%m.length;for(let N=0;N<m.length;N++){g.push(m[N]);for(let A=1;A<x;A++)g.push(-1);N<w&&g.push(-1)}let I=-1;for(let N=0;N<g.length;N++)if(g[N]!==-1){let A=g[N];const T=I>=0?g[I]:0;I!==-1&&(A-=g[I]);for(let P=I+1;P<N;P++)g[P]=T+A*(P-I)/(N-I);I=N}for(let N=I+1;N<g.length;N++)g[N]=I>=0?g[N-1]:0;return g}(d,f)}function a(d){const f=d*o.f+o.e;return 10*Math.pow(2,1*f/12)}async function l(d,f,y=o.a){const m=[],h=[],g=f.length,x=s.tensor(f),w=512*Math.ceil(g/512),I=x.pad([[0,w-g]]),N=I.size/16e3,A=await d.execute({input_audio_samples:I});let T=await A[0].data();const P=await A[1].data();if(32*(P.length-1)/1e3===N){let O=20;for(let F=0;F<P.length;++F){const G=1-T[F];if(h.push(G),G>=o.a)O=a(P[F]),m.push(O);else{const U=s.truncatedNormal([1],0,o.d),Q=1-await U.array();m.push(O*Q),U.dispose()}}}else{const O=w/512+1,F=new Float32Array(O);T=new Float32Array(O);for(let U=0;U<w;U+=w/4){const Q=I.slice([U],[w/4]),ne=await d.execute({input_audio_samples:Q}),J=await ne[0].data(),oe=await ne[1].data(),le=Math.floor(U/512);T.set(J,le),F.set(oe,le),Q.dispose(),ne[0].dispose(),ne[1].dispose()}let G=20;for(let U=0;U<F.length;++U){const Q=1-T[U];if(h.push(Q),Q>=y)G=a(F[U]),m.push(G);else{const ne=s.truncatedNormal([1],0,o.d),J=1-await ne.array();m.push(G*J),ne.dispose()}}}return A[0].dispose(),A[1].dispose(),x.dispose(),I.dispose(),{pitches:m,confidences:h}}},function(n,e,t){function s(r){if(this.size=0|r,this.size<=1||(this.size&this.size-1)!=0)throw new Error("FFT size must be a power of two and bigger than 1");this._csize=r<<1;for(var o=new Array(2*this.size),i=0;i<o.length;i+=2){const y=Math.PI*i/this.size;o[i]=Math.cos(y),o[i+1]=-Math.sin(y)}this.table=o;for(var c=0,a=1;this.size>a;a<<=1)c++;this._width=c%2==0?c-1:c,this._bitrev=new Array(1<<this._width);for(var l=0;l<this._bitrev.length;l++){this._bitrev[l]=0;for(var d=0;d<this._width;d+=2){var f=this._width-d-2;this._bitrev[l]|=(l>>>d&3)<<f}}this._out=null,this._data=null,this._inv=0}n.exports=s,s.prototype.fromComplexArray=function(r,o){for(var i=o||new Array(r.length>>>1),c=0;c<r.length;c+=2)i[c>>>1]=r[c];return i},s.prototype.createComplexArray=function(){const r=new Array(this._csize);for(var o=0;o<r.length;o++)r[o]=0;return r},s.prototype.toComplexArray=function(r,o){for(var i=o||this.createComplexArray(),c=0;c<i.length;c+=2)i[c]=r[c>>>1],i[c+1]=0;return i},s.prototype.completeSpectrum=function(r){for(var o=this._csize,i=o>>>1,c=2;c<i;c+=2)r[o-c]=r[c],r[o-c+1]=-r[c+1]},s.prototype.transform=function(r,o){if(r===o)throw new Error("Input and output buffers must be different");this._out=r,this._data=o,this._inv=0,this._transform4(),this._out=null,this._data=null},s.prototype.realTransform=function(r,o){if(r===o)throw new Error("Input and output buffers must be different");this._out=r,this._data=o,this._inv=0,this._realTransform4(),this._out=null,this._data=null},s.prototype.inverseTransform=function(r,o){if(r===o)throw new Error("Input and output buffers must be different");this._out=r,this._data=o,this._inv=1,this._transform4();for(var i=0;i<r.length;i++)r[i]/=this.size;this._out=null,this._data=null},s.prototype._transform4=function(){var r,o,i=this._out,c=this._csize,a=1<<this._width,l=c/a<<1,d=this._bitrev;if(l===4)for(r=0,o=0;r<c;r+=l,o++){const w=d[o];this._singleTransform2(r,w,a)}else for(r=0,o=0;r<c;r+=l,o++){const w=d[o];this._singleTransform4(r,w,a)}var f=this._inv?-1:1,y=this.table;for(a>>=2;a>=2;a>>=2){var m=(l=c/a<<1)>>>2;for(r=0;r<c;r+=l)for(var h=r+m,g=r,x=0;g<h;g+=2,x+=a){const w=g,I=w+m,N=I+m,A=N+m,T=i[w],P=i[w+1],O=i[I],F=i[I+1],G=i[N],U=i[N+1],Q=i[A],ne=i[A+1],J=T,oe=P,le=y[x],ge=f*y[x+1],te=O*le-F*ge,ce=O*ge+F*le,ue=y[2*x],Te=f*y[2*x+1],Ce=G*ue-U*Te,Ne=G*Te+U*ue,Re=y[3*x],Ae=f*y[3*x+1],we=Q*Re-ne*Ae,Le=Q*Ae+ne*Re,pe=J+Ce,B=oe+Ne,D=J-Ce,H=oe-Ne,he=te+we,j=ce+Le,ee=f*(te-we),ye=f*(ce-Le),Oe=pe+he,ze=B+j,Xe=pe-he,ot=B-j,st=D+ye,pt=H-ee,gt=D-ye,ht=H+ee;i[w]=Oe,i[w+1]=ze,i[I]=st,i[I+1]=pt,i[N]=Xe,i[N+1]=ot,i[A]=gt,i[A+1]=ht}}},s.prototype._singleTransform2=function(r,o,i){const c=this._out,a=this._data,l=a[o],d=a[o+1],f=a[o+i],y=a[o+i+1],m=l+f,h=d+y,g=l-f,x=d-y;c[r]=m,c[r+1]=h,c[r+2]=g,c[r+3]=x},s.prototype._singleTransform4=function(r,o,i){const c=this._out,a=this._data,l=this._inv?-1:1,d=2*i,f=3*i,y=a[o],m=a[o+1],h=a[o+i],g=a[o+i+1],x=a[o+d],w=a[o+d+1],I=a[o+f],N=a[o+f+1],A=y+x,T=m+w,P=y-x,O=m-w,F=h+I,G=g+N,U=l*(h-I),Q=l*(g-N),ne=A+F,J=T+G,oe=P+Q,le=O-U,ge=A-F,te=T-G,ce=P-Q,ue=O+U;c[r]=ne,c[r+1]=J,c[r+2]=oe,c[r+3]=le,c[r+4]=ge,c[r+5]=te,c[r+6]=ce,c[r+7]=ue},s.prototype._realTransform4=function(){var r,o,i=this._out,c=this._csize,a=1<<this._width,l=c/a<<1,d=this._bitrev;if(l===4)for(r=0,o=0;r<c;r+=l,o++){const on=d[o];this._singleRealTransform2(r,on>>>1,a>>>1)}else for(r=0,o=0;r<c;r+=l,o++){const on=d[o];this._singleRealTransform4(r,on>>>1,a>>>1)}var f=this._inv?-1:1,y=this.table;for(a>>=2;a>=2;a>>=2){var m=(l=c/a<<1)>>>1,h=m>>>1,g=h>>>1;for(r=0;r<c;r+=l)for(var x=0,w=0;x<=g;x+=2,w+=a){var I=r+x,N=I+h,A=N+h,T=A+h,P=i[I],O=i[I+1],F=i[N],G=i[N+1],U=i[A],Q=i[A+1],ne=i[T],J=i[T+1],oe=P,le=O,ge=y[w],te=f*y[w+1],ce=F*ge-G*te,ue=F*te+G*ge,Te=y[2*w],Ce=f*y[2*w+1],Ne=U*Te-Q*Ce,Re=U*Ce+Q*Te,Ae=y[3*w],we=f*y[3*w+1],Le=ne*Ae-J*we,pe=ne*we+J*Ae,B=oe+Ne,D=le+Re,H=oe-Ne,he=le-Re,j=ce+Le,ee=ue+pe,ye=f*(ce-Le),Oe=f*(ue-pe),ze=B+j,Xe=D+ee,ot=H+Oe,st=he-ye;if(i[I]=ze,i[I+1]=Xe,i[N]=ot,i[N+1]=st,x!==0){if(x!==g){var pt=H+-f*Oe,gt=-he+-f*ye,ht=B+-f*j,Tt=-D- -f*ee,xt=r+h-x,Pt=r+m-x;i[xt]=pt,i[xt+1]=gt,i[Pt]=ht,i[Pt+1]=Tt}}else{var tn=B-j,ln=D-ee;i[A]=tn,i[A+1]=ln}}}},s.prototype._singleRealTransform2=function(r,o,i){const c=this._out,a=this._data,l=a[o],d=a[o+i],f=l+d,y=l-d;c[r]=f,c[r+1]=0,c[r+2]=y,c[r+3]=0},s.prototype._singleRealTransform4=function(r,o,i){const c=this._out,a=this._data,l=this._inv?-1:1,d=2*i,f=3*i,y=a[o],m=a[o+i],h=a[o+d],g=a[o+f],x=y+h,w=y-h,I=m+g,N=l*(m-g),A=x+I,T=w,P=-N,O=x-I,F=w,G=N;c[r]=A,c[r+1]=0,c[r+2]=T,c[r+3]=P,c[r+4]=O,c[r+5]=0,c[r+6]=F,c[r+7]=G}},function(n,e){var t,s,r=n.exports={};function o(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function c(x){if(t===setTimeout)return setTimeout(x,0);if((t===o||!t)&&setTimeout)return t=setTimeout,setTimeout(x,0);try{return t(x,0)}catch{try{return t.call(null,x,0)}catch{return t.call(this,x,0)}}}(function(){try{t=typeof setTimeout=="function"?setTimeout:o}catch{t=o}try{s=typeof clearTimeout=="function"?clearTimeout:i}catch{s=i}})();var a,l=[],d=!1,f=-1;function y(){d&&a&&(d=!1,a.length?l=a.concat(l):f=-1,l.length&&m())}function m(){if(!d){var x=c(y);d=!0;for(var w=l.length;w;){for(a=l,l=[];++f<w;)a&&a[f].run();f=-1,w=l.length}a=null,d=!1,function(I){if(s===clearTimeout)return clearTimeout(I);if((s===i||!s)&&clearTimeout)return s=clearTimeout,clearTimeout(I);try{s(I)}catch{try{return s.call(null,I)}catch{return s.call(this,I)}}}(x)}}function h(x,w){this.fun=x,this.array=w}function g(){}r.nextTick=function(x){var w=new Array(arguments.length-1);if(arguments.length>1)for(var I=1;I<arguments.length;I++)w[I-1]=arguments[I];l.push(new h(x,w)),l.length!==1||d||c(m)},h.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=g,r.addListener=g,r.once=g,r.off=g,r.removeListener=g,r.removeAllListeners=g,r.emit=g,r.prependListener=g,r.prependOnceListener=g,r.listeners=function(x){return[]},r.binding=function(x){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(x){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},function(n,e,t){var s=t(69),r={body:"",args:[],thisVars:[],localVars:[]};function o(m){if(!m)return r;for(var h=0;h<m.args.length;++h){var g=m.args[h];m.args[h]=h===0?{name:g,lvalue:!0,rvalue:!!m.rvalue,count:m.count||1}:{name:g,lvalue:!1,rvalue:!0,count:1}}return m.thisVars||(m.thisVars=[]),m.localVars||(m.localVars=[]),m}function i(m){for(var h=[],g=0;g<m.args.length;++g)h.push("a"+g);return new Function("P",["return function ",m.funcName,"_ndarrayops(",h.join(","),") {P(",h.join(","),");return a0}"].join(""))(function(x){return s({args:x.args,pre:o(x.pre),body:o(x.body),post:o(x.proc),funcName:x.funcName})}(m))}var c={add:"+",sub:"-",mul:"*",div:"/",mod:"%",band:"&",bor:"|",bxor:"^",lshift:"<<",rshift:">>",rrshift:">>>"};(function(){for(var m in c){var h=c[m];e[m]=i({args:["array","array","array"],body:{args:["a","b","c"],body:"a=b"+h+"c"},funcName:m}),e[m+"eq"]=i({args:["array","array"],body:{args:["a","b"],body:"a"+h+"=b"},funcName:m+"eq"}),e[m+"s"]=i({args:["array","array","scalar"],body:{args:["a","b","s"],body:"a=b"+h+"s"},funcName:m+"s"}),e[m+"seq"]=i({args:["array","scalar"],body:{args:["a","s"],body:"a"+h+"=s"},funcName:m+"seq"})}})();var a={not:"!",bnot:"~",neg:"-",recip:"1.0/"};(function(){for(var m in a){var h=a[m];e[m]=i({args:["array","array"],body:{args:["a","b"],body:"a="+h+"b"},funcName:m}),e[m+"eq"]=i({args:["array"],body:{args:["a"],body:"a="+h+"a"},funcName:m+"eq"})}})();var l={and:"&&",or:"||",eq:"===",neq:"!==",lt:"<",gt:">",leq:"<=",geq:">="};(function(){for(var m in l){var h=l[m];e[m]=i({args:["array","array","array"],body:{args:["a","b","c"],body:"a=b"+h+"c"},funcName:m}),e[m+"s"]=i({args:["array","array","scalar"],body:{args:["a","b","s"],body:"a=b"+h+"s"},funcName:m+"s"}),e[m+"eq"]=i({args:["array","array"],body:{args:["a","b"],body:"a=a"+h+"b"},funcName:m+"eq"}),e[m+"seq"]=i({args:["array","scalar"],body:{args:["a","s"],body:"a=a"+h+"s"},funcName:m+"seq"})}})();var d=["abs","acos","asin","atan","ceil","cos","exp","floor","log","round","sin","sqrt","tan"];(function(){for(var m=0;m<d.length;++m){var h=d[m];e[h]=i({args:["array","array"],pre:{args:[],body:"this_f=Math."+h,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b)",thisVars:["this_f"]},funcName:h}),e[h+"eq"]=i({args:["array"],pre:{args:[],body:"this_f=Math."+h,thisVars:["this_f"]},body:{args:["a"],body:"a=this_f(a)",thisVars:["this_f"]},funcName:h+"eq"})}})();var f=["max","min","atan2","pow"];(function(){for(var m=0;m<f.length;++m){var h=f[m];e[h]=i({args:["array","array","array"],pre:{args:[],body:"this_f=Math."+h,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(b,c)",thisVars:["this_f"]},funcName:h}),e[h+"s"]=i({args:["array","array","scalar"],pre:{args:[],body:"this_f=Math."+h,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(b,c)",thisVars:["this_f"]},funcName:h+"s"}),e[h+"eq"]=i({args:["array","array"],pre:{args:[],body:"this_f=Math."+h,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(a,b)",thisVars:["this_f"]},funcName:h+"eq"}),e[h+"seq"]=i({args:["array","scalar"],pre:{args:[],body:"this_f=Math."+h,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(a,b)",thisVars:["this_f"]},funcName:h+"seq"})}})();var y=["atan2","pow"];(function(){for(var m=0;m<y.length;++m){var h=y[m];e[h+"op"]=i({args:["array","array","array"],pre:{args:[],body:"this_f=Math."+h,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(c,b)",thisVars:["this_f"]},funcName:h+"op"}),e[h+"ops"]=i({args:["array","array","scalar"],pre:{args:[],body:"this_f=Math."+h,thisVars:["this_f"]},body:{args:["a","b","c"],body:"a=this_f(c,b)",thisVars:["this_f"]},funcName:h+"ops"}),e[h+"opeq"]=i({args:["array","array"],pre:{args:[],body:"this_f=Math."+h,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b,a)",thisVars:["this_f"]},funcName:h+"opeq"}),e[h+"opseq"]=i({args:["array","scalar"],pre:{args:[],body:"this_f=Math."+h,thisVars:["this_f"]},body:{args:["a","b"],body:"a=this_f(b,a)",thisVars:["this_f"]},funcName:h+"opseq"})}})(),e.any=s({args:["array"],pre:r,body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"if(a){return true}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return false"},funcName:"any"}),e.all=s({args:["array"],pre:r,body:{args:[{name:"x",lvalue:!1,rvalue:!0,count:1}],body:"if(!x){return false}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return true"},funcName:"all"}),e.sum=s({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"this_s+=a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"sum"}),e.prod=s({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=1"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:1}],body:"this_s*=a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"prod"}),e.norm2squared=s({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:2}],body:"this_s+=a*a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norm2squared"}),e.norm2=s({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:2}],body:"this_s+=a*a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return Math.sqrt(this_s)"},funcName:"norm2"}),e.norminf=s({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:4}],body:"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norminf"}),e.norm1=s({args:["array"],pre:{args:[],localVars:[],thisVars:["this_s"],body:"this_s=0"},body:{args:[{name:"a",lvalue:!1,rvalue:!0,count:3}],body:"this_s+=a<0?-a:a",localVars:[],thisVars:["this_s"]},post:{args:[],localVars:[],thisVars:["this_s"],body:"return this_s"},funcName:"norm1"}),e.sup=s({args:["array"],pre:{body:"this_h=-Infinity",args:[],thisVars:["this_h"],localVars:[]},body:{body:"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_h"],localVars:[]},post:{body:"return this_h",args:[],thisVars:["this_h"],localVars:[]}}),e.inf=s({args:["array"],pre:{body:"this_h=Infinity",args:[],thisVars:["this_h"],localVars:[]},body:{body:"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_h"],localVars:[]},post:{body:"return this_h",args:[],thisVars:["this_h"],localVars:[]}}),e.argmin=s({args:["index","array","shape"],pre:{body:"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}",args:[{name:"_inline_0_arg0_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg1_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg2_",lvalue:!1,rvalue:!0,count:1}],thisVars:["this_i","this_v"],localVars:[]},body:{body:"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_i","this_v"],localVars:["_inline_1_k"]},post:{body:"{return this_i}",args:[],thisVars:["this_i"],localVars:[]}}),e.argmax=s({args:["index","array","shape"],pre:{body:"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}",args:[{name:"_inline_0_arg0_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg1_",lvalue:!1,rvalue:!1,count:0},{name:"_inline_0_arg2_",lvalue:!1,rvalue:!0,count:1}],thisVars:["this_i","this_v"],localVars:[]},body:{body:"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}",args:[{name:"_inline_1_arg0_",lvalue:!1,rvalue:!0,count:2},{name:"_inline_1_arg1_",lvalue:!1,rvalue:!0,count:2}],thisVars:["this_i","this_v"],localVars:["_inline_1_k"]},post:{body:"{return this_i}",args:[],thisVars:["this_i"],localVars:[]}}),e.random=i({args:["array"],pre:{args:[],body:"this_f=Math.random",thisVars:["this_f"]},body:{args:["a"],body:"a=this_f()",thisVars:["this_f"]},funcName:"random"}),e.assign=i({args:["array","array"],body:{args:["a","b"],body:"a=b"},funcName:"assign"}),e.assigns=i({args:["array","scalar"],body:{args:["a","b"],body:"a=b"},funcName:"assigns"}),e.equals=s({args:["array","array"],pre:r,body:{args:[{name:"x",lvalue:!1,rvalue:!0,count:1},{name:"y",lvalue:!1,rvalue:!0,count:1}],body:"if(x!==y){return false}",localVars:[],thisVars:[]},post:{args:[],localVars:[],thisVars:[],body:"return true"},funcName:"equals"})},function(n,e,t){function s(){if(typeof navigator<"u"&&navigator!=null){const o=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(o)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(o.substr(0,4))}return!1}function r(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}t.r(e),t.d(e,"isMobile",function(){return s}),t.d(e,"isBrowser",function(){return r})},function(n,e,t){var s=t(162),r=t(163),o=t(164),i=t(165),c=t(166),a=t(167),l=t(168);l.alea=s,l.xor128=r,l.xorwow=o,l.xorshift7=i,l.xor4096=c,l.tychei=a,n.exports=l},function(n,e,t){t.r(e),t.d(e,"auxiliaryInputFromSpec",function(){return r}),t.d(e,"AuxiliaryInput",function(){return o}),t.d(e,"BinaryCounter",function(){return i});var s=t(2);function r(c){switch(c.type){case"BinaryCounter":return new i(c.args);default:throw new Error("Unknown auxiliary input: "+c)}}class o{constructor(a){this.depth=a}}class i extends o{constructor(a){super(a.numBits)}getTensors(a){const l=s.buffer([a,this.depth]);for(let d=0;d<a;++d)for(let f=0;f<this.depth;++f)l.set(Math.floor((d+1)/Math.pow(2,f))%2?1:-1,d,f);return l.toTensor().as2D(a,this.depth)}}},function(n,e,t){n.exports=t(50)},function(n,e,t){var s=e;function r(){s.util._configure(),s.Writer._configure(s.BufferWriter),s.Reader._configure(s.BufferReader)}s.build="minimal",s.Writer=t(33),s.BufferWriter=t(59),s.Reader=t(34),s.BufferReader=t(60),s.util=t(18),s.rpc=t(61),s.roots=t(63),s.configure=r,r()},function(n,e,t){n.exports=function(s,r){for(var o=new Array(arguments.length-1),i=0,c=2,a=!0;c<arguments.length;)o[i++]=arguments[c++];return new Promise(function(l,d){o[i]=function(f){if(a)if(a=!1,f)d(f);else{for(var y=new Array(arguments.length-1),m=0;m<y.length;)y[m++]=arguments[m];l.apply(null,y)}};try{s.apply(r||null,o)}catch(f){a&&(a=!1,d(f))}})}},function(n,e,t){var s=e;s.length=function(c){var a=c.length;if(!a)return 0;for(var l=0;--a%4>1&&c.charAt(a)==="=";)++l;return Math.ceil(3*c.length)/4-l};for(var r=new Array(64),o=new Array(123),i=0;i<64;)o[r[i]=i<26?i+65:i<52?i+71:i<62?i-4:i-59|43]=i++;s.encode=function(c,a,l){for(var d,f=null,y=[],m=0,h=0;a<l;){var g=c[a++];switch(h){case 0:y[m++]=r[g>>2],d=(3&g)<<4,h=1;break;case 1:y[m++]=r[d|g>>4],d=(15&g)<<2,h=2;break;case 2:y[m++]=r[d|g>>6],y[m++]=r[63&g],h=0}m>8191&&((f||(f=[])).push(String.fromCharCode.apply(String,y)),m=0)}return h&&(y[m++]=r[d],y[m++]=61,h===1&&(y[m++]=61)),f?(m&&f.push(String.fromCharCode.apply(String,y.slice(0,m))),f.join("")):String.fromCharCode.apply(String,y.slice(0,m))},s.decode=function(c,a,l){for(var d,f=l,y=0,m=0;m<c.length;){var h=c.charCodeAt(m++);if(h===61&&y>1)break;if((h=o[h])===void 0)throw Error("invalid encoding");switch(y){case 0:d=h,y=1;break;case 1:a[l++]=d<<2|(48&h)>>4,d=h,y=2;break;case 2:a[l++]=(15&d)<<4|(60&h)>>2,d=h,y=3;break;case 3:a[l++]=(3&d)<<6|h,y=0}}if(y===1)throw Error("invalid encoding");return l-f},s.test=function(c){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(c)}},function(n,e,t){function s(){this._listeners={}}n.exports=s,s.prototype.on=function(r,o,i){return(this._listeners[r]||(this._listeners[r]=[])).push({fn:o,ctx:i||this}),this},s.prototype.off=function(r,o){if(r===void 0)this._listeners={};else if(o===void 0)this._listeners[r]=[];else for(var i=this._listeners[r],c=0;c<i.length;)i[c].fn===o?i.splice(c,1):++c;return this},s.prototype.emit=function(r){var o=this._listeners[r];if(o){for(var i=[],c=1;c<arguments.length;)i.push(arguments[c++]);for(c=0;c<o.length;)o[c].fn.apply(o[c++].ctx,i)}return this}},function(n,e,t){function s(a){return typeof Float32Array<"u"?function(){var l=new Float32Array([-0]),d=new Uint8Array(l.buffer),f=d[3]===128;function y(x,w,I){l[0]=x,w[I]=d[0],w[I+1]=d[1],w[I+2]=d[2],w[I+3]=d[3]}function m(x,w,I){l[0]=x,w[I]=d[3],w[I+1]=d[2],w[I+2]=d[1],w[I+3]=d[0]}function h(x,w){return d[0]=x[w],d[1]=x[w+1],d[2]=x[w+2],d[3]=x[w+3],l[0]}function g(x,w){return d[3]=x[w],d[2]=x[w+1],d[1]=x[w+2],d[0]=x[w+3],l[0]}a.writeFloatLE=f?y:m,a.writeFloatBE=f?m:y,a.readFloatLE=f?h:g,a.readFloatBE=f?g:h}():function(){function l(f,y,m,h){var g=y<0?1:0;if(g&&(y=-y),y===0)f(1/y>0?0:2147483648,m,h);else if(isNaN(y))f(2143289344,m,h);else if(y>34028234663852886e22)f((g<<31|2139095040)>>>0,m,h);else if(y<11754943508222875e-54)f((g<<31|Math.round(y/1401298464324817e-60))>>>0,m,h);else{var x=Math.floor(Math.log(y)/Math.LN2);f((g<<31|x+127<<23|8388607&Math.round(y*Math.pow(2,-x)*8388608))>>>0,m,h)}}function d(f,y,m){var h=f(y,m),g=2*(h>>31)+1,x=h>>>23&255,w=8388607&h;return x===255?w?NaN:g*(1/0):x===0?1401298464324817e-60*g*w:g*Math.pow(2,x-150)*(w+8388608)}a.writeFloatLE=l.bind(null,r),a.writeFloatBE=l.bind(null,o),a.readFloatLE=d.bind(null,i),a.readFloatBE=d.bind(null,c)}(),typeof Float64Array<"u"?function(){var l=new Float64Array([-0]),d=new Uint8Array(l.buffer),f=d[7]===128;function y(x,w,I){l[0]=x,w[I]=d[0],w[I+1]=d[1],w[I+2]=d[2],w[I+3]=d[3],w[I+4]=d[4],w[I+5]=d[5],w[I+6]=d[6],w[I+7]=d[7]}function m(x,w,I){l[0]=x,w[I]=d[7],w[I+1]=d[6],w[I+2]=d[5],w[I+3]=d[4],w[I+4]=d[3],w[I+5]=d[2],w[I+6]=d[1],w[I+7]=d[0]}function h(x,w){return d[0]=x[w],d[1]=x[w+1],d[2]=x[w+2],d[3]=x[w+3],d[4]=x[w+4],d[5]=x[w+5],d[6]=x[w+6],d[7]=x[w+7],l[0]}function g(x,w){return d[7]=x[w],d[6]=x[w+1],d[5]=x[w+2],d[4]=x[w+3],d[3]=x[w+4],d[2]=x[w+5],d[1]=x[w+6],d[0]=x[w+7],l[0]}a.writeDoubleLE=f?y:m,a.writeDoubleBE=f?m:y,a.readDoubleLE=f?h:g,a.readDoubleBE=f?g:h}():function(){function l(f,y,m,h,g,x){var w=h<0?1:0;if(w&&(h=-h),h===0)f(0,g,x+y),f(1/h>0?0:2147483648,g,x+m);else if(isNaN(h))f(0,g,x+y),f(2146959360,g,x+m);else if(h>17976931348623157e292)f(0,g,x+y),f((w<<31|2146435072)>>>0,g,x+m);else{var I;if(h<22250738585072014e-324)f((I=h/5e-324)>>>0,g,x+y),f((w<<31|I/4294967296)>>>0,g,x+m);else{var N=Math.floor(Math.log(h)/Math.LN2);N===1024&&(N=1023),f(4503599627370496*(I=h*Math.pow(2,-N))>>>0,g,x+y),f((w<<31|N+1023<<20|1048576*I&1048575)>>>0,g,x+m)}}}function d(f,y,m,h,g){var x=f(h,g+y),w=f(h,g+m),I=2*(w>>31)+1,N=w>>>20&2047,A=4294967296*(1048575&w)+x;return N===2047?A?NaN:I*(1/0):N===0?5e-324*I*A:I*Math.pow(2,N-1075)*(A+4503599627370496)}a.writeDoubleLE=l.bind(null,r,0,4),a.writeDoubleBE=l.bind(null,o,4,0),a.readDoubleLE=d.bind(null,i,0,4),a.readDoubleBE=d.bind(null,c,4,0)}(),a}function r(a,l,d){l[d]=255&a,l[d+1]=a>>>8&255,l[d+2]=a>>>16&255,l[d+3]=a>>>24}function o(a,l,d){l[d]=a>>>24,l[d+1]=a>>>16&255,l[d+2]=a>>>8&255,l[d+3]=255&a}function i(a,l){return(a[l]|a[l+1]<<8|a[l+2]<<16|a[l+3]<<24)>>>0}function c(a,l){return(a[l]<<24|a[l+1]<<16|a[l+2]<<8|a[l+3])>>>0}n.exports=s(s)},function(module,exports,__webpack_require__){function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(n){}return null}module.exports=inquire},function(n,e,t){var s=e;s.length=function(r){for(var o=0,i=0,c=0;c<r.length;++c)(i=r.charCodeAt(c))<128?o+=1:i<2048?o+=2:(64512&i)==55296&&(64512&r.charCodeAt(c+1))==56320?(++c,o+=4):o+=3;return o},s.read=function(r,o,i){if(i-o<1)return"";for(var c,a=null,l=[],d=0;o<i;)(c=r[o++])<128?l[d++]=c:c>191&&c<224?l[d++]=(31&c)<<6|63&r[o++]:c>239&&c<365?(c=((7&c)<<18|(63&r[o++])<<12|(63&r[o++])<<6|63&r[o++])-65536,l[d++]=55296+(c>>10),l[d++]=56320+(1023&c)):l[d++]=(15&c)<<12|(63&r[o++])<<6|63&r[o++],d>8191&&((a||(a=[])).push(String.fromCharCode.apply(String,l)),d=0);return a?(d&&a.push(String.fromCharCode.apply(String,l.slice(0,d))),a.join("")):String.fromCharCode.apply(String,l.slice(0,d))},s.write=function(r,o,i){for(var c,a,l=i,d=0;d<r.length;++d)(c=r.charCodeAt(d))<128?o[i++]=c:c<2048?(o[i++]=c>>6|192,o[i++]=63&c|128):(64512&c)==55296&&(64512&(a=r.charCodeAt(d+1)))==56320?(c=65536+((1023&c)<<10)+(1023&a),++d,o[i++]=c>>18|240,o[i++]=c>>12&63|128,o[i++]=c>>6&63|128,o[i++]=63&c|128):(o[i++]=c>>12|224,o[i++]=c>>6&63|128,o[i++]=63&c|128);return i-l}},function(n,e,t){n.exports=function(s,r,o){var i=o||8192,c=i>>>1,a=null,l=i;return function(d){if(d<1||d>c)return s(d);l+d>i&&(a=s(i),l=0);var f=r.call(a,l,l+=d);return 7&l&&(l=1+(7|l)),f}}},function(n,e,t){n.exports=r;var s=t(18);function r(a,l){this.lo=a>>>0,this.hi=l>>>0}var o=r.zero=new r(0,0);o.toNumber=function(){return 0},o.zzEncode=o.zzDecode=function(){return this},o.length=function(){return 1};var i=r.zeroHash="\0\0\0\0\0\0\0\0";r.fromNumber=function(a){if(a===0)return o;var l=a<0;l&&(a=-a);var d=a>>>0,f=(a-d)/4294967296>>>0;return l&&(f=~f>>>0,d=~d>>>0,++d>4294967295&&(d=0,++f>4294967295&&(f=0))),new r(d,f)},r.from=function(a){if(typeof a=="number")return r.fromNumber(a);if(s.isString(a)){if(!s.Long)return r.fromNumber(parseInt(a,10));a=s.Long.fromString(a)}return a.low||a.high?new r(a.low>>>0,a.high>>>0):o},r.prototype.toNumber=function(a){if(!a&&this.hi>>>31){var l=1+~this.lo>>>0,d=~this.hi>>>0;return l||(d=d+1>>>0),-(l+4294967296*d)}return this.lo+4294967296*this.hi},r.prototype.toLong=function(a){return s.Long?new s.Long(0|this.lo,0|this.hi,!!a):{low:0|this.lo,high:0|this.hi,unsigned:!!a}};var c=String.prototype.charCodeAt;r.fromHash=function(a){return a===i?o:new r((c.call(a,0)|c.call(a,1)<<8|c.call(a,2)<<16|c.call(a,3)<<24)>>>0,(c.call(a,4)|c.call(a,5)<<8|c.call(a,6)<<16|c.call(a,7)<<24)>>>0)},r.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},r.prototype.zzEncode=function(){var a=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^a)>>>0,this.lo=(this.lo<<1^a)>>>0,this},r.prototype.zzDecode=function(){var a=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^a)>>>0,this.hi=(this.hi>>>1^a)>>>0,this},r.prototype.length=function(){var a=this.lo,l=(this.lo>>>28|this.hi<<4)>>>0,d=this.hi>>>24;return d===0?l===0?a<16384?a<128?1:2:a<2097152?3:4:l<16384?l<128?5:6:l<2097152?7:8:d<128?9:10}},function(n,e,t){n.exports=o;var s=t(33);(o.prototype=Object.create(s.prototype)).constructor=o;var r=t(18);function o(){s.call(this)}function i(c,a,l){c.length<40?r.utf8.write(c,a,l):a.utf8Write?a.utf8Write(c,l):a.write(c,l)}o._configure=function(){o.alloc=r._Buffer_allocUnsafe,o.writeBytesBuffer=r.Buffer&&r.Buffer.prototype instanceof Uint8Array&&r.Buffer.prototype.set.name==="set"?function(c,a,l){a.set(c,l)}:function(c,a,l){if(c.copy)c.copy(a,l,0,c.length);else for(var d=0;d<c.length;)a[l++]=c[d++]}},o.prototype.bytes=function(c){r.isString(c)&&(c=r._Buffer_from(c,"base64"));var a=c.length>>>0;return this.uint32(a),a&&this._push(o.writeBytesBuffer,a,c),this},o.prototype.string=function(c){var a=r.Buffer.byteLength(c);return this.uint32(a),a&&this._push(i,a,c),this},o._configure()},function(n,e,t){n.exports=o;var s=t(34);(o.prototype=Object.create(s.prototype)).constructor=o;var r=t(18);function o(i){s.call(this,i)}o._configure=function(){r.Buffer&&(o.prototype._slice=r.Buffer.prototype.slice)},o.prototype.string=function(){var i=this.uint32();return this.buf.utf8Slice?this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+i,this.len)):this.buf.toString("utf-8",this.pos,this.pos=Math.min(this.pos+i,this.len))},o._configure()},function(n,e,t){e.Service=t(62)},function(n,e,t){n.exports=r;var s=t(18);function r(o,i,c){if(typeof o!="function")throw TypeError("rpcImpl must be a function");s.EventEmitter.call(this),this.rpcImpl=o,this.requestDelimited=!!i,this.responseDelimited=!!c}(r.prototype=Object.create(s.EventEmitter.prototype)).constructor=r,r.prototype.rpcCall=function o(i,c,a,l,d){if(!l)throw TypeError("request must be specified");var f=this;if(!d)return s.asPromise(o,f,i,c,a,l);if(f.rpcImpl)try{return f.rpcImpl(i,c[f.requestDelimited?"encodeDelimited":"encode"](l).finish(),function(y,m){if(y)return f.emit("error",y,i),d(y);if(m!==null){if(!(m instanceof a))try{m=a[f.responseDelimited?"decodeDelimited":"decode"](m)}catch(h){return f.emit("error",h,i),d(h)}return f.emit("data",m,i),d(null,m)}f.end(!0)})}catch(y){return f.emit("error",y,i),void setTimeout(function(){d(y)},0)}else setTimeout(function(){d(Error("already ended"))},0)},r.prototype.end=function(o){return this.rpcImpl&&(o||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this}},function(n,e,t){n.exports={}},function(n){n.exports=JSON.parse('{"chromatic":["1P 2m 2M 3m 3M 4P 4A 5P 6m 6M 7m 7M"],"lydian":["1P 2M 3M 4A 5P 6M 7M"],"major":["1P 2M 3M 4P 5P 6M 7M",["ionian"]],"mixolydian":["1P 2M 3M 4P 5P 6M 7m",["dominant"]],"dorian":["1P 2M 3m 4P 5P 6M 7m"],"aeolian":["1P 2M 3m 4P 5P 6m 7m",["minor"]],"phrygian":["1P 2m 3m 4P 5P 6m 7m"],"locrian":["1P 2m 3m 4P 5d 6m 7m"],"melodic minor":["1P 2M 3m 4P 5P 6M 7M"],"melodic minor second mode":["1P 2m 3m 4P 5P 6M 7m"],"lydian augmented":["1P 2M 3M 4A 5A 6M 7M"],"lydian dominant":["1P 2M 3M 4A 5P 6M 7m",["lydian b7"]],"melodic minor fifth mode":["1P 2M 3M 4P 5P 6m 7m",["hindu","mixolydian b6M"]],"locrian #2":["1P 2M 3m 4P 5d 6m 7m",["half-diminished"]],"altered":["1P 2m 3m 3M 5d 6m 7m",["super locrian","diminished whole tone","pomeroy"]],"harmonic minor":["1P 2M 3m 4P 5P 6m 7M"],"phrygian dominant":["1P 2m 3M 4P 5P 6m 7m",["spanish","phrygian major"]],"half-whole diminished":["1P 2m 3m 3M 4A 5P 6M 7m",["dominant diminished"]],"diminished":["1P 2M 3m 4P 5d 6m 6M 7M",["whole-half diminished"]],"major pentatonic":["1P 2M 3M 5P 6M",["pentatonic"]],"lydian pentatonic":["1P 3M 4A 5P 7M",["chinese"]],"mixolydian pentatonic":["1P 3M 4P 5P 7m",["indian"]],"locrian pentatonic":["1P 3m 4P 5d 7m",["minor seven flat five pentatonic"]],"minor pentatonic":["1P 3m 4P 5P 7m"],"minor six pentatonic":["1P 3m 4P 5P 6M"],"minor hexatonic":["1P 2M 3m 4P 5P 7M"],"flat three pentatonic":["1P 2M 3m 5P 6M",["kumoi"]],"flat six pentatonic":["1P 2M 3M 5P 6m"],"major flat two pentatonic":["1P 2m 3M 5P 6M"],"whole tone pentatonic":["1P 3M 5d 6m 7m"],"ionian pentatonic":["1P 3M 4P 5P 7M"],"lydian #5P pentatonic":["1P 3M 4A 5A 7M"],"lydian dominant pentatonic":["1P 3M 4A 5P 7m"],"minor #7M pentatonic":["1P 3m 4P 5P 7M"],"super locrian pentatonic":["1P 3m 4d 5d 7m"],"in-sen":["1P 2m 4P 5P 7m"],"iwato":["1P 2m 4P 5d 7m"],"hirajoshi":["1P 2M 3m 5P 6m"],"kumoijoshi":["1P 2m 4P 5P 6m"],"pelog":["1P 2m 3m 5P 6m"],"vietnamese 1":["1P 3m 4P 5P 6m"],"vietnamese 2":["1P 3m 4P 5P 7m"],"prometheus":["1P 2M 3M 4A 6M 7m"],"prometheus neopolitan":["1P 2m 3M 4A 6M 7m"],"ritusen":["1P 2M 4P 5P 6M"],"scriabin":["1P 2m 3M 5P 6M"],"piongio":["1P 2M 4P 5P 6M 7m"],"major blues":["1P 2M 3m 3M 5P 6M"],"minor blues":["1P 3m 4P 5d 5P 7m",["blues"]],"composite blues":["1P 2M 3m 3M 4P 5d 5P 6M 7m"],"augmented":["1P 2A 3M 5P 5A 7M"],"augmented heptatonic":["1P 2A 3M 4P 5P 5A 7M"],"dorian #4":["1P 2M 3m 4A 5P 6M 7m"],"lydian diminished":["1P 2M 3m 4A 5P 6M 7M"],"whole tone":["1P 2M 3M 4A 5A 7m"],"leading whole tone":["1P 2M 3M 4A 5A 7m 7M"],"lydian minor":["1P 2M 3M 4A 5P 6m 7m"],"locrian major":["1P 2M 3M 4P 5d 6m 7m",["arabian"]],"neopolitan":["1P 2m 3m 4P 5P 6m 7M"],"neopolitan minor":["1P 2m 3m 4P 5P 6m 7M"],"neopolitan major":["1P 2m 3m 4P 5P 6M 7M",["dorian b2"]],"neopolitan major pentatonic":["1P 3M 4P 5d 7m"],"romanian minor":["1P 2M 3m 5d 5P 6M 7m"],"double harmonic lydian":["1P 2m 3M 4A 5P 6m 7M"],"harmonic major":["1P 2M 3M 4P 5P 6m 7M"],"double harmonic major":["1P 2m 3M 4P 5P 6m 7M",["gypsy"]],"egyptian":["1P 2M 4P 5P 7m"],"hungarian minor":["1P 2M 3m 4A 5P 6m 7M"],"hungarian major":["1P 2A 3M 4A 5P 6M 7m"],"oriental":["1P 2m 3M 4P 5d 6M 7m"],"spanish heptatonic":["1P 2m 3m 3M 4P 5P 6m 7m"],"flamenco":["1P 2m 3m 3M 4A 5P 7m"],"balinese":["1P 2m 3m 4P 5P 6m 7M"],"todi raga":["1P 2m 3m 4A 5P 6m 7M"],"malkos raga":["1P 3m 4P 6m 7m"],"kafi raga":["1P 3m 3M 4P 5P 6M 7m 7M"],"purvi raga":["1P 2m 3M 4P 4A 5P 6m 7M"],"persian":["1P 2m 3M 4P 5d 6m 7M"],"bebop":["1P 2M 3M 4P 5P 6M 7m 7M"],"bebop dominant":["1P 2M 3M 4P 5P 6M 7m 7M"],"bebop minor":["1P 2M 3m 3M 4P 5P 6M 7m"],"bebop major":["1P 2M 3M 4P 5P 5A 6M 7M"],"bebop locrian":["1P 2m 3m 4P 5d 5P 6m 7m"],"minor bebop":["1P 2M 3m 4P 5P 6m 7m 7M"],"mystery #1":["1P 2m 3M 5d 6m 7m"],"enigmatic":["1P 2m 3M 5d 6m 7m 7M"],"minor six diminished":["1P 2M 3m 4P 5P 6m 6M 7M"],"ionian augmented":["1P 2M 3M 4P 5A 6M 7M"],"lydian #9":["1P 2m 3M 4A 5P 6M 7M"],"ichikosucho":["1P 2M 3M 4P 5d 5P 6M 7M"],"six tone symmetric":["1P 2m 3M 4P 5A 6M"]}')},function(n){n.exports=JSON.parse('{"4":["1P 4P 7m 10m",["quartal"]],"5":["1P 5P"],"7":["1P 3M 5P 7m",["Dominant","Dom"]],"9":["1P 3M 5P 7m 9M",["79"]],"11":["1P 5P 7m 9M 11P"],"13":["1P 3M 5P 7m 9M 13M",["13_"]],"64":["5P 8P 10M"],"M":["1P 3M 5P",["Major",""]],"M#5":["1P 3M 5A",["augmented","maj#5","Maj#5","+","aug"]],"M#5add9":["1P 3M 5A 9M",["+add9"]],"M13":["1P 3M 5P 7M 9M 13M",["maj13","Maj13"]],"M13#11":["1P 3M 5P 7M 9M 11A 13M",["maj13#11","Maj13#11","M13+4","M13#4"]],"M6":["1P 3M 5P 13M",["6"]],"M6#11":["1P 3M 5P 6M 11A",["M6b5","6#11","6b5"]],"M69":["1P 3M 5P 6M 9M",["69"]],"M69#11":["1P 3M 5P 6M 9M 11A"],"M7#11":["1P 3M 5P 7M 11A",["maj7#11","Maj7#11","M7+4","M7#4"]],"M7#5":["1P 3M 5A 7M",["maj7#5","Maj7#5","maj9#5","M7+"]],"M7#5sus4":["1P 4P 5A 7M"],"M7#9#11":["1P 3M 5P 7M 9A 11A"],"M7add13":["1P 3M 5P 6M 7M 9M"],"M7b5":["1P 3M 5d 7M"],"M7b6":["1P 3M 6m 7M"],"M7b9":["1P 3M 5P 7M 9m"],"M7sus4":["1P 4P 5P 7M"],"M9":["1P 3M 5P 7M 9M",["maj9","Maj9"]],"M9#11":["1P 3M 5P 7M 9M 11A",["maj9#11","Maj9#11","M9+4","M9#4"]],"M9#5":["1P 3M 5A 7M 9M",["Maj9#5"]],"M9#5sus4":["1P 4P 5A 7M 9M"],"M9b5":["1P 3M 5d 7M 9M"],"M9sus4":["1P 4P 5P 7M 9M"],"Madd9":["1P 3M 5P 9M",["2","add9","add2"]],"Maj7":["1P 3M 5P 7M",["maj7","M7"]],"Mb5":["1P 3M 5d"],"Mb6":["1P 3M 13m"],"Msus2":["1P 2M 5P",["add9no3","sus2"]],"Msus4":["1P 4P 5P",["sus","sus4"]],"Maddb9":["1P 3M 5P 9m"],"11b9":["1P 5P 7m 9m 11P"],"13#11":["1P 3M 5P 7m 9M 11A 13M",["13+4","13#4"]],"13#9":["1P 3M 5P 7m 9A 13M",["13#9_"]],"13#9#11":["1P 3M 5P 7m 9A 11A 13M"],"13b5":["1P 3M 5d 6M 7m 9M"],"13b9":["1P 3M 5P 7m 9m 13M"],"13b9#11":["1P 3M 5P 7m 9m 11A 13M"],"13no5":["1P 3M 7m 9M 13M"],"13sus4":["1P 4P 5P 7m 9M 13M",["13sus"]],"69#11":["1P 3M 5P 6M 9M 11A"],"7#11":["1P 3M 5P 7m 11A",["7+4","7#4","7#11_","7#4_"]],"7#11b13":["1P 3M 5P 7m 11A 13m",["7b5b13"]],"7#5":["1P 3M 5A 7m",["+7","7aug","aug7"]],"7#5#9":["1P 3M 5A 7m 9A",["7alt","7#5#9_","7#9b13_"]],"7#5b9":["1P 3M 5A 7m 9m"],"7#5b9#11":["1P 3M 5A 7m 9m 11A"],"7#5sus4":["1P 4P 5A 7m"],"7#9":["1P 3M 5P 7m 9A",["7#9_"]],"7#9#11":["1P 3M 5P 7m 9A 11A",["7b5#9"]],"7#9#11b13":["1P 3M 5P 7m 9A 11A 13m"],"7#9b13":["1P 3M 5P 7m 9A 13m"],"7add6":["1P 3M 5P 7m 13M",["67","7add13"]],"7b13":["1P 3M 7m 13m"],"7b5":["1P 3M 5d 7m"],"7b6":["1P 3M 5P 6m 7m"],"7b9":["1P 3M 5P 7m 9m"],"7b9#11":["1P 3M 5P 7m 9m 11A",["7b5b9"]],"7b9#9":["1P 3M 5P 7m 9m 9A"],"7b9b13":["1P 3M 5P 7m 9m 13m"],"7b9b13#11":["1P 3M 5P 7m 9m 11A 13m",["7b9#11b13","7b5b9b13"]],"7no5":["1P 3M 7m"],"7sus4":["1P 4P 5P 7m",["7sus"]],"7sus4b9":["1P 4P 5P 7m 9m",["susb9","7susb9","7b9sus","7b9sus4","phryg"]],"7sus4b9b13":["1P 4P 5P 7m 9m 13m",["7b9b13sus4"]],"9#11":["1P 3M 5P 7m 9M 11A",["9+4","9#4","9#11_","9#4_"]],"9#11b13":["1P 3M 5P 7m 9M 11A 13m",["9b5b13"]],"9#5":["1P 3M 5A 7m 9M",["9+"]],"9#5#11":["1P 3M 5A 7m 9M 11A"],"9b13":["1P 3M 7m 9M 13m"],"9b5":["1P 3M 5d 7m 9M"],"9no5":["1P 3M 7m 9M"],"9sus4":["1P 4P 5P 7m 9M",["9sus"]],"m":["1P 3m 5P"],"m#5":["1P 3m 5A",["m+","mb6"]],"m11":["1P 3m 5P 7m 9M 11P",["_11"]],"m11A 5":["1P 3m 6m 7m 9M 11P"],"m11b5":["1P 3m 7m 12d 2M 4P",["h11","_11b5"]],"m13":["1P 3m 5P 7m 9M 11P 13M",["_13"]],"m6":["1P 3m 4P 5P 13M",["_6"]],"m69":["1P 3m 5P 6M 9M",["_69"]],"m7":["1P 3m 5P 7m",["minor7","_","_7"]],"m7#5":["1P 3m 6m 7m"],"m7add11":["1P 3m 5P 7m 11P",["m7add4"]],"m7b5":["1P 3m 5d 7m",["half-diminished","h7","_7b5"]],"m9":["1P 3m 5P 7m 9M",["_9"]],"m9#5":["1P 3m 6m 7m 9M"],"m9b5":["1P 3m 7m 12d 2M",["h9","-9b5"]],"mMaj7":["1P 3m 5P 7M",["mM7","_M7"]],"mMaj7b6":["1P 3m 5P 6m 7M",["mM7b6"]],"mM9":["1P 3m 5P 7M 9M",["mMaj9","-M9"]],"mM9b6":["1P 3m 5P 6m 7M 9M",["mMaj9b6"]],"mb6M7":["1P 3m 6m 7M"],"mb6b9":["1P 3m 6m 9m"],"o":["1P 3m 5d",["mb5","dim"]],"o7":["1P 3m 5d 13M",["diminished","m6b5","dim7"]],"o7M7":["1P 3m 5d 6M 7M"],"oM7":["1P 3m 5d 7M"],"sus24":["1P 2M 4P 5P",["sus4add9"]],"+add#9":["1P 3M 5A 9A"],"madd4":["1P 3m 4P 5P"],"madd9":["1P 3m 5P 9M"]}')},function(n,e,t){Object.defineProperty(e,"__esModule",{value:!0});var s=t(80),r=new WeakMap;e.keySignatureKeys=["Cb","Gb","Db","Ab","Eb","Bb","F","C","G","D","A","E","B","F#","C#"];var o=function(){function i(c){var a=this;this.tempos=[],this.timeSignatures=[],this.keySignatures=[],this.meta=[],this.name="",r.set(this,480),c&&(r.set(this,c.header.ticksPerBeat),c.tracks.forEach(function(l){return l.forEach(function(d){d.meta&&(d.type==="timeSignature"?a.timeSignatures.push({ticks:d.absoluteTime,timeSignature:[d.numerator,d.denominator]}):d.type==="setTempo"?a.tempos.push({bpm:6e7/d.microsecondsPerBeat,ticks:d.absoluteTime}):d.type==="keySignature"&&a.keySignatures.push({key:e.keySignatureKeys[d.key+7],scale:d.scale===0?"major":"minor",ticks:d.absoluteTime}))})}),c.tracks[0].forEach(function(l){l.meta&&(l.type==="trackName"?a.name=l.text:l.type!=="text"&&l.type!=="cuePoint"&&l.type!=="marker"&&l.type!=="lyrics"||a.meta.push({text:l.text,ticks:l.absoluteTime,type:l.type}))}),this.update())}return i.prototype.update=function(){var c=this,a=0,l=0;this.tempos.sort(function(d,f){return d.ticks-f.ticks}),this.tempos.forEach(function(d,f){var y=f>0?c.tempos[f-1].bpm:c.tempos[0].bpm,m=d.ticks/c.ppq-l,h=60/y*m;d.time=h+a,a=d.time,l+=m}),this.timeSignatures.sort(function(d,f){return d.ticks-f.ticks}),this.timeSignatures.forEach(function(d,f){var y=f>0?c.timeSignatures[f-1]:c.timeSignatures[0],m=(d.ticks-y.ticks)/c.ppq/y.timeSignature[0]/(y.timeSignature[1]/4);y.measures=y.measures||0,d.measures=m+y.measures})},i.prototype.ticksToSeconds=function(c){var a=s.search(this.tempos,c);if(a!==-1){var l=this.tempos[a],d=l.time,f=(c-l.ticks)/this.ppq;return d+60/l.bpm*f}return .5*(c/this.ppq)},i.prototype.ticksToMeasures=function(c){var a=s.search(this.timeSignatures,c);if(a!==-1){var l=this.timeSignatures[a],d=(c-l.ticks)/this.ppq;return l.measures+d/(l.timeSignature[0]/l.timeSignature[1])/4}return c/this.ppq/4},Object.defineProperty(i.prototype,"ppq",{get:function(){return r.get(this)},enumerable:!0,configurable:!0}),i.prototype.secondsToTicks=function(c){var a=s.search(this.tempos,c,"time");if(a!==-1){var l=this.tempos[a],d=(c-l.time)/(60/l.bpm);return Math.round(l.ticks+d*this.ppq)}var f=c/.5;return Math.round(f*this.ppq)},i.prototype.toJSON=function(){return{keySignatures:this.keySignatures,meta:this.meta,name:this.name,ppq:this.ppq,tempos:this.tempos.map(function(c){return{bpm:c.bpm,ticks:c.ticks}}),timeSignatures:this.timeSignatures}},i.prototype.fromJSON=function(c){this.name=c.name,this.tempos=c.tempos.map(function(a){return Object.assign({},a)}),this.timeSignatures=c.timeSignatures.map(function(a){return Object.assign({},a)}),this.keySignatures=c.keySignatures.map(function(a){return Object.assign({},a)}),this.meta=c.meta.map(function(a){return Object.assign({},a)}),r.set(this,c.ppq),this.update()},i.prototype.setTempo=function(c){this.tempos=[{bpm:c,ticks:0}],this.update()},i}();e.Header=o},function(n,e,t){var s=this&&this.__awaiter||function(y,m,h,g){return new(h||(h=Promise))(function(x,w){function I(T){try{A(g.next(T))}catch(P){w(P)}}function N(T){try{A(g.throw(T))}catch(P){w(P)}}function A(T){var P;T.done?x(T.value):(P=T.value,P instanceof h?P:new h(function(O){O(P)})).then(I,N)}A((g=g.apply(y,m||[])).next())})},r=this&&this.__generator||function(y,m){var h,g,x,w,I={label:0,sent:function(){if(1&x[0])throw x[1];return x[1]},trys:[],ops:[]};return w={next:N(0),throw:N(1),return:N(2)},typeof Symbol=="function"&&(w[Symbol.iterator]=function(){return this}),w;function N(A){return function(T){return function(P){if(h)throw new TypeError("Generator is already executing.");for(;I;)try{if(h=1,g&&(x=2&P[0]?g.return:P[0]?g.throw||((x=g.return)&&x.call(g),0):g.next)&&!(x=x.call(g,P[1])).done)return x;switch(g=0,x&&(P=[2&P[0],x.value]),P[0]){case 0:case 1:x=P;break;case 4:return I.label++,{value:P[1],done:!1};case 5:I.label++,g=P[1],P=[0];continue;case 7:P=I.ops.pop(),I.trys.pop();continue;default:if(x=I.trys,!((x=x.length>0&&x[x.length-1])||P[0]!==6&&P[0]!==2)){I=0;continue}if(P[0]===3&&(!x||P[1]>x[0]&&P[1]<x[3])){I.label=P[1];break}if(P[0]===6&&I.label<x[1]){I.label=x[1],x=P;break}if(x&&I.label<x[2]){I.label=x[2],I.ops.push(P);break}x[2]&&I.ops.pop(),I.trys.pop();continue}P=m.call(y,I)}catch(O){P=[6,O],g=0}finally{h=x=0}if(5&P[0])throw P[1];return{value:P[0]?P[1]:void 0,done:!0}}([A,T])}}};Object.defineProperty(e,"__esModule",{value:!0});var o=t(79),i=t(174),c=t(66),a=t(81),l=function(){function y(m){var h=this,g=null;m&&(m instanceof ArrayBuffer&&(m=new Uint8Array(m)),(g=o.parseMidi(m)).tracks.forEach(function(x){var w=0;x.forEach(function(I){w+=I.deltaTime,I.absoluteTime=w})}),g.tracks=function(x){for(var w=[],I=0;I<x.length;I++)for(var N=w.length,A=new Map,T=Array(16).fill(0),P=0,O=x[I];P<O.length;P++){var F=O[P],G=N,U=F.channel;if(U!==void 0){F.type==="programChange"&&(T[U]=F.programNumber);var Q=T[U]+" "+U;A.has(Q)?G=A.get(Q):(G=N+A.size,A.set(Q,G))}w[G]||w.push([]),w[G].push(F)}return w}(g.tracks)),this.header=new c.Header(g),this.tracks=[],m&&(this.tracks=g.tracks.map(function(x){return new a.Track(x,h.header)}),g.header.format===1&&this.tracks[0].duration===0&&this.tracks.shift())}return y.fromUrl=function(m){return s(this,void 0,void 0,function(){var h;return r(this,function(g){switch(g.label){case 0:return[4,fetch(m)];case 1:return(h=g.sent()).ok?[4,h.arrayBuffer()]:[3,3];case 2:return[2,new y(g.sent())];case 3:throw new Error("could not load "+m)}})})},Object.defineProperty(y.prototype,"name",{get:function(){return this.header.name},set:function(m){this.header.name=m},enumerable:!0,configurable:!0}),Object.defineProperty(y.prototype,"duration",{get:function(){var m=this.tracks.map(function(h){return h.duration});return Math.max.apply(Math,m)},enumerable:!0,configurable:!0}),Object.defineProperty(y.prototype,"durationTicks",{get:function(){var m=this.tracks.map(function(h){return h.durationTicks});return Math.max.apply(Math,m)},enumerable:!0,configurable:!0}),y.prototype.addTrack=function(){var m=new a.Track(void 0,this.header);return this.tracks.push(m),m},y.prototype.toArray=function(){return i.encode(this)},y.prototype.toJSON=function(){return{header:this.header.toJSON(),tracks:this.tracks.map(function(m){return m.toJSON()})}},y.prototype.fromJSON=function(m){var h=this;this.header=new c.Header,this.header.fromJSON(m.header),this.tracks=m.tracks.map(function(g){var x=new a.Track(void 0,h.header);return x.fromJSON(g),x})},y.prototype.clone=function(){var m=new y;return m.fromJSON(this.toJSON()),m},y}();e.Midi=l;var d=t(81);e.Track=d.Track;var f=t(66);e.Header=f.Header},function(n,e,t){(function(s){/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */var r=t(75),o=t(76),i=t(77);function c(){return l.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function a(B,D){if(c()<D)throw new RangeError("Invalid typed array length");return l.TYPED_ARRAY_SUPPORT?(B=new Uint8Array(D)).__proto__=l.prototype:(B===null&&(B=new l(D)),B.length=D),B}function l(B,D,H){if(!(l.TYPED_ARRAY_SUPPORT||this instanceof l))return new l(B,D,H);if(typeof B=="number"){if(typeof D=="string")throw new Error("If encoding is specified then the first argument must be a string");return y(this,B)}return d(this,B,D,H)}function d(B,D,H,he){if(typeof D=="number")throw new TypeError('"value" argument must not be a number');return typeof ArrayBuffer<"u"&&D instanceof ArrayBuffer?function(j,ee,ye,Oe){if(ee.byteLength,ye<0||ee.byteLength<ye)throw new RangeError("'offset' is out of bounds");if(ee.byteLength<ye+(Oe||0))throw new RangeError("'length' is out of bounds");return ee=ye===void 0&&Oe===void 0?new Uint8Array(ee):Oe===void 0?new Uint8Array(ee,ye):new Uint8Array(ee,ye,Oe),l.TYPED_ARRAY_SUPPORT?(j=ee).__proto__=l.prototype:j=m(j,ee),j}(B,D,H,he):typeof D=="string"?function(j,ee,ye){if(typeof ye=="string"&&ye!==""||(ye="utf8"),!l.isEncoding(ye))throw new TypeError('"encoding" must be a valid string encoding');var Oe=0|g(ee,ye),ze=(j=a(j,Oe)).write(ee,ye);return ze!==Oe&&(j=j.slice(0,ze)),j}(B,D,H):function(j,ee){if(l.isBuffer(ee)){var ye=0|h(ee.length);return(j=a(j,ye)).length===0||ee.copy(j,0,0,ye),j}if(ee){if(typeof ArrayBuffer<"u"&&ee.buffer instanceof ArrayBuffer||"length"in ee)return typeof ee.length!="number"||(Oe=ee.length)!=Oe?a(j,0):m(j,ee);if(ee.type==="Buffer"&&i(ee.data))return m(j,ee.data)}var Oe;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(B,D)}function f(B){if(typeof B!="number")throw new TypeError('"size" argument must be a number');if(B<0)throw new RangeError('"size" argument must not be negative')}function y(B,D){if(f(D),B=a(B,D<0?0:0|h(D)),!l.TYPED_ARRAY_SUPPORT)for(var H=0;H<D;++H)B[H]=0;return B}function m(B,D){var H=D.length<0?0:0|h(D.length);B=a(B,H);for(var he=0;he<H;he+=1)B[he]=255&D[he];return B}function h(B){if(B>=c())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+c().toString(16)+" bytes");return 0|B}function g(B,D){if(l.isBuffer(B))return B.length;if(typeof ArrayBuffer<"u"&&typeof ArrayBuffer.isView=="function"&&(ArrayBuffer.isView(B)||B instanceof ArrayBuffer))return B.byteLength;typeof B!="string"&&(B=""+B);var H=B.length;if(H===0)return 0;for(var he=!1;;)switch(D){case"ascii":case"latin1":case"binary":return H;case"utf8":case"utf-8":case void 0:return we(B).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*H;case"hex":return H>>>1;case"base64":return Le(B).length;default:if(he)return we(B).length;D=(""+D).toLowerCase(),he=!0}}function x(B,D,H){var he=!1;if((D===void 0||D<0)&&(D=0),D>this.length||((H===void 0||H>this.length)&&(H=this.length),H<=0)||(H>>>=0)<=(D>>>=0))return"";for(B||(B="utf8");;)switch(B){case"hex":return oe(this,D,H);case"utf8":case"utf-8":return Q(this,D,H);case"ascii":return ne(this,D,H);case"latin1":case"binary":return J(this,D,H);case"base64":return U(this,D,H);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return le(this,D,H);default:if(he)throw new TypeError("Unknown encoding: "+B);B=(B+"").toLowerCase(),he=!0}}function w(B,D,H){var he=B[D];B[D]=B[H],B[H]=he}function I(B,D,H,he,j){if(B.length===0)return-1;if(typeof H=="string"?(he=H,H=0):H>2147483647?H=2147483647:H<-2147483648&&(H=-2147483648),H=+H,isNaN(H)&&(H=j?0:B.length-1),H<0&&(H=B.length+H),H>=B.length){if(j)return-1;H=B.length-1}else if(H<0){if(!j)return-1;H=0}if(typeof D=="string"&&(D=l.from(D,he)),l.isBuffer(D))return D.length===0?-1:N(B,D,H,he,j);if(typeof D=="number")return D&=255,l.TYPED_ARRAY_SUPPORT&&typeof Uint8Array.prototype.indexOf=="function"?j?Uint8Array.prototype.indexOf.call(B,D,H):Uint8Array.prototype.lastIndexOf.call(B,D,H):N(B,[D],H,he,j);throw new TypeError("val must be string, number or Buffer")}function N(B,D,H,he,j){var ee,ye=1,Oe=B.length,ze=D.length;if(he!==void 0&&((he=String(he).toLowerCase())==="ucs2"||he==="ucs-2"||he==="utf16le"||he==="utf-16le")){if(B.length<2||D.length<2)return-1;ye=2,Oe/=2,ze/=2,H/=2}function Xe(gt,ht){return ye===1?gt[ht]:gt.readUInt16BE(ht*ye)}if(j){var ot=-1;for(ee=H;ee<Oe;ee++)if(Xe(B,ee)===Xe(D,ot===-1?0:ee-ot)){if(ot===-1&&(ot=ee),ee-ot+1===ze)return ot*ye}else ot!==-1&&(ee-=ee-ot),ot=-1}else for(H+ze>Oe&&(H=Oe-ze),ee=H;ee>=0;ee--){for(var st=!0,pt=0;pt<ze;pt++)if(Xe(B,ee+pt)!==Xe(D,pt)){st=!1;break}if(st)return ee}return-1}function A(B,D,H,he){H=Number(H)||0;var j=B.length-H;he?(he=Number(he))>j&&(he=j):he=j;var ee=D.length;if(ee%2!=0)throw new TypeError("Invalid hex string");he>ee/2&&(he=ee/2);for(var ye=0;ye<he;++ye){var Oe=parseInt(D.substr(2*ye,2),16);if(isNaN(Oe))return ye;B[H+ye]=Oe}return ye}function T(B,D,H,he){return pe(we(D,B.length-H),B,H,he)}function P(B,D,H,he){return pe(function(j){for(var ee=[],ye=0;ye<j.length;++ye)ee.push(255&j.charCodeAt(ye));return ee}(D),B,H,he)}function O(B,D,H,he){return P(B,D,H,he)}function F(B,D,H,he){return pe(Le(D),B,H,he)}function G(B,D,H,he){return pe(function(j,ee){for(var ye,Oe,ze,Xe=[],ot=0;ot<j.length&&!((ee-=2)<0);++ot)ye=j.charCodeAt(ot),Oe=ye>>8,ze=ye%256,Xe.push(ze),Xe.push(Oe);return Xe}(D,B.length-H),B,H,he)}function U(B,D,H){return D===0&&H===B.length?r.fromByteArray(B):r.fromByteArray(B.slice(D,H))}function Q(B,D,H){H=Math.min(B.length,H);for(var he=[],j=D;j<H;){var ee,ye,Oe,ze,Xe=B[j],ot=null,st=Xe>239?4:Xe>223?3:Xe>191?2:1;if(j+st<=H)switch(st){case 1:Xe<128&&(ot=Xe);break;case 2:(192&(ee=B[j+1]))==128&&(ze=(31&Xe)<<6|63&ee)>127&&(ot=ze);break;case 3:ee=B[j+1],ye=B[j+2],(192&ee)==128&&(192&ye)==128&&(ze=(15&Xe)<<12|(63&ee)<<6|63&ye)>2047&&(ze<55296||ze>57343)&&(ot=ze);break;case 4:ee=B[j+1],ye=B[j+2],Oe=B[j+3],(192&ee)==128&&(192&ye)==128&&(192&Oe)==128&&(ze=(15&Xe)<<18|(63&ee)<<12|(63&ye)<<6|63&Oe)>65535&&ze<1114112&&(ot=ze)}ot===null?(ot=65533,st=1):ot>65535&&(ot-=65536,he.push(ot>>>10&1023|55296),ot=56320|1023&ot),he.push(ot),j+=st}return function(pt){var gt=pt.length;if(gt<=4096)return String.fromCharCode.apply(String,pt);for(var ht="",Tt=0;Tt<gt;)ht+=String.fromCharCode.apply(String,pt.slice(Tt,Tt+=4096));return ht}(he)}e.Buffer=l,e.SlowBuffer=function(B){return+B!=B&&(B=0),l.alloc(+B)},e.INSPECT_MAX_BYTES=50,l.TYPED_ARRAY_SUPPORT=s.TYPED_ARRAY_SUPPORT!==void 0?s.TYPED_ARRAY_SUPPORT:function(){try{var B=new Uint8Array(1);return B.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},B.foo()===42&&typeof B.subarray=="function"&&B.subarray(1,1).byteLength===0}catch{return!1}}(),e.kMaxLength=c(),l.poolSize=8192,l._augment=function(B){return B.__proto__=l.prototype,B},l.from=function(B,D,H){return d(null,B,D,H)},l.TYPED_ARRAY_SUPPORT&&(l.prototype.__proto__=Uint8Array.prototype,l.__proto__=Uint8Array,typeof Symbol<"u"&&Symbol.species&&l[Symbol.species]===l&&Object.defineProperty(l,Symbol.species,{value:null,configurable:!0})),l.alloc=function(B,D,H){return function(he,j,ee,ye){return f(j),j<=0?a(he,j):ee!==void 0?typeof ye=="string"?a(he,j).fill(ee,ye):a(he,j).fill(ee):a(he,j)}(null,B,D,H)},l.allocUnsafe=function(B){return y(null,B)},l.allocUnsafeSlow=function(B){return y(null,B)},l.isBuffer=function(B){return!(B==null||!B._isBuffer)},l.compare=function(B,D){if(!l.isBuffer(B)||!l.isBuffer(D))throw new TypeError("Arguments must be Buffers");if(B===D)return 0;for(var H=B.length,he=D.length,j=0,ee=Math.min(H,he);j<ee;++j)if(B[j]!==D[j]){H=B[j],he=D[j];break}return H<he?-1:he<H?1:0},l.isEncoding=function(B){switch(String(B).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(B,D){if(!i(B))throw new TypeError('"list" argument must be an Array of Buffers');if(B.length===0)return l.alloc(0);var H;if(D===void 0)for(D=0,H=0;H<B.length;++H)D+=B[H].length;var he=l.allocUnsafe(D),j=0;for(H=0;H<B.length;++H){var ee=B[H];if(!l.isBuffer(ee))throw new TypeError('"list" argument must be an Array of Buffers');ee.copy(he,j),j+=ee.length}return he},l.byteLength=g,l.prototype._isBuffer=!0,l.prototype.swap16=function(){var B=this.length;if(B%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var D=0;D<B;D+=2)w(this,D,D+1);return this},l.prototype.swap32=function(){var B=this.length;if(B%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var D=0;D<B;D+=4)w(this,D,D+3),w(this,D+1,D+2);return this},l.prototype.swap64=function(){var B=this.length;if(B%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var D=0;D<B;D+=8)w(this,D,D+7),w(this,D+1,D+6),w(this,D+2,D+5),w(this,D+3,D+4);return this},l.prototype.toString=function(){var B=0|this.length;return B===0?"":arguments.length===0?Q(this,0,B):x.apply(this,arguments)},l.prototype.equals=function(B){if(!l.isBuffer(B))throw new TypeError("Argument must be a Buffer");return this===B||l.compare(this,B)===0},l.prototype.inspect=function(){var B="",D=e.INSPECT_MAX_BYTES;return this.length>0&&(B=this.toString("hex",0,D).match(/.{2}/g).join(" "),this.length>D&&(B+=" ... ")),"<Buffer "+B+">"},l.prototype.compare=function(B,D,H,he,j){if(!l.isBuffer(B))throw new TypeError("Argument must be a Buffer");if(D===void 0&&(D=0),H===void 0&&(H=B?B.length:0),he===void 0&&(he=0),j===void 0&&(j=this.length),D<0||H>B.length||he<0||j>this.length)throw new RangeError("out of range index");if(he>=j&&D>=H)return 0;if(he>=j)return-1;if(D>=H)return 1;if(this===B)return 0;for(var ee=(j>>>=0)-(he>>>=0),ye=(H>>>=0)-(D>>>=0),Oe=Math.min(ee,ye),ze=this.slice(he,j),Xe=B.slice(D,H),ot=0;ot<Oe;++ot)if(ze[ot]!==Xe[ot]){ee=ze[ot],ye=Xe[ot];break}return ee<ye?-1:ye<ee?1:0},l.prototype.includes=function(B,D,H){return this.indexOf(B,D,H)!==-1},l.prototype.indexOf=function(B,D,H){return I(this,B,D,H,!0)},l.prototype.lastIndexOf=function(B,D,H){return I(this,B,D,H,!1)},l.prototype.write=function(B,D,H,he){if(D===void 0)he="utf8",H=this.length,D=0;else if(H===void 0&&typeof D=="string")he=D,H=this.length,D=0;else{if(!isFinite(D))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");D|=0,isFinite(H)?(H|=0,he===void 0&&(he="utf8")):(he=H,H=void 0)}var j=this.length-D;if((H===void 0||H>j)&&(H=j),B.length>0&&(H<0||D<0)||D>this.length)throw new RangeError("Attempt to write outside buffer bounds");he||(he="utf8");for(var ee=!1;;)switch(he){case"hex":return A(this,B,D,H);case"utf8":case"utf-8":return T(this,B,D,H);case"ascii":return P(this,B,D,H);case"latin1":case"binary":return O(this,B,D,H);case"base64":return F(this,B,D,H);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return G(this,B,D,H);default:if(ee)throw new TypeError("Unknown encoding: "+he);he=(""+he).toLowerCase(),ee=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function ne(B,D,H){var he="";H=Math.min(B.length,H);for(var j=D;j<H;++j)he+=String.fromCharCode(127&B[j]);return he}function J(B,D,H){var he="";H=Math.min(B.length,H);for(var j=D;j<H;++j)he+=String.fromCharCode(B[j]);return he}function oe(B,D,H){var he=B.length;(!D||D<0)&&(D=0),(!H||H<0||H>he)&&(H=he);for(var j="",ee=D;ee<H;++ee)j+=Ae(B[ee]);return j}function le(B,D,H){for(var he=B.slice(D,H),j="",ee=0;ee<he.length;ee+=2)j+=String.fromCharCode(he[ee]+256*he[ee+1]);return j}function ge(B,D,H){if(B%1!=0||B<0)throw new RangeError("offset is not uint");if(B+D>H)throw new RangeError("Trying to access beyond buffer length")}function te(B,D,H,he,j,ee){if(!l.isBuffer(B))throw new TypeError('"buffer" argument must be a Buffer instance');if(D>j||D<ee)throw new RangeError('"value" argument is out of bounds');if(H+he>B.length)throw new RangeError("Index out of range")}function ce(B,D,H,he){D<0&&(D=65535+D+1);for(var j=0,ee=Math.min(B.length-H,2);j<ee;++j)B[H+j]=(D&255<<8*(he?j:1-j))>>>8*(he?j:1-j)}function ue(B,D,H,he){D<0&&(D=4294967295+D+1);for(var j=0,ee=Math.min(B.length-H,4);j<ee;++j)B[H+j]=D>>>8*(he?j:3-j)&255}function Te(B,D,H,he,j,ee){if(H+he>B.length)throw new RangeError("Index out of range");if(H<0)throw new RangeError("Index out of range")}function Ce(B,D,H,he,j){return j||Te(B,0,H,4),o.write(B,D,H,he,23,4),H+4}function Ne(B,D,H,he,j){return j||Te(B,0,H,8),o.write(B,D,H,he,52,8),H+8}l.prototype.slice=function(B,D){var H,he=this.length;if((B=~~B)<0?(B+=he)<0&&(B=0):B>he&&(B=he),(D=D===void 0?he:~~D)<0?(D+=he)<0&&(D=0):D>he&&(D=he),D<B&&(D=B),l.TYPED_ARRAY_SUPPORT)(H=this.subarray(B,D)).__proto__=l.prototype;else{var j=D-B;H=new l(j,void 0);for(var ee=0;ee<j;++ee)H[ee]=this[ee+B]}return H},l.prototype.readUIntLE=function(B,D,H){B|=0,D|=0,H||ge(B,D,this.length);for(var he=this[B],j=1,ee=0;++ee<D&&(j*=256);)he+=this[B+ee]*j;return he},l.prototype.readUIntBE=function(B,D,H){B|=0,D|=0,H||ge(B,D,this.length);for(var he=this[B+--D],j=1;D>0&&(j*=256);)he+=this[B+--D]*j;return he},l.prototype.readUInt8=function(B,D){return D||ge(B,1,this.length),this[B]},l.prototype.readUInt16LE=function(B,D){return D||ge(B,2,this.length),this[B]|this[B+1]<<8},l.prototype.readUInt16BE=function(B,D){return D||ge(B,2,this.length),this[B]<<8|this[B+1]},l.prototype.readUInt32LE=function(B,D){return D||ge(B,4,this.length),(this[B]|this[B+1]<<8|this[B+2]<<16)+16777216*this[B+3]},l.prototype.readUInt32BE=function(B,D){return D||ge(B,4,this.length),16777216*this[B]+(this[B+1]<<16|this[B+2]<<8|this[B+3])},l.prototype.readIntLE=function(B,D,H){B|=0,D|=0,H||ge(B,D,this.length);for(var he=this[B],j=1,ee=0;++ee<D&&(j*=256);)he+=this[B+ee]*j;return he>=(j*=128)&&(he-=Math.pow(2,8*D)),he},l.prototype.readIntBE=function(B,D,H){B|=0,D|=0,H||ge(B,D,this.length);for(var he=D,j=1,ee=this[B+--he];he>0&&(j*=256);)ee+=this[B+--he]*j;return ee>=(j*=128)&&(ee-=Math.pow(2,8*D)),ee},l.prototype.readInt8=function(B,D){return D||ge(B,1,this.length),128&this[B]?-1*(255-this[B]+1):this[B]},l.prototype.readInt16LE=function(B,D){D||ge(B,2,this.length);var H=this[B]|this[B+1]<<8;return 32768&H?4294901760|H:H},l.prototype.readInt16BE=function(B,D){D||ge(B,2,this.length);var H=this[B+1]|this[B]<<8;return 32768&H?4294901760|H:H},l.prototype.readInt32LE=function(B,D){return D||ge(B,4,this.length),this[B]|this[B+1]<<8|this[B+2]<<16|this[B+3]<<24},l.prototype.readInt32BE=function(B,D){return D||ge(B,4,this.length),this[B]<<24|this[B+1]<<16|this[B+2]<<8|this[B+3]},l.prototype.readFloatLE=function(B,D){return D||ge(B,4,this.length),o.read(this,B,!0,23,4)},l.prototype.readFloatBE=function(B,D){return D||ge(B,4,this.length),o.read(this,B,!1,23,4)},l.prototype.readDoubleLE=function(B,D){return D||ge(B,8,this.length),o.read(this,B,!0,52,8)},l.prototype.readDoubleBE=function(B,D){return D||ge(B,8,this.length),o.read(this,B,!1,52,8)},l.prototype.writeUIntLE=function(B,D,H,he){B=+B,D|=0,H|=0,he||te(this,B,D,H,Math.pow(2,8*H)-1,0);var j=1,ee=0;for(this[D]=255&B;++ee<H&&(j*=256);)this[D+ee]=B/j&255;return D+H},l.prototype.writeUIntBE=function(B,D,H,he){B=+B,D|=0,H|=0,he||te(this,B,D,H,Math.pow(2,8*H)-1,0);var j=H-1,ee=1;for(this[D+j]=255&B;--j>=0&&(ee*=256);)this[D+j]=B/ee&255;return D+H},l.prototype.writeUInt8=function(B,D,H){return B=+B,D|=0,H||te(this,B,D,1,255,0),l.TYPED_ARRAY_SUPPORT||(B=Math.floor(B)),this[D]=255&B,D+1},l.prototype.writeUInt16LE=function(B,D,H){return B=+B,D|=0,H||te(this,B,D,2,65535,0),l.TYPED_ARRAY_SUPPORT?(this[D]=255&B,this[D+1]=B>>>8):ce(this,B,D,!0),D+2},l.prototype.writeUInt16BE=function(B,D,H){return B=+B,D|=0,H||te(this,B,D,2,65535,0),l.TYPED_ARRAY_SUPPORT?(this[D]=B>>>8,this[D+1]=255&B):ce(this,B,D,!1),D+2},l.prototype.writeUInt32LE=function(B,D,H){return B=+B,D|=0,H||te(this,B,D,4,4294967295,0),l.TYPED_ARRAY_SUPPORT?(this[D+3]=B>>>24,this[D+2]=B>>>16,this[D+1]=B>>>8,this[D]=255&B):ue(this,B,D,!0),D+4},l.prototype.writeUInt32BE=function(B,D,H){return B=+B,D|=0,H||te(this,B,D,4,4294967295,0),l.TYPED_ARRAY_SUPPORT?(this[D]=B>>>24,this[D+1]=B>>>16,this[D+2]=B>>>8,this[D+3]=255&B):ue(this,B,D,!1),D+4},l.prototype.writeIntLE=function(B,D,H,he){if(B=+B,D|=0,!he){var j=Math.pow(2,8*H-1);te(this,B,D,H,j-1,-j)}var ee=0,ye=1,Oe=0;for(this[D]=255&B;++ee<H&&(ye*=256);)B<0&&Oe===0&&this[D+ee-1]!==0&&(Oe=1),this[D+ee]=(B/ye>>0)-Oe&255;return D+H},l.prototype.writeIntBE=function(B,D,H,he){if(B=+B,D|=0,!he){var j=Math.pow(2,8*H-1);te(this,B,D,H,j-1,-j)}var ee=H-1,ye=1,Oe=0;for(this[D+ee]=255&B;--ee>=0&&(ye*=256);)B<0&&Oe===0&&this[D+ee+1]!==0&&(Oe=1),this[D+ee]=(B/ye>>0)-Oe&255;return D+H},l.prototype.writeInt8=function(B,D,H){return B=+B,D|=0,H||te(this,B,D,1,127,-128),l.TYPED_ARRAY_SUPPORT||(B=Math.floor(B)),B<0&&(B=255+B+1),this[D]=255&B,D+1},l.prototype.writeInt16LE=function(B,D,H){return B=+B,D|=0,H||te(this,B,D,2,32767,-32768),l.TYPED_ARRAY_SUPPORT?(this[D]=255&B,this[D+1]=B>>>8):ce(this,B,D,!0),D+2},l.prototype.writeInt16BE=function(B,D,H){return B=+B,D|=0,H||te(this,B,D,2,32767,-32768),l.TYPED_ARRAY_SUPPORT?(this[D]=B>>>8,this[D+1]=255&B):ce(this,B,D,!1),D+2},l.prototype.writeInt32LE=function(B,D,H){return B=+B,D|=0,H||te(this,B,D,4,2147483647,-2147483648),l.TYPED_ARRAY_SUPPORT?(this[D]=255&B,this[D+1]=B>>>8,this[D+2]=B>>>16,this[D+3]=B>>>24):ue(this,B,D,!0),D+4},l.prototype.writeInt32BE=function(B,D,H){return B=+B,D|=0,H||te(this,B,D,4,2147483647,-2147483648),B<0&&(B=4294967295+B+1),l.TYPED_ARRAY_SUPPORT?(this[D]=B>>>24,this[D+1]=B>>>16,this[D+2]=B>>>8,this[D+3]=255&B):ue(this,B,D,!1),D+4},l.prototype.writeFloatLE=function(B,D,H){return Ce(this,B,D,!0,H)},l.prototype.writeFloatBE=function(B,D,H){return Ce(this,B,D,!1,H)},l.prototype.writeDoubleLE=function(B,D,H){return Ne(this,B,D,!0,H)},l.prototype.writeDoubleBE=function(B,D,H){return Ne(this,B,D,!1,H)},l.prototype.copy=function(B,D,H,he){if(H||(H=0),he||he===0||(he=this.length),D>=B.length&&(D=B.length),D||(D=0),he>0&&he<H&&(he=H),he===H||B.length===0||this.length===0)return 0;if(D<0)throw new RangeError("targetStart out of bounds");if(H<0||H>=this.length)throw new RangeError("sourceStart out of bounds");if(he<0)throw new RangeError("sourceEnd out of bounds");he>this.length&&(he=this.length),B.length-D<he-H&&(he=B.length-D+H);var j,ee=he-H;if(this===B&&H<D&&D<he)for(j=ee-1;j>=0;--j)B[j+D]=this[j+H];else if(ee<1e3||!l.TYPED_ARRAY_SUPPORT)for(j=0;j<ee;++j)B[j+D]=this[j+H];else Uint8Array.prototype.set.call(B,this.subarray(H,H+ee),D);return ee},l.prototype.fill=function(B,D,H,he){if(typeof B=="string"){if(typeof D=="string"?(he=D,D=0,H=this.length):typeof H=="string"&&(he=H,H=this.length),B.length===1){var j=B.charCodeAt(0);j<256&&(B=j)}if(he!==void 0&&typeof he!="string")throw new TypeError("encoding must be a string");if(typeof he=="string"&&!l.isEncoding(he))throw new TypeError("Unknown encoding: "+he)}else typeof B=="number"&&(B&=255);if(D<0||this.length<D||this.length<H)throw new RangeError("Out of range index");if(H<=D)return this;var ee;if(D>>>=0,H=H===void 0?this.length:H>>>0,B||(B=0),typeof B=="number")for(ee=D;ee<H;++ee)this[ee]=B;else{var ye=l.isBuffer(B)?B:we(new l(B,he).toString()),Oe=ye.length;for(ee=0;ee<H-D;++ee)this[ee+D]=ye[ee%Oe]}return this};var Re=/[^+\/0-9A-Za-z-_]/g;function Ae(B){return B<16?"0"+B.toString(16):B.toString(16)}function we(B,D){var H;D=D||1/0;for(var he=B.length,j=null,ee=[],ye=0;ye<he;++ye){if((H=B.charCodeAt(ye))>55295&&H<57344){if(!j){if(H>56319){(D-=3)>-1&&ee.push(239,191,189);continue}if(ye+1===he){(D-=3)>-1&&ee.push(239,191,189);continue}j=H;continue}if(H<56320){(D-=3)>-1&&ee.push(239,191,189),j=H;continue}H=65536+(j-55296<<10|H-56320)}else j&&(D-=3)>-1&&ee.push(239,191,189);if(j=null,H<128){if((D-=1)<0)break;ee.push(H)}else if(H<2048){if((D-=2)<0)break;ee.push(H>>6|192,63&H|128)}else if(H<65536){if((D-=3)<0)break;ee.push(H>>12|224,H>>6&63|128,63&H|128)}else{if(!(H<1114112))throw new Error("Invalid code point");if((D-=4)<0)break;ee.push(H>>18|240,H>>12&63|128,H>>6&63|128,63&H|128)}}return ee}function Le(B){return r.toByteArray(function(D){if((D=function(H){return H.trim?H.trim():H.replace(/^\s+|\s+$/g,"")}(D).replace(Re,"")).length<2)return"";for(;D.length%4!=0;)D+="=";return D}(B))}function pe(B,D,H,he){for(var j=0;j<he&&!(j+H>=D.length||j>=B.length);++j)D[j+H]=B[j];return j}}).call(this,t(21))},function(n,e,t){var s=t(87);function r(){this.argTypes=[],this.shimArgs=[],this.arrayArgs=[],this.arrayBlockIndices=[],this.scalarArgs=[],this.offsetArgs=[],this.offsetArgIndex=[],this.indexArgs=[],this.shapeArgs=[],this.funcName="",this.pre=null,this.body=null,this.post=null,this.debug=!1}n.exports=function(o){var i=new r;i.pre=o.pre,i.body=o.body,i.post=o.post;var c=o.args.slice(0);i.argTypes=c;for(var a=0;a<c.length;++a){var l=c[a];if(l==="array"||typeof l=="object"&&l.blockIndices){if(i.argTypes[a]="array",i.arrayArgs.push(a),i.arrayBlockIndices.push(l.blockIndices?l.blockIndices:0),i.shimArgs.push("array"+a),a<i.pre.args.length&&i.pre.args[a].count>0)throw new Error("cwise: pre() block may not reference array args");if(a<i.post.args.length&&i.post.args[a].count>0)throw new Error("cwise: post() block may not reference array args")}else if(l==="scalar")i.scalarArgs.push(a),i.shimArgs.push("scalar"+a);else if(l==="index"){if(i.indexArgs.push(a),a<i.pre.args.length&&i.pre.args[a].count>0)throw new Error("cwise: pre() block may not reference array index");if(a<i.body.args.length&&i.body.args[a].lvalue)throw new Error("cwise: body() block may not write to array index");if(a<i.post.args.length&&i.post.args[a].count>0)throw new Error("cwise: post() block may not reference array index")}else if(l==="shape"){if(i.shapeArgs.push(a),a<i.pre.args.length&&i.pre.args[a].lvalue)throw new Error("cwise: pre() block may not write to array shape");if(a<i.body.args.length&&i.body.args[a].lvalue)throw new Error("cwise: body() block may not write to array shape");if(a<i.post.args.length&&i.post.args[a].lvalue)throw new Error("cwise: post() block may not write to array shape")}else{if(typeof l!="object"||!l.offset)throw new Error("cwise: Unknown argument type "+c[a]);i.argTypes[a]="offset",i.offsetArgs.push({array:l.array,offset:l.offset}),i.offsetArgIndex.push(a)}}if(i.arrayArgs.length<=0)throw new Error("cwise: No array arguments specified");if(i.pre.args.length>c.length)throw new Error("cwise: Too many arguments in pre() block");if(i.body.args.length>c.length)throw new Error("cwise: Too many arguments in body() block");if(i.post.args.length>c.length)throw new Error("cwise: Too many arguments in post() block");return i.debug=!!o.printCode||!!o.debug,i.funcName=o.funcName||"cwise",i.blockSize=o.blockSize||64,s(i)}},function(n,e,t){n.exports=function(s,r,o){return s.length===0?s:r?(o||s.sort(r),function(i,c){for(var a=1,l=i.length,d=i[0],f=i[0],y=1;y<l;++y)if(f=d,c(d=i[y],f)){if(y===a){a++;continue}i[a++]=d}return i.length=a,i}(s,r)):(o||s.sort(),function(i){for(var c=1,a=i.length,l=i[0],d=i[0],f=1;f<a;++f,d=l)if(d=l,(l=i[f])!==d){if(f===c){c++;continue}i[c++]=l}return i.length=c,i}(s))}},function(n,e,t){(function(s){var r=t(72),o=t(89),i=t(68).Buffer;s.__TYPEDARRAY_POOL||(s.__TYPEDARRAY_POOL={UINT8:o([32,0]),UINT16:o([32,0]),UINT32:o([32,0]),BIGUINT64:o([32,0]),INT8:o([32,0]),INT16:o([32,0]),INT32:o([32,0]),BIGINT64:o([32,0]),FLOAT:o([32,0]),DOUBLE:o([32,0]),DATA:o([32,0]),UINT8C:o([32,0]),BUFFER:o([32,0])});var c=typeof Uint8ClampedArray<"u",a=typeof BigUint64Array<"u",l=typeof BigInt64Array<"u",d=s.__TYPEDARRAY_POOL;d.UINT8C||(d.UINT8C=o([32,0])),d.BIGUINT64||(d.BIGUINT64=o([32,0])),d.BIGINT64||(d.BIGINT64=o([32,0])),d.BUFFER||(d.BUFFER=o([32,0]));var f=d.DATA,y=d.BUFFER;function m(ne){if(ne){var J=ne.length||ne.byteLength,oe=r.log2(J);f[oe].push(ne)}}function h(ne){ne=r.nextPow2(ne);var J=r.log2(ne),oe=f[J];return oe.length>0?oe.pop():new ArrayBuffer(ne)}function g(ne){return new Uint8Array(h(ne),0,ne)}function x(ne){return new Uint16Array(h(2*ne),0,ne)}function w(ne){return new Uint32Array(h(4*ne),0,ne)}function I(ne){return new Int8Array(h(ne),0,ne)}function N(ne){return new Int16Array(h(2*ne),0,ne)}function A(ne){return new Int32Array(h(4*ne),0,ne)}function T(ne){return new Float32Array(h(4*ne),0,ne)}function P(ne){return new Float64Array(h(8*ne),0,ne)}function O(ne){return c?new Uint8ClampedArray(h(ne),0,ne):g(ne)}function F(ne){return a?new BigUint64Array(h(8*ne),0,ne):null}function G(ne){return l?new BigInt64Array(h(8*ne),0,ne):null}function U(ne){return new DataView(h(ne),0,ne)}function Q(ne){ne=r.nextPow2(ne);var J=r.log2(ne),oe=y[J];return oe.length>0?oe.pop():new i(ne)}e.free=function(ne){if(i.isBuffer(ne))y[r.log2(ne.length)].push(ne);else{if(Object.prototype.toString.call(ne)!=="[object ArrayBuffer]"&&(ne=ne.buffer),!ne)return;var J=ne.length||ne.byteLength,oe=0|r.log2(J);f[oe].push(ne)}},e.freeUint8=e.freeUint16=e.freeUint32=e.freeBigUint64=e.freeInt8=e.freeInt16=e.freeInt32=e.freeBigInt64=e.freeFloat32=e.freeFloat=e.freeFloat64=e.freeDouble=e.freeUint8Clamped=e.freeDataView=function(ne){m(ne.buffer)},e.freeArrayBuffer=m,e.freeBuffer=function(ne){y[r.log2(ne.length)].push(ne)},e.malloc=function(ne,J){if(J===void 0||J==="arraybuffer")return h(ne);switch(J){case"uint8":return g(ne);case"uint16":return x(ne);case"uint32":return w(ne);case"int8":return I(ne);case"int16":return N(ne);case"int32":return A(ne);case"float":case"float32":return T(ne);case"double":case"float64":return P(ne);case"uint8_clamped":return O(ne);case"bigint64":return G(ne);case"biguint64":return F(ne);case"buffer":return Q(ne);case"data":case"dataview":return U(ne);default:return null}return null},e.mallocArrayBuffer=h,e.mallocUint8=g,e.mallocUint16=x,e.mallocUint32=w,e.mallocInt8=I,e.mallocInt16=N,e.mallocInt32=A,e.mallocFloat32=e.mallocFloat=T,e.mallocFloat64=e.mallocDouble=P,e.mallocUint8Clamped=O,e.mallocBigUint64=F,e.mallocBigInt64=G,e.mallocDataView=U,e.mallocBuffer=Q,e.clearCache=function(){for(var ne=0;ne<32;++ne)d.UINT8[ne].length=0,d.UINT16[ne].length=0,d.UINT32[ne].length=0,d.INT8[ne].length=0,d.INT16[ne].length=0,d.INT32[ne].length=0,d.FLOAT[ne].length=0,d.DOUBLE[ne].length=0,d.BIGUINT64[ne].length=0,d.BIGINT64[ne].length=0,d.UINT8C[ne].length=0,f[ne].length=0,y[ne].length=0}}).call(this,t(21))},function(n,e,t){function s(o){var i=32;return(o&=-o)&&i--,65535&o&&(i-=16),16711935&o&&(i-=8),252645135&o&&(i-=4),858993459&o&&(i-=2),1431655765&o&&(i-=1),i}e.INT_BITS=32,e.INT_MAX=2147483647,e.INT_MIN=-1<<31,e.sign=function(o){return(o>0)-(o<0)},e.abs=function(o){var i=o>>31;return(o^i)-i},e.min=function(o,i){return i^(o^i)&-(o<i)},e.max=function(o,i){return o^(o^i)&-(o<i)},e.isPow2=function(o){return!(o&o-1||!o)},e.log2=function(o){var i,c;return i=(o>65535)<<4,i|=c=((o>>>=i)>255)<<3,i|=c=((o>>>=c)>15)<<2,(i|=c=((o>>>=c)>3)<<1)|(o>>>=c)>>1},e.log10=function(o){return o>=1e9?9:o>=1e8?8:o>=1e7?7:o>=1e6?6:o>=1e5?5:o>=1e4?4:o>=1e3?3:o>=100?2:o>=10?1:0},e.popCount=function(o){return 16843009*((o=(858993459&(o-=o>>>1&1431655765))+(o>>>2&858993459))+(o>>>4)&252645135)>>>24},e.countTrailingZeros=s,e.nextPow2=function(o){return o+=o===0,--o,o|=o>>>1,o|=o>>>2,o|=o>>>4,o|=o>>>8,(o|=o>>>16)+1},e.prevPow2=function(o){return o|=o>>>1,o|=o>>>2,o|=o>>>4,o|=o>>>8,(o|=o>>>16)-(o>>>1)},e.parity=function(o){return o^=o>>>16,o^=o>>>8,o^=o>>>4,27030>>>(o&=15)&1};var r=new Array(256);(function(o){for(var i=0;i<256;++i){var c=i,a=i,l=7;for(c>>>=1;c;c>>>=1)a<<=1,a|=1&c,--l;o[i]=a<<l&255}})(r),e.reverse=function(o){return r[255&o]<<24|r[o>>>8&255]<<16|r[o>>>16&255]<<8|r[o>>>24&255]},e.interleave2=function(o,i){return(o=1431655765&((o=858993459&((o=252645135&((o=16711935&((o&=65535)|o<<8))|o<<4))|o<<2))|o<<1))|(i=1431655765&((i=858993459&((i=252645135&((i=16711935&((i&=65535)|i<<8))|i<<4))|i<<2))|i<<1))<<1},e.deinterleave2=function(o,i){return(o=65535&((o=16711935&((o=252645135&((o=858993459&((o=o>>>i&1431655765)|o>>>1))|o>>>2))|o>>>4))|o>>>16))<<16>>16},e.interleave3=function(o,i,c){return o=1227133513&((o=3272356035&((o=251719695&((o=4278190335&((o&=1023)|o<<16))|o<<8))|o<<4))|o<<2),(o|=(i=1227133513&((i=3272356035&((i=251719695&((i=4278190335&((i&=1023)|i<<16))|i<<8))|i<<4))|i<<2))<<1)|(c=1227133513&((c=3272356035&((c=251719695&((c=4278190335&((c&=1023)|c<<16))|c<<8))|c<<4))|c<<2))<<2},e.deinterleave3=function(o,i){return(o=1023&((o=4278190335&((o=251719695&((o=3272356035&((o=o>>>i&1227133513)|o>>>2))|o>>>4))|o>>>8))|o>>>16))<<22>>22},e.nextCombination=function(o){var i=o|o-1;return i+1|(~i&-~i)-1>>>s(o)+1}},function(n,e,t){t.r(e),t.d(e,"aux_inputs",function(){return s}),t.d(e,"chords",function(){return r}),t.d(e,"constants",function(){return o}),t.d(e,"data",function(){return i}),t.d(e,"logging",function(){return c}),t.d(e,"melodies",function(){return a}),t.d(e,"performance",function(){return l}),t.d(e,"sequences",function(){return d}),t.d(e,"MetronomeCallbackObject",function(){return y}),t.d(e,"Metronome",function(){return m}),t.d(e,"MidiConversionError",function(){return w}),t.d(e,"midiToSequenceProto",function(){return I}),t.d(e,"sequenceProtoToMidi",function(){return N}),t.d(e,"urlToBlob",function(){return A}),t.d(e,"blobToNoteSequence",function(){return T}),t.d(e,"urlToNoteSequence",function(){return P}),t.d(e,"BasePlayerCallback",function(){return U}),t.d(e,"BasePlayer",function(){return Q}),t.d(e,"Player",function(){return J}),t.d(e,"SoundFontPlayer",function(){return oe}),t.d(e,"PlayerWithClick",function(){return le}),t.d(e,"MIDIPlayer",function(){return ge}),t.d(e,"BaseRecorderCallback",function(){return te}),t.d(e,"Recorder",function(){return ce}),t.d(e,"BaseVisualizer",function(){return Te}),t.d(e,"PianoRollCanvasVisualizer",function(){return Ce}),t.d(e,"Visualizer",function(){return Ne}),t.d(e,"BaseSVGVisualizer",function(){return Re}),t.d(e,"PianoRollSVGVisualizer",function(){return Ae}),t.d(e,"WaterfallSVGVisualizer",function(){return we}),t.d(e,"ScrollType",function(){return Le}),t.d(e,"StaffSVGVisualizer",function(){return pe});var s=t(48),r=t(37),o=t(8),i=t(36),c=t(12),a=t(23),l=t(29),d=t(13),f=t(9);class y{}class m{constructor(D,H=1){this.clicksPerQuarter=1,this.muted=!1,this.loClick=new f.MembraneSynth({pitchDecay:.008,envelope:{attack:.001,decay:.3,sustain:0}}).toDestination(),this.hiClick=new f.MembraneSynth({pitchDecay:.008,envelope:{attack:.001,decay:.3,sustain:0}}).toDestination(),this.loClickNote="c5",this.hiClickNote="g5",this.ticking=!1,this.startedAt=null,this.step=-1,this.reset(),this.callbackObject=D,this.clicksPerQuarter=H}isTicking(){return this.ticking}getStartedAt(){return this.startedAt}getOffsetTime(){return f.immediate()-this.startedAt}start(D=120){this.reset(),this.ticking=!0,this.callbackObject.click||(this.callbackObject.click=()=>{}),this.callbackObject.quarter||(this.callbackObject.quarter=()=>{}),this.callbackObject.bar||(this.callbackObject.bar=()=>{});let H=0;const he=4*this.clicksPerQuarter;f.Transport.scheduleRepeat(j=>{this.startedAt||(this.startedAt=j);const ee=j-this.startedAt;this.step++;const ye=this.step%he,Oe=Math.floor(ye/this.clicksPerQuarter),ze=ye%this.clicksPerQuarter;this.callbackObject.click(ee,ye),ze===0&&this.callbackObject.quarter(ee,Oe),this.muted||(ye===0?this.hiClick.triggerAttack(this.hiClickNote,j,.1):this.loClick.triggerAttack(this.loClickNote,j,.1)),ye===0&&(this.callbackObject.bar(ee,H),H++)},he+"n"),f.Transport.bpm.value=D,f.Transport.start()}stop(){this.ticking=!1,f.Transport.cancel(),f.Transport.stop()}reset(){this.muted=!1,this.ticking=!1,this.step=-1,this.startedAt=null}}var h=t(67),g=t(15),x=t(10);class w extends Error{constructor(D){super(D),Object.setPrototypeOf(this,new.target.prototype)}}function I(B){const D=new h.Midi(B),H=x.a.create();H.ticksPerQuarter=D.header.ppq,H.sourceInfo=x.a.SourceInfo.create({parser:x.a.SourceInfo.Parser.TONEJS_MIDI_CONVERT,encodingType:x.a.SourceInfo.EncodingType.MIDI});for(const j of D.header.timeSignatures)H.timeSignatures.push(x.a.TimeSignature.create({time:D.header.ticksToSeconds(j.ticks),numerator:j.timeSignature[0],denominator:j.timeSignature[1]}));H.timeSignatures.length||H.timeSignatures.push(x.a.TimeSignature.create({time:0,numerator:4,denominator:4}));for(const j of D.header.tempos)H.tempos.push(x.a.Tempo.create({time:j.time,qpm:j.bpm}));let he=-1;for(const j of D.tracks){j.notes.length>0&&(he+=1);for(const Oe of j.notes){const ze=Oe.time,Xe=ze+Oe.duration;H.notes.push(x.a.Note.create({instrument:he,program:j.instrument.number,startTime:ze,endTime:Xe,pitch:Oe.midi,velocity:Math.floor(Oe.velocity*o.MIDI_VELOCITIES),isDrum:j.instrument.percussion})),Xe>H.totalTime&&(H.totalTime=Xe)}const ee=Object.values(j.controlChanges),ye=[].concat.apply([],ee);for(const Oe of ye)H.controlChanges.push(x.a.ControlChange.create({time:Oe.time,controlNumber:Oe.number,controlValue:Math.floor(Oe.value*(o.MIDI_VELOCITIES-1)),instrument:he,program:j.instrument.number,isDrum:j.instrument.percussion}))}return H}function N(B){d.isQuantizedSequence(B)&&(B=d.unquantizeSequence(B));const D=new h.Midi;D.fromJSON({header:{name:"",ppq:B.ticksPerQuarter||o.DEFAULT_TICKS_PER_QUARTER,tempos:[],timeSignatures:[],keySignatures:[],meta:[]},tracks:[]});const H=Array.from(B.tempos||[]);H.length===0&&H.push({time:0,qpm:o.DEFAULT_QUARTERS_PER_MINUTE}),H.sort((j,ee)=>j.time-ee.time);for(const j of H)D.header.tempos.push({ticks:D.header.secondsToTicks(j.time),bpm:j.qpm}),D.header.update();if(B.timeSignatures&&B.timeSignatures.length!==0)for(const j of B.timeSignatures)D.header.timeSignatures.push({ticks:D.header.secondsToTicks(j.time),timeSignature:[j.numerator,j.denominator]});else D.header.timeSignatures.push({ticks:0,timeSignature:[4,4]});D.header.update();const he=new Map;for(const j of B.notes){const ee=j.instrument?j.instrument:0,ye=j.program===void 0?o.DEFAULT_PROGRAM:j.program,Oe=!!j.isDrum,ze=JSON.stringify([ee,ye,Oe]);he.has(ze)||he.set(ze,{notes:[],controlChanges:[]}),he.get(ze).notes.push(j)}for(const j of B.controlChanges){const ee=j.instrument?j.instrument:0,ye=j.program===void 0?o.DEFAULT_PROGRAM:j.program,Oe=!!j.isDrum,ze=JSON.stringify([ee,ye,Oe]);he.has(ze)||he.set(ze,{notes:[],controlChanges:[]}),he.get(ze).controlChanges.push(j)}return he.forEach((j,ee)=>{const[ye,Oe]=JSON.parse(ee).slice(1),ze=D.addTrack();ze.channel=Oe?o.DRUM_CHANNEL:o.NON_DRUM_CHANNELS[(D.tracks.length-1)%o.NON_DRUM_CHANNELS.length],ze.instrument.number=ye;for(const Xe of j.notes){const ot=Xe.velocity===void 0?o.DEFAULT_VELOCITY:Xe.velocity;ze.addNote({midi:Xe.pitch,time:Xe.startTime,duration:Xe.endTime-Xe.startTime,velocity:(ot+1)/o.MIDI_VELOCITIES})}for(const Xe of j.controlChanges)ze.addCC({number:Xe.controlNumber,value:Xe.controlValue,time:Xe.time})}),D.toArray()}function A(B){return new Promise((D,H)=>{Object(g.a)(B).then(he=>he.blob()).then(he=>{D(he)}).catch(he=>H(he))})}function T(B){return new Promise((D,H)=>{const he=new FileReader;he.onload=j=>{try{const ee=I(he.result);D(ee)}catch(ee){H(ee)}},he.onerror=j=>H(j),he.readAsArrayBuffer(B)})}function P(B){return A(B).then(T)}class O{constructor(D){this.FADE_SECONDS=.1,this.baseURL=D,this.buffers=new f.ToneAudioBuffers,this.sourceMap=new Map,this.initialized=!1}async initialize(){await Object(g.a)(this.baseURL+"/instrument.json").then(D=>D.json()).then(D=>{this.name=D.name,this.minPitch=D.minPitch,this.maxPitch=D.maxPitch,this.durationSeconds=D.durationSeconds,this.releaseSeconds=D.releaseSeconds,this.percussive=D.percussive,this.velocities=D.velocities,this.initialized=!0})}sampleInfoToName(D){return this.velocities?`p${D.pitch}_v${D.velocity}`:"p"+D.pitch}sampleNameToURL(D){return`${this.baseURL}/${D}.mp3`}nearestVelocity(D){if(!this.velocities)return D;D||(D=o.DEFAULT_VELOCITY);let H,he=o.MIDI_VELOCITIES;return this.velocities.forEach(j=>{const ee=Math.abs(j-D);ee<he&&(H=j,he=ee)}),H}async loadSamples(D){this.initialized||await this.initialize();const H=D.filter(j=>!(j.pitch<this.minPitch||j.pitch>this.maxPitch)||(c.log(`Pitch ${j.pitch} is outside the valid range for ${this.name}, ignoring.`,"SoundFont"),!1)).map(j=>this.sampleInfoToName({pitch:j.pitch,velocity:this.nearestVelocity(j.velocity)})),he=Array.from(new Set(H)).filter(j=>!this.buffers.has(j)).map(j=>({name:j,url:this.sampleNameToURL(j)}));he.length>0&&(he.forEach(j=>this.buffers.add(j.name,j.url)),await f.loaded(),c.log(`Loaded samples for ${this.name}.`,"SoundFont"))}playNote(D,H,he,j,ee){const ye=this.getBuffer(D,H);if(!ye)return;j>this.durationSeconds&&c.log(`Requested note duration longer than sample duration: ${j} > ${this.durationSeconds}`,"SoundFont");const Oe=new f.ToneBufferSource({url:ye,fadeOut:this.FADE_SECONDS}).connect(ee);if(Oe.start(he,0,void 0,1),!this.percussive&&j<this.durationSeconds){const ze=new f.ToneBufferSource({url:ye,fadeOut:this.FADE_SECONDS}).connect(ee);Oe.stop(he+j+this.FADE_SECONDS),ze.start(he+j,this.durationSeconds,void 0,1)}}playNoteDown(D,H,he){const j=this.getBuffer(D,H);if(!j)return;const ee=new f.ToneBufferSource(j).connect(he);ee.start(0,0,void 0,1),this.sourceMap.has(D)&&this.sourceMap.get(D).stop(f.now()+this.FADE_SECONDS,this.FADE_SECONDS),this.sourceMap.set(D,ee)}playNoteUp(D,H,he){if(!this.sourceMap.has(D))return;const j=this.getBuffer(D,H);j&&(new f.ToneBufferSource({url:j,fadeOut:this.FADE_SECONDS}).connect(he).start(0,this.durationSeconds,void 0,1),this.sourceMap.get(D).stop(f.now()+this.FADE_SECONDS,this.FADE_SECONDS),this.sourceMap.delete(D))}getBuffer(D,H){if(!this.initialized)throw new Error("Instrument is not initialized.");if(D<this.minPitch||D>this.maxPitch)return void c.log(`Pitch ${D} is outside the valid range for ${this.name} (${this.minPitch}-${this.maxPitch})`,"SoundFont");const he=this.sampleInfoToName({pitch:D,velocity:this.nearestVelocity(H)});if(!this.buffers.has(he))throw new Error(`Buffer not found for ${this.name}: ${he}`);const j=this.buffers.get(he);if(!j.loaded)throw new Error(`Buffer not loaded for ${this.name}: ${he}`);return j}}class F{constructor(D){this.baseURL=D,this.instruments=new Map,this.initialized=!1}async initialize(){await Object(g.a)(this.baseURL+"/soundfont.json").then(D=>D.json()).then(D=>{this.name=D.name;for(const H in D.instruments){const he=`${this.baseURL}/${D.instruments[H]}`;this.instruments.set(H==="drums"?"drums":+H,new O(he))}this.initialized=!0})}async loadSamples(D){this.initialized||await this.initialize();const H=new Map;D.forEach(he=>{he.isDrum=he.isDrum||!1,he.program=he.program||0;const j=he.isDrum?"drums":he.program,ee={pitch:he.pitch,velocity:he.velocity};H.has(j)?H.get(j).push(ee):this.instruments.has(j)?H.set(j,[ee]):c.log(`No instrument in ${this.name} for: program=${he.program}, isDrum=${he.isDrum}`,"SoundFont")}),await Promise.all(Array.from(H.keys()).map(he=>this.instruments.get(he).loadSamples(H.get(he))))}playNote(D,H,he,j,ee=0,ye=!1,Oe){const ze=ye?"drums":ee;if(!this.initialized)throw new Error("SoundFont is not initialized.");this.instruments.has(ze)?this.instruments.get(ze).playNote(D,H,he,j,Oe):c.log(`No instrument in ${this.name} for: program=${ee}, isDrum=${ye}`,"SoundFont")}playNoteDown(D,H,he=0,j=!1,ee){const ye=j?"drums":he;if(!this.initialized)throw new Error("SoundFont is not initialized.");this.instruments.has(ye)?this.instruments.get(ye).playNoteDown(D,H,ee):c.log(`No instrument in ${this.name} for: program=${he}, isDrum=${j}`,"SoundFont")}playNoteUp(D,H,he=0,j=!1,ee){const ye=j?"drums":he;if(!this.initialized)throw new Error("SoundFont is not initialized.");this.instruments.has(ye)?this.instruments.get(ye).playNoteUp(D,H,ee):c.log(`No instrument in ${this.name} for: program=${he}, isDrum=${j}`,"SoundFont")}}function G(B,D){return B.quantizedStartStep<D.quantizedStartStep?-1:B.quantizedStartStep>D.quantizedStartStep?1:B.pitch<D.pitch?-1:1}class U{}class Q{constructor(D=!1,H){this.playClick=D,this.callbackObject=H,this.desiredQPM=void 0}setTempo(D){this.desiredQPM=D,f.Transport.state==="started"&&(f.Transport.bpm.value=D)}makeClickSequence(D){const H=d.clone(D),he=H.notes.map(ee=>ee.quantizedEndStep),j=Math.max(...he);for(let ee=0;ee<j;ee+=4){const ye={pitch:ee%16==0?o.LO_CLICK_PITCH:o.HI_CLICK_PITCH,quantizedStartStep:ee,isDrum:!0,quantizedEndStep:ee+1};H.notes.push(ye)}return H.notes.sort(G),H}resumeContext(){f.context.resume()}start(D,H,he=0){if(this.getPlayState()==="started")throw new Error("Cannot start playback; player is already playing.");if(this.getPlayState()==="paused")throw new Error("Cannot `start()` a paused player; use `resume()`.");if(f.Transport.state!=="stopped")throw new Error("Cannot start playback while `Tone.Transport` is in use.");this.resumeContext();const j=d.isQuantizedSequence(D);if(this.playClick&&j&&(D=this.makeClickSequence(D)),H?f.Transport.bpm.value=H:D.tempos&&D.tempos.length>0&&D.tempos[0].qpm>0?f.Transport.bpm.value=D.tempos[0].qpm:f.Transport.bpm.value=o.DEFAULT_QUARTERS_PER_MINUTE,j)D=d.unquantizeSequence(D,H);else if(H)throw new Error("Cannot specify a `qpm` for a non-quantized sequence.");const ee=new f.Part((ye,Oe)=>{this.currentPart===ee&&(this.playNote(ye,Oe),this.callbackObject&&f.Draw.schedule(()=>{this.callbackObject.run(Oe,ye)},ye))},D.notes.map(ye=>[ye.startTime,ye]));return this.currentPart=ee,this.desiredQPM&&(f.Transport.bpm.value=this.desiredQPM),this.currentPart.start(void 0,he),f.Transport.state!=="started"&&f.Transport.start(),new Promise(ye=>{this.scheduledStop=f.Transport.schedule(()=>{this.stop(),ye(),this.callbackObject&&this.callbackObject.stop()},"+"+D.totalTime)})}stop(){this.isPlaying()&&(this.currentPart.stop(),f.Transport.stop(),this.currentPart=null),f.Transport.clear(this.scheduledStop),this.scheduledStop=void 0,this.desiredQPM=void 0}pause(){if(!this.isPlaying())throw new Error("Cannot pause playback while the player is stopped.");f.Transport.pause()}resume(){if(this.getPlayState()!=="paused")throw new Error(`Cannot resume playback while "${this.getPlayState()}".`);f.Transport.start()}seekTo(D){if(!this.isPlaying())throw new Error("Cannot seek while the player is stopped.");f.Transport.seconds=D}isPlaying(){return!!this.currentPart}getPlayState(){return this.isPlaying()?f.Transport.state:"stopped"}}class ne{constructor(){this.DRUM_PITCH_TO_CLASS=new Map,this.kick=new f.MembraneSynth().toDestination(),this.tomLow=new f.MembraneSynth({pitchDecay:.008,envelope:{attack:.01,decay:.5,sustain:0}}).toDestination(),this.tomMid=new f.MembraneSynth({pitchDecay:.008,envelope:{attack:.01,decay:.5,sustain:0}}).toDestination(),this.tomHigh=new f.MembraneSynth({pitchDecay:.008,envelope:{attack:.01,decay:.5,sustain:0}}).toDestination(),this.closedHihat=new f.MetalSynth({frequency:400,envelope:{attack:.001,decay:.1,release:.8},harmonicity:5.1,modulationIndex:32,resonance:4e3,octaves:1}).toDestination(),this.openHihat=new f.MetalSynth({frequency:400,envelope:{attack:.001,decay:.5,release:.8,sustain:1},harmonicity:5.1,modulationIndex:32,resonance:4e3,octaves:1}).toDestination(),this.ride=new f.MetalSynth().toDestination(),this.crash=new f.MetalSynth({frequency:300,envelope:{attack:.001,decay:1,release:3},harmonicity:5.1,modulationIndex:64,resonance:4e3,octaves:1.5}).toDestination(),this.snare=new f.NoiseSynth({noise:{type:"white"},envelope:{attack:.005,decay:.05,sustain:.1,release:.4}}).toDestination(),this.loClick=new f.MembraneSynth({pitchDecay:.008,envelope:{attack:.001,decay:.3,sustain:0}}).toDestination(),this.hiClick=new f.MembraneSynth({pitchDecay:.008,envelope:{attack:.001,decay:.3,sustain:0}}).toDestination(),this.pitchPlayers=[(D,H=1)=>this.kick.triggerAttackRelease("C2","8n",D,H),(D,H=1)=>this.snare.triggerAttackRelease("16n",D,H),(D,H=1)=>this.closedHihat.triggerAttack(D,.3,H),(D,H=1)=>this.openHihat.triggerAttack(D,.3,H),(D,H=.5)=>this.tomLow.triggerAttack("G3",D,H),(D,H=.5)=>this.tomMid.triggerAttack("C4",D,H),(D,H=.5)=>this.tomHigh.triggerAttack("F4",D,H),(D,H=1)=>this.crash.triggerAttack(D,1,H),(D,H=1)=>this.ride.triggerAttack(D,.5,H),(D,H=.5)=>this.loClick.triggerAttack("G5",D,H),(D,H=.5)=>this.hiClick.triggerAttack("C6",D,H)];for(let D=0;D<o.DEFAULT_DRUM_PITCH_CLASSES.length;++D)o.DEFAULT_DRUM_PITCH_CLASSES[D].forEach(H=>{this.DRUM_PITCH_TO_CLASS.set(H,D)});this.DRUM_PITCH_TO_CLASS.set(o.LO_CLICK_PITCH,o.LO_CLICK_CLASS),this.DRUM_PITCH_TO_CLASS.set(o.HI_CLICK_PITCH,o.HI_CLICK_CLASS)}static getInstance(){return ne.instance||(ne.instance=new ne),ne.instance}playNote(D,H,he){this.pitchPlayers[this.DRUM_PITCH_TO_CLASS.get(D)](H,he)}}class J extends Q{constructor(){super(...arguments),this.drumKit=ne.getInstance(),this.bassSynth=new f.Synth({volume:5,oscillator:{type:"triangle"}}).toDestination(),this.polySynth=new f.PolySynth().toDestination()}playNote(D,H){const he=H.hasOwnProperty("velocity")?H.velocity/o.MAX_MIDI_VELOCITY:void 0;if(H.isDrum)this.drumKit.playNote(H.pitch,D,he);else{const j=f.Frequency(H.pitch,"midi").toFrequency(),ee=H.endTime-H.startTime;this.getSynth(H.instrument,H.program).triggerAttackRelease(j,ee,D,he)}}getSynth(D,H){return H!==void 0&&H>=32&&H<=39?this.bassSynth:this.polySynth}}J.tone=f;class oe extends Q{constructor(D,H=f.Master,he,j,ee){super(!1,ee),this.soundFont=new F(D),this.output=H,this.programOutputs=he,this.drumOutputs=j}async loadSamples(D){await this.soundFont.loadSamples(D.notes.map(H=>({pitch:H.pitch,velocity:H.velocity,program:H.program||0,isDrum:H.isDrum||!1})))}async loadAllSamples(D=0,H=!1){const he=x.a.create(),j=H?o.MIN_DRUM_PITCH:o.MIN_PIANO_PITCH,ee=H?o.MAX_DRUM_PITCH:o.MAX_PIANO_PITCH;for(let ye=j;ye<=ee;ye++)for(let Oe=o.MIN_MIDI_VELOCITY;Oe<o.MAX_MIDI_VELOCITY;Oe++)he.notes.push({pitch:ye,velocity:Oe,program:D,isDrum:H});return this.loadSamples(he)}resumeContext(){f.context.resume()}start(D,H,he=0){return this.resumeContext(),this.loadSamples(D).then(()=>super.start(D,H,he))}playNote(D,H){this.soundFont.playNote(H.pitch,H.velocity,D,H.endTime-H.startTime,H.program,H.isDrum,this.getAudioNodeOutput(H))}playNoteDown(D){this.soundFont.playNoteDown(D.pitch,D.velocity,D.program,D.isDrum,this.getAudioNodeOutput(D))}playNoteUp(D){this.soundFont.playNoteUp(D.pitch,D.velocity,D.program,D.isDrum,this.getAudioNodeOutput(D))}getAudioNodeOutput(D){let H=this.output;return this.programOutputs&&!D.isDrum?this.programOutputs.has(D.program)&&(H=this.programOutputs.get(D.program)):this.drumOutputs&&D.isDrum&&this.drumOutputs.has(D.pitch)&&(H=this.drumOutputs.get(D.pitch)),H}}class le extends J{constructor(D){super(!0,D)}}class ge extends Q{constructor(D){super(!1,D),this.outputs=[],this.outputChannel=0,this.availableOutputs=[],this.NOTE_ON=144,this.NOTE_OFF=128}async requestMIDIAccess(){return navigator.requestMIDIAccess?new Promise((D,H)=>{navigator.requestMIDIAccess().then(he=>{he.addEventListener("statechange",j=>this.initOutputs(he)),D(this.initOutputs(he))},he=>console.log("Something went wrong",H(he)))}):null}initOutputs(D){const H=D.outputs.values();for(let he=H.next();he&&!he.done;he=H.next())this.availableOutputs.push(he.value);return this.availableOutputs}playNote(D,H){const he=H.velocity||100,j=1e3*(H.endTime-H.startTime),ee=[this.NOTE_ON+this.outputChannel,H.pitch,he],ye=[this.NOTE_OFF+this.outputChannel,H.pitch,he],Oe=this.outputs?this.outputs:this.availableOutputs;for(let ze=0;ze<Oe.length;ze++)this.sendMessageToOutput(Oe[ze],ee),this.sendMessageToOutput(Oe[ze],ye,g.d.now()+j)}sendMessageToOutput(D,H,he){D&&D.send(H,he)}playNoteDown(D){const H=[this.NOTE_ON,D.pitch,D.velocity],he=this.outputs?this.outputs:this.availableOutputs;for(let j=0;j<he.length;j++)this.sendMessageToOutput(he[j],H)}playNoteUp(D){const H=[this.NOTE_OFF,D.pitch,D.velocity],he=this.outputs?this.outputs:this.availableOutputs;for(let j=0;j<he.length;j++)this.sendMessageToOutput(he[j],H,D.endTime-D.startTime)}}class te{}class ce{constructor(D={},H){this.notes=[],this.midiInputs=[],this.loClick=new f.MembraneSynth({pitchDecay:.008,envelope:{attack:.001,decay:.3,sustain:0}}).toDestination(),this.hiClick=new f.MembraneSynth({pitchDecay:.008,envelope:{attack:.001,decay:.3,sustain:0}}).toDestination(),this.config={playClick:D.playClick,qpm:D.qpm||o.DEFAULT_QUARTERS_PER_MINUTE,playCountIn:D.playCountIn,startRecordingAtFirstNote:D.startRecordingAtFirstNote||!1},this.callbackObject=H,this.recording=!1,this.onNotes=new Map}async initialize(){await navigator.requestMIDIAccess().then(D=>this.midiReady(D),D=>console.log("Something went wrong",D))}midiReady(D){c.log("Initialized Recorder","Recorder");const H=D.inputs.values();for(let he=H.next();he&&!he.done;he=H.next())this.midiInputs.push(he.value)}isRecording(){return this.recording}setTempo(D){this.config.qpm=D,f.Transport.state==="started"&&(f.Transport.bpm.value=D)}enablePlayClick(D){this.config.playClick=D}enablePlayCountIn(D){this.config.playCountIn=D}initClickLoop(){let D=0;this.clickLoop=new f.Loop(H=>{D%4==0?this.loClick.triggerAttack("G5",H):this.hiClick.triggerAttack("C6",H),D++,this.config.playCountIn&&D===4&&(f.Transport.stop(),this.clickLoop.stop())},"4n")}getMIDIInputs(){return this.midiInputs}start(D){const H=D||this.midiInputs;for(const he of H)he.onmidimessage=j=>{this.midiMessageReceived(j)};if(this.config.playClick||this.config.playCountIn?(this.initClickLoop(),f.Transport.bpm.value=this.config.qpm,f.Transport.start(),this.clickLoop.start()):this.clickLoop=null,this.recording=!0,this.firstNoteTimestamp=void 0,this.notes=[],this.onNotes=new Map,!this.startRecordingAtFirstNote){const he=Date.now();this.firstNoteTimestamp=he}}stop(){this.recording=!1;const D=Date.now();this.onNotes.forEach((H,he)=>{this.noteOff(he,D)});for(const H of this.midiInputs)H.onmidimessage=null;return this.clickLoop&&(f.Transport.stop(),this.clickLoop.stop()),this.notes.length===0?null:this.getNoteSequence()}getNoteSequence(){return this.notes.length===0?null:x.a.create({notes:this.notes,totalTime:this.notes[this.notes.length-1].endTime})}reset(){const D=this.stop();return this.firstNoteTimestamp=void 0,this.notes=[],this.onNotes=new Map,D}midiMessageReceived(D){if(!this.recording)return;let H;H=D.timeStamp!==void 0&&D.timeStamp!==0?D.timeStamp:g.d.now();const he=H+g.d.timing.navigationStart;this.firstNoteTimestamp===void 0&&(this.firstNoteTimestamp=he);const j=D.data[0]>>4,ee=D.data[1],ye=D.data.length>2?D.data[2]:1,Oe=D.srcElement;j===8||j===9&&ye===0?(this.callbackObject&&this.callbackObject.noteOff&&this.callbackObject.noteOff(ee,ye,Oe),this.noteOff(ee,he),this.callbackObject&&this.callbackObject.run&&this.callbackObject.run(this.getNoteSequence())):j===9&&(this.callbackObject&&this.callbackObject.noteOn&&this.callbackObject.noteOn(ee,ye,Oe),this.noteOn(ee,ye,he))}noteOn(D,H,he){const j=new x.a.Note;j.pitch=D,j.startTime=(he-this.firstNoteTimestamp)/1e3,j.velocity=H,this.onNotes.set(D,j)}noteOff(D,H){const he=this.onNotes.get(D);he&&(he.endTime=(H-this.firstNoteTimestamp)/1e3,this.notes.push(he)),this.onNotes.delete(D)}}var ue=t(83);class Te{constructor(D,H={}){const he=d.isQuantizedSequence(D),j=D.tempos&&D.tempos.length>0?D.tempos[0].qpm:void 0;this.noteSequence=he?d.unquantizeSequence(D,j):D,this.config={noteHeight:H.noteHeight||6,noteSpacing:H.noteSpacing||1,pixelsPerTimeStep:H.pixelsPerTimeStep||30,noteRGB:H.noteRGB||"8, 41, 64",activeNoteRGB:H.activeNoteRGB||"240, 84, 119",minPitch:H.minPitch,maxPitch:H.maxPitch};const ee=this.getSize();this.width=ee.width,this.height=ee.height}updateMinMaxPitches(D=!1){if(!this.config.minPitch||!this.config.maxPitch){this.config.minPitch===void 0&&(this.config.minPitch=o.MAX_MIDI_PITCH),this.config.maxPitch===void 0&&(this.config.maxPitch=o.MIN_MIDI_PITCH);for(const H of this.noteSequence.notes)this.config.minPitch=Math.min(H.pitch,this.config.minPitch),this.config.maxPitch=Math.max(H.pitch,this.config.maxPitch);D||(this.config.minPitch-=2,this.config.maxPitch+=2)}}getSize(){this.updateMinMaxPitches();const D=(this.config.maxPitch-this.config.minPitch)*this.config.noteHeight,H=this.noteSequence.totalTime;if(!H)throw new Error("The sequence you are using with the visualizer does not have a totalQuantizedSteps or totalTime field set, so the visualizer can't be horizontally sized correctly.");return{width:H*this.config.pixelsPerTimeStep,height:D}}getNotePosition(D,H){const he=this.getNoteEndTime(D)-this.getNoteStartTime(D),j=this.getNoteStartTime(D)*this.config.pixelsPerTimeStep,ee=Math.max(this.config.pixelsPerTimeStep*he-this.config.noteSpacing,1);return{x:j,y:this.height-(D.pitch-this.config.minPitch)*this.config.noteHeight,w:ee,h:this.config.noteHeight}}scrollIntoViewIfNeeded(D,H){if(D&&this.parentElement){const he=this.parentElement.getBoundingClientRect().width;H>this.parentElement.scrollLeft+he&&(this.parentElement.scrollLeft=H-20)}}getNoteStartTime(D){return Math.round(1e8*D.startTime)/1e8}getNoteEndTime(D){return Math.round(1e8*D.endTime)/1e8}isPaintingActiveNote(D,H){const he=this.getNoteStartTime(D)===this.getNoteStartTime(H),j=this.getNoteStartTime(D)<=this.getNoteStartTime(H)&&this.getNoteEndTime(D)>=this.getNoteEndTime(H);return he||j}}class Ce extends Te{constructor(D,H,he={}){super(D,he),this.ctx=H.getContext("2d"),this.parentElement=H.parentElement;const j=window.devicePixelRatio||1;this.ctx&&(this.ctx.canvas.width=j*this.width,this.ctx.canvas.height=j*this.height,H.style.width=this.width+"px",H.style.height=this.height+"px",this.ctx.scale(j,j)),this.redraw()}redraw(D,H){let he;this.clear();for(let j=0;j<this.noteSequence.notes.length;j++){const ee=this.noteSequence.notes[j],ye=this.getNotePosition(ee,j),Oe=.2,ze=ee.velocity?ee.velocity/100+Oe:1,Xe=D&&this.isPaintingActiveNote(ee,D),ot=`rgba(${Xe?this.config.activeNoteRGB:this.config.noteRGB},
  ${ze})`;this.redrawNote(ye.x,ye.y,ye.w,ye.h,ot),Xe&&ee===D&&(he=ye.x)}return this.scrollIntoViewIfNeeded(H,he),he}clear(){this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height)}clearActiveNotes(){this.redraw()}redrawNote(D,H,he,j,ee){this.ctx.fillStyle=ee,this.ctx.fillRect(Math.round(D),Math.round(H),Math.round(he),Math.round(j))}}class Ne extends Ce{constructor(D,H,he={}){super(D,H,he),c.log("mm.Visualizer is deprecated, and will be removed in a future          version. Please use mm.PianoRollCanvasVisualizer instead","mm.Visualizer",5)}}class Re extends Te{constructor(D,H={}){super(D,H),this.drawn=!1}redraw(D,H){if(this.drawn||this.draw(),!D)return null;let he;this.unfillActiveRect(this.svg);for(let j=0;j<this.noteSequence.notes.length;j++){const ee=this.noteSequence.notes[j];if(!(D&&this.isPaintingActiveNote(ee,D)))continue;const ye=this.svg.querySelector(`rect[data-index="${j}"]`);this.fillActiveRect(ye,ee),ee===D&&(he=parseFloat(ye.getAttribute("x")))}return this.scrollIntoViewIfNeeded(H,he),he}fillActiveRect(D,H){D.setAttribute("fill",this.getNoteFillColor(H,!0)),D.classList.add("active")}unfillActiveRect(D){const H=D.querySelectorAll("rect.active");for(let he=0;he<H.length;++he){const j=H[he],ee=this.getNoteFillColor(this.noteSequence.notes[parseInt(j.getAttribute("data-index"),10)],!1);j.setAttribute("fill",ee),j.classList.remove("active")}}draw(){for(let D=0;D<this.noteSequence.notes.length;D++){const H=this.noteSequence.notes[D],he=this.getNotePosition(H,D),j=this.getNoteFillColor(H,!1),ee=[["index",D],["instrument",H.instrument],["program",H.program],["isDrum",H.isDrum===!0],["pitch",H.pitch]],ye=[["--midi-velocity",String(H.velocity!==void 0?H.velocity:127)]];this.drawNote(he.x,he.y,he.w,he.h,j,ee,ye)}this.drawn=!0}getNoteFillColor(D,H){const he=D.velocity?D.velocity/100+.2:1;return`rgba(${H?this.config.activeNoteRGB:this.config.noteRGB},
  ${he})`}drawNote(D,H,he,j,ee,ye,Oe){if(!this.svg)return;const ze=document.createElementNS("http://www.w3.org/2000/svg","rect");ze.classList.add("note"),ze.setAttribute("fill",ee),ze.setAttribute("x",""+Math.round(D)),ze.setAttribute("y",""+Math.round(H)),ze.setAttribute("width",""+Math.round(he)),ze.setAttribute("height",""+Math.round(j)),ye.forEach(([Xe,ot])=>{ot!==void 0&&(ze.dataset[Xe]=""+ot)}),Oe.forEach(([Xe,ot])=>{ze.style.setProperty(Xe,ot)}),this.svg.appendChild(ze)}clear(){this.svg.innerHTML="",this.drawn=!1}clearActiveNotes(){this.unfillActiveRect(this.svg)}}class Ae extends Re{constructor(D,H,he={}){if(super(D,he),!(H instanceof SVGSVGElement))throw new Error("This visualizer requires an <svg> element to display the visualization");this.svg=H,this.parentElement=H.parentElement;const j=this.getSize();this.width=j.width,this.height=j.height,this.svg.style.width=this.width+"px",this.svg.style.height=this.height+"px",this.clear(),this.draw()}}class we extends Re{constructor(D,H,he={}){if(super(D,he),this.NOTES_PER_OCTAVE=12,this.WHITE_NOTES_PER_OCTAVE=7,this.LOW_C=24,this.firstDrawnOctave=0,this.lastDrawnOctave=6,!(H instanceof HTMLDivElement))throw new Error("This visualizer requires a <div> element to display the visualization");this.config.whiteNoteWidth=he.whiteNoteWidth||20,this.config.blackNoteWidth=he.blackNoteWidth||2*this.config.whiteNoteWidth/3,this.config.whiteNoteHeight=he.whiteNoteHeight||70,this.config.blackNoteHeight=he.blackNoteHeight||140/3,this.config.showOnlyOctavesUsed=he.showOnlyOctavesUsed,this.setupDOM(H);const j=this.getSize();this.width=j.width,this.height=j.height,this.svg.style.width=this.width+"px",this.svg.style.height=this.height+"px",this.svgPiano.style.width=this.width+"px",this.svgPiano.style.height=this.config.whiteNoteHeight+"px",this.parentElement.style.width=this.width+this.config.whiteNoteWidth+"px",this.parentElement.scrollTop=this.parentElement.scrollHeight,this.clear(),this.drawPiano(),this.draw()}setupDOM(D){this.parentElement=document.createElement("div"),this.parentElement.classList.add("waterfall-notes-container");const H=Math.max(D.getBoundingClientRect().height,200);this.parentElement.style.paddingTop=H-this.config.whiteNoteHeight+"px",this.parentElement.style.height=H-this.config.whiteNoteHeight+"px",this.parentElement.style.boxSizing="border-box",this.parentElement.style.overflowX="hidden",this.parentElement.style.overflowY="auto",this.svg=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.svgPiano=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.svg.classList.add("waterfall-notes"),this.svgPiano.classList.add("waterfall-piano"),this.parentElement.appendChild(this.svg),D.innerHTML="",D.appendChild(this.parentElement),D.appendChild(this.svgPiano)}redraw(D,H){if(this.drawn||this.draw(),!D)return null;this.clearActiveNotes(),this.parentElement.style.paddingTop=this.parentElement.style.height;for(let he=0;he<this.noteSequence.notes.length;he++){const j=this.noteSequence.notes[he];if(!(D&&this.isPaintingActiveNote(j,D)))continue;const ee=this.svg.querySelector(`rect[data-index="${he}"]`);this.fillActiveRect(ee,j);const ye=this.svgPiano.querySelector(`rect[data-pitch="${j.pitch}"]`);if(this.fillActiveRect(ye,j),j===D){const Oe=parseFloat(ee.getAttribute("y")),ze=parseFloat(ee.getAttribute("height"));return Oe<this.parentElement.scrollTop-ze&&(this.parentElement.scrollTop=Oe+ze),Oe}}return null}getSize(){this.updateMinMaxPitches(!0);let D=52;if(this.config.showOnlyOctavesUsed){let j=!1,ee=!1;for(let ye=1;ye<7;ye++){const Oe=this.LOW_C+this.NOTES_PER_OCTAVE*ye;!j&&Oe>this.config.minPitch&&(this.firstDrawnOctave=ye-1,j=!0),!ee&&Oe>this.config.maxPitch&&(this.lastDrawnOctave=ye-1,ee=!0)}D=(this.lastDrawnOctave-this.firstDrawnOctave+1)*this.WHITE_NOTES_PER_OCTAVE}const H=D*this.config.whiteNoteWidth,he=this.noteSequence.totalTime;if(!he)throw new Error("The sequence you are using with the visualizer does not have a totalQuantizedSteps or totalTime field set, so the visualizer can't be horizontally sized correctly.");return{width:H,height:Math.max(he*this.config.pixelsPerTimeStep,1)}}getNotePosition(D,H){const he=this.svgPiano.querySelector(`rect[data-pitch="${D.pitch}"]`);if(!he)return null;const j=this.getNoteEndTime(D)-this.getNoteStartTime(D),ee=Number(he.getAttribute("x")),ye=Number(he.getAttribute("width")),Oe=Math.max(this.config.pixelsPerTimeStep*j-this.config.noteSpacing,1);return{x:ee,y:this.height-this.getNoteStartTime(D)*this.config.pixelsPerTimeStep-Oe,w:ye,h:Oe}}drawPiano(){this.svgPiano.innerHTML="";const D=this.config.whiteNoteWidth-this.config.blackNoteWidth/2,H=[1,3,6,8,10];let he=0,j=0;this.config.showOnlyOctavesUsed?j=this.firstDrawnOctave*this.NOTES_PER_OCTAVE+this.LOW_C:(j=this.LOW_C-3,this.drawWhiteKey(j,he),this.drawWhiteKey(j+2,this.config.whiteNoteWidth),j+=3,he=2*this.config.whiteNoteWidth);for(let ee=this.firstDrawnOctave;ee<=this.lastDrawnOctave;ee++)for(let ye=0;ye<this.NOTES_PER_OCTAVE;ye++)H.indexOf(ye)===-1&&(this.drawWhiteKey(j,he),he+=this.config.whiteNoteWidth),j++;this.config.showOnlyOctavesUsed?(j=this.firstDrawnOctave*this.NOTES_PER_OCTAVE+this.LOW_C,he=-this.config.whiteNoteWidth):(this.drawWhiteKey(j,he),j=this.LOW_C-3,this.drawBlackKey(j+1,D),j+=3,he=this.config.whiteNoteWidth);for(let ee=this.firstDrawnOctave;ee<=this.lastDrawnOctave;ee++)for(let ye=0;ye<this.NOTES_PER_OCTAVE;ye++)H.indexOf(ye)!==-1?this.drawBlackKey(j,he+D):he+=this.config.whiteNoteWidth,j++}drawWhiteKey(D,H){const he=document.createElementNS("http://www.w3.org/2000/svg","rect");return he.dataset.pitch=String(D),he.setAttribute("x",String(H)),he.setAttribute("y","0"),he.setAttribute("width",String(this.config.whiteNoteWidth)),he.setAttribute("height",String(this.config.whiteNoteHeight)),he.setAttribute("fill","white"),he.setAttribute("original-fill","white"),he.setAttribute("stroke","black"),he.setAttribute("stroke-width","3px"),he.classList.add("white"),this.svgPiano.appendChild(he),he}drawBlackKey(D,H){const he=document.createElementNS("http://www.w3.org/2000/svg","rect");return he.dataset.pitch=String(D),he.setAttribute("x",String(H)),he.setAttribute("y","0"),he.setAttribute("width",String(this.config.blackNoteWidth)),he.setAttribute("height",String(this.config.blackNoteHeight)),he.setAttribute("fill","black"),he.setAttribute("original-fill","black"),he.setAttribute("stroke","black"),he.setAttribute("stroke-width","3px"),he.classList.add("black"),this.svgPiano.appendChild(he),he}clearActiveNotes(){super.unfillActiveRect(this.svg);const D=this.svgPiano.querySelectorAll("rect.active");for(let H=0;H<D.length;++H){const he=D[H];he.setAttribute("fill",he.getAttribute("original-fill")),he.classList.remove("active")}}}var Le;(function(B){B[B.PAGE=0]="PAGE",B[B.NOTE=1]="NOTE",B[B.BAR=2]="BAR"})(Le||(Le={}));class pe extends Te{constructor(D,H,he={}){super(D,he),(he.pixelsPerTimeStep===void 0||he.pixelsPerTimeStep<=0)&&(this.config.pixelsPerTimeStep=0),this.instruments=he.instruments||[],this.render=new ue.StaffSVGRender(this.getScoreInfo(D),{noteHeight:this.config.noteHeight,noteSpacing:this.config.noteSpacing,pixelsPerTimeStep:this.config.pixelsPerTimeStep,noteRGB:this.config.noteRGB,activeNoteRGB:this.config.activeNoteRGB,defaultKey:he.defaultKey||0,scrollType:he.scrollType||Le.PAGE},H),this.drawnNotes=D.notes.length,this.clear(),this.redraw()}clear(){this.render.clear()}redraw(D,H){this.drawnNotes!==this.noteSequence.notes.length&&(this.render.scoreInfo=this.getScoreInfo(this.noteSequence));const he=D?this.getNoteInfo(D):void 0;return this.render.redraw(he,H)}isNoteInInstruments(D){return D.instrument===void 0||this.instruments.length===0||this.instruments.indexOf(D.instrument)>=0}timeToQuarters(D){const H=D*this.noteSequence.tempos[0].qpm/60;return Math.round(16*H)/16}getNoteInfo(D){const H=this.timeToQuarters(D.startTime);return{start:H,length:this.timeToQuarters(D.endTime)-H,pitch:D.pitch,intensity:D.velocity}}getScoreInfo(D){const H=[];return D.notes.forEach(he=>{this.isNoteInInstruments(he)&&H.push(this.getNoteInfo(he))}),{notes:H,tempos:D.tempos?D.tempos.map(he=>({start:this.timeToQuarters(he.time),qpm:he.qpm})):[],keySignatures:D.keySignatures?D.keySignatures.map(he=>({start:this.timeToQuarters(he.time),key:he.key})):[],timeSignatures:D.timeSignatures?D.timeSignatures.map(he=>({start:this.timeToQuarters(he.time),numerator:he.numerator,denominator:he.denominator})):[]}}clearActiveNotes(){this.redraw()}}},function(n,e,t){var s=t(86),r=t(91),o=t(45),i=t(92)({args:["array","array","scalar","scalar","scalar"],body:function(c,a,l,d,f){}});n.exports=function(c,a,l,d){l===void 0&&(l=-1/0),d===void 0&&(d=1/0);var f=a.shape,y=c.shape;if(a.shape.length!==c.shape.length)throw new Error("ndarray-resample: input and output arrays should have the same dimensions");var m,h=f.map(function(){return 0});if(c.size===1)return(m=o.sum(a)/a.size)<l&&(m=l),m>d&&(m=d),void c.set.apply(c,h.concat(m));if(a.size===1)return(m=a.get.apply(a,h))<l&&(m=l),m>d&&(m=d),void o.assigns(c,m);for(var g=f.length,x=new Array(g),w=!1,I=0;I<g;I++)x[I]=Math.min(y[I],f[I]),y[I]>f[I]&&(w=!0);var N=r.malloc(f),A=r.malloc(f);o.assign(N,a),o.assigns(A,0),s(1,N,A);var T=N.lo,P=N.hi,O=r.malloc(y),F=r.malloc(y);w&&(o.assigns(O,0),o.assigns(F,0));var G=new Array(g),U=new Array(g),Q=new Array(g),ne=new Array(g);for(I=0;I<1<<g;++I){for(var J=0;J<g;++J)if(I&1<<J){if(G[J]=x[J]-(x[J]+1>>>1),G[J]===0)continue;U[J]=y[J]-G[J],Q[J]=f[J]-G[J],ne[J]=1&x[J]?0:1}else G[J]=x[J]+1>>>1,U[J]=0,Q[J]=0,ne[J]=0;o.assign(P.apply(T.apply(O,U),G),P.apply(T.apply(N,Q),G)),o.assign(T.apply(P.apply(T.apply(F,U),G),ne),T.apply(P.apply(T.apply(A,Q),G),ne)),o.assigns(P.apply(P.apply(T.apply(F,U),G),ne),0)}s(-1,O,F),i(c,O,c.size/a.size,l,d),r.free(N),r.free(A),r.free(O),r.free(F)}},function(n,e,t){e.byteLength=function(f){var y=l(f),m=y[0],h=y[1];return 3*(m+h)/4-h},e.toByteArray=function(f){var y,m,h=l(f),g=h[0],x=h[1],w=new o(function(A,T,P){return 3*(T+P)/4-P}(0,g,x)),I=0,N=x>0?g-4:g;for(m=0;m<N;m+=4)y=r[f.charCodeAt(m)]<<18|r[f.charCodeAt(m+1)]<<12|r[f.charCodeAt(m+2)]<<6|r[f.charCodeAt(m+3)],w[I++]=y>>16&255,w[I++]=y>>8&255,w[I++]=255&y;return x===2&&(y=r[f.charCodeAt(m)]<<2|r[f.charCodeAt(m+1)]>>4,w[I++]=255&y),x===1&&(y=r[f.charCodeAt(m)]<<10|r[f.charCodeAt(m+1)]<<4|r[f.charCodeAt(m+2)]>>2,w[I++]=y>>8&255,w[I++]=255&y),w},e.fromByteArray=function(f){for(var y,m=f.length,h=m%3,g=[],x=0,w=m-h;x<w;x+=16383)g.push(d(f,x,x+16383>w?w:x+16383));return h===1?(y=f[m-1],g.push(s[y>>2]+s[y<<4&63]+"==")):h===2&&(y=(f[m-2]<<8)+f[m-1],g.push(s[y>>10]+s[y>>4&63]+s[y<<2&63]+"=")),g.join("")};for(var s=[],r=[],o=typeof Uint8Array<"u"?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",c=0,a=i.length;c<a;++c)s[c]=i[c],r[i.charCodeAt(c)]=c;function l(f){var y=f.length;if(y%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var m=f.indexOf("=");return m===-1&&(m=y),[m,m===y?0:4-m%4]}function d(f,y,m){for(var h,g,x=[],w=y;w<m;w+=3)h=(f[w]<<16&16711680)+(f[w+1]<<8&65280)+(255&f[w+2]),x.push(s[(g=h)>>18&63]+s[g>>12&63]+s[g>>6&63]+s[63&g]);return x.join("")}r[45]=62,r[95]=63},function(n,e){/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */e.read=function(t,s,r,o,i){var c,a,l=8*i-o-1,d=(1<<l)-1,f=d>>1,y=-7,m=r?i-1:0,h=r?-1:1,g=t[s+m];for(m+=h,c=g&(1<<-y)-1,g>>=-y,y+=l;y>0;c=256*c+t[s+m],m+=h,y-=8);for(a=c&(1<<-y)-1,c>>=-y,y+=o;y>0;a=256*a+t[s+m],m+=h,y-=8);if(c===0)c=1-f;else{if(c===d)return a?NaN:1/0*(g?-1:1);a+=Math.pow(2,o),c-=f}return(g?-1:1)*a*Math.pow(2,c-o)},e.write=function(t,s,r,o,i,c){var a,l,d,f=8*c-i-1,y=(1<<f)-1,m=y>>1,h=i===23?Math.pow(2,-24)-Math.pow(2,-77):0,g=o?0:c-1,x=o?1:-1,w=s<0||s===0&&1/s<0?1:0;for(s=Math.abs(s),isNaN(s)||s===1/0?(l=isNaN(s)?1:0,a=y):(a=Math.floor(Math.log(s)/Math.LN2),s*(d=Math.pow(2,-a))<1&&(a--,d*=2),(s+=a+m>=1?h/d:h*Math.pow(2,1-m))*d>=2&&(a++,d/=2),a+m>=y?(l=0,a=y):a+m>=1?(l=(s*d-1)*Math.pow(2,i),a+=m):(l=s*Math.pow(2,m-1)*Math.pow(2,i),a=0));i>=8;t[r+g]=255&l,g+=x,l/=256,i-=8);for(a=a<<i|l,f+=i;f>0;t[r+g]=255&a,g+=x,a/=256,f-=8);t[r+g-x]|=128*w}},function(n,e){var t={}.toString;n.exports=Array.isArray||function(s){return t.call(s)=="[object Array]"}},function(n,e,t){(function(s){t.d(e,"a",function(){return o});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r=typeof requestAnimationFrame<"u"?requestAnimationFrame:s!==void 0?s:i=>i();function o(){return new Promise(i=>r(()=>i()))}}).call(this,t(170).setImmediate)},function(n,e,t){e.parseMidi=t(172),e.writeMidi=t(173)},function(n,e,t){function s(r,o,i){i===void 0&&(i="ticks");var c=0,a=r.length,l=a;if(a>0&&r[a-1][i]<=o)return a-1;for(;c<l;){var d=Math.floor(c+(l-c)/2),f=r[d],y=r[d+1];if(f[i]===o){for(var m=d;m<r.length;m++)r[m][i]===o&&(d=m);return d}if(f[i]<o&&y[i]>o)return d;f[i]>o?l=d:f[i]<o&&(c=d+1)}return-1}Object.defineProperty(e,"__esModule",{value:!0}),e.search=s,e.insert=function(r,o,i){if(i===void 0&&(i="ticks"),r.length){var c=s(r,o[i],i);r.splice(c+1,0,o)}else r.push(o)}},function(n,e,t){Object.defineProperty(e,"__esModule",{value:!0});var s=t(80),r=t(82),o=t(176),i=t(177),c=t(178),a=t(180),l=new WeakMap,d=function(){function f(y,m){var h=this;if(this.name="",this.notes=[],this.controlChanges=o.createControlChanges(),this.pitchBends=[],l.set(this,m),y){var g=y.find(function(A){return A.type==="trackName"});this.name=g?g.text:""}if(this.instrument=new c.Instrument(y,this),this.channel=0,y){for(var x=y.filter(function(A){return A.type==="noteOn"}),w=y.filter(function(A){return A.type==="noteOff"}),I=function(){var A=x.shift();N.channel=A.channel;var T=w.findIndex(function(O){return O.noteNumber===A.noteNumber&&O.absoluteTime>=A.absoluteTime});if(T!==-1){var P=w.splice(T,1)[0];N.addNote({durationTicks:P.absoluteTime-A.absoluteTime,midi:A.noteNumber,noteOffVelocity:P.velocity/127,ticks:A.absoluteTime,velocity:A.velocity/127})}},N=this;x.length;)I();y.filter(function(A){return A.type==="controller"}).forEach(function(A){h.addCC({number:A.controllerType,ticks:A.absoluteTime,value:A.value/127})}),y.filter(function(A){return A.type==="pitchBend"}).forEach(function(A){h.addPitchBend({ticks:A.absoluteTime,value:A.value/Math.pow(2,13)})})}}return f.prototype.addNote=function(y){var m=l.get(this),h=new a.Note({midi:0,ticks:0,velocity:1},{ticks:0,velocity:0},m);return Object.assign(h,y),s.insert(this.notes,h,"ticks"),this},f.prototype.addCC=function(y){var m=l.get(this),h=new r.ControlChange({controllerType:y.number},m);return delete y.number,Object.assign(h,y),Array.isArray(this.controlChanges[h.number])||(this.controlChanges[h.number]=[]),s.insert(this.controlChanges[h.number],h,"ticks"),this},f.prototype.addPitchBend=function(y){var m=l.get(this),h=new i.PitchBend({},m);return Object.assign(h,y),s.insert(this.pitchBends,h,"ticks"),this},Object.defineProperty(f.prototype,"duration",{get:function(){if(!this.notes.length)return 0;for(var y=this.notes[this.notes.length-1].time+this.notes[this.notes.length-1].duration,m=0;m<this.notes.length-1;m++){var h=this.notes[m].time+this.notes[m].duration;y<h&&(y=h)}return y},enumerable:!0,configurable:!0}),Object.defineProperty(f.prototype,"durationTicks",{get:function(){if(!this.notes.length)return 0;for(var y=this.notes[this.notes.length-1].ticks+this.notes[this.notes.length-1].durationTicks,m=0;m<this.notes.length-1;m++){var h=this.notes[m].ticks+this.notes[m].durationTicks;y<h&&(y=h)}return y},enumerable:!0,configurable:!0}),f.prototype.fromJSON=function(y){var m=this;for(var h in this.name=y.name,this.channel=y.channel,this.instrument=new c.Instrument(void 0,this),this.instrument.fromJSON(y.instrument),y.controlChanges)y.controlChanges[h]&&y.controlChanges[h].forEach(function(g){m.addCC({number:g.number,ticks:g.ticks,value:g.value})});y.notes.forEach(function(g){m.addNote({durationTicks:g.durationTicks,midi:g.midi,ticks:g.ticks,velocity:g.velocity})})},f.prototype.toJSON=function(){for(var y={},m=0;m<127;m++)this.controlChanges.hasOwnProperty(m)&&(y[m]=this.controlChanges[m].map(function(h){return h.toJSON()}));return{channel:this.channel,controlChanges:y,pitchBends:this.pitchBends.map(function(h){return h.toJSON()}),instrument:this.instrument.toJSON(),name:this.name,notes:this.notes.map(function(h){return h.toJSON()})}},f}();e.Track=d},function(n,e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.controlChangeNames={1:"modulationWheel",2:"breath",4:"footController",5:"portamentoTime",7:"volume",8:"balance",10:"pan",64:"sustain",65:"portamentoTime",66:"sostenuto",67:"softPedal",68:"legatoFootswitch",84:"portamentoControl"},e.controlChangeIds=Object.keys(e.controlChangeNames).reduce(function(i,c){return i[e.controlChangeNames[c]]=c,i},{});var s=new WeakMap,r=new WeakMap,o=function(){function i(c,a){s.set(this,a),r.set(this,c.controllerType),this.ticks=c.absoluteTime,this.value=c.value}return Object.defineProperty(i.prototype,"number",{get:function(){return r.get(this)},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"name",{get:function(){return e.controlChangeNames[this.number]?e.controlChangeNames[this.number]:null},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"time",{get:function(){return s.get(this).ticksToSeconds(this.ticks)},set:function(c){var a=s.get(this);this.ticks=a.secondsToTicks(c)},enumerable:!0,configurable:!0}),i.prototype.toJSON=function(){return{number:this.number,ticks:this.ticks,time:this.time,value:this.value}},i}();e.ControlChange=o},function(n,e,t){n.exports=function(s){var r={};function o(i){if(r[i])return r[i].exports;var c=r[i]={i,l:!1,exports:{}};return s[i].call(c.exports,c,c.exports,o),c.l=!0,c.exports}return o.m=s,o.c=r,o.d=function(i,c,a){o.o(i,c)||Object.defineProperty(i,c,{enumerable:!0,get:a})},o.r=function(i){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(i,"__esModule",{value:!0})},o.t=function(i,c){if(1&c&&(i=o(i)),8&c||4&c&&typeof i=="object"&&i&&i.__esModule)return i;var a=Object.create(null);if(o.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:i}),2&c&&typeof i!="string")for(var l in i)o.d(a,l,(function(d){return i[d]}).bind(null,l));return a},o.n=function(i){var c=i&&i.__esModule?function(){return i.default}:function(){return i};return o.d(c,"a",c),c},o.o=function(i,c){return Object.prototype.hasOwnProperty.call(i,c)},o.p="",o(o.s=4)}([function(s,r,o){o.r(r),o.d(r,"SVGNS",function(){return i}),o.d(r,"drawSVGPath",function(){return c}),o.d(r,"drawSVGText",function(){return a}),o.d(r,"createSVGGroupChild",function(){return l}),o.d(r,"setFade",function(){return d});const i="http://www.w3.org/2000/svg";function c(f,y,m,h,g,x,w=1){const I=document.createElementNS(i,"path");return I.setAttributeNS(null,"d",y),I.setAttributeNS(null,"transform",`translate(${m}, ${h}) scale(${g}, ${x})`),I.setAttributeNS(null,"opacity",""+w),f.appendChild(I),I}function a(f,y,m,h,g,x=!1,w=1,I=1){const N=document.createElementNS(i,"text");N.setAttributeNS(null,"font-family","Times"),N.setAttributeNS(null,"font-size",g),x&&N.setAttributeNS(null,"font-weight","bold"),N.setAttributeNS(null,"transform",`translate(${m}, ${h}) scale(${w}, ${I})`);const A=document.createTextNode(y);return N.appendChild(A),f.appendChild(N),N}function l(f,y){const m=document.createElementNS(i,"g");return m.setAttribute("data-id",y),f.appendChild(m),m}function d(f,y=!1,m=1,h=0){let g=f.querySelector("animate");if(!g){(g=document.createElementNS(i,"animate")).setAttributeNS(null,"attributeName","opacity"),g.setAttributeNS(null,"dur","4s"),g.setAttributeNS(null,"fill","freeze"),g.setAttributeNS(null,"keyTimes","0; 0.25; 0.5; 0.75; 1");const x=(m+3*h)/4;g.setAttributeNS(null,"values",`${m}; ${x}; ${h}; ${x}; ${m}`)}return y?g.setAttributeNS(null,"repeatCount","indefinite"):g.setAttributeNS(null,"repeatCount","1"),f.appendChild(g),f}},function(s,r,o){o.r(r),o.d(r,"PATH_SCALE",function(){return i}),o.d(r,"staffLinePath",function(){return a}),o.d(r,"extraLinePath",function(){return l}),o.d(r,"barPath",function(){return d}),o.d(r,"stemPath",function(){return f}),o.d(r,"singleFlagPath",function(){return y}),o.d(r,"multiFlagPath",function(){return m}),o.d(r,"tiePath",function(){return h}),o.d(r,"dotPath",function(){return g}),o.d(r,"NOTE_PATHS",function(){return x}),o.d(r,"REST_PATHS",function(){return w}),o.d(r,"CLEF_PATHS",function(){return I}),o.d(r,"ACCIDENTAL_PATHS",function(){return N});const i=100,c=`M 0,10 C 0,-15 35,-50 80,-50 110,-50 125,-35 125,-10 
125,15 90,50 45,50 15,50 0,35 0,10 Z`,a="m 0,0 h 100",l="m -25,0 h 175",d="m 0,-200 v 400",f="m 0,0 v 100 h 15 v -100 z",y=`M0,0 h 12 c 7,100 175,156 62,314 79,-177 -49,
-193 -61,-200 l -13,-5 z`,m=`m 0,0 h 10 c 6,72 173,64 84,227 44,-120 -44,
-123 -94,-167 z`,h=`M 0,25 C 10,46 30,67 50,67 69,67 90,47 100,25 94,
65 73,89 50,89 26,89 5,63 0,25 Z`,g="M 5 -20 a 20 20 0 1 0 0.00001 0 z",x={4:{path:`m 0,0 c 0,-37 49,-51 79,-51 31,0 83,13 83,51 0,39 
-55,51 -84,51 C 49,51 0,37 0,0 Z m 111,31 c 13,-19 0,-58 -22,-68 -33,-15 
-53,10 -39,49 9,27 48,39 61,19 z`,width:150,stemVSteps:0,stemAnchor:0,flags:0},2:{path:`m 0,10 c 0,-25 35,-60 80,-60 15,0 45,4 45,40 C 125,16 
89,50 45,50 17,50 0,36 0,10 Z m 71,7 c 17,-11 45,-34 38,-45 -7,-10 -39,1 
-57,12 -19,11 -42,31 -36,42 6,10 37,2 55,-9 z`,width:125,stemVSteps:7,stemAnchor:-10,flags:0},1:{path:c,width:125,stemVSteps:7,stemAnchor:-10,flags:0},.5:{path:c,width:125,stemVSteps:7,stemAnchor:-10,flags:1},.25:{path:c,width:125,stemVSteps:9,stemAnchor:-10,flags:2},.125:{path:c,width:125,stemVSteps:11,stemAnchor:-10,flags:3},.0625:{path:c,width:125,stemVSteps:13,stemAnchor:-10,flags:4}},w={4:"m 0,-50 h 125 v -50 H 0 Z",2:"M 0,0 H 125 V -50 H 0 Z",1:`m 0,-25 c 39,-39 37,-75 8,-120 l 6,-5 61,103 C 
40,-13 31,4 73,71 l -5,5 C 14,52 16,125 67,144 l -4,6 C -37,102 -1,22 59,60 Z`,.5:`m 52,-47 c 26,-2 42,-21 48,-42 l 12,4 L 64,83 52,79 
88,-49 c 0,0 -17,22 -57,22 -16,0 -31,-13 -31,-27 0,-18 10,-31 27,-31 17,0 
33,15 25,38 z`,.25:`m 129,-191 c -6,21 -22,40 -48,42 8,-23 -8,-38 
-25,-38 -17,0 -27,13 -27,31 0,14 15,27 31,27 40,0 57,-22 57,-22 l -20,69 
c -7,18 -22,33 -45,35 8,-23 -8,-38 -25,-38 -17,0 -27,13 -27,31 0,14 15,27 
31,27 40,0 57,-22 57,-22 l -36,128 12,4 77,-270 z`,.125:`m 129,-191 c -6,21 -22,40 -48,42 8,-23 -8,-38 
-25,-38 -17,0 -27,13 -27,31 0,14 15,27 31,27 40,0 57,-22 57,-22 l -20,69 
c -7,18 -22,33 -45,35 8,-23 -8,-38 -25,-38 -17,0 -27,13 -27,31 0,14 15,27 
31,27 40,0 57,-22 57,-22 L 68,20 C 61,37 46,51 24,52 32,29 16,14 -1,14 c 
-17,0 -27,13 -27,31 0,14 15,27 31,27 38,0 55,-20 57,-22 l -36,128 12,4 
105,-369 z`,.0625:`m 158,-292 c -6,21 -22,40 -48,42 8,-23 -8,-38 
-25,-38 -17,0 -27,13 -27,31 0,14 15,27 31,27 40,0 57,-22 57,-22 l -17,61 
v 0 c -6,21 -22,40 -48,42 8,-23 -8,-38 -25,-38 -17,0 -27,13 -27,31 0,14 
15,27 31,27 40,0 57,-22 57,-22 l -20,69 c -7,18 -22,33 -45,35 8,-23 -8,-38 
-25,-38 -17,0 -27,13 -27,31 0,14 15,27 31,27 40,0 57,-22 57,-22 L 68,20 C 
61,37 46,51 24,52 32,29 16,14 -1,14 c -17,0 -27,13 -27,31 0,14 15,27 31,27 
38,0 55,-20 57,-22 l -36,128 12,4 134,-469 z`},I={50:{path:`m 101,-199 c -49,0 -100,28 -100,83 0,39 58,57 82,26 15,-20 
-4,-47 -32,-47 -23,1 -25,0 -25,-8 0,-22 40,-46 71,-41 91,16 67,208 -105,302 
75,-27 198,-94 211,-201 6,-66 -42,-114 -102,-114 z m 143,33 c -13,0 -23,11 
-23,24 0,14 10,24 23,24 13,0 23,-11 23,-24 0,-13 -10,-24 -23,-24 z m 2,83 c 
-13,0 -23,11 -23,24 0,14 10,24 23,24 13,0 23,-11 23,-24 0,-13 -10,-24 -23,-24 
z`,upper:-4,lower:3},71:{path:`M 139,48 C 102,57 76,120 131,151 41,128 64,24 129,2 L 
117,-57 C -32,47 26,217 166,182 Z m 12,-1 27,131 C 242,153 216,46 151,47 
Z m -35,-177 c 34,-23 82,-117 50,-140 -23,-17 -71,33 -50,140 z m -10,10 c 
-23,-77 -20,-200 48,-213 19,-4 89,171 -26,266 l 13,66 c 120,-6 137,155 
39,191 l 12,58 c 30,131 -137,145 -138,47 0,-29 37,-59 63,-37 21,18 25,71 
-25,70 32,42 103,0 91,-65 L 167,193 C 56,232 -112,63 106,-120 Z`,upper:-7,lower:8}},N=[null,`m -49,-121 v 52 l -29,9 v -48 h -8 v 51 l -20,6 v 29 l 
20,-6 v 70 l -20,6 v 30 l 20,-6 v 51 h 8 V 69 l 30,-8 v 50 h 8 V 58 l 20,-6 
V 23 l -20,6 v -71 l 20,-6 v -29 l -20,6 v -50 z m 1,82 v 71 l -29,9 v -71 z`,`M -106,-166 V 67 c 52,-42 85,-56 85,-94 0,-47 -46,-51 
-73,-22 v -117 z m 31,120 c 20,0 42,46 -20,91 V -7 c 0,-28 10,-39 20,-39 z`,`m -81,-58 v -48 H -92 V 73 l 60,-13 v 50 h 11 V -72 Z m 
50,24 v 58 l -50,11 v -58 z`]},function(s,r,o){o.r(r),o.d(r,"MIN_RESOLUTION",function(){return i}),o.d(r,"STEM_WIDTH",function(){return c}),o.d(r,"LINE_STROKE",function(){return a}),o.d(r,"COMPACT_SPACING",function(){return l});const i=.0625,c=15,a=1,l=150},function(s,r,o){o.r(r),o.d(r,"MAX_QUARTER_DIVISION",function(){return f}),o.d(r,"ScrollType",function(){return y}),o.d(r,"StaffSVGRender",function(){return m});var i=o(2),c=o(0),a=o(1);const l=[{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[0,1,0,1,0,0,1,0,1,0,1,0]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-6],accidental:[0,0,3,0,3,0,0,3,0,3,0,3]},{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[3,0,0,1,0,3,0,0,1,0,1,0]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-6],accidental:[0,2,0,0,3,0,2,0,0,3,0,3]},{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[3,0,3,0,0,3,0,3,0,0,1,0]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-6],accidental:[0,2,0,2,0,0,2,0,2,0,0,3]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-7],accidental:[3,0,3,0,3,0,0,3,0,3,0,0]},{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[0,1,0,1,0,3,0,0,1,0,1,0]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-6],accidental:[0,0,3,0,3,0,2,0,0,3,0,3]},{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[3,0,0,1,0,3,0,3,0,0,1,0]},{steps:[0,-1,-1,-2,-2,-3,-4,-4,-5,-5,-6,-6],accidental:[0,2,0,0,3,0,2,0,2,0,0,3]},{steps:[0,0,-1,-1,-2,-3,-3,-4,-4,-5,-5,-6],accidental:[3,0,3,0,0,3,0,3,0,3,0,0]}],d=[{accidental:1,pitches:[]},{accidental:2,pitches:[70,75,68,73,66]},{accidental:1,pitches:[78,73]},{accidental:2,pitches:[70,75,68]},{accidental:1,pitches:[78,73,80,75]},{accidental:2,pitches:[70]},{accidental:2,pitches:[70,75,68,73,66,71]},{accidental:1,pitches:[78]},{accidental:2,pitches:[70,75,68,73]},{accidental:1,pitches:[78,73,80]},{accidental:2,pitches:[70,75]},{accidental:1,pitches:[78,73,80,75,70]}],f=16;var y;(function(h){h[h.PAGE=0]="PAGE",h[h.NOTE=1]="NOTE",h[h.BAR=2]="BAR"})(y||(y={}));class m{constructor(g,x,w){this.handleScrollEvent=I=>{this.lastKnownScrollLeft=this.parentElement.scrollLeft,this.ticking||window.requestAnimationFrame(()=>{this.changeAndDrawSignaturesIfNeeded(this.lastKnownScrollLeft),this.ticking=!1}),this.ticking=!0},this.scoreInfo=g,this.config={noteHeight:x.noteHeight||6,noteSpacing:x.noteSpacing||1,pixelsPerTimeStep:x.pixelsPerTimeStep||30,noteRGB:x.noteRGB||"8, 41, 64",activeNoteRGB:x.activeNoteRGB||"240, 84, 119"},this.div=w,this.timeSignatureNumerator=4,this.timeSignatureDenominator=4,this.key=x.defaultKey||0,this.scrollType=x.scrollType||y.PAGE,this.scale=this.config.noteHeight/a.PATH_SCALE,(x.pixelsPerTimeStep===void 0||x.pixelsPerTimeStep<=0)&&(this.config.pixelsPerTimeStep=0,this.config.noteSpacing=i.COMPACT_SPACING*this.scale),this.clear(),this.redraw()}clear(){for(;this.div.lastChild;)this.div.removeChild(this.div.lastChild);this.div.style.overflow="visible",this.div.style.position="relative",this.overlaySVG=document.createElementNS(c.SVGNS,"svg"),this.overlaySVG.style.position="absolute",this.div.appendChild(this.overlaySVG),this.overlayG=Object(c.createSVGGroupChild)(this.overlaySVG,"overlay"),this.signaturesBlinking=!1,this.signaturesQuarters=0,this.parentElement=document.createElement("div"),this.parentElement.style.overflow="auto",this.div.appendChild(this.parentElement),this.ticking=!1,this.lastKnownScrollLeft=0,this.parentElement.addEventListener("scroll",this.handleScrollEvent),this.staffSVG=document.createElementNS(c.SVGNS,"svg"),this.parentElement.appendChild(this.staffSVG),this.staffG=Object(c.createSVGGroupChild)(this.staffSVG,"staff"),this.linesG=Object(c.createSVGGroupChild)(this.staffSVG,"lines"),this.setStroke(this.linesG),this.staffG.appendChild(this.linesG),this.musicG=Object(c.createSVGGroupChild)(this.staffSVG,"music"),this.setFill(this.musicG),this.setStroke(this.musicG,0),this.staffG.appendChild(this.musicG),this.signaturesG=Object(c.createSVGGroupChild)(this.staffSVG,"signatures"),this.staffG.appendChild(this.signaturesG);let g=0,x=0;this.scoreInfo.notes.forEach(I=>{g+=I.pitch,++x});const w=g/x;this.clef=w<60?50:71,this.signaturesList=[{x:0,q:0}],this.signatureCurrent=0,this.signatureNext=0,this.changeKeySignatureIfNeeded(0),this.changeTimeSignatureIfNeeded(0),this.vStepSize=this.config.noteHeight/2,this.hStepSize=this.config.pixelsPerTimeStep,this.staffOffset=0,this.height=0,this.width=0,this.musicBlockMap=new Map,this.playingNotes=[],this.lastBar=0,this.barAccidentals={},this.lastQ=-1}isPaintingActiveNote(g,x){const w=g.start===x.start,I=g.start<=x.start&&g.start+g.length>=x.start+x.length;return w||I}redraw(g,x){let w=-1;const I=this.config.pixelsPerTimeStep===0;if(g){const N=[];this.playingNotes.forEach(T=>{this.isPaintingActiveNote(T,g)?N.push(T):this.highlightElement(this.getGroup(T),!1)}),this.playingNotes=N;const A=this.getGroup(g);if(A){this.playingNotes.push(g),this.highlightElement(A,!0),w=A.getBoundingClientRect().left-this.staffSVG.getBoundingClientRect().left;const T=g.start,P=A.getAttribute("data-is-bar-beginning");(this.scrollType!==y.BAR||P)&&this.scrollIntoViewIfNeeded(x,w),!I&&this.signaturesBlinking&&T>=this.signaturesQuarters&&(this.signaturesBlinking=!1,Object(c.setFade)(this.overlayG,this.signaturesBlinking))}}else{this.setDetails();const N=this.lastQ===-1;let A=0,T=0;N?(T=this.drawSignatures(this.overlayG,A,!0,!0,!0),I&&(this.width=0,T+=this.config.noteSpacing),T+=this.drawRests(this.initialRest,A+T)):A=this.width,this.musicBlockMap.forEach((F,G)=>{I||(A=this.quartersToTime(G)*this.hStepSize),G>this.lastQ?(T+=this.drawMusicBlock(F,A+T),this.lastQ=G):G===this.lastQ&&(T+=this.drawRests(F,A+T))});const P=this.staffSVG.getBoundingClientRect(),O=this.musicG.getBoundingClientRect();if(this.updateVerticalBoundaries(O.top-P.top,O.bottom-P.top),I)this.width+=T;else{const F=this.musicBlockMap.get(this.lastQ),G=this.quartersToTime(this.lastQ+F.notes[0].length);this.width=G*this.config.pixelsPerTimeStep}this.staffSVG.setAttributeNS(null,"width",""+this.width),this.redrawStaff(this.linesG,0,this.width)}return w}drawMusicBlock(g,x){const w=g.notes[0].start;let I=this.drawBarIfNeeded(w,x);I+=this.drawSignaturesIfNeeded(w,x+I);let N=0;for(let P=4;P>=i.MIN_RESOLUTION&&!N;P/=2)P<=g.notes[0].length&&(N=P);if(N===0){const P=g.notes[0].length===0?"[infinite]":""+4/g.notes[0].length;console.warn(" StaffRender ","background:orange; color:white",`StaffRender does not handle notes shorther than 1/${4/i.MIN_RESOLUTION}th, and this score tries to draw a 1/${P}th. Shortest possible note will be drawn instead.`),N=i.MIN_RESOLUTION}const A=a.NOTE_PATHS[N];let T;if(A.stemAnchor&&(T=Object(c.createSVGGroupChild)(this.musicG,"stem")),g.notes.forEach(P=>{const O=P.vSteps*this.vStepSize,F=2*(P.vSteps>0?Math.floor(P.vSteps/2):Math.ceil(P.vSteps/2)),G=P.vSteps>0?-2:2;for(let U=F;Math.abs(U)>4;U+=G)Object(c.drawSVGPath)(this.linesG,a.extraLinePath,x+I,U*this.vStepSize,this.scale,1);if(P.g=P.tiedFrom?P.tiedFrom.g:Object(c.createSVGGroupChild)(this.musicG,`${P.start}-${P.pitch}`),g.isBarBeginning&&P.g.setAttribute("data-is-bar-beginning","true"),P.tiedFrom){const U=x+I-P.tiedFrom.xHeadRight;Object(c.drawSVGPath)(P.g,a.tiePath,P.tiedFrom.xHeadRight,O,U/a.PATH_SCALE,this.scale*(P.vSteps<0?-1:1),P.opacity)}Object(c.drawSVGPath)(P.g,A.path,x+I,O,this.scale,this.scale,P.opacity),P.xHeadRight=x+I+A.width*this.scale,1.5*N<=P.length&&Object(c.drawSVGPath)(P.g,a.dotPath,x+I+A.width*this.scale+this.vStepSize/2,O-this.vStepSize/2,this.scale,this.scale,P.opacity),P.accidental!==0&&Object(c.drawSVGPath)(P.g,a.ACCIDENTAL_PATHS[P.accidental],x+I,O,this.scale,this.scale,P.opacity)}),A.stemAnchor){let P,O,F=x+I;const G=A.stemAnchor*this.scale,U=g.minVStep+g.maxVStep<0,Q=A.flags>2?2*(A.flags-2):0;if(U?(P=g.maxVStep*this.vStepSize-G,O=(g.minVStep+7+Q)*this.vStepSize):(F+=(A.width-i.STEM_WIDTH)*this.scale,P=g.minVStep*this.vStepSize+G,O=(g.maxVStep-7-Q)*this.vStepSize),Object(c.drawSVGPath)(T,a.stemPath,F,P,this.scale,(O-P)/a.PATH_SCALE),A.flags===1)Object(c.drawSVGPath)(T,a.singleFlagPath,F,O,this.scale,this.scale*(U?-1:1),1);else if(A.flags>1)for(let ne=0;ne<A.flags;++ne)Object(c.drawSVGPath)(T,a.multiFlagPath,F,O,this.scale,this.scale*(U?-1:1),1),O+=(U?-2:2)*this.vStepSize}return this.config.pixelsPerTimeStep===0&&(I+=A.width*this.scale,T&&(I+=T.getBoundingClientRect().width),I+=this.config.noteSpacing),I+=this.drawRests(g,x+I)}drawBarIfNeeded(g,x){let w=0;const I=this.lastBar+this.getBarLength();return g!==0&&g>=I&&(this.config.pixelsPerTimeStep>0?x-=this.config.noteSpacing:w=this.config.noteSpacing,Object(c.drawSVGPath)(this.linesG,a.barPath,x,0,1,this.scale),this.lastBar=I),w}drawRests(g,x){let w=0,I=g.restToNextLength;if(I){this.config.pixelsPerTimeStep>0&&(x+=this.quartersToTime(g.notes[0].length)*this.hStepSize);let N=g.notes[0].start+g.notes[0].length,A=0;const T=this.lastBar+this.getBarLength()-N;let P;for(I>T&&(A=I-T,I=T),P=4;P>this.getBarLength()&&P>=i.MIN_RESOLUTION;P/=2);let O=P;for(;(I||A)&&O>=i.MIN_RESOLUTION;){if(O<=I){w+=this.drawBarIfNeeded(N,x+w),w+=this.drawSignaturesIfNeeded(N,x+w);const F=Object(c.drawSVGPath)(this.musicG,a.REST_PATHS[O],x+w,0,this.scale,this.scale);this.config.pixelsPerTimeStep>0?x+=this.quartersToTime(O)*this.hStepSize:(w+=F.getBoundingClientRect().width,w+=this.config.noteSpacing),N+=O,I-=O}if(A&&I<=0){const F=this.getBarLength();for(A>F?(I=F,A-=F):(I=A,A=0),P=4;P>this.getBarLength()&&P>=i.MIN_RESOLUTION;P/=2);O=P}I<O&&(O/=2)}}return w}redrawStaff(g,x,w){let I=g.querySelector('g[data-id="staff-five-lines"]');if(I)I.setAttributeNS(null,"transform",`scale(${w/a.PATH_SCALE}, 1)`);else{I=Object(c.createSVGGroupChild)(g,"staff-five-lines");const N=0;for(let A=-4;A<=4;A+=2)Object(c.drawSVGPath)(I,a.staffLinePath,x,N+A*this.vStepSize,w/a.PATH_SCALE,1)}return I}clearSignatureOverlay(){for(;this.overlayG.lastChild;)this.overlayG.removeChild(this.overlayG.lastChild)}drawSignaturesIfNeeded(g,x){let w=0;const I=this.changeKeySignatureIfNeeded(g),N=this.changeTimeSignatureIfNeeded(g);if(I||N){const A=i.COMPACT_SPACING*this.scale*(this.config.pixelsPerTimeStep>0?3:2);this.signaturesList.push({x:x-A,q:g}),this.signatureNext===null&&(this.signatureNext=x);const T=g>0?Object(c.createSVGGroupChild)(this.signaturesG,"signatures"):this.overlayG;w+=this.drawSignatures(T,x+w,!1,I,N)}return this.config.pixelsPerTimeStep===0?w:0}drawSignatures(g,x,w,I,N){const A=i.COMPACT_SPACING*this.scale;let T,P=A;const O=g===this.overlayG||this.config.pixelsPerTimeStep>0;if(O){(T=document.createElementNS(c.SVGNS,"rect")).setAttributeNS(null,"x",""+x),T.setAttributeNS(null,"y","0"),T.setAttributeNS(null,"width","1"),T.setAttributeNS(null,"height","1"),T.setAttribute("data-id","background"),g.appendChild(T);const Q=document.defaultView.getComputedStyle(this.div.parentElement);T.setAttributeNS(null,"fill",Q.getPropertyValue("background-color"))}if(w){const Q=Object(c.drawSVGPath)(g,a.CLEF_PATHS[this.clef].path,x+P,0,this.scale,this.scale);this.setFill(Q),P+=3*A}if(I){const Q=d[this.key].accidental,ne=this.clef===71?0:14;d[this.key].pitches.forEach(J=>{const oe=this.getPitchDetails(J).vSteps,le=Object(c.drawSVGPath)(g,a.ACCIDENTAL_PATHS[Q],x+P,(ne+oe)*this.vStepSize,this.scale,this.scale);this.setFill(le),P+=le.getBoundingClientRect().width})}if(N){const Q=Object(c.createSVGGroupChild)(g,"time-key"),ne=2.85*this.config.noteHeight+"px";Object(c.drawSVGText)(Q,""+this.timeSignatureNumerator,x+P,-.5,ne,!0),Object(c.drawSVGText)(Q,""+this.timeSignatureDenominator,x+P,4*this.vStepSize-.5,ne,!0),this.setFill(Q),P+=Q.getBoundingClientRect().width+A}const F=this.redrawStaff(g,x,P);this.setStroke(F);const G=this.div.getBoundingClientRect(),U=g.getBoundingClientRect();if(this.updateVerticalBoundaries(U.top-G.top,U.bottom-G.top),O&&(T.setAttributeNS(null,"y",""+-this.staffOffset),T.setAttributeNS(null,"height",""+this.height),T.setAttributeNS(null,"width",""+P)),g===this.overlayG){this.overlaySVG.setAttributeNS(null,"width",""+(P+5));for(let Q=0;Q<5;++Q){const ne=Object(c.drawSVGPath)(g,a.stemPath,P+Q,Q*Q-this.staffOffset,1/i.STEM_WIDTH,(this.height-2*Q*Q)/a.PATH_SCALE,(Q-5)*(Q-5)*2/a.PATH_SCALE);this.setFill(ne)}}if(this.config.pixelsPerTimeStep>0){const Q=this.signaturesQuarters===0;return Q&&(this.signaturesQuarters=this.timeToQuarters(P/this.hStepSize)),(Q||x>0)&&(this.signaturesBlinking=!0,Object(c.setFade)(g,this.signaturesBlinking)),0}return P}changeKeySignatureIfNeeded(g){if(this.scoreInfo.keySignatures){let x=this.key;for(let w=0;w<this.scoreInfo.keySignatures.length&&this.scoreInfo.keySignatures[w].start<=g;++w)x=this.scoreInfo.keySignatures[w].key;if(x!==this.key)return this.key=x,!0}return!1}changeTimeSignatureIfNeeded(g){if(this.scoreInfo.timeSignatures){let x=this.timeSignatureNumerator,w=this.timeSignatureDenominator;for(let I=0;I<this.scoreInfo.timeSignatures.length&&this.scoreInfo.timeSignatures[I].start<=g;++I)x=this.scoreInfo.timeSignatures[I].numerator,w=this.scoreInfo.timeSignatures[I].denominator;if(x!==this.timeSignatureNumerator||w!==this.timeSignatureDenominator)return this.timeSignatureNumerator=x,this.timeSignatureDenominator=w,!0}return!1}changeAndDrawSignaturesIfNeeded(g){let x;if(g<this.signatureCurrent||this.signatureNext!==null&&this.signatureNext<=g){x=this.signaturesList[0].q,this.signatureNext=null;for(let w=0;w<this.signaturesList.length;++w){if(g<this.signaturesList[w].x){this.signatureNext=this.signaturesList[w].x;break}this.signatureCurrent=this.signaturesList[w].x,x=this.signaturesList[w].q}}if(x!==void 0){const w=this.key,I=this.timeSignatureNumerator,N=this.timeSignatureDenominator;this.changeKeySignatureIfNeeded(x),this.changeTimeSignatureIfNeeded(x),this.clearSignatureOverlay(),this.drawSignatures(this.overlayG,0,!0,!0,!0),this.key=w,this.timeSignatureNumerator=I,this.timeSignatureDenominator=N}this.config.pixelsPerTimeStep>0&&g===0&&(this.signatureNext=0,this.signaturesBlinking=!0,Object(c.setFade)(this.overlayG,this.signaturesBlinking))}getBarLength(){return 4*this.timeSignatureNumerator/this.timeSignatureDenominator}scrollIntoViewIfNeeded(g,x){if(g)if(this.scrollType===y.PAGE){const w=this.parentElement.getBoundingClientRect().width;x>this.parentElement.scrollLeft+w&&(this.parentElement.scrollLeft=x-20)}else{const w=this.parentElement.getBoundingClientRect().width;this.parentElement.scrollLeft=x-.5*w}}updateVerticalBoundaries(g,x){let w=0;if(g<0){this.staffOffset-=g;const I=`translate(0, ${this.staffOffset})`;this.overlayG.setAttributeNS(null,"transform",I),this.staffG.setAttributeNS(null,"transform",I),w=this.height-g}if((w=Math.max(w,x-g))>this.height){this.height=w,this.overlaySVG.setAttributeNS(null,"height",""+this.height),this.staffSVG.setAttributeNS(null,"height",""+this.height);const I=this.div.querySelectorAll('rect[data-id="background"]');for(let N=0;N<I.length;++N){const A=I[N];A.setAttributeNS(null,"y",""+-this.staffOffset),A.setAttributeNS(null,"height",""+this.height)}}}setFill(g,x=!1){g.setAttributeNS(null,"fill",this.getColor(x))}setStroke(g,x=i.LINE_STROKE,w=!1){g.setAttributeNS(null,"stroke",this.getColor(w)),g.setAttributeNS(null,"stroke-width",""+x)}getColor(g){return`rgb(${g?this.config.activeNoteRGB:this.config.noteRGB})`}getOpacity(g){return g?g/127*.8+.2:1}getGroup(g){const x=g.start,w=g.pitch;return this.staffSVG.querySelector(`g[data-id="${x}-${w}"]`)}highlightElement(g,x){g.setAttribute("fill",this.getColor(x)),g.setAttribute("stroke",this.getColor(x))}getBarBeginnings(){const g=new Set;let x=0;this.scoreInfo.notes.forEach(N=>{N.start+N.length>x&&(x=N.start+N.length)});const w=this.scoreInfo.timeSignatures?this.scoreInfo.timeSignatures.slice(0):[{start:0,numerator:4,denominator:4}];w.sort((N,A)=>N.start-A.start);let I=0;for(let N=0;N<w.length;++N){const A=N===w.length-1?x:w[N].start,T=4*w[N].numerator/w[N].denominator;for(;I<A;I+=T)g.add(I)}return g}quartersToTime(g){return g/this.scoreInfo.tempos[0].qpm*60}timeToQuarters(g){return g*this.scoreInfo.tempos[0].qpm/60}setDetails(){let g=new Map;const x=this.getBarBeginnings(),w=new Set(x);this.scoreInfo.notes.slice().sort((O,F)=>O.start-F.start).forEach(O=>{const F=this.getQNote(O);w.add(F.start),w.add(F.start+F.length),g.has(F.start)?g.get(F.start).push(F):g.set(F.start,[F])}),Array.from(w).sort((O,F)=>O-F).forEach(O=>{const F=[];g.forEach(G=>{G.forEach(U=>{const Q=this.splitQNote(U,O);Q&&F.push(Q)})}),F.forEach(G=>{g.has(G.start)?g.get(G.start).push(G):g.set(G.start,[G])})}),g=new Map(Array.from(g).sort((O,F)=>O[0]-F[0]));const I=this.key;let N=null,A=0;const T=x[Symbol.iterator]();let P=T.next();g.forEach((O,F)=>{const G={maxVStep:Number.MAX_SAFE_INTEGER,minVStep:Number.MIN_SAFE_INTEGER,restToNextLength:0,isBarBeginning:!1,notes:[]};this.changeKeySignatureIfNeeded(F);const U=P.value+this.getBarLength();!P.done&&F>=U&&(P=T.next(),this.barAccidentals={},G.isBarBeginning=!0),O.forEach(Q=>{this.analyzePitch(Q,F),G.minVStep=Math.max(Q.vSteps,G.minVStep),G.maxVStep=Math.min(Q.vSteps,G.maxVStep),G.notes.push(Q)}),N&&(N.restToNextLength=F-A),this.musicBlockMap.set(F,G),N=G,A=F+G.notes[0].length}),this.initialRest={maxVStep:0,minVStep:0,restToNextLength:this.musicBlockMap.values().next().value.notes[0].start,isBarBeginning:!0,notes:[{start:0,length:0,vSteps:0,accidental:0,opacity:0,pitch:0,xHeadRight:0}]},this.key=I}getQNote(g){return{start:g.start,length:g.length,vSteps:0,accidental:0,opacity:this.getOpacity(g.intensity),pitch:g.pitch,xHeadRight:0}}splitQNote(g,x){const w=g.start+g.length-x;return x>g.start&&w>0?(g.length-=w,{start:x,length:w,vSteps:g.vSteps,accidental:g.accidental,opacity:g.opacity,pitch:g.pitch,xHeadRight:0,tiedFrom:g}):null}analyzePitch(g,x){const w=this.getPitchDetails(g.pitch);w.vSteps in this.barAccidentals?w.accidental===this.barAccidentals[w.vSteps]?w.accidental=0:(this.barAccidentals[w.vSteps]===3?w.accidental=w.keyAccidental:w.accidental===0&&(w.accidental=3),this.barAccidentals[w.vSteps]=w.accidental):(g.tiedFrom&&(w.accidental=0),this.barAccidentals[w.vSteps]=w.accidental),g.vSteps=w.vSteps,g.accidental=w.accidental}getPitchDetails(g){const x=g-60,w=Math.floor(x/12),I=x-12*w,N=l[this.key].steps[I],A=this.clef===71?6:-6,T=d[this.key].accidental===1?69+(I+3)%12:64+(I+8)%12;return{vSteps:A-7*w+N,accidental:l[this.key].accidental[I],keyAccidental:d[this.key].pitches.indexOf(T)>-1?d[this.key].accidental:0}}}},function(s,r,o){o.r(r);var i=o(3);o.d(r,"MAX_QUARTER_DIVISION",function(){return i.MAX_QUARTER_DIVISION}),o.d(r,"ScrollType",function(){return i.ScrollType}),o.d(r,"StaffSVGRender",function(){return i.StaffSVGRender})}])},function(n,e,t){n.exports=function(s){for(var r=new Array(s),o=0;o<s;++o)r[o]=o;return r}},function(n,e){function t(s){return!!s.constructor&&typeof s.constructor.isBuffer=="function"&&s.constructor.isBuffer(s)}/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */n.exports=function(s){return s!=null&&(t(s)||function(r){return typeof r.readFloatLE=="function"&&typeof r.slice=="function"&&t(r.slice(0,0))}(s)||!!s._isBuffer)}},function(n,e,t){var s=t(45),r=t(30),o=t(71),i=t(90);n.exports=function(c,a,l){var d,f,y=a.shape,m=y.length,h=1,g=new Array(m),x=0;for(d=m-1;d>=0;--d)if(g[d]=h,h*=y[d],x=Math.max(x,i.scratchMemory(y[d])),a.shape[d]!==l.shape[d])throw new Error("Shape mismatch, real and imaginary arrays must have same size");var w,I=4*h+x;w=a.dtype==="array"||a.dtype==="float64"||a.dtype==="custom"?o.mallocDouble(I):o.mallocFloat(I);var N,A,T,P,O=r(w,y.slice(0),g,0),F=r(w,y.slice(0),g.slice(0),h),G=r(w,y.slice(0),g.slice(0),2*h),U=r(w,y.slice(0),g.slice(0),3*h),Q=4*h;for(s.assign(O,a),s.assign(F,l),d=m-1;d>=0&&(i(c,h/y[d],y[d],w,O.offset,F.offset,Q),d!==0);--d){for(A=1,T=G.stride,P=U.stride,f=d-1;f<m;++f)P[f]=T[f]=A,A*=y[f];for(f=d-2;f>=0;--f)P[f]=T[f]=A,A*=y[f];s.assign(G,O),s.assign(U,F),N=O,O=G,G=N,N=F,F=U,U=N}s.assign(a,O),s.assign(l,F),o.free(w)}},function(n,e,t){var s=t(88);n.exports=function(r){var o=["'use strict'","var CACHED={}"],i=[],c=r.funcName+"_cwise_thunk";o.push(["return function ",c,"(",r.shimArgs.join(","),"){"].join(""));for(var a=[],l=[],d=[["array",r.arrayArgs[0],".shape.slice(",Math.max(0,r.arrayBlockIndices[0]),r.arrayBlockIndices[0]<0?","+r.arrayBlockIndices[0]+")":")"].join("")],f=[],y=[],m=0;m<r.arrayArgs.length;++m){var h=r.arrayArgs[m];i.push(["t",h,"=array",h,".dtype,","r",h,"=array",h,".order"].join("")),a.push("t"+h),a.push("r"+h),l.push("t"+h),l.push("r"+h+".join()"),d.push("array"+h+".data"),d.push("array"+h+".stride"),d.push("array"+h+".offset|0"),m>0&&(f.push("array"+r.arrayArgs[0]+".shape.length===array"+h+".shape.length+"+(Math.abs(r.arrayBlockIndices[0])-Math.abs(r.arrayBlockIndices[m]))),y.push("array"+r.arrayArgs[0]+".shape[shapeIndex+"+Math.max(0,r.arrayBlockIndices[0])+"]===array"+h+".shape[shapeIndex+"+Math.max(0,r.arrayBlockIndices[m])+"]"))}for(r.arrayArgs.length>1&&(o.push("if (!("+f.join(" && ")+")) throw new Error('cwise: Arrays do not all have the same dimensionality!')"),o.push("for(var shapeIndex=array"+r.arrayArgs[0]+".shape.length-"+Math.abs(r.arrayBlockIndices[0])+"; shapeIndex-->0;) {"),o.push("if (!("+y.join(" && ")+")) throw new Error('cwise: Arrays do not all have the same shape!')"),o.push("}")),m=0;m<r.scalarArgs.length;++m)d.push("scalar"+r.scalarArgs[m]);return i.push(["type=[",l.join(","),"].join()"].join("")),i.push("proc=CACHED[type]"),o.push("var "+i.join(",")),o.push(["if(!proc){","CACHED[type]=proc=compile([",a.join(","),"])}","return proc(",d.join(","),")}"].join("")),r.debug&&console.log(`-----Generated thunk:
`+o.join(`
`)+`
----------`),new Function("compile",o.join(`
`))(s.bind(void 0,r))}},function(n,e,t){var s=t(70);function r(c,a,l){var d,f,y=c.length,m=a.arrayArgs.length,h=a.indexArgs.length>0,g=[],x=[],w=0,I=0;for(d=0;d<y;++d)x.push(["i",d,"=0"].join(""));for(f=0;f<m;++f)for(d=0;d<y;++d)I=w,w=c[d],d===0?x.push(["d",f,"s",d,"=t",f,"p",w].join("")):x.push(["d",f,"s",d,"=(t",f,"p",w,"-s",I,"*t",f,"p",I,")"].join(""));for(x.length>0&&g.push("var "+x.join(",")),d=y-1;d>=0;--d)w=c[d],g.push(["for(i",d,"=0;i",d,"<s",w,";++i",d,"){"].join(""));for(g.push(l),d=0;d<y;++d){for(I=w,w=c[d],f=0;f<m;++f)g.push(["p",f,"+=d",f,"s",d].join(""));h&&(d>0&&g.push(["index[",I,"]-=s",I].join("")),g.push(["++index[",w,"]"].join(""))),g.push("}")}return g.join(`
`)}function o(c,a,l){for(var d=c.body,f=[],y=[],m=0;m<c.args.length;++m){var h=c.args[m];if(!(h.count<=0)){var g=new RegExp(h.name,"g"),x="",w=a.arrayArgs.indexOf(m);switch(a.argTypes[m]){case"offset":var I=a.offsetArgIndex.indexOf(m);w=a.offsetArgs[I].array,x="+q"+I;case"array":x="p"+w+x;var N="l"+m,A="a"+w;if(a.arrayBlockIndices[w]===0)h.count===1?l[w]==="generic"?h.lvalue?(f.push(["var ",N,"=",A,".get(",x,")"].join("")),d=d.replace(g,N),y.push([A,".set(",x,",",N,")"].join(""))):d=d.replace(g,[A,".get(",x,")"].join("")):d=d.replace(g,[A,"[",x,"]"].join("")):l[w]==="generic"?(f.push(["var ",N,"=",A,".get(",x,")"].join("")),d=d.replace(g,N),h.lvalue&&y.push([A,".set(",x,",",N,")"].join(""))):(f.push(["var ",N,"=",A,"[",x,"]"].join("")),d=d.replace(g,N),h.lvalue&&y.push([A,"[",x,"]=",N].join("")));else{for(var T=[h.name],P=[x],O=0;O<Math.abs(a.arrayBlockIndices[w]);O++)T.push("\\s*\\[([^\\]]+)\\]"),P.push("$"+(O+1)+"*t"+w+"b"+O);if(g=new RegExp(T.join(""),"g"),x=P.join("+"),l[w]==="generic")throw new Error("cwise: Generic arrays not supported in combination with blocks!");d=d.replace(g,[A,"[",x,"]"].join(""))}break;case"scalar":d=d.replace(g,"Y"+a.scalarArgs.indexOf(m));break;case"index":d=d.replace(g,"index");break;case"shape":d=d.replace(g,"shape")}}}return[f.join(`
`),d,y.join(`
`)].join(`
`).trim()}function i(c){for(var a=new Array(c.length),l=!0,d=0;d<c.length;++d){var f=c[d],y=f.match(/\d+/);y=y?y[0]:"",f.charAt(0)===0?a[d]="u"+f.charAt(1)+y:a[d]=f.charAt(0)+y,d>0&&(l=l&&a[d]===a[d-1])}return l?a[0]:a.join("")}n.exports=function(c,a){for(var l=a[1].length-Math.abs(c.arrayBlockIndices[0])|0,d=new Array(c.arrayArgs.length),f=new Array(c.arrayArgs.length),y=0;y<c.arrayArgs.length;++y)f[y]=a[2*y],d[y]=a[2*y+1];var m=[],h=[],g=[],x=[],w=[];for(y=0;y<c.arrayArgs.length;++y){c.arrayBlockIndices[y]<0?(g.push(0),x.push(l),m.push(l),h.push(l+c.arrayBlockIndices[y])):(g.push(c.arrayBlockIndices[y]),x.push(c.arrayBlockIndices[y]+l),m.push(0),h.push(c.arrayBlockIndices[y]));for(var I=[],N=0;N<d[y].length;N++)g[y]<=d[y][N]&&d[y][N]<x[y]&&I.push(d[y][N]-g[y]);w.push(I)}var A=["SS"],T=["'use strict'"],P=[];for(N=0;N<l;++N)P.push(["s",N,"=SS[",N,"]"].join(""));for(y=0;y<c.arrayArgs.length;++y){for(A.push("a"+y),A.push("t"+y),A.push("p"+y),N=0;N<l;++N)P.push(["t",y,"p",N,"=t",y,"[",g[y]+N,"]"].join(""));for(N=0;N<Math.abs(c.arrayBlockIndices[y]);++N)P.push(["t",y,"b",N,"=t",y,"[",m[y]+N,"]"].join(""))}for(y=0;y<c.scalarArgs.length;++y)A.push("Y"+y);if(c.shapeArgs.length>0&&P.push("shape=SS.slice(0)"),c.indexArgs.length>0){var O=new Array(l);for(y=0;y<l;++y)O[y]="0";P.push(["index=[",O.join(","),"]"].join(""))}for(y=0;y<c.offsetArgs.length;++y){var F=c.offsetArgs[y],G=[];for(N=0;N<F.offset.length;++N)F.offset[N]!==0&&(F.offset[N]===1?G.push(["t",F.array,"p",N].join("")):G.push([F.offset[N],"*t",F.array,"p",N].join("")));G.length===0?P.push("q"+y+"=0"):P.push(["q",y,"=",G.join("+")].join(""))}var U=s([].concat(c.pre.thisVars).concat(c.body.thisVars).concat(c.post.thisVars));for((P=P.concat(U)).length>0&&T.push("var "+P.join(",")),y=0;y<c.arrayArgs.length;++y)T.push("p"+y+"|=0");c.pre.body.length>3&&T.push(o(c.pre,c,f));var Q=o(c.body,c,f),ne=function(oe){for(var le=0,ge=oe[0].length;le<ge;){for(var te=1;te<oe.length;++te)if(oe[te][le]!==oe[0][le])return le;++le}return le}(w);ne<l?T.push(function(oe,le,ge,te){for(var ce=le.length,ue=ge.arrayArgs.length,Te=ge.blockSize,Ce=ge.indexArgs.length>0,Ne=[],Re=0;Re<ue;++Re)Ne.push(["var offset",Re,"=p",Re].join(""));for(Re=oe;Re<ce;++Re)Ne.push(["for(var j"+Re+"=SS[",le[Re],"]|0;j",Re,">0;){"].join("")),Ne.push(["if(j",Re,"<",Te,"){"].join("")),Ne.push(["s",le[Re],"=j",Re].join("")),Ne.push(["j",Re,"=0"].join("")),Ne.push(["}else{s",le[Re],"=",Te].join("")),Ne.push(["j",Re,"-=",Te,"}"].join("")),Ce&&Ne.push(["index[",le[Re],"]=j",Re].join(""));for(Re=0;Re<ue;++Re){for(var Ae=["offset"+Re],we=oe;we<ce;++we)Ae.push(["j",we,"*t",Re,"p",le[we]].join(""));Ne.push(["p",Re,"=(",Ae.join("+"),")"].join(""))}for(Ne.push(r(le,ge,te)),Re=oe;Re<ce;++Re)Ne.push("}");return Ne.join(`
`)}(ne,w[0],c,Q)):T.push(r(w[0],c,Q)),c.post.body.length>3&&T.push(o(c.post,c,f)),c.debug&&console.log("-----Generated cwise routine for ",a,`:
`+T.join(`
`)+`
----------`);var J=[c.funcName||"unnamed","_cwise_loop_",d[0].join("s"),"m",ne,i(f)].join("");return new Function(["function ",J,"(",A.join(","),"){",T.join(`
`),"} return ",J].join(""))()}},function(n,e,t){n.exports=function(s,r){switch(r===void 0&&(r=0),typeof s){case"number":if(s>0)return function(o,i){var c,a;for(c=new Array(o),a=0;a<o;++a)c[a]=i;return c}(0|s,r);break;case"object":if(typeof s.length=="number")return function o(i,c,a){var l=0|i[a];if(l<=0)return[];var d,f=new Array(l);if(a===i.length-1)for(d=0;d<l;++d)f[d]=c;else for(d=0;d<l;++d)f[d]=o(i,c,a+1);return f}(s,r,0)}return[]}},function(n,e,t){var s=t(72);function r(o,i,c,a,l,d){var f,y,m,h,g,x,w,I,N,A,T,P,O,F,G,U,Q,ne,J,oe,le,ge,te,ce;for(o|=0,i|=0,l|=0,d|=0,f=c|=0,y=s.log2(f),ne=0;ne<i;++ne){for(w=f>>1,g=0,m=0;m<f-1;m++){for(m<g&&(O=a[l+m],a[l+m]=a[l+g],a[l+g]=O,O=a[d+m],a[d+m]=a[d+g],a[d+g]=O),x=w;x<=g;)g-=x,x>>=1;g+=x}for(T=-1,P=0,A=1,I=0;I<y;I++){for(N=A,A<<=1,U=1,Q=0,g=0;g<N;g++){for(m=g;m<f;m+=A)J=a[l+(h=m+N)],oe=a[d+h],le=a[l+m],ge=a[d+m],F=(te=U*(J+oe))-oe*(U+Q),G=te+(ce=J*(Q-U)),a[l+h]=le-F,a[d+h]=ge-G,a[l+m]+=F,a[d+m]+=G;ce=U*(P-T),U=(te=T*(U+Q))-Q*(T+P),Q=te+ce}P=Math.sqrt((1-T)/2),o<0&&(P=-P),T=Math.sqrt((1+T)/2)}if(o<0){var ue=1/f;for(m=0;m<f;m++)a[l+m]*=ue,a[d+m]*=ue}l+=c,d+=c}}n.exports=function(o,i,c,a,l,d,f){o|=0,i|=0,c|=0,l|=0,d|=0,s.isPow2(c)?r(o,i,c,a,l,d):function(y,m,h,g,x,w,I){y|=0,m|=0,h|=0,x|=0,w|=0,I|=0;var N,A,T,P,O,F,G,U,Q,ne=s.nextPow2(2*h+1),J=I,oe=J+h,le=oe+h,ge=le+ne,te=ge+ne,ce=te+ne,ue=-y*Math.PI/h;for(Q=0;Q<h;++Q)A=ue*(Q*Q%(2*h)),P=Math.cos(A),O=Math.sin(A),g[te+(ne-Q)]=g[te+Q]=g[J+Q]=P,g[ce+(ne-Q)]=g[ce+Q]=g[oe+Q]=O;for(Q=h;Q<=ne-h;++Q)g[te+Q]=0;for(Q=h;Q<=ne-h;++Q)g[ce+Q]=0;for(r(1,1,ne,g,te,ce),ue=y<0?1/h:1,N=0;N<m;++N){for(Q=0;Q<h;++Q)A=g[x+Q],T=g[w+Q],P=g[J+Q],O=-g[oe+Q],F=P*(A+T),G=A*(O-P),U=T*(P+O),g[le+Q]=F-U,g[ge+Q]=F+G;for(Q=h;Q<ne;++Q)g[le+Q]=0;for(Q=h;Q<ne;++Q)g[ge+Q]=0;for(r(1,1,ne,g,le,ge),Q=0;Q<ne;++Q)A=g[le+Q],T=g[ge+Q],P=g[te+Q],O=g[ce+Q],F=P*(A+T),G=A*(O-P),U=T*(P+O),g[le+Q]=F-U,g[ge+Q]=F+G;for(r(-1,1,ne,g,le,ge),Q=0;Q<h;++Q)A=g[le+Q],T=g[ge+Q],P=g[J+Q],O=-g[oe+Q],F=P*(A+T),G=A*(O-P),U=T*(P+O),g[x+Q]=ue*(F-U),g[w+Q]=ue*(F+G);x+=h,w+=h}}(o,i,c,a,l,d,f)},n.exports.scratchMemory=function(o){return s.isPow2(o)?0:2*o+4*s.nextPow2(2*o+1)}},function(n,e,t){var s=t(30),r=t(45),o=t(71);e.clone=function(i){var c=i.dtype;c!=="generic"&&c!=="array"||(c="double");var a=o.malloc(i.size,c),l=s(a,i.shape);return r.assign(l,i),l},e.malloc=function(i,c){c||(c="double");for(var a=1,l=new Array(i.length),d=i.length-1;d>=0;--d)l[d]=a,a*=i[d];return s(o.malloc(a,c),i,l,0)},e.free=function(i){i.dtype!=="generic"&&i.dtype!=="array"&&o.free(i.data)},e.zeros=function(i,c){c||(c="double");for(var a=1,l=new Array(i.length),d=i.length-1;d>=0;--d)l[d]=a,a*=i[d];var f=o.malloc(a,c);for(d=0;d<a;++d)f[d]=0;return s(f,i,l,0)},e.ones=function(i,c){c||(c="double");for(var a=1,l=new Array(i.length),d=i.length-1;d>=0;--d)l[d]=a,a*=i[d];var f=o.malloc(a,c);for(d=0;d<a;++d)f[d]=1;return s(f,i,l,0)},e.eye=function(i,c){var a,l;c||(c="double");var d=1,f=new Array(i.length);for(a=i.length-1;a>=0;--a)f[a]=d,d*=i[a];var y=o.malloc(d,c);for(a=0;a<d;++a)y[a]=0;var m=1/0,h=0;for(a=i.length-1;a>=0;a--)h+=f[a],m=Math.min(m,i[a]);for(a=0,l=0;a<m;a++,l+=h)y[l]=1;return s(y,i,f,0)}},function(n,e,t){var s=t(93),r=t(69),o=["args","body"],i=["pre","post","printCode","funcName","blockSize"];n.exports=function(c){for(var a in c)o.indexOf(a)<0&&i.indexOf(a)<0&&console.warn("cwise: Unknown argument '"+a+"' passed to expression compiler");for(var l=0;l<o.length;++l)if(!c[o[l]])throw new Error("cwise: Missing argument: "+o[l]);return r({args:c.args,pre:s(c.pre||function(){}),body:s(c.body),post:s(c.post||function(){}),debug:!!c.printCode,funcName:c.funcName||c.body.name||"cwise",blockSize:c.blockSize||64})}},function(n,e,t){(function(s){var r=t(94),o=t(70),i=0;function c(l,d,f){this.name=l,this.lvalue=d,this.rvalue=f,this.count=0}function a(l,d,f,y){this.body=l,this.args=d,this.thisVars=f,this.localVars=y}n.exports=function(l){for(var d=["(",l,")()"].join(""),f=r.parse(d,{range:!0}),y="_inline_"+i+++"_",m=function(P){for(var O=P.body[0].expression.callee.params,F=new Array(O.length),G=0;G<O.length;++G)F[G]=O[G].name;return F}(f),h=new Array(m.length),g=0;g<m.length;++g)h[g]=new c([y,"arg",g,"_"].join(""),!1,!1);for(var x=new Array(d.length),w=(g=0,d.length);g<w;++g)x[g]=d.charAt(g);var I,N=[],A=[];function T(P,O){for(var F=P.range[0],G=P.range[1],U=F+1;U<G;++U)x[U]="";x[F]=O}return function P(O,F){if(O.parent=F,O.type==="MemberExpression")O.computed?(P(O.object,O),P(O.property,O)):O.object.type==="ThisExpression"?T(O,(ce=O.property.name,ue="this_"+ce.replace(/\_/g,"__"),A.push(ue),ue)):P(O.object,O);else{if(O.type==="ThisExpression")throw new Error("cwise-parser: Computed this is not allowed");if(O.type==="Identifier"){var G=O.name,U=m.indexOf(G);if(U>=0){var Q=h[U],ne=function(Te){return Te.parent.type==="AssignmentExpression"&&Te.parent.left===Te?Te.parent.operator==="="?1:3:Te.parent.type==="UpdateExpression"?3:2}(O);1&ne&&(Q.lvalue=!0),2&ne&&(Q.rvalue=!0),++Q.count,T(O,Q.name)}else(function(Te){if(Te==="eval")throw new Error("cwise-parser: eval() not allowed");return typeof window<"u"?Te in window:s!==void 0?Te in s:typeof self<"u"&&Te in self})(G)||T(O,function(Te){var Ce=y+Te.replace(/\_/g,"__");return N.push(Ce),Ce}(G))}else if(O.type==="Literal")typeof O.value=="string"&&T(O,"'"+O.value.replace(/\_/g,"\\_").replace(/\'/g,"'")+"'");else{if(O.type==="WithStatement")throw new Error("cwise-parser: with() statements not allowed");for(var J=Object.keys(O),oe=0,le=J.length;oe<le;++oe)if(J[oe]!=="parent"){var ge=O[J[oe]];if(ge)if(ge instanceof Array)for(var te=0;te<ge.length;++te)ge[te]&&typeof ge[te].type=="string"&&P(ge[te],O);else typeof ge.type=="string"&&P(ge,O)}}}var ce,ue}(f.body[0].expression.callee.body,void 0),o(N),o(A),new a((I=f.body[0].expression.callee.body,x.slice(I.range[0],I.range[1]).join("")),h,A,N)}}).call(this,t(21))},function(n,e,t){var s,r,o;(function(i,c){r=[e],(o=typeof(s=function(a){var l,d,f,y,m,h,g,x,w,I,N,A,T,P,O,F,G,U;function Q(me,Ie){if(!me)throw new Error("ASSERT: "+Ie)}function ne(me){return me>=48&&me<=57}function J(me){return"0123456789abcdefABCDEF".indexOf(me)>=0}function oe(me){return"01234567".indexOf(me)>=0}function le(me){return me===32||me===9||me===11||me===12||me===160||me>=5760&&[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].indexOf(me)>=0}function ge(me){return me===10||me===13||me===8232||me===8233}function te(me){return me===36||me===95||me>=65&&me<=90||me>=97&&me<=122||me===92||me>=128&&g.NonAsciiIdentifierStart.test(String.fromCharCode(me))}function ce(me){return me===36||me===95||me>=65&&me<=90||me>=97&&me<=122||me>=48&&me<=57||me===92||me>=128&&g.NonAsciiIdentifierPart.test(String.fromCharCode(me))}function ue(me){switch(me){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"yield":case"let":return!0;default:return!1}}function Te(me){return me==="eval"||me==="arguments"}function Ce(me,Ie,Pe,Ye,yt){var _t;Q(typeof Pe=="number","Comment must have valid position"),G.lastCommentStart>=Pe||(G.lastCommentStart=Pe,_t={type:me,value:Ie},U.range&&(_t.range=[Pe,Ye]),U.loc&&(_t.loc=yt),U.comments.push(_t),U.attachComment&&(U.leadingComments.push(_t),U.trailingComments.push(_t)))}function Ne(me){var Ie,Pe,Ye,yt;for(Ie=N-me,Pe={start:{line:A,column:N-T-me}};N<P;)if(Ye=w.charCodeAt(N),++N,ge(Ye))return U.comments&&(yt=w.slice(Ie+me,N-1),Pe.end={line:A,column:N-T-1},Ce("Line",yt,Ie,N-1,Pe)),Ye===13&&w.charCodeAt(N)===10&&++N,++A,void(T=N);U.comments&&(yt=w.slice(Ie+me,N),Pe.end={line:A,column:N-T},Ce("Line",yt,Ie,N,Pe))}function Re(){var me,Ie,Pe,Ye;for(U.comments&&(me=N-2,Ie={start:{line:A,column:N-T-2}});N<P;)if(ge(Pe=w.charCodeAt(N)))Pe===13&&w.charCodeAt(N+1)===10&&++N,++A,++N,T=N,N>=P&&st({},h.UnexpectedToken,"ILLEGAL");else if(Pe===42){if(w.charCodeAt(N+1)===47)return++N,++N,void(U.comments&&(Ye=w.slice(me+2,N-2),Ie.end={line:A,column:N-T},Ce("Block",Ye,me,N,Ie)));++N}else++N;st({},h.UnexpectedToken,"ILLEGAL")}function Ae(){var me,Ie;for(Ie=N===0;N<P;)if(le(me=w.charCodeAt(N)))++N;else if(ge(me))++N,me===13&&w.charCodeAt(N)===10&&++N,++A,T=N,Ie=!0;else if(me===47)if((me=w.charCodeAt(N+1))===47)++N,++N,Ne(2),Ie=!0;else{if(me!==42)break;++N,++N,Re()}else if(Ie&&me===45){if(w.charCodeAt(N+1)!==45||w.charCodeAt(N+2)!==62)break;N+=3,Ne(3)}else{if(me!==60||w.slice(N+1,N+4)!=="!--")break;++N,++N,++N,++N,Ne(4)}}function we(me){var Ie,Pe,Ye,yt=0;for(Pe=me==="u"?4:2,Ie=0;Ie<Pe;++Ie){if(!(N<P&&J(w[N])))return"";Ye=w[N++],yt=16*yt+"0123456789abcdef".indexOf(Ye.toLowerCase())}return String.fromCharCode(yt)}function Le(){var me,Ie;for(me=w.charCodeAt(N++),Ie=String.fromCharCode(me),me===92&&(w.charCodeAt(N)!==117&&st({},h.UnexpectedToken,"ILLEGAL"),++N,(me=we("u"))&&me!=="\\"&&te(me.charCodeAt(0))||st({},h.UnexpectedToken,"ILLEGAL"),Ie=me);N<P&&ce(me=w.charCodeAt(N));)++N,Ie+=String.fromCharCode(me),me===92&&(Ie=Ie.substr(0,Ie.length-1),w.charCodeAt(N)!==117&&st({},h.UnexpectedToken,"ILLEGAL"),++N,(me=we("u"))&&me!=="\\"&&ce(me.charCodeAt(0))||st({},h.UnexpectedToken,"ILLEGAL"),Ie+=me);return Ie}function pe(){var me,Ie;return me=N,{type:(Ie=w.charCodeAt(N)===92?Le():function(){var Pe,Ye;for(Pe=N++;N<P;){if((Ye=w.charCodeAt(N))===92)return N=Pe,Le();if(!ce(Ye))break;++N}return w.slice(Pe,N)}()).length===1?l.Identifier:function(Pe){if(I&&ue(Pe))return!0;switch(Pe.length){case 2:return Pe==="if"||Pe==="in"||Pe==="do";case 3:return Pe==="var"||Pe==="for"||Pe==="new"||Pe==="try"||Pe==="let";case 4:return Pe==="this"||Pe==="else"||Pe==="case"||Pe==="void"||Pe==="with"||Pe==="enum";case 5:return Pe==="while"||Pe==="break"||Pe==="catch"||Pe==="throw"||Pe==="const"||Pe==="yield"||Pe==="class"||Pe==="super";case 6:return Pe==="return"||Pe==="typeof"||Pe==="delete"||Pe==="switch"||Pe==="export"||Pe==="import";case 7:return Pe==="default"||Pe==="finally"||Pe==="extends";case 8:return Pe==="function"||Pe==="continue"||Pe==="debugger";case 10:return Pe==="instanceof";default:return!1}}(Ie)?l.Keyword:Ie==="null"?l.NullLiteral:Ie==="true"||Ie==="false"?l.BooleanLiteral:l.Identifier,value:Ie,lineNumber:A,lineStart:T,start:me,end:N}}function B(){var me,Ie,Pe,Ye,yt=N,_t=w.charCodeAt(N),Bt=w[N];switch(_t){case 46:case 40:case 41:case 59:case 44:case 123:case 125:case 91:case 93:case 58:case 63:case 126:return++N,U.tokenize&&(_t===40?U.openParenToken=U.tokens.length:_t===123&&(U.openCurlyToken=U.tokens.length)),{type:l.Punctuator,value:String.fromCharCode(_t),lineNumber:A,lineStart:T,start:yt,end:N};default:if((me=w.charCodeAt(N+1))===61)switch(_t){case 43:case 45:case 47:case 60:case 62:case 94:case 124:case 37:case 38:case 42:return N+=2,{type:l.Punctuator,value:String.fromCharCode(_t)+String.fromCharCode(me),lineNumber:A,lineStart:T,start:yt,end:N};case 33:case 61:return N+=2,w.charCodeAt(N)===61&&++N,{type:l.Punctuator,value:w.slice(yt,N),lineNumber:A,lineStart:T,start:yt,end:N}}}return(Ye=w.substr(N,4))===">>>="?{type:l.Punctuator,value:Ye,lineNumber:A,lineStart:T,start:yt,end:N+=4}:(Pe=Ye.substr(0,3))===">>>"||Pe==="<<="||Pe===">>="?{type:l.Punctuator,value:Pe,lineNumber:A,lineStart:T,start:yt,end:N+=3}:Bt===(Ie=Pe.substr(0,2))[1]&&"+-<>&|".indexOf(Bt)>=0||Ie==="=>"?{type:l.Punctuator,value:Ie,lineNumber:A,lineStart:T,start:yt,end:N+=2}:"<>=!+-*%&|^/".indexOf(Bt)>=0?(++N,{type:l.Punctuator,value:Bt,lineNumber:A,lineStart:T,start:yt,end:N}):void st({},h.UnexpectedToken,"ILLEGAL")}function D(){var me,Ie,Pe;if(Q(ne((Pe=w[N]).charCodeAt(0))||Pe===".","Numeric literal must start with a decimal digit or a decimal point"),Ie=N,me="",Pe!=="."){if(me=w[N++],Pe=w[N],me==="0"){if(Pe==="x"||Pe==="X")return++N,function(Ye){for(var yt="";N<P&&J(w[N]);)yt+=w[N++];return yt.length===0&&st({},h.UnexpectedToken,"ILLEGAL"),te(w.charCodeAt(N))&&st({},h.UnexpectedToken,"ILLEGAL"),{type:l.NumericLiteral,value:parseInt("0x"+yt,16),lineNumber:A,lineStart:T,start:Ye,end:N}}(Ie);if(oe(Pe)&&function(){var Ye,yt;for(Ye=N+1;Ye<P;++Ye){if((yt=w[Ye])==="8"||yt==="9")return!1;if(!oe(yt))return!0}return!0}())return function(Ye){for(var yt="0"+w[N++];N<P&&oe(w[N]);)yt+=w[N++];return(te(w.charCodeAt(N))||ne(w.charCodeAt(N)))&&st({},h.UnexpectedToken,"ILLEGAL"),{type:l.NumericLiteral,value:parseInt(yt,8),octal:!0,lineNumber:A,lineStart:T,start:Ye,end:N}}(Ie)}for(;ne(w.charCodeAt(N));)me+=w[N++];Pe=w[N]}if(Pe==="."){for(me+=w[N++];ne(w.charCodeAt(N));)me+=w[N++];Pe=w[N]}if(Pe==="e"||Pe==="E")if(me+=w[N++],(Pe=w[N])!=="+"&&Pe!=="-"||(me+=w[N++]),ne(w.charCodeAt(N)))for(;ne(w.charCodeAt(N));)me+=w[N++];else st({},h.UnexpectedToken,"ILLEGAL");return te(w.charCodeAt(N))&&st({},h.UnexpectedToken,"ILLEGAL"),{type:l.NumericLiteral,value:parseFloat(me),lineNumber:A,lineStart:T,start:Ie,end:N}}function H(){var me,Ie,Pe,Ye;return F=null,Ae(),me=N,Ie=function(){var yt,_t,Bt,Zt;for(Q((yt=w[N])==="/","Regular expression literal must start with a slash"),_t=w[N++],Bt=!1,Zt=!1;N<P;)if(_t+=yt=w[N++],yt==="\\")ge((yt=w[N++]).charCodeAt(0))&&st({},h.UnterminatedRegExp),_t+=yt;else if(ge(yt.charCodeAt(0)))st({},h.UnterminatedRegExp);else if(Bt)yt==="]"&&(Bt=!1);else{if(yt==="/"){Zt=!0;break}yt==="["&&(Bt=!0)}return Zt||st({},h.UnterminatedRegExp),{value:_t.substr(1,_t.length-2),literal:_t}}(),Pe=function(){var yt,_t,Bt,Zt;for(_t="",Bt="";N<P&&ce((yt=w[N]).charCodeAt(0));)if(++N,yt==="\\"&&N<P)if((yt=w[N])==="u"){if(Zt=++N,yt=we("u"))for(Bt+=yt,_t+="\\u";Zt<N;++Zt)_t+=w[Zt];else N=Zt,Bt+="u",_t+="\\u";pt({},h.UnexpectedToken,"ILLEGAL")}else _t+="\\",pt({},h.UnexpectedToken,"ILLEGAL");else Bt+=yt,_t+=yt;return{value:Bt,literal:_t}}(),Ye=function(yt,_t){var Bt;try{Bt=new RegExp(yt,_t)}catch{st({},h.InvalidRegExp)}return Bt}(Ie.value,Pe.value),U.tokenize?{type:l.RegularExpression,value:Ye,lineNumber:A,lineStart:T,start:me,end:N}:{literal:Ie.literal+Pe.literal,value:Ye,start:me,end:N}}function he(){var me,Ie,Pe,Ye;return Ae(),me=N,Ie={start:{line:A,column:N-T}},Pe=H(),Ie.end={line:A,column:N-T},U.tokenize||(U.tokens.length>0&&(Ye=U.tokens[U.tokens.length-1]).range[0]===me&&Ye.type==="Punctuator"&&(Ye.value!=="/"&&Ye.value!=="/="||U.tokens.pop()),U.tokens.push({type:"RegularExpression",value:Pe.literal,range:[me,N],loc:Ie})),Pe}function j(){var me;return Ae(),N>=P?{type:l.EOF,lineNumber:A,lineStart:T,start:N,end:N}:te(me=w.charCodeAt(N))?pe():me===40||me===41||me===59?B():me===39||me===34?function(){var Ie,Pe,Ye,yt,_t,Bt,Zt,un,pn="",Ht=!1;for(Zt=A,un=T,Q((Ie=w[N])==="'"||Ie==='"',"String literal must starts with a quote"),Pe=N,++N;N<P;){if((Ye=w[N++])===Ie){Ie="";break}if(Ye==="\\")if((Ye=w[N++])&&ge(Ye.charCodeAt(0)))++A,Ye==="\r"&&w[N]===`
`&&++N,T=N;else switch(Ye){case"u":case"x":Bt=N,(_t=we(Ye))?pn+=_t:(N=Bt,pn+=Ye);break;case"n":pn+=`
`;break;case"r":pn+="\r";break;case"t":pn+="	";break;case"b":pn+="\b";break;case"f":pn+="\f";break;case"v":pn+="\v";break;default:oe(Ye)?((yt="01234567".indexOf(Ye))!==0&&(Ht=!0),N<P&&oe(w[N])&&(Ht=!0,yt=8*yt+"01234567".indexOf(w[N++]),"0123".indexOf(Ye)>=0&&N<P&&oe(w[N])&&(yt=8*yt+"01234567".indexOf(w[N++]))),pn+=String.fromCharCode(yt)):pn+=Ye}else{if(ge(Ye.charCodeAt(0)))break;pn+=Ye}}return Ie!==""&&st({},h.UnexpectedToken,"ILLEGAL"),{type:l.StringLiteral,value:pn,octal:Ht,startLineNumber:Zt,startLineStart:un,lineNumber:A,lineStart:T,start:Pe,end:N}}():me===46?ne(w.charCodeAt(N+1))?D():B():ne(me)?D():U.tokenize&&me===47?function(){var Ie,Pe;if(!(Ie=U.tokens[U.tokens.length-1]))return he();if(Ie.type==="Punctuator"){if(Ie.value==="]")return B();if(Ie.value===")")return!(Pe=U.tokens[U.openParenToken-1])||Pe.type!=="Keyword"||Pe.value!=="if"&&Pe.value!=="while"&&Pe.value!=="for"&&Pe.value!=="with"?B():he();if(Ie.value==="}"){if(U.tokens[U.openCurlyToken-3]&&U.tokens[U.openCurlyToken-3].type==="Keyword"){if(!(Pe=U.tokens[U.openCurlyToken-4]))return B()}else{if(!U.tokens[U.openCurlyToken-4]||U.tokens[U.openCurlyToken-4].type!=="Keyword")return B();if(!(Pe=U.tokens[U.openCurlyToken-5]))return he()}return f.indexOf(Pe.value)>=0?B():he()}return he()}return Ie.type==="Keyword"&&Ie.value!=="this"?he():B()}():B()}function ee(){var me,Ie,Pe;return Ae(),me={start:{line:A,column:N-T}},Ie=j(),me.end={line:A,column:N-T},Ie.type!==l.EOF&&(Pe=w.slice(Ie.start,Ie.end),U.tokens.push({type:d[Ie.type],value:Pe,range:[Ie.start,Ie.end],loc:me})),Ie}function ye(){var me;return N=(me=F).end,A=me.lineNumber,T=me.lineStart,F=U.tokens!==void 0?ee():j(),N=me.end,A=me.lineNumber,T=me.lineStart,me}function Oe(){var me,Ie,Pe;me=N,Ie=A,Pe=T,F=U.tokens!==void 0?ee():j(),N=me,A=Ie,T=Pe}function ze(me,Ie){this.line=me,this.column=Ie}function Xe(me,Ie,Pe,Ye){this.start=new ze(me,Ie),this.end=new ze(Pe,Ye)}function ot(){var me,Ie,Pe,Ye;return me=N,Ie=A,Pe=T,Ae(),Ye=A!==Ie,N=me,A=Ie,T=Pe,Ye}function st(me,Ie){var Pe,Ye=Array.prototype.slice.call(arguments,2),yt=Ie.replace(/%(\d)/g,function(_t,Bt){return Q(Bt<Ye.length,"Message reference must be in range"),Ye[Bt]});throw typeof me.lineNumber=="number"?((Pe=new Error("Line "+me.lineNumber+": "+yt)).index=me.start,Pe.lineNumber=me.lineNumber,Pe.column=me.start-T+1):((Pe=new Error("Line "+A+": "+yt)).index=N,Pe.lineNumber=A,Pe.column=N-T+1),Pe.description=yt,Pe}function pt(){try{st.apply(null,arguments)}catch(me){if(!U.errors)throw me;U.errors.push(me)}}function gt(me){if(me.type===l.EOF&&st(me,h.UnexpectedEOS),me.type===l.NumericLiteral&&st(me,h.UnexpectedNumber),me.type===l.StringLiteral&&st(me,h.UnexpectedString),me.type===l.Identifier&&st(me,h.UnexpectedIdentifier),me.type===l.Keyword){if(function(Ie){switch(Ie){case"class":case"enum":case"export":case"extends":case"import":case"super":return!0;default:return!1}}(me.value))st(me,h.UnexpectedReserved);else if(I&&ue(me.value))return void pt(me,h.StrictReservedWord);st(me,h.UnexpectedToken,me.value)}st(me,h.UnexpectedToken,me.value)}function ht(me){var Ie=ye();Ie.type===l.Punctuator&&Ie.value===me||gt(Ie)}function Tt(me){var Ie=ye();Ie.type===l.Keyword&&Ie.value===me||gt(Ie)}function xt(me){return F.type===l.Punctuator&&F.value===me}function Pt(me){return F.type===l.Keyword&&F.value===me}function tn(){var me,Ie=N,Pe=A,Ye=T,yt=F;if(w.charCodeAt(N)===59||xt(";"))ye();else{if(me=A,Ae(),A!==me)return N=Ie,A=Pe,T=Ye,void(F=yt);F.type===l.EOF||xt("}")||gt(F)}}function ln(me){return me.type===y.Identifier||me.type===y.MemberExpression}function on(me,Ie){var Pe,Ye,yt;return Pe=I,yt=F,Ye=jt(),Ie&&I&&Te(me[0].name)&&pt(Ie,h.StrictParamName),I=Pe,O.markEnd(O.createFunctionExpression(null,me,[],Ye),yt)}function An(){var me,Ie;return Ie=F,(me=ye()).type===l.StringLiteral||me.type===l.NumericLiteral?(I&&me.octal&&pt(me,h.StrictOctalLiteral),O.markEnd(O.createLiteral(me),Ie)):O.markEnd(O.createIdentifier(me.value),Ie)}function zn(){var me,Ie,Pe,Ye,yt,_t;return _t=F,(me=F).type===l.Identifier?(Pe=An(),me.value!=="get"||xt(":")?me.value!=="set"||xt(":")?(ht(":"),Ye=ts(),O.markEnd(O.createProperty("init",Pe,Ye),_t)):(Ie=An(),ht("("),(me=F).type!==l.Identifier?(ht(")"),pt(me,h.UnexpectedToken,me.value),Ye=on([])):(yt=[Ws()],ht(")"),Ye=on(yt,me)),O.markEnd(O.createProperty("set",Ie,Ye),_t)):(Ie=An(),ht("("),ht(")"),Ye=on([]),O.markEnd(O.createProperty("get",Ie,Ye),_t))):me.type!==l.EOF&&me.type!==l.Punctuator?(Ie=An(),ht(":"),Ye=ts(),O.markEnd(O.createProperty("init",Ie,Ye),_t)):void gt(me)}function Kn(){var me,Ie,Pe,Ye;if(xt("("))return function(){var yt;return ht("("),yt=Gn(),ht(")"),yt}();if(xt("["))return function(){var yt,_t=[];for(yt=F,ht("[");!xt("]");)xt(",")?(ye(),_t.push(null)):(_t.push(ts()),xt("]")||ht(","));return ye(),O.markEnd(O.createArrayExpression(_t),yt)}();if(xt("{"))return function(){var yt,_t,Bt,Zt,un,pn=[],Ht={},Gt=String;for(un=F,ht("{");!xt("}");)_t=(yt=zn()).key.type===y.Identifier?yt.key.name:Gt(yt.key.value),Zt=yt.kind==="init"?m.Data:yt.kind==="get"?m.Get:m.Set,Bt="$"+_t,Object.prototype.hasOwnProperty.call(Ht,Bt)?(Ht[Bt]===m.Data?I&&Zt===m.Data?pt({},h.StrictDuplicateProperty):Zt!==m.Data&&pt({},h.AccessorDataProperty):Zt===m.Data?pt({},h.AccessorDataProperty):Ht[Bt]&Zt&&pt({},h.AccessorGetSet),Ht[Bt]|=Zt):Ht[Bt]=Zt,pn.push(yt),xt("}")||ht(",");return ht("}"),O.markEnd(O.createObjectExpression(pn),un)}();if(me=F.type,Ye=F,me===l.Identifier)Pe=O.createIdentifier(ye().value);else if(me===l.StringLiteral||me===l.NumericLiteral)I&&F.octal&&pt(F,h.StrictOctalLiteral),Pe=O.createLiteral(ye());else if(me===l.Keyword){if(Pt("function"))return function(){var yt,_t,Bt,Zt,un,pn,Ht,Gt,Tn,ns=null;return Tn=F,Tt("function"),xt("(")||(yt=F,ns=Ws(),I?Te(yt.value)&&pt(yt,h.StrictFunctionName):Te(yt.value)?(Bt=yt,Zt=h.StrictFunctionName):ue(yt.value)&&(Bt=yt,Zt=h.StrictReservedWord)),un=sn(Bt),pn=un.params,_t=un.stricted,Bt=un.firstRestricted,un.message&&(Zt=un.message),Gt=I,Ht=jt(),I&&Bt&&st(Bt,Zt),I&&_t&&pt(_t,Zt),I=Gt,O.markEnd(O.createFunctionExpression(ns,pn,[],Ht),Tn)}();Pt("this")?(ye(),Pe=O.createThisExpression()):gt(ye())}else me===l.BooleanLiteral?((Ie=ye()).value=Ie.value==="true",Pe=O.createLiteral(Ie)):me===l.NullLiteral?((Ie=ye()).value=null,Pe=O.createLiteral(Ie)):xt("/")||xt("/=")?(Pe=U.tokens!==void 0?O.createLiteral(he()):O.createLiteral(H()),Oe()):gt(ye());return O.markEnd(Pe,Ye)}function Qn(){var me=[];if(ht("("),!xt(")"))for(;N<P&&(me.push(ts()),!xt(")"));)ht(",");return ht(")"),me}function $s(){var me,Ie;return Ie=F,function(Pe){return Pe.type===l.Identifier||Pe.type===l.Keyword||Pe.type===l.BooleanLiteral||Pe.type===l.NullLiteral}(me=ye())||gt(me),O.markEnd(O.createIdentifier(me.value),Ie)}function Ps(){return ht("."),$s()}function Bn(){var me;return ht("["),me=Gn(),ht("]"),me}function Rn(){var me,Ie,Pe;return Pe=F,Tt("new"),me=function(){var Ye,yt,_t;for(Q(G.allowIn,"callee of new expression always allow in keyword."),_t=F,Ye=Pt("new")?Rn():Kn();xt(".")||xt("[");)xt("[")?(yt=Bn(),Ye=O.createMemberExpression("[",Ye,yt)):(yt=Ps(),Ye=O.createMemberExpression(".",Ye,yt)),O.markEnd(Ye,_t);return Ye}(),Ie=xt("(")?Qn():[],O.markEnd(O.createNewExpression(me,Ie),Pe)}function gr(){var me,Ie,Pe=F;return me=function(){var Ye,yt,_t,Bt,Zt=G.allowIn;for(Bt=F,G.allowIn=!0,Ye=Pt("new")?Rn():Kn();;){if(xt("."))_t=Ps(),Ye=O.createMemberExpression(".",Ye,_t);else if(xt("("))yt=Qn(),Ye=O.createCallExpression(Ye,yt);else{if(!xt("["))break;_t=Bn(),Ye=O.createMemberExpression("[",Ye,_t)}O.markEnd(Ye,Bt)}return G.allowIn=Zt,Ye}(),F.type===l.Punctuator&&(!xt("++")&&!xt("--")||ot()||(I&&me.type===y.Identifier&&Te(me.name)&&pt({},h.StrictLHSPostfix),ln(me)||pt({},h.InvalidLHSInAssignment),Ie=ye(),me=O.markEnd(O.createPostfixExpression(Ie.value,me),Pe))),me}function qs(){var me,Ie,Pe;return F.type!==l.Punctuator&&F.type!==l.Keyword?Ie=gr():xt("++")||xt("--")?(Pe=F,me=ye(),Ie=qs(),I&&Ie.type===y.Identifier&&Te(Ie.name)&&pt({},h.StrictLHSPrefix),ln(Ie)||pt({},h.InvalidLHSInAssignment),Ie=O.createUnaryExpression(me.value,Ie),Ie=O.markEnd(Ie,Pe)):xt("+")||xt("-")||xt("~")||xt("!")?(Pe=F,me=ye(),Ie=qs(),Ie=O.createUnaryExpression(me.value,Ie),Ie=O.markEnd(Ie,Pe)):Pt("delete")||Pt("void")||Pt("typeof")?(Pe=F,me=ye(),Ie=qs(),Ie=O.createUnaryExpression(me.value,Ie),Ie=O.markEnd(Ie,Pe),I&&Ie.operator==="delete"&&Ie.argument.type===y.Identifier&&pt({},h.StrictDelete)):Ie=gr(),Ie}function yr(me,Ie){var Pe=0;if(me.type!==l.Punctuator&&me.type!==l.Keyword)return 0;switch(me.value){case"||":Pe=1;break;case"&&":Pe=2;break;case"|":Pe=3;break;case"^":Pe=4;break;case"&":Pe=5;break;case"==":case"!=":case"===":case"!==":Pe=6;break;case"<":case">":case"<=":case">=":case"instanceof":Pe=7;break;case"in":Pe=Ie?7:0;break;case"<<":case">>":case">>>":Pe=8;break;case"+":case"-":Pe=9;break;case"*":case"/":case"%":Pe=11}return Pe}function Mr(){var me,Ie,Pe,Ye,yt;return yt=F,me=function(){var _t,Bt,Zt,un,pn,Ht,Gt,Tn,ns,Hs;if(_t=F,ns=qs(),(pn=yr(un=F,G.allowIn))===0)return ns;for(un.prec=pn,ye(),Bt=[_t,F],Ht=[ns,un,Gt=qs()];(pn=yr(F,G.allowIn))>0;){for(;Ht.length>2&&pn<=Ht[Ht.length-2].prec;)Gt=Ht.pop(),Tn=Ht.pop().value,ns=Ht.pop(),Zt=O.createBinaryExpression(Tn,ns,Gt),Bt.pop(),_t=Bt[Bt.length-1],O.markEnd(Zt,_t),Ht.push(Zt);(un=ye()).prec=pn,Ht.push(un),Bt.push(F),Zt=qs(),Ht.push(Zt)}for(Zt=Ht[Hs=Ht.length-1],Bt.pop();Hs>1;)Zt=O.createBinaryExpression(Ht[Hs-1].value,Ht[Hs-2],Zt),Hs-=2,_t=Bt.pop(),O.markEnd(Zt,_t);return Zt}(),xt("?")&&(ye(),Ie=G.allowIn,G.allowIn=!0,Pe=ts(),G.allowIn=Ie,ht(":"),Ye=ts(),me=O.createConditionalExpression(me,Pe,Ye),O.markEnd(me,yt)),me}function ts(){var me,Ie,Pe,Ye,yt,_t;return me=F,yt=F,Ye=Ie=Mr(),F.type!==l.Punctuator||(_t=F.value)!=="="&&_t!=="*="&&_t!=="/="&&_t!=="%="&&_t!=="+="&&_t!=="-="&&_t!=="<<="&&_t!==">>="&&_t!==">>>="&&_t!=="&="&&_t!=="^="&&_t!=="|="||(ln(Ie)||pt({},h.InvalidLHSInAssignment),I&&Ie.type===y.Identifier&&Te(Ie.name)&&pt(me,h.StrictLHSAssignment),me=ye(),Pe=ts(),Ye=O.markEnd(O.createAssignmentExpression(me.value,Ie,Pe),yt)),Ye}function Gn(){var me,Ie=F;if(me=ts(),xt(",")){for(me=O.createSequenceExpression([me]);N<P&&xt(",");)ye(),me.expressions.push(ts());O.markEnd(me,Ie)}return me}function _r(){var me,Ie;return Ie=F,ht("{"),me=function(){for(var Pe,Ye=[];N<P&&!xt("}")&&(Pe=Jt())!==void 0;)Ye.push(Pe);return Ye}(),ht("}"),O.markEnd(O.createBlockStatement(me),Ie)}function Ws(){var me,Ie;return Ie=F,(me=ye()).type!==l.Identifier&&gt(me),O.markEnd(O.createIdentifier(me.value),Ie)}function cr(me){var Ie,Pe,Ye=null;return Pe=F,Ie=Ws(),I&&Te(Ie.name)&&pt({},h.StrictVarName),me==="const"?(ht("="),Ye=ts()):xt("=")&&(ye(),Ye=ts()),O.markEnd(O.createVariableDeclarator(Ie,Ye),Pe)}function br(me){var Ie=[];do{if(Ie.push(cr(me)),!xt(","))break;ye()}while(N<P);return Ie}function ft(){var me,Ie,Pe,Ye,yt,_t,Bt,Zt,un,pn,Ht=G.allowIn;return me=Ie=Pe=null,Tt("for"),ht("("),xt(";")?ye():(Pt("var")||Pt("let")?(G.allowIn=!1,pn=F,Zt=ye(),un=br(),me=O.markEnd(O.createVariableDeclaration(un,Zt.value),pn),G.allowIn=Ht,me.declarations.length===1&&Pt("in")&&(ye(),Ye=me,yt=Gn(),me=null)):(G.allowIn=!1,me=Gn(),G.allowIn=Ht,Pt("in")&&(ln(me)||pt({},h.InvalidLHSInForIn),ye(),Ye=me,yt=Gn(),me=null)),Ye===void 0&&ht(";")),Ye===void 0&&(xt(";")||(Ie=Gn()),ht(";"),xt(")")||(Pe=Gn())),ht(")"),Bt=G.inIteration,G.inIteration=!0,_t=Ge(),G.inIteration=Bt,Ye===void 0?O.createForStatement(me,Ie,Pe,_t):O.createForInStatement(Ye,yt,_t)}function Ze(){var me,Ie,Pe,Ye=[];for(Pe=F,Pt("default")?(ye(),me=null):(Tt("case"),me=Gn()),ht(":");N<P&&!(xt("}")||Pt("default")||Pt("case"));)Ie=Ge(),Ye.push(Ie);return O.markEnd(O.createSwitchCase(me,Ye),Pe)}function Ct(){var me,Ie,Pe,Ye,yt=[],_t=null;return Tt("try"),me=_r(),Pt("catch")&&yt.push((Ye=F,Tt("catch"),ht("("),xt(")")&&gt(F),Ie=Ws(),I&&Te(Ie.name)&&pt({},h.StrictCatchVariable),ht(")"),Pe=_r(),O.markEnd(O.createCatchClause(Ie,Pe),Ye))),Pt("finally")&&(ye(),_t=_r()),yt.length!==0||_t||st({},h.NoCatchOrFinally),O.createTryStatement(me,[],yt,_t)}function Ge(){var me,Ie,Pe,Ye,yt,_t,Bt,Zt,un,pn=F.type;if(pn===l.EOF&&gt(F),pn===l.Punctuator&&F.value==="{")return _r();if(Ye=F,pn===l.Punctuator)switch(F.value){case";":return O.markEnd((ht(";"),O.createEmptyStatement()),Ye);case"(":return O.markEnd(function(){var Ht=Gn();return tn(),O.createExpressionStatement(Ht)}(),Ye)}if(pn===l.Keyword)switch(F.value){case"break":return O.markEnd(function(){var Ht,Gt=null;return Tt("break"),w.charCodeAt(N)===59?(ye(),G.inIteration||G.inSwitch||st({},h.IllegalBreak),O.createBreakStatement(null)):ot()?(G.inIteration||G.inSwitch||st({},h.IllegalBreak),O.createBreakStatement(null)):(F.type===l.Identifier&&(Ht="$"+(Gt=Ws()).name,Object.prototype.hasOwnProperty.call(G.labelSet,Ht)||st({},h.UnknownLabel,Gt.name)),tn(),Gt!==null||G.inIteration||G.inSwitch||st({},h.IllegalBreak),O.createBreakStatement(Gt))}(),Ye);case"continue":return O.markEnd(function(){var Ht,Gt=null;return Tt("continue"),w.charCodeAt(N)===59?(ye(),G.inIteration||st({},h.IllegalContinue),O.createContinueStatement(null)):ot()?(G.inIteration||st({},h.IllegalContinue),O.createContinueStatement(null)):(F.type===l.Identifier&&(Ht="$"+(Gt=Ws()).name,Object.prototype.hasOwnProperty.call(G.labelSet,Ht)||st({},h.UnknownLabel,Gt.name)),tn(),Gt!==null||G.inIteration||st({},h.IllegalContinue),O.createContinueStatement(Gt))}(),Ye);case"debugger":return O.markEnd((Tt("debugger"),tn(),O.createDebuggerStatement()),Ye);case"do":return O.markEnd((Tt("do"),un=G.inIteration,G.inIteration=!0,Bt=Ge(),G.inIteration=un,Tt("while"),ht("("),Zt=Gn(),ht(")"),xt(";")&&ye(),O.createDoWhileStatement(Bt,Zt)),Ye);case"for":return O.markEnd(ft(),Ye);case"function":return O.markEnd(hn(),Ye);case"if":return O.markEnd(function(){var Ht,Gt,Tn;return Tt("if"),ht("("),Ht=Gn(),ht(")"),Gt=Ge(),Pt("else")?(ye(),Tn=Ge()):Tn=null,O.createIfStatement(Ht,Gt,Tn)}(),Ye);case"return":return O.markEnd((_t=null,Tt("return"),G.inFunctionBody||pt({},h.IllegalReturn),w.charCodeAt(N)===32&&te(w.charCodeAt(N+1))?(_t=Gn(),tn(),O.createReturnStatement(_t)):ot()?O.createReturnStatement(null):(xt(";")||xt("}")||F.type===l.EOF||(_t=Gn()),tn(),O.createReturnStatement(_t))),Ye);case"switch":return O.markEnd(function(){var Ht,Gt,Tn,ns,Hs;if(Tt("switch"),ht("("),Ht=Gn(),ht(")"),ht("{"),Gt=[],xt("}"))return ye(),O.createSwitchStatement(Ht,Gt);for(ns=G.inSwitch,G.inSwitch=!0,Hs=!1;N<P&&!xt("}");)(Tn=Ze()).test===null&&(Hs&&st({},h.MultipleDefaultsInSwitch),Hs=!0),Gt.push(Tn);return G.inSwitch=ns,ht("}"),O.createSwitchStatement(Ht,Gt)}(),Ye);case"throw":return O.markEnd(function(){var Ht;return Tt("throw"),ot()&&st({},h.NewlineAfterThrow),Ht=Gn(),tn(),O.createThrowStatement(Ht)}(),Ye);case"try":return O.markEnd(Ct(),Ye);case"var":return O.markEnd((Tt("var"),yt=br(),tn(),O.createVariableDeclaration(yt,"var")),Ye);case"while":return O.markEnd(function(){var Ht,Gt,Tn;return Tt("while"),ht("("),Ht=Gn(),ht(")"),Tn=G.inIteration,G.inIteration=!0,Gt=Ge(),G.inIteration=Tn,O.createWhileStatement(Ht,Gt)}(),Ye);case"with":return O.markEnd(function(){var Ht,Gt;return I&&(Ae(),pt({},h.StrictModeWith)),Tt("with"),ht("("),Ht=Gn(),ht(")"),Gt=Ge(),O.createWithStatement(Ht,Gt)}(),Ye)}return(me=Gn()).type===y.Identifier&&xt(":")?(ye(),Pe="$"+me.name,Object.prototype.hasOwnProperty.call(G.labelSet,Pe)&&st({},h.Redeclaration,"Label",me.name),G.labelSet[Pe]=!0,Ie=Ge(),delete G.labelSet[Pe],O.markEnd(O.createLabeledStatement(me,Ie),Ye)):(tn(),O.markEnd(O.createExpressionStatement(me),Ye))}function jt(){var me,Ie,Pe,Ye,yt,_t,Bt,Zt,un=[];for(Zt=F,ht("{");N<P&&F.type===l.StringLiteral&&(Ie=F,me=Jt(),un.push(me),me.expression.type===y.Literal);)w.slice(Ie.start+1,Ie.end-1)==="use strict"?(I=!0,Pe&&pt(Pe,h.StrictOctalLiteral)):!Pe&&Ie.octal&&(Pe=Ie);for(Ye=G.labelSet,yt=G.inIteration,_t=G.inSwitch,Bt=G.inFunctionBody,G.labelSet={},G.inIteration=!1,G.inSwitch=!1,G.inFunctionBody=!0;N<P&&!xt("}")&&(me=Jt())!==void 0;)un.push(me);return ht("}"),G.labelSet=Ye,G.inIteration=yt,G.inSwitch=_t,G.inFunctionBody=Bt,O.markEnd(O.createBlockStatement(un),Zt)}function sn(me){var Ie,Pe,Ye,yt,_t,Bt,Zt=[];if(ht("("),!xt(")"))for(yt={};N<P&&(Pe=F,Ie=Ws(),_t="$"+Pe.value,I?(Te(Pe.value)&&(Ye=Pe,Bt=h.StrictParamName),Object.prototype.hasOwnProperty.call(yt,_t)&&(Ye=Pe,Bt=h.StrictParamDupe)):me||(Te(Pe.value)?(me=Pe,Bt=h.StrictParamName):ue(Pe.value)?(me=Pe,Bt=h.StrictReservedWord):Object.prototype.hasOwnProperty.call(yt,_t)&&(me=Pe,Bt=h.StrictParamDupe)),Zt.push(Ie),yt[_t]=!0,!xt(")"));)ht(",");return ht(")"),{params:Zt,stricted:Ye,firstRestricted:me,message:Bt}}function hn(){var me,Ie,Pe,Ye,yt,_t,Bt,Zt,un,pn;return pn=F,Tt("function"),Ye=F,me=Ws(),I?Te(Ye.value)&&pt(Ye,h.StrictFunctionName):Te(Ye.value)?(Bt=Ye,Zt=h.StrictFunctionName):ue(Ye.value)&&(Bt=Ye,Zt=h.StrictReservedWord),Ie=(_t=sn(Bt)).params,yt=_t.stricted,Bt=_t.firstRestricted,_t.message&&(Zt=_t.message),un=I,Pe=jt(),I&&Bt&&st(Bt,Zt),I&&yt&&pt(yt,Zt),I=un,O.markEnd(O.createFunctionDeclaration(me,Ie,[],Pe),pn)}function Jt(){if(F.type===l.Keyword)switch(F.value){case"const":case"let":return me=F.value,Pe=F,Tt(me),Ie=br(me),tn(),O.markEnd(O.createVariableDeclaration(Ie,me),Pe);case"function":return hn();default:return Ge()}var me,Ie,Pe;if(F.type!==l.EOF)return Ge()}function In(){var me,Ie;return Ae(),Oe(),Ie=F,I=!1,me=function(){for(var Pe,Ye,yt,_t=[];N<P&&(Ye=F).type===l.StringLiteral&&(Pe=Jt(),_t.push(Pe),Pe.expression.type===y.Literal);)w.slice(Ye.start+1,Ye.end-1)==="use strict"?(I=!0,yt&&pt(yt,h.StrictOctalLiteral)):!yt&&Ye.octal&&(yt=Ye);for(;N<P&&(Pe=Jt())!==void 0;)_t.push(Pe);return _t}(),O.markEnd(O.createProgram(me),Ie)}function Hn(){var me,Ie,Pe,Ye=[];for(me=0;me<U.tokens.length;++me)Pe={type:(Ie=U.tokens[me]).type,value:Ie.value},U.range&&(Pe.range=Ie.range),U.loc&&(Pe.loc=Ie.loc),Ye.push(Pe);U.tokens=Ye}(d={})[(l={BooleanLiteral:1,EOF:2,Identifier:3,Keyword:4,NullLiteral:5,NumericLiteral:6,Punctuator:7,StringLiteral:8,RegularExpression:9}).BooleanLiteral]="Boolean",d[l.EOF]="<end>",d[l.Identifier]="Identifier",d[l.Keyword]="Keyword",d[l.NullLiteral]="Null",d[l.NumericLiteral]="Numeric",d[l.Punctuator]="Punctuator",d[l.StringLiteral]="String",d[l.RegularExpression]="RegularExpression",f=["(","{","[","in","typeof","instanceof","new","return","case","delete","throw","void","=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","&=","|=","^=",",","+","-","*","/","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","===","==",">=","<=","<",">","!=","!=="],y={AssignmentExpression:"AssignmentExpression",ArrayExpression:"ArrayExpression",BlockStatement:"BlockStatement",BinaryExpression:"BinaryExpression",BreakStatement:"BreakStatement",CallExpression:"CallExpression",CatchClause:"CatchClause",ConditionalExpression:"ConditionalExpression",ContinueStatement:"ContinueStatement",DoWhileStatement:"DoWhileStatement",DebuggerStatement:"DebuggerStatement",EmptyStatement:"EmptyStatement",ExpressionStatement:"ExpressionStatement",ForStatement:"ForStatement",ForInStatement:"ForInStatement",FunctionDeclaration:"FunctionDeclaration",FunctionExpression:"FunctionExpression",Identifier:"Identifier",IfStatement:"IfStatement",Literal:"Literal",LabeledStatement:"LabeledStatement",LogicalExpression:"LogicalExpression",MemberExpression:"MemberExpression",NewExpression:"NewExpression",ObjectExpression:"ObjectExpression",Program:"Program",Property:"Property",ReturnStatement:"ReturnStatement",SequenceExpression:"SequenceExpression",SwitchStatement:"SwitchStatement",SwitchCase:"SwitchCase",ThisExpression:"ThisExpression",ThrowStatement:"ThrowStatement",TryStatement:"TryStatement",UnaryExpression:"UnaryExpression",UpdateExpression:"UpdateExpression",VariableDeclaration:"VariableDeclaration",VariableDeclarator:"VariableDeclarator",WhileStatement:"WhileStatement",WithStatement:"WithStatement"},m={Data:1,Get:2,Set:4},h={UnexpectedToken:"Unexpected token %0",UnexpectedNumber:"Unexpected number",UnexpectedString:"Unexpected string",UnexpectedIdentifier:"Unexpected identifier",UnexpectedReserved:"Unexpected reserved word",UnexpectedEOS:"Unexpected end of input",NewlineAfterThrow:"Illegal newline after throw",InvalidRegExp:"Invalid regular expression",UnterminatedRegExp:"Invalid regular expression: missing /",InvalidLHSInAssignment:"Invalid left-hand side in assignment",InvalidLHSInForIn:"Invalid left-hand side in for-in",MultipleDefaultsInSwitch:"More than one default clause in switch statement",NoCatchOrFinally:"Missing catch or finally after try",UnknownLabel:"Undefined label '%0'",Redeclaration:"%0 '%1' has already been declared",IllegalContinue:"Illegal continue statement",IllegalBreak:"Illegal break statement",IllegalReturn:"Illegal return statement",StrictModeWith:"Strict mode code may not include a with statement",StrictCatchVariable:"Catch variable may not be eval or arguments in strict mode",StrictVarName:"Variable name may not be eval or arguments in strict mode",StrictParamName:"Parameter name eval or arguments is not allowed in strict mode",StrictParamDupe:"Strict mode function may not have duplicate parameter names",StrictFunctionName:"Function name may not be eval or arguments in strict mode",StrictOctalLiteral:"Octal literals are not allowed in strict mode.",StrictDelete:"Delete of an unqualified identifier in strict mode.",StrictDuplicateProperty:"Duplicate data property in object literal not allowed in strict mode",AccessorDataProperty:"Object literal may not have data and accessor property with the same name",AccessorGetSet:"Object literal may not have multiple get/set accessors with the same name",StrictLHSAssignment:"Assignment to eval or arguments is not allowed in strict mode",StrictLHSPostfix:"Postfix increment/decrement may not have eval or arguments operand in strict mode",StrictLHSPrefix:"Prefix increment/decrement may not have eval or arguments operand in strict mode",StrictReservedWord:"Use of future reserved word in strict mode"},g={NonAsciiIdentifierStart:new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]"),NonAsciiIdentifierPart:new RegExp("[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮ̀-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁ҃-҇Ҋ-ԧԱ-Ֆՙա-և֑-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-٩ٮ-ۓە-ۜ۟-۪ۨ-ۼۿܐ-݊ݍ-ޱ߀-ߵߺࠀ-࠭ࡀ-࡛ࢠࢢ-ࢬࣤ-ࣾऀ-ॣ०-९ॱ-ॷॹ-ॿঁ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-ৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૯ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୯ୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௯ఁ-ఃఅ-ఌఎ-ఐఒ-నప-ళవ-హఽ-ౄె-ైొ-్ౕౖౘౙౠ-ౣ౦-౯ಂಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲംഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൠ-ൣ൦-൯ൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟෲෳก-ฺเ-๎๐-๙ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟༀ༘༙༠-༩༹༵༷༾-ཇཉ-ཬཱ-྄྆-ྗྙ-ྼ࿆က-၉ၐ-ႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፟ᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-᜔ᜠ-᜴ᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-៓ៗៜ៝០-៩᠋-᠍᠐-᠙ᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤜᤠ-ᤫᤰ-᤻᥆-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉ᧐-᧙ᨀ-ᨛᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙ᪧᬀ-ᭋ᭐-᭙᭫-᭳ᮀ-᯳ᰀ-᰷᱀-᱉ᱍ-ᱽ᳐-᳔᳒-ᳶᴀ-ᷦ᷼-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼ‌‍‿⁀⁔ⁱⁿₐ-ₜ⃐-⃥⃜⃡-⃰ℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯ⵿-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〯〱-〵〸-〼ぁ-ゖ゙゚ゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘫꙀ-꙯ꙴ-꙽ꙿ-ꚗꚟ-꛱ꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠧꡀ-ꡳꢀ-꣄꣐-꣙꣠-ꣷꣻ꤀-꤭ꤰ-꥓ꥠ-ꥼꦀ-꧀ꧏ-꧙ꨀ-ꨶꩀ-ꩍ꩐-꩙ꩠ-ꩶꩺꩻꪀ-ꫂꫛ-ꫝꫠ-ꫯꫲ-꫶ꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯪ꯬꯭꯰-꯹가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻ︀-️︠-︦︳︴﹍-﹏ﹰ-ﹴﹶ-ﻼ０-９Ａ-Ｚ＿ａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]")},x={name:"SyntaxTree",processComment:function(me){var Ie,Pe;if(!(me.type===y.Program&&me.body.length>0)){for(U.trailingComments.length>0?U.trailingComments[0].range[0]>=me.range[1]?(Pe=U.trailingComments,U.trailingComments=[]):U.trailingComments.length=0:U.bottomRightStack.length>0&&U.bottomRightStack[U.bottomRightStack.length-1].trailingComments&&U.bottomRightStack[U.bottomRightStack.length-1].trailingComments[0].range[0]>=me.range[1]&&(Pe=U.bottomRightStack[U.bottomRightStack.length-1].trailingComments,delete U.bottomRightStack[U.bottomRightStack.length-1].trailingComments);U.bottomRightStack.length>0&&U.bottomRightStack[U.bottomRightStack.length-1].range[0]>=me.range[0];)Ie=U.bottomRightStack.pop();Ie?Ie.leadingComments&&Ie.leadingComments[Ie.leadingComments.length-1].range[1]<=me.range[0]&&(me.leadingComments=Ie.leadingComments,delete Ie.leadingComments):U.leadingComments.length>0&&U.leadingComments[U.leadingComments.length-1].range[1]<=me.range[0]&&(me.leadingComments=U.leadingComments,U.leadingComments=[]),Pe&&(me.trailingComments=Pe),U.bottomRightStack.push(me)}},markEnd:function(me,Ie){return U.range&&(me.range=[Ie.start,N]),U.loc&&(me.loc=new Xe(Ie.startLineNumber===void 0?Ie.lineNumber:Ie.startLineNumber,Ie.start-(Ie.startLineStart===void 0?Ie.lineStart:Ie.startLineStart),A,N-T),this.postProcess(me)),U.attachComment&&this.processComment(me),me},postProcess:function(me){return U.source&&(me.loc.source=U.source),me},createArrayExpression:function(me){return{type:y.ArrayExpression,elements:me}},createAssignmentExpression:function(me,Ie,Pe){return{type:y.AssignmentExpression,operator:me,left:Ie,right:Pe}},createBinaryExpression:function(me,Ie,Pe){return{type:me==="||"||me==="&&"?y.LogicalExpression:y.BinaryExpression,operator:me,left:Ie,right:Pe}},createBlockStatement:function(me){return{type:y.BlockStatement,body:me}},createBreakStatement:function(me){return{type:y.BreakStatement,label:me}},createCallExpression:function(me,Ie){return{type:y.CallExpression,callee:me,arguments:Ie}},createCatchClause:function(me,Ie){return{type:y.CatchClause,param:me,body:Ie}},createConditionalExpression:function(me,Ie,Pe){return{type:y.ConditionalExpression,test:me,consequent:Ie,alternate:Pe}},createContinueStatement:function(me){return{type:y.ContinueStatement,label:me}},createDebuggerStatement:function(){return{type:y.DebuggerStatement}},createDoWhileStatement:function(me,Ie){return{type:y.DoWhileStatement,body:me,test:Ie}},createEmptyStatement:function(){return{type:y.EmptyStatement}},createExpressionStatement:function(me){return{type:y.ExpressionStatement,expression:me}},createForStatement:function(me,Ie,Pe,Ye){return{type:y.ForStatement,init:me,test:Ie,update:Pe,body:Ye}},createForInStatement:function(me,Ie,Pe){return{type:y.ForInStatement,left:me,right:Ie,body:Pe,each:!1}},createFunctionDeclaration:function(me,Ie,Pe,Ye){return{type:y.FunctionDeclaration,id:me,params:Ie,defaults:Pe,body:Ye,rest:null,generator:!1,expression:!1}},createFunctionExpression:function(me,Ie,Pe,Ye){return{type:y.FunctionExpression,id:me,params:Ie,defaults:Pe,body:Ye,rest:null,generator:!1,expression:!1}},createIdentifier:function(me){return{type:y.Identifier,name:me}},createIfStatement:function(me,Ie,Pe){return{type:y.IfStatement,test:me,consequent:Ie,alternate:Pe}},createLabeledStatement:function(me,Ie){return{type:y.LabeledStatement,label:me,body:Ie}},createLiteral:function(me){return{type:y.Literal,value:me.value,raw:w.slice(me.start,me.end)}},createMemberExpression:function(me,Ie,Pe){return{type:y.MemberExpression,computed:me==="[",object:Ie,property:Pe}},createNewExpression:function(me,Ie){return{type:y.NewExpression,callee:me,arguments:Ie}},createObjectExpression:function(me){return{type:y.ObjectExpression,properties:me}},createPostfixExpression:function(me,Ie){return{type:y.UpdateExpression,operator:me,argument:Ie,prefix:!1}},createProgram:function(me){return{type:y.Program,body:me}},createProperty:function(me,Ie,Pe){return{type:y.Property,key:Ie,value:Pe,kind:me}},createReturnStatement:function(me){return{type:y.ReturnStatement,argument:me}},createSequenceExpression:function(me){return{type:y.SequenceExpression,expressions:me}},createSwitchCase:function(me,Ie){return{type:y.SwitchCase,test:me,consequent:Ie}},createSwitchStatement:function(me,Ie){return{type:y.SwitchStatement,discriminant:me,cases:Ie}},createThisExpression:function(){return{type:y.ThisExpression}},createThrowStatement:function(me){return{type:y.ThrowStatement,argument:me}},createTryStatement:function(me,Ie,Pe,Ye){return{type:y.TryStatement,block:me,guardedHandlers:Ie,handlers:Pe,finalizer:Ye}},createUnaryExpression:function(me,Ie){return me==="++"||me==="--"?{type:y.UpdateExpression,operator:me,argument:Ie,prefix:!0}:{type:y.UnaryExpression,operator:me,argument:Ie,prefix:!0}},createVariableDeclaration:function(me,Ie){return{type:y.VariableDeclaration,declarations:me,kind:Ie}},createVariableDeclarator:function(me,Ie){return{type:y.VariableDeclarator,id:me,init:Ie}},createWhileStatement:function(me,Ie){return{type:y.WhileStatement,test:me,body:Ie}},createWithStatement:function(me,Ie){return{type:y.WithStatement,object:me,body:Ie}}},a.version="1.2.5",a.tokenize=function(me,Ie){var Pe;typeof me=="string"||me instanceof String||(me=String(me)),O=x,N=0,A=(w=me).length>0?1:0,T=0,P=w.length,F=null,G={allowIn:!0,labelSet:{},inFunctionBody:!1,inIteration:!1,inSwitch:!1,lastCommentStart:-1},U={},(Ie=Ie||{}).tokens=!0,U.tokens=[],U.tokenize=!0,U.openParenToken=-1,U.openCurlyToken=-1,U.range=typeof Ie.range=="boolean"&&Ie.range,U.loc=typeof Ie.loc=="boolean"&&Ie.loc,typeof Ie.comment=="boolean"&&Ie.comment&&(U.comments=[]),typeof Ie.tolerant=="boolean"&&Ie.tolerant&&(U.errors=[]);try{if(Oe(),F.type===l.EOF)return U.tokens;for(ye();F.type!==l.EOF;)try{ye()}catch(Ye){if(U.errors){U.errors.push(Ye);break}throw Ye}Hn(),Pe=U.tokens,U.comments!==void 0&&(Pe.comments=U.comments),U.errors!==void 0&&(Pe.errors=U.errors)}catch(Ye){throw Ye}finally{U={}}return Pe},a.parse=function(me,Ie){var Pe,Ye;Ye=String,typeof me=="string"||me instanceof String||(me=Ye(me)),O=x,N=0,A=(w=me).length>0?1:0,T=0,P=w.length,F=null,G={allowIn:!0,labelSet:{},inFunctionBody:!1,inIteration:!1,inSwitch:!1,lastCommentStart:-1},U={},Ie!==void 0&&(U.range=typeof Ie.range=="boolean"&&Ie.range,U.loc=typeof Ie.loc=="boolean"&&Ie.loc,U.attachComment=typeof Ie.attachComment=="boolean"&&Ie.attachComment,U.loc&&Ie.source!==null&&Ie.source!==void 0&&(U.source=Ye(Ie.source)),typeof Ie.tokens=="boolean"&&Ie.tokens&&(U.tokens=[]),typeof Ie.comment=="boolean"&&Ie.comment&&(U.comments=[]),typeof Ie.tolerant=="boolean"&&Ie.tolerant&&(U.errors=[]),U.attachComment&&(U.range=!0,U.comments=[],U.bottomRightStack=[],U.trailingComments=[],U.leadingComments=[]));try{Pe=In(),U.comments!==void 0&&(Pe.comments=U.comments),U.tokens!==void 0&&(Hn(),Pe.tokens=U.tokens),U.errors!==void 0&&(Pe.errors=U.errors)}catch(yt){throw yt}finally{U={}}return Pe},a.Syntax=function(){var me,Ie={};for(me in typeof Object.create=="function"&&(Ie=Object.create(null)),y)y.hasOwnProperty(me)&&(Ie[me]=y[me]);return typeof Object.freeze=="function"&&Object.freeze(Ie),Ie}()})=="function"?s.apply(e,r):s)===void 0||(n.exports=o)})()},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(n,e,t){(function(s){var r=t(11);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o=()=>t(160);let i;class c{constructor(){this.util=t(161),this.textEncoder=new this.util.TextEncoder}fetch(l,d){return Object(r.b)().global.fetch!=null?Object(r.b)().global.fetch(l,d):(i==null&&(i=o()),i(l,d))}now(){const l=s.hrtime();return 1e3*l[0]+l[1]/1e6}encode(l,d){if(d!=="utf-8"&&d!=="utf8")throw new Error("Node built-in encoder only supports utf-8, but got "+d);return this.textEncoder.encode(l)}decode(l,d){return l.length===0?"":new this.util.TextDecoder(d).decode(l)}}Object(r.b)().get("IS_NODE")&&Object(r.b)().setPlatform("node",new c)}).call(this,t(44))},function(n,e){},function(n,e){},function(n,e,t){(function(s){var r;(function(o,i,c){function a(f){var y,m=this,h=(y=4022871197,function(g){g=g.toString();for(var x=0;x<g.length;x++){var w=.02519603282416938*(y+=g.charCodeAt(x));w-=y=w>>>0,y=(w*=y)>>>0,y+=4294967296*(w-=y)}return 23283064365386963e-26*(y>>>0)});m.next=function(){var g=2091639*m.s0+23283064365386963e-26*m.c;return m.s0=m.s1,m.s1=m.s2,m.s2=g-(m.c=0|g)},m.c=1,m.s0=h(" "),m.s1=h(" "),m.s2=h(" "),m.s0-=h(f),m.s0<0&&(m.s0+=1),m.s1-=h(f),m.s1<0&&(m.s1+=1),m.s2-=h(f),m.s2<0&&(m.s2+=1),h=null}function l(f,y){return y.c=f.c,y.s0=f.s0,y.s1=f.s1,y.s2=f.s2,y}function d(f,y){var m=new a(f),h=y&&y.state,g=m.next;return g.int32=function(){return 4294967296*m.next()|0},g.double=function(){return g()+11102230246251565e-32*(2097152*g()|0)},g.quick=g,h&&(typeof h=="object"&&l(h,m),g.state=function(){return l(m,{})}),g}i&&i.exports?i.exports=d:t(22)&&t(32)?(r=(function(){return d}).call(e,t,e,i))===void 0||(i.exports=r):this.alea=d})(0,s,t(22))}).call(this,t(31)(n))},function(n,e,t){(function(s){var r;(function(o,i,c){function a(f){var y=this,m="";y.x=0,y.y=0,y.z=0,y.w=0,y.next=function(){var g=y.x^y.x<<11;return y.x=y.y,y.y=y.z,y.z=y.w,y.w^=y.w>>>19^g^g>>>8},f===(0|f)?y.x=f:m+=f;for(var h=0;h<m.length+64;h++)y.x^=0|m.charCodeAt(h),y.next()}function l(f,y){return y.x=f.x,y.y=f.y,y.z=f.z,y.w=f.w,y}function d(f,y){var m=new a(f),h=y&&y.state,g=function(){return(m.next()>>>0)/4294967296};return g.double=function(){do var x=((m.next()>>>11)+(m.next()>>>0)/4294967296)/2097152;while(x===0);return x},g.int32=m.next,g.quick=g,h&&(typeof h=="object"&&l(h,m),g.state=function(){return l(m,{})}),g}i&&i.exports?i.exports=d:t(22)&&t(32)?(r=(function(){return d}).call(e,t,e,i))===void 0||(i.exports=r):this.xor128=d})(0,s,t(22))}).call(this,t(31)(n))},function(n,e,t){(function(s){var r;(function(o,i,c){function a(f){var y=this,m="";y.next=function(){var g=y.x^y.x>>>2;return y.x=y.y,y.y=y.z,y.z=y.w,y.w=y.v,(y.d=y.d+362437|0)+(y.v=y.v^y.v<<4^g^g<<1)|0},y.x=0,y.y=0,y.z=0,y.w=0,y.v=0,f===(0|f)?y.x=f:m+=f;for(var h=0;h<m.length+64;h++)y.x^=0|m.charCodeAt(h),h==m.length&&(y.d=y.x<<10^y.x>>>4),y.next()}function l(f,y){return y.x=f.x,y.y=f.y,y.z=f.z,y.w=f.w,y.v=f.v,y.d=f.d,y}function d(f,y){var m=new a(f),h=y&&y.state,g=function(){return(m.next()>>>0)/4294967296};return g.double=function(){do var x=((m.next()>>>11)+(m.next()>>>0)/4294967296)/2097152;while(x===0);return x},g.int32=m.next,g.quick=g,h&&(typeof h=="object"&&l(h,m),g.state=function(){return l(m,{})}),g}i&&i.exports?i.exports=d:t(22)&&t(32)?(r=(function(){return d}).call(e,t,e,i))===void 0||(i.exports=r):this.xorwow=d})(0,s,t(22))}).call(this,t(31)(n))},function(n,e,t){(function(s){var r;(function(o,i,c){function a(f){var y=this;y.next=function(){var m,h,g=y.x,x=y.i;return m=g[x],h=(m^=m>>>7)^m<<24,h^=(m=g[x+1&7])^m>>>10,h^=(m=g[x+3&7])^m>>>3,h^=(m=g[x+4&7])^m<<7,m=g[x+7&7],h^=(m^=m<<13)^m<<9,g[x]=h,y.i=x+1&7,h},function(m,h){var g,x=[];if(h===(0|h))x[0]=h;else for(h=""+h,g=0;g<h.length;++g)x[7&g]=x[7&g]<<15^h.charCodeAt(g)+x[g+1&7]<<13;for(;x.length<8;)x.push(0);for(g=0;g<8&&x[g]===0;++g);for(g==8?x[7]=-1:x[g],m.x=x,m.i=0,g=256;g>0;--g)m.next()}(y,f)}function l(f,y){return y.x=f.x.slice(),y.i=f.i,y}function d(f,y){f==null&&(f=+new Date);var m=new a(f),h=y&&y.state,g=function(){return(m.next()>>>0)/4294967296};return g.double=function(){do var x=((m.next()>>>11)+(m.next()>>>0)/4294967296)/2097152;while(x===0);return x},g.int32=m.next,g.quick=g,h&&(h.x&&l(h,m),g.state=function(){return l(m,{})}),g}i&&i.exports?i.exports=d:t(22)&&t(32)?(r=(function(){return d}).call(e,t,e,i))===void 0||(i.exports=r):this.xorshift7=d})(0,s,t(22))}).call(this,t(31)(n))},function(n,e,t){(function(s){var r;(function(o,i,c){function a(f){var y=this;y.next=function(){var m,h,g=y.w,x=y.X,w=y.i;return y.w=g=g+1640531527|0,h=x[w+34&127],m=x[w=w+1&127],h^=h<<13,m^=m<<17,h^=h>>>15,m^=m>>>12,h=x[w]=h^m,y.i=w,h+(g^g>>>16)|0},function(m,h){var g,x,w,I,N,A=[],T=128;for(h===(0|h)?(x=h,h=null):(h+="\0",x=0,T=Math.max(T,h.length)),w=0,I=-32;I<T;++I)h&&(x^=h.charCodeAt((I+32)%h.length)),I===0&&(N=x),x^=x<<10,x^=x>>>15,x^=x<<4,x^=x>>>13,I>=0&&(N=N+1640531527|0,w=(g=A[127&I]^=x+N)==0?w+1:0);for(w>=128&&(A[127&(h&&h.length||0)]=-1),w=127,I=512;I>0;--I)x=A[w+34&127],g=A[w=w+1&127],x^=x<<13,g^=g<<17,x^=x>>>15,g^=g>>>12,A[w]=x^g;m.w=N,m.X=A,m.i=w}(y,f)}function l(f,y){return y.i=f.i,y.w=f.w,y.X=f.X.slice(),y}function d(f,y){f==null&&(f=+new Date);var m=new a(f),h=y&&y.state,g=function(){return(m.next()>>>0)/4294967296};return g.double=function(){do var x=((m.next()>>>11)+(m.next()>>>0)/4294967296)/2097152;while(x===0);return x},g.int32=m.next,g.quick=g,h&&(h.X&&l(h,m),g.state=function(){return l(m,{})}),g}i&&i.exports?i.exports=d:t(22)&&t(32)?(r=(function(){return d}).call(e,t,e,i))===void 0||(i.exports=r):this.xor4096=d})(0,s,t(22))}).call(this,t(31)(n))},function(n,e,t){(function(s){var r;(function(o,i,c){function a(f){var y=this,m="";y.next=function(){var g=y.b,x=y.c,w=y.d,I=y.a;return g=g<<25^g>>>7^x,x=x-w|0,w=w<<24^w>>>8^I,I=I-g|0,y.b=g=g<<20^g>>>12^x,y.c=x=x-w|0,y.d=w<<16^x>>>16^I,y.a=I-g|0},y.a=0,y.b=0,y.c=-1640531527,y.d=1367130551,f===Math.floor(f)?(y.a=f/4294967296|0,y.b=0|f):m+=f;for(var h=0;h<m.length+20;h++)y.b^=0|m.charCodeAt(h),y.next()}function l(f,y){return y.a=f.a,y.b=f.b,y.c=f.c,y.d=f.d,y}function d(f,y){var m=new a(f),h=y&&y.state,g=function(){return(m.next()>>>0)/4294967296};return g.double=function(){do var x=((m.next()>>>11)+(m.next()>>>0)/4294967296)/2097152;while(x===0);return x},g.int32=m.next,g.quick=g,h&&(typeof h=="object"&&l(h,m),g.state=function(){return l(m,{})}),g}i&&i.exports?i.exports=d:t(22)&&t(32)?(r=(function(){return d}).call(e,t,e,i))===void 0||(i.exports=r):this.tychei=d})(0,s,t(22))}).call(this,t(31)(n))},function(n,e,t){var s;(function(r,o){var i,c=this,a=o.pow(256,6),l=o.pow(2,52),d=2*l;function f(x,w,I){var N=[],A=h(function O(F,G){var U,Q=[],ne=typeof F;if(G&&ne=="object")for(U in F)try{Q.push(O(F[U],G-1))}catch{}return Q.length?Q:ne=="string"?F:F+"\0"}((w=w==1?{entropy:!0}:w||{}).entropy?[x,g(r)]:x??function(){try{var O;return i&&(O=i.randomBytes)?O=O(256):(O=new Uint8Array(256),(c.crypto||c.msCrypto).getRandomValues(O)),g(O)}catch{var F=c.navigator,G=F&&F.plugins;return[+new Date,c,G,c.screen,g(r)]}}(),3),N),T=new y(N),P=function(){for(var O=T.g(6),F=a,G=0;O<l;)O=256*(O+G),F*=256,G=T.g(1);for(;O>=d;)O/=2,F/=2,G>>>=1;return(O+G)/F};return P.int32=function(){return 0|T.g(4)},P.quick=function(){return T.g(4)/4294967296},P.double=P,h(g(T.S),r),(w.pass||I||function(O,F,G,U){return U&&(U.S&&m(U,T),O.state=function(){return m(T,{})}),G?(o.random=O,F):O})(P,A,"global"in w?w.global:this==o,w.state)}function y(x){var w,I=x.length,N=this,A=0,T=N.i=N.j=0,P=N.S=[];for(I||(x=[I++]);A<256;)P[A]=A++;for(A=0;A<256;A++)P[A]=P[T=255&T+x[A%I]+(w=P[A])],P[T]=w;(N.g=function(O){for(var F,G=0,U=N.i,Q=N.j,ne=N.S;O--;)F=ne[U=255&U+1],G=256*G+ne[255&(ne[U]=ne[Q=255&Q+F])+(ne[Q]=F)];return N.i=U,N.j=Q,G})(256)}function m(x,w){return w.i=x.i,w.j=x.j,w.S=x.S.slice(),w}function h(x,w){for(var I,N=x+"",A=0;A<N.length;)w[255&A]=255&(I^=19*w[255&A])+N.charCodeAt(A++);return g(w)}function g(x){return String.fromCharCode.apply(0,x)}if(o.seedrandom=f,h(o.random(),r),n.exports){n.exports=f;try{i=t(169)}catch{}}else(s=(function(){return f}).call(e,t,e,n))===void 0||(n.exports=s)})([],Math)},function(n,e){},function(n,e,t){(function(s){var r=s!==void 0&&s||typeof self<"u"&&self||window,o=Function.prototype.apply;function i(c,a){this._id=c,this._clearFn=a}e.setTimeout=function(){return new i(o.call(setTimeout,r,arguments),clearTimeout)},e.setInterval=function(){return new i(o.call(setInterval,r,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(c){c&&c.close()},i.prototype.unref=i.prototype.ref=function(){},i.prototype.close=function(){this._clearFn.call(r,this._id)},e.enroll=function(c,a){clearTimeout(c._idleTimeoutId),c._idleTimeout=a},e.unenroll=function(c){clearTimeout(c._idleTimeoutId),c._idleTimeout=-1},e._unrefActive=e.active=function(c){clearTimeout(c._idleTimeoutId);var a=c._idleTimeout;a>=0&&(c._idleTimeoutId=setTimeout(function(){c._onTimeout&&c._onTimeout()},a))},t(171),e.setImmediate=typeof self<"u"&&self.setImmediate||s!==void 0&&s.setImmediate||this&&this.setImmediate,e.clearImmediate=typeof self<"u"&&self.clearImmediate||s!==void 0&&s.clearImmediate||this&&this.clearImmediate}).call(this,t(21))},function(n,e,t){(function(s,r){(function(o,i){if(!o.setImmediate){var c,a,l,d,f,y=1,m={},h=!1,g=o.document,x=Object.getPrototypeOf&&Object.getPrototypeOf(o);x=x&&x.setTimeout?x:o,{}.toString.call(o.process)==="[object process]"?c=function(N){r.nextTick(function(){I(N)})}:function(){if(o.postMessage&&!o.importScripts){var N=!0,A=o.onmessage;return o.onmessage=function(){N=!1},o.postMessage("","*"),o.onmessage=A,N}}()?(d="setImmediate$"+Math.random()+"$",f=function(N){N.source===o&&typeof N.data=="string"&&N.data.indexOf(d)===0&&I(+N.data.slice(d.length))},o.addEventListener?o.addEventListener("message",f,!1):o.attachEvent("onmessage",f),c=function(N){o.postMessage(d+N,"*")}):o.MessageChannel?((l=new MessageChannel).port1.onmessage=function(N){I(N.data)},c=function(N){l.port2.postMessage(N)}):g&&"onreadystatechange"in g.createElement("script")?(a=g.documentElement,c=function(N){var A=g.createElement("script");A.onreadystatechange=function(){I(N),A.onreadystatechange=null,a.removeChild(A),A=null},a.appendChild(A)}):c=function(N){setTimeout(I,0,N)},x.setImmediate=function(N){typeof N!="function"&&(N=new Function(""+N));for(var A=new Array(arguments.length-1),T=0;T<A.length;T++)A[T]=arguments[T+1];var P={callback:N,args:A};return m[y]=P,c(y),y++},x.clearImmediate=w}function w(N){delete m[N]}function I(N){if(h)setTimeout(I,0,N);else{var A=m[N];if(A){h=!0;try{(function(T){var P=T.callback,O=T.args;switch(O.length){case 0:P();break;case 1:P(O[0]);break;case 2:P(O[0],O[1]);break;case 3:P(O[0],O[1],O[2]);break;default:P.apply(void 0,O)}})(A)}finally{w(N),h=!1}}}}})(typeof self>"u"?s===void 0?this:s:self)}).call(this,t(21),t(44))},function(n,e){function t(r){for(var o,i=new s(r),c=[];!i.eof();){var a=l();c.push(a)}return c;function l(){var d={};d.deltaTime=i.readVarInt();var f=i.readUInt8();if((240&f)==240){if(f!==255){if(f==240)return d.type="sysEx",m=i.readVarInt(),d.data=i.readBytes(m),d;if(f==247)return d.type="endSysEx",m=i.readVarInt(),d.data=i.readBytes(m),d;throw"Unrecognised MIDI event type byte: "+f}d.meta=!0;var y=i.readUInt8(),m=i.readVarInt();switch(y){case 0:if(d.type="sequenceNumber",m!==2)throw"Expected length for sequenceNumber event is 2, got "+m;return d.number=i.readUInt16(),d;case 1:return d.type="text",d.text=i.readString(m),d;case 2:return d.type="copyrightNotice",d.text=i.readString(m),d;case 3:return d.type="trackName",d.text=i.readString(m),d;case 4:return d.type="instrumentName",d.text=i.readString(m),d;case 5:return d.type="lyrics",d.text=i.readString(m),d;case 6:return d.type="marker",d.text=i.readString(m),d;case 7:return d.type="cuePoint",d.text=i.readString(m),d;case 32:if(d.type="channelPrefix",m!=1)throw"Expected length for channelPrefix event is 1, got "+m;return d.channel=i.readUInt8(),d;case 33:if(d.type="portPrefix",m!=1)throw"Expected length for portPrefix event is 1, got "+m;return d.port=i.readUInt8(),d;case 47:if(d.type="endOfTrack",m!=0)throw"Expected length for endOfTrack event is 0, got "+m;return d;case 81:if(d.type="setTempo",m!=3)throw"Expected length for setTempo event is 3, got "+m;return d.microsecondsPerBeat=i.readUInt24(),d;case 84:if(d.type="smpteOffset",m!=5)throw"Expected length for smpteOffset event is 5, got "+m;var h=i.readUInt8();return d.frameRate={0:24,32:25,64:29,96:30}[96&h],d.hour=31&h,d.min=i.readUInt8(),d.sec=i.readUInt8(),d.frame=i.readUInt8(),d.subFrame=i.readUInt8(),d;case 88:if(d.type="timeSignature",m!=4)throw"Expected length for timeSignature event is 4, got "+m;return d.numerator=i.readUInt8(),d.denominator=1<<i.readUInt8(),d.metronome=i.readUInt8(),d.thirtyseconds=i.readUInt8(),d;case 89:if(d.type="keySignature",m!=2)throw"Expected length for keySignature event is 2, got "+m;return d.key=i.readInt8(),d.scale=i.readUInt8(),d;case 127:return d.type="sequencerSpecific",d.data=i.readBytes(m),d;default:return d.type="unknownMeta",d.data=i.readBytes(m),d.metatypeByte=y,d}}else{var g;if((128&f)==0){if(o===null)throw"Running status byte encountered before status byte";g=f,f=o,d.running=!0}else g=i.readUInt8(),o=f;var x=f>>4;switch(d.channel=15&f,x){case 8:return d.type="noteOff",d.noteNumber=g,d.velocity=i.readUInt8(),d;case 9:var w=i.readUInt8();return d.type=w===0?"noteOff":"noteOn",d.noteNumber=g,d.velocity=w,w===0&&(d.byte9=!0),d;case 10:return d.type="noteAftertouch",d.noteNumber=g,d.amount=i.readUInt8(),d;case 11:return d.type="controller",d.controllerType=g,d.value=i.readUInt8(),d;case 12:return d.type="programChange",d.programNumber=g,d;case 13:return d.type="channelAftertouch",d.amount=g,d;case 14:return d.type="pitchBend",d.value=g+(i.readUInt8()<<7)-8192,d;default:throw"Unrecognised MIDI event type: "+x}}}}function s(r){this.buffer=r,this.bufferLen=this.buffer.length,this.pos=0}s.prototype.eof=function(){return this.pos>=this.bufferLen},s.prototype.readUInt8=function(){var r=this.buffer[this.pos];return this.pos+=1,r},s.prototype.readInt8=function(){var r=this.readUInt8();return 128&r?r-256:r},s.prototype.readUInt16=function(){return(this.readUInt8()<<8)+this.readUInt8()},s.prototype.readInt16=function(){var r=this.readUInt16();return 32768&r?r-65536:r},s.prototype.readUInt24=function(){return(this.readUInt8()<<16)+(this.readUInt8()<<8)+this.readUInt8()},s.prototype.readInt24=function(){var r=this.readUInt24();return 8388608&r?r-16777216:r},s.prototype.readUInt32=function(){return(this.readUInt8()<<24)+(this.readUInt8()<<16)+(this.readUInt8()<<8)+this.readUInt8()},s.prototype.readBytes=function(r){var o=this.buffer.slice(this.pos,this.pos+r);return this.pos+=r,o},s.prototype.readString=function(r){var o=this.readBytes(r);return String.fromCharCode.apply(null,o)},s.prototype.readVarInt=function(){for(var r=0;!this.eof();){var o=this.readUInt8();if(!(128&o))return r+o;r+=127&o,r<<=7}return r},s.prototype.readChunk=function(){var r=this.readString(4),o=this.readUInt32();return{id:r,length:o,data:this.readBytes(o)}},n.exports=function(r){var o=new s(r),i=o.readChunk();if(i.id!="MThd")throw"Bad MIDI file.  Expected 'MHdr', got: '"+i.id+"'";for(var c=function(y){var m=new s(y),h=m.readUInt16(),g=m.readUInt16(),x={format:h,numTracks:g},w=m.readUInt16();return 32768&w?(x.framesPerSecond=256-(w>>8),x.ticksPerFrame=255&w):x.ticksPerBeat=w,x}(i.data),a=[],l=0;!o.eof()&&l<c.numTracks;l++){var d=o.readChunk();if(d.id!="MTrk")throw"Bad MIDI file.  Expected 'MTrk', got: '"+d.id+"'";var f=t(d.data);a.push(f)}return{header:c,tracks:a}}},function(n,e){function t(o,i,c){var a,l=new r,d=i.length,f=null;for(a=0;a<d;a++)c.running!==!1&&(c.running||i[a].running)||(f=null),f=s(l,i[a],f,c.useByte9ForNoteOff);o.writeChunk("MTrk",l.buffer)}function s(o,i,c,a){var l=i.type,d=i.deltaTime,f=i.text||"",y=i.data||[],m=null;switch(o.writeVarInt(d),l){case"sequenceNumber":o.writeUInt8(255),o.writeUInt8(0),o.writeVarInt(2),o.writeUInt16(i.number);break;case"text":o.writeUInt8(255),o.writeUInt8(1),o.writeVarInt(f.length),o.writeString(f);break;case"copyrightNotice":o.writeUInt8(255),o.writeUInt8(2),o.writeVarInt(f.length),o.writeString(f);break;case"trackName":o.writeUInt8(255),o.writeUInt8(3),o.writeVarInt(f.length),o.writeString(f);break;case"instrumentName":o.writeUInt8(255),o.writeUInt8(4),o.writeVarInt(f.length),o.writeString(f);break;case"lyrics":o.writeUInt8(255),o.writeUInt8(5),o.writeVarInt(f.length),o.writeString(f);break;case"marker":o.writeUInt8(255),o.writeUInt8(6),o.writeVarInt(f.length),o.writeString(f);break;case"cuePoint":o.writeUInt8(255),o.writeUInt8(7),o.writeVarInt(f.length),o.writeString(f);break;case"channelPrefix":o.writeUInt8(255),o.writeUInt8(32),o.writeVarInt(1),o.writeUInt8(i.channel);break;case"portPrefix":o.writeUInt8(255),o.writeUInt8(33),o.writeVarInt(1),o.writeUInt8(i.port);break;case"endOfTrack":o.writeUInt8(255),o.writeUInt8(47),o.writeVarInt(0);break;case"setTempo":o.writeUInt8(255),o.writeUInt8(81),o.writeVarInt(3),o.writeUInt24(i.microsecondsPerBeat);break;case"smpteOffset":o.writeUInt8(255),o.writeUInt8(84),o.writeVarInt(5);var h=31&i.hour|{24:0,25:32,29:64,30:96}[i.frameRate];o.writeUInt8(h),o.writeUInt8(i.min),o.writeUInt8(i.sec),o.writeUInt8(i.frame),o.writeUInt8(i.subFrame);break;case"timeSignature":o.writeUInt8(255),o.writeUInt8(88),o.writeVarInt(4),o.writeUInt8(i.numerator);var g=255&Math.floor(Math.log(i.denominator)/Math.LN2);o.writeUInt8(g),o.writeUInt8(i.metronome),o.writeUInt8(i.thirtyseconds||8);break;case"keySignature":o.writeUInt8(255),o.writeUInt8(89),o.writeVarInt(2),o.writeInt8(i.key),o.writeUInt8(i.scale);break;case"sequencerSpecific":o.writeUInt8(255),o.writeUInt8(127),o.writeVarInt(y.length),o.writeBytes(y);break;case"unknownMeta":i.metatypeByte!=null&&(o.writeUInt8(255),o.writeUInt8(i.metatypeByte),o.writeVarInt(y.length),o.writeBytes(y));break;case"sysEx":o.writeUInt8(240),o.writeVarInt(y.length),o.writeBytes(y);break;case"endSysEx":o.writeUInt8(247),o.writeVarInt(y.length),o.writeBytes(y);break;case"noteOff":(m=(a!==!1&&i.byte9||a&&i.velocity==0?144:128)|i.channel)!==c&&o.writeUInt8(m),o.writeUInt8(i.noteNumber),o.writeUInt8(i.velocity);break;case"noteOn":(m=144|i.channel)!==c&&o.writeUInt8(m),o.writeUInt8(i.noteNumber),o.writeUInt8(i.velocity);break;case"noteAftertouch":(m=160|i.channel)!==c&&o.writeUInt8(m),o.writeUInt8(i.noteNumber),o.writeUInt8(i.amount);break;case"controller":(m=176|i.channel)!==c&&o.writeUInt8(m),o.writeUInt8(i.controllerType),o.writeUInt8(i.value);break;case"programChange":(m=192|i.channel)!==c&&o.writeUInt8(m),o.writeUInt8(i.programNumber);break;case"channelAftertouch":(m=208|i.channel)!==c&&o.writeUInt8(m),o.writeUInt8(i.amount);break;case"pitchBend":(m=224|i.channel)!==c&&o.writeUInt8(m);var x=8192+i.value,w=127&x,I=x>>7&127;o.writeUInt8(w),o.writeUInt8(I);break;default:throw"Unrecognized event type: "+l}return m}function r(){this.buffer=[]}r.prototype.writeUInt8=function(o){this.buffer.push(255&o)},r.prototype.writeInt8=r.prototype.writeUInt8,r.prototype.writeUInt16=function(o){var i=o>>8&255,c=255&o;this.writeUInt8(i),this.writeUInt8(c)},r.prototype.writeInt16=r.prototype.writeUInt16,r.prototype.writeUInt24=function(o){var i=o>>16&255,c=o>>8&255,a=255&o;this.writeUInt8(i),this.writeUInt8(c),this.writeUInt8(a)},r.prototype.writeInt24=r.prototype.writeUInt24,r.prototype.writeUInt32=function(o){var i=o>>24&255,c=o>>16&255,a=o>>8&255,l=255&o;this.writeUInt8(i),this.writeUInt8(c),this.writeUInt8(a),this.writeUInt8(l)},r.prototype.writeInt32=r.prototype.writeUInt32,r.prototype.writeBytes=function(o){this.buffer=this.buffer.concat(Array.prototype.slice.call(o,0))},r.prototype.writeString=function(o){var i,c=o.length,a=[];for(i=0;i<c;i++)a.push(o.codePointAt(i));this.writeBytes(a)},r.prototype.writeVarInt=function(o){if(o<0)throw"Cannot write negative variable-length integer";if(o<=127)this.writeUInt8(o);else{var i=o,c=[];for(c.push(127&i),i>>=7;i;){var a=127&i|128;c.push(a),i>>=7}this.writeBytes(c.reverse())}},r.prototype.writeChunk=function(o,i){this.writeString(o),this.writeUInt32(i.length),this.writeBytes(i)},n.exports=function(o,i){if(typeof o!="object")throw"Invalid MIDI data";i=i||{};var c,a=o.header||{},l=o.tracks||[],d=l.length,f=new r;for(function(y,m,h){var g=m.format==null?1:m.format,x=128;m.timeDivision?x=m.timeDivision:m.ticksPerFrame&&m.framesPerSecond?x=-(255&m.framesPerSecond)<<8|255&m.ticksPerFrame:m.ticksPerBeat&&(x=32767&m.ticksPerBeat);var w=new r;w.writeUInt16(g),w.writeUInt16(h),w.writeUInt16(x),y.writeChunk("MThd",w.buffer)}(f,a,d),c=0;c<d;c++)t(f,l[c],i);return f.buffer}},function(n,e,t){var s=this&&this.__spreadArrays||function(){for(var f=0,y=0,m=arguments.length;y<m;y++)f+=arguments[y].length;var h=Array(f),g=0;for(y=0;y<m;y++)for(var x=arguments[y],w=0,I=x.length;w<I;w++,g++)h[g]=x[w];return h},r=this&&this.__importDefault||function(f){return f&&f.__esModule?f:{default:f}};Object.defineProperty(e,"__esModule",{value:!0});var o=t(79),i=t(66),c=r(t(175));function a(f){return c.default(f.notes.map(function(y){return function(m,h){return[{absoluteTime:m.ticks,channel:h,deltaTime:0,noteNumber:m.midi,type:"noteOn",velocity:Math.floor(127*m.velocity)},{absoluteTime:m.ticks+m.durationTicks,channel:h,deltaTime:0,noteNumber:m.midi,type:"noteOff",velocity:Math.floor(127*m.noteOffVelocity)}]}(y,f.channel)}))}function l(f,y){return{absoluteTime:f.ticks,channel:y,controllerType:f.number,deltaTime:0,type:"controller",value:f.value}}function d(f){return{absoluteTime:0,channel:f.channel,deltaTime:0,programNumber:f.instrument.number,type:"programChange"}}e.encode=function(f){var y={header:{format:1,numTracks:f.tracks.length+1,ticksPerBeat:f.header.ppq},tracks:s([s([{absoluteTime:0,deltaTime:0,meta:!0,text:f.header.name,type:"trackName"}],f.header.keySignatures.map(function(m){return function(h){var g=i.keySignatureKeys.indexOf(h.key);return{absoluteTime:h.ticks,deltaTime:0,key:g+7,meta:!0,scale:h.scale==="major"?0:1,type:"keySignature"}}(m)}),f.header.meta.map(function(m){return{absoluteTime:(h=m).ticks,deltaTime:0,meta:!0,text:h.text,type:h.type};var h}),f.header.tempos.map(function(m){return function(h){return{absoluteTime:h.ticks,deltaTime:0,meta:!0,microsecondsPerBeat:Math.floor(6e7/h.bpm),type:"setTempo"}}(m)}),f.header.timeSignatures.map(function(m){return function(h){return{absoluteTime:h.ticks,deltaTime:0,denominator:h.timeSignature[1],meta:!0,metronome:24,numerator:h.timeSignature[0],thirtyseconds:8,type:"timeSignature"}}(m)}))],f.tracks.map(function(m){return s([(h=m.name,{absoluteTime:0,deltaTime:0,meta:!0,text:h,type:"trackName"}),d(m)],a(m),function(g){for(var x=[],w=0;w<127;w++)g.controlChanges.hasOwnProperty(w)&&g.controlChanges[w].forEach(function(I){x.push(l(I,g.channel))});return x}(m),function(g){var x=[];return g.pitchBends.forEach(function(w){x.push(function(I,N){return{absoluteTime:I.ticks,channel:N,deltaTime:0,type:"pitchBend",value:I.value}}(w,g.channel))}),x}(m));var h}))};return y.tracks=y.tracks.map(function(m){m=m.sort(function(g,x){return g.absoluteTime-x.absoluteTime});var h=0;return m.forEach(function(g){g.deltaTime=g.absoluteTime-h,h=g.absoluteTime,delete g.absoluteTime}),m.push({deltaTime:0,meta:!0,type:"endOfTrack"}),m}),new Uint8Array(o.writeMidi(y))}},function(n,e,t){function s(o){return function i(c,a){for(var l=0;l<c.length;l++){var d=c[l];Array.isArray(d)?i(d,a):a.push(d)}return a}(o,[])}function r(o,i){if(typeof i!="number")throw new TypeError("Expected the depth to be a number");return function c(a,l,d){d--;for(var f=0;f<a.length;f++){var y=a[f];d>-1&&Array.isArray(y)?c(y,l,d):l.push(y)}return l}(o,[],i)}n.exports=function(o){if(!Array.isArray(o))throw new TypeError("Expected value to be an array");return s(o)},n.exports.from=s,n.exports.depth=function(o,i){if(!Array.isArray(o))throw new TypeError("Expected value to be an array");return r(o,i)},n.exports.fromDepth=r},function(n,e,t){Object.defineProperty(e,"__esModule",{value:!0});var s=t(82);e.createControlChanges=function(){return new Proxy({},{get:function(r,o){return r[o]?r[o]:s.controlChangeIds.hasOwnProperty(o)?r[s.controlChangeIds[o]]:void 0},set:function(r,o,i){return s.controlChangeIds.hasOwnProperty(o)?r[s.controlChangeIds[o]]=i:r[o]=i,!0}})}},function(n,e,t){Object.defineProperty(e,"__esModule",{value:!0});var s=new WeakMap,r=function(){function o(i,c){s.set(this,c),this.ticks=i.absoluteTime,this.value=i.value}return Object.defineProperty(o.prototype,"time",{get:function(){return s.get(this).ticksToSeconds(this.ticks)},set:function(i){var c=s.get(this);this.ticks=c.secondsToTicks(i)},enumerable:!0,configurable:!0}),o.prototype.toJSON=function(){return{ticks:this.ticks,time:this.time,value:this.value}},o}();e.PitchBend=r},function(n,e,t){Object.defineProperty(e,"__esModule",{value:!0});var s=t(179),r=new WeakMap,o=function(){function i(c,a){if(this.number=0,r.set(this,a),this.number=0,c){var l=c.find(function(d){return d.type==="programChange"});l&&(this.number=l.programNumber)}}return Object.defineProperty(i.prototype,"name",{get:function(){return this.percussion?s.DrumKitByPatchID[this.number]:s.instrumentByPatchID[this.number]},set:function(c){var a=s.instrumentByPatchID.indexOf(c);a!==-1&&(this.number=a)},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"family",{get:function(){return this.percussion?"drums":s.InstrumentFamilyByID[Math.floor(this.number/8)]},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"percussion",{get:function(){return r.get(this).channel===9},enumerable:!0,configurable:!0}),i.prototype.toJSON=function(){return{family:this.family,name:this.name,number:this.number}},i.prototype.fromJSON=function(c){this.number=c.number},i}();e.Instrument=o},function(n,e,t){Object.defineProperty(e,"__esModule",{value:!0}),e.instrumentByPatchID=["acoustic grand piano","bright acoustic piano","electric grand piano","honky-tonk piano","electric piano 1","electric piano 2","harpsichord","clavi","celesta","glockenspiel","music box","vibraphone","marimba","xylophone","tubular bells","dulcimer","drawbar organ","percussive organ","rock organ","church organ","reed organ","accordion","harmonica","tango accordion","acoustic guitar (nylon)","acoustic guitar (steel)","electric guitar (jazz)","electric guitar (clean)","electric guitar (muted)","overdriven guitar","distortion guitar","guitar harmonics","acoustic bass","electric bass (finger)","electric bass (pick)","fretless bass","slap bass 1","slap bass 2","synth bass 1","synth bass 2","violin","viola","cello","contrabass","tremolo strings","pizzicato strings","orchestral harp","timpani","string ensemble 1","string ensemble 2","synthstrings 1","synthstrings 2","choir aahs","voice oohs","synth voice","orchestra hit","trumpet","trombone","tuba","muted trumpet","french horn","brass section","synthbrass 1","synthbrass 2","soprano sax","alto sax","tenor sax","baritone sax","oboe","english horn","bassoon","clarinet","piccolo","flute","recorder","pan flute","blown bottle","shakuhachi","whistle","ocarina","lead 1 (square)","lead 2 (sawtooth)","lead 3 (calliope)","lead 4 (chiff)","lead 5 (charang)","lead 6 (voice)","lead 7 (fifths)","lead 8 (bass + lead)","pad 1 (new age)","pad 2 (warm)","pad 3 (polysynth)","pad 4 (choir)","pad 5 (bowed)","pad 6 (metallic)","pad 7 (halo)","pad 8 (sweep)","fx 1 (rain)","fx 2 (soundtrack)","fx 3 (crystal)","fx 4 (atmosphere)","fx 5 (brightness)","fx 6 (goblins)","fx 7 (echoes)","fx 8 (sci-fi)","sitar","banjo","shamisen","koto","kalimba","bag pipe","fiddle","shanai","tinkle bell","agogo","steel drums","woodblock","taiko drum","melodic tom","synth drum","reverse cymbal","guitar fret noise","breath noise","seashore","bird tweet","telephone ring","helicopter","applause","gunshot"],e.InstrumentFamilyByID=["piano","chromatic percussion","organ","guitar","bass","strings","ensemble","brass","reed","pipe","synth lead","synth pad","synth effects","world","percussive","sound effects"],e.DrumKitByPatchID={0:"standard kit",8:"room kit",16:"power kit",24:"electronic kit",25:"tr-808 kit",32:"jazz kit",40:"brush kit",48:"orchestra kit",56:"sound fx kit"}},function(n,e,t){function s(l){return["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"][l%12]}Object.defineProperty(e,"__esModule",{value:!0});var r,o,i=(r=/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,o={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13},function(l){var d=r.exec(l),f=d[1],y=d[2];return o[f.toLowerCase()]+12*(parseInt(y,10)+1)}),c=new WeakMap,a=function(){function l(d,f,y){c.set(this,y),this.midi=d.midi,this.velocity=d.velocity,this.noteOffVelocity=f.velocity,this.ticks=d.ticks,this.durationTicks=f.ticks-d.ticks}return Object.defineProperty(l.prototype,"name",{get:function(){return d=this.midi,f=Math.floor(d/12)-1,s(d)+f.toString();var d,f},set:function(d){this.midi=i(d)},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"octave",{get:function(){return Math.floor(this.midi/12)-1},set:function(d){var f=d-this.octave;this.midi+=12*f},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"pitch",{get:function(){return s(this.midi)},set:function(d){this.midi=12*(this.octave+1)+["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"].indexOf(d)},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"duration",{get:function(){var d=c.get(this);return d.ticksToSeconds(this.ticks+this.durationTicks)-d.ticksToSeconds(this.ticks)},set:function(d){var f=c.get(this).secondsToTicks(this.time+d);this.durationTicks=f-this.ticks},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"time",{get:function(){return c.get(this).ticksToSeconds(this.ticks)},set:function(d){var f=c.get(this);this.ticks=f.secondsToTicks(d)},enumerable:!0,configurable:!0}),Object.defineProperty(l.prototype,"bars",{get:function(){return c.get(this).ticksToMeasures(this.ticks)},enumerable:!0,configurable:!0}),l.prototype.toJSON=function(){return{duration:this.duration,durationTicks:this.durationTicks,midi:this.midi,name:this.name,ticks:this.ticks,time:this.time,velocity:this.velocity}},l}();e.Note=a},function(n,e,t){t.r(e);var s=t(10);t.d(e,"NoteSequence",function(){return s.a})},function(n,e,t){t.r(e),t.d(e,"DDSP",function(){return bi});var s={};t.r(s),t.d(s,"simpleAbsImpl",function(){return we}),t.d(s,"addImpl",function(){return ye}),t.d(s,"ceilImpl",function(){return ot}),t.d(s,"expImpl",function(){return st}),t.d(s,"expm1Impl",function(){return pt}),t.d(s,"floorImpl",function(){return gt}),t.d(s,"logImpl",function(){return ht}),t.d(s,"maxImpl",function(){return Tt}),t.d(s,"multiplyImpl",function(){return xt}),t.d(s,"notEqualImpl",function(){return tn}),t.d(s,"rsqrtImpl",function(){return ln}),t.d(s,"sliceImpl",function(){return on}),t.d(s,"squaredDifferenceImpl",function(){return An}),t.d(s,"subImpl",function(){return zn}),t.d(s,"transposeImpl",function(){return Qn}),t.d(s,"uniqueImpl",function(){return $s});var r=t(0);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o={},i={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function c(Z){if(!(Z in o)){const E=function(R){if(R!==1&&R!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const V=function(W){if(typeof OffscreenCanvas<"u"&&W===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(R);return V.addEventListener("webglcontextlost",W=>{W.preventDefault(),delete o[R]},!1),R===1?V.getContext("webgl",i)||V.getContext("experimental-webgl",i):V.getContext("webgl2",i)}(Z);if(E===null)return console.log("Could not get context for WebGL version",Z),null;o[Z]=E}const v=o[Z];return v.isContextLost()?(delete o[Z],c(Z)):(v.disable(v.DEPTH_TEST),v.disable(v.STENCIL_TEST),v.disable(v.BLEND),v.disable(v.DITHER),v.disable(v.POLYGON_OFFSET_FILL),v.disable(v.SAMPLE_COVERAGE),v.enable(v.SCISSOR_TEST),v.enable(v.CULL_FACE),v.cullFace(v.BACK),o[Z])}var a,l,d;function f(Z,v){return[v,Z]}function y(Z){const v=r.Lb.sizeFromShape(Z),E=Math.ceil(v/4);return r.Lb.sizeToSquarishShape(E)}function m(Z,v){return[Math.max(1,Math.ceil(v/2)),Math.max(1,Math.ceil(Z/2))]}function h(Z,v){const E=Z;let R,V,W,K,re,ie,fe,Se,De,ke;return Object(r.jb)().getNumber("WEBGL_VERSION")===2?(R=E.R32F,V=E.R16F,W=E.RGBA16F,K=E.RGBA32F,re=E.RED,fe=4,Se=1,De=E.HALF_FLOAT,ke=E.FLOAT):(R=Z.RGBA,V=Z.RGBA,W=Z.RGBA,K=E.RGBA,re=Z.RGBA,fe=4,Se=4,De=v!=null?v.HALF_FLOAT_OES:null,ke=Z.FLOAT),ie=Z.RGBA,{internalFormatFloat:R,internalFormatHalfFloat:V,internalFormatPackedHalfFloat:W,internalFormatPackedFloat:K,textureFormatFloat:re,downloadTextureFormat:ie,downloadUnpackNumChannels:fe,defaultNumChannels:Se,textureTypeHalfFloat:De,textureTypeFloat:ke}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g(Z,v){const E=v();return Object(r.jb)().getBool("DEBUG")&&function(R){const V=R.getError();if(V!==R.NO_ERROR)throw new Error("WebGL Error: "+function(W,K){switch(K){case W.NO_ERROR:return"NO_ERROR";case W.INVALID_ENUM:return"INVALID_ENUM";case W.INVALID_VALUE:return"INVALID_VALUE";case W.INVALID_OPERATION:return"INVALID_OPERATION";case W.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case W.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case W.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+K}}(R,V))}(Z),E}(function(Z){Z[Z.DENSE=0]="DENSE",Z[Z.SHARED_BATCH=1]="SHARED_BATCH"})(a||(a={})),function(Z){Z[Z.RENDER=0]="RENDER",Z[Z.UPLOAD=1]="UPLOAD",Z[Z.PIXELS=2]="PIXELS",Z[Z.DOWNLOAD=3]="DOWNLOAD"}(l||(l={})),function(Z){Z[Z.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",Z[Z.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",Z[Z.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",Z[Z.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",Z[Z.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(d||(d={}));function x(Z){return!!(Object(r.jb)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||Z===0||596e-10<Math.abs(Z)&&Math.abs(Z)<65504)}function w(Z,v){return U(Z,()=>Z.getExtension(v),'Extension "'+v+'" not supported on this browser.')}function I(Z,v){const E=U(Z,()=>Z.createShader(Z.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(g(Z,()=>Z.shaderSource(E,v)),g(Z,()=>Z.compileShader(E)),Z.getShaderParameter(E,Z.COMPILE_STATUS)===!1)throw function(R,V){const W=N.exec(V);if(W==null)return console.log("Couldn't parse line number in error: "+V),void console.log(R);const K=+W[1],re=R.split(`
`),ie=re.length.toString().length+2,fe=re.map((Ve,Me)=>r.Lb.rightPad((Me+1).toString(),ie)+Ve);let Se=0;for(let Ve=0;Ve<fe.length;Ve++)Se=Math.max(fe[Ve].length,Se);const De=fe.slice(0,K-1),ke=fe.slice(K-1,K),Be=fe.slice(K);console.log(De.join(`
`)),console.log(V.split(`
`)[0]),console.log("%c "+r.Lb.rightPad(ke[0],Se),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(Be.join(`
`))}(v,Z.getShaderInfoLog(E)),new Error("Failed to compile fragment shader.");return E}const N=/ERROR: [0-9]+:([0-9]+):/g;function A(Z,v){if(g(Z,()=>Z.validateProgram(v)),Z.getProgramParameter(v,Z.VALIDATE_STATUS)===!1)throw console.log(Z.getProgramInfoLog(v)),new Error("Shader program validation failed.")}function T(Z,v,E,R,V,W,K){const re=Z.getAttribLocation(v,E);return re!==-1&&(g(Z,()=>Z.bindBuffer(Z.ARRAY_BUFFER,R)),g(Z,()=>Z.vertexAttribPointer(re,V,Z.FLOAT,!1,W,K)),g(Z,()=>Z.enableVertexAttribArray(re)),!0)}function P(Z,v,E,R){g(Z,()=>function(V,W,K){Q(V,K),g(V,()=>V.activeTexture(V.TEXTURE0+K)),g(V,()=>V.bindTexture(V.TEXTURE_2D,W))}(Z,v,R)),g(Z,()=>Z.uniform1i(E,R))}function O(Z,v,E){g(Z,()=>Z.bindFramebuffer(Z.FRAMEBUFFER,E)),g(Z,()=>Z.framebufferTexture2D(Z.FRAMEBUFFER,Z.COLOR_ATTACHMENT0,Z.TEXTURE_2D,v,0))}function F(Z,v){g(Z,()=>Z.bindFramebuffer(Z.FRAMEBUFFER,v)),g(Z,()=>Z.framebufferTexture2D(Z.FRAMEBUFFER,Z.COLOR_ATTACHMENT0,Z.TEXTURE_2D,null,0))}function G(Z){const v=Z.checkFramebufferStatus(Z.FRAMEBUFFER);if(v!==Z.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(E,R){switch(R){case E.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case E.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case E.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case E.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+R}}(Z,v))}function U(Z,v,E){const R=g(Z,()=>v());if(R==null)throw new Error(E);return R}function Q(Z,v){const E=Z.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,R=v+Z.TEXTURE0;if(R<Z.TEXTURE0||R>E)throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${E}]`}.`)}function ne(Z,v=2){return r.Lb.sizeFromShape(Z.slice(0,Z.length-v))}function J(Z){if(Z.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[Z.length>1?Z[Z.length-2]:1,Z[Z.length-1]]}function oe(Z){let v=[1,1,1];return Z.length===0||Z.length===1&&Z[0]===1||(v=[ne(Z),...J(Z)]),v}function le(Z){return Z%2==0}function ge(Z,v){if(Z=Z.slice(-2),v=v.slice(-2),r.Lb.arraysEqual(Z,v)||!Z.length||!v.length||Z[0]===0||Z[1]===0||v[0]===0||v[1]===0)return!0;if(Z.length!==v.length){const E=Z.slice(-1)[0],R=v.slice(-1)[0];if(E===R||le(E)&&le(R)&&(Z[0]===1||v[0]===1))return!0}return Z[1]===v[1]&&le(Z[0])&&le(v[0])}let te,ce;function ue(Z,v){return Z.getExtension(v)!=null}function Te(Z){try{if(c(Z)!=null)return!0}catch(v){return console.log("Error when getting WebGL context: ",v),!1}return!1}function Ce(Z){if(Z===0)return!1;const v=c(Z);if(Z!==1){if(ue(v,"EXT_color_buffer_float"))return Ne(v);const E="EXT_color_buffer_half_float";if(ue(v,E)){const R=v.getExtension(E);return function(V,W){const K=h(V,W),re=V.createTexture();V.bindTexture(V.TEXTURE_2D,re),V.texImage2D(V.TEXTURE_2D,0,K.internalFormatHalfFloat,1,1,0,K.textureFormatFloat,K.textureTypeHalfFloat,null);const ie=V.createFramebuffer();V.bindFramebuffer(V.FRAMEBUFFER,ie),V.framebufferTexture2D(V.FRAMEBUFFER,V.COLOR_ATTACHMENT0,V.TEXTURE_2D,re,0);const fe=V.checkFramebufferStatus(V.FRAMEBUFFER)===V.FRAMEBUFFER_COMPLETE;return V.bindTexture(V.TEXTURE_2D,null),V.bindFramebuffer(V.FRAMEBUFFER,null),V.deleteTexture(re),V.deleteFramebuffer(ie),fe}(v,R)}return!1}return!ue(v,"OES_texture_float")||!ue(v,"WEBGL_color_buffer_float")?!1:Ne(v)}function Ne(Z){const v=h(Z),E=Z.createTexture();Z.bindTexture(Z.TEXTURE_2D,E),Z.texImage2D(Z.TEXTURE_2D,0,v.internalFormatFloat,1,1,0,v.textureFormatFloat,v.textureTypeFloat,null);const R=Z.createFramebuffer();Z.bindFramebuffer(Z.FRAMEBUFFER,R),Z.framebufferTexture2D(Z.FRAMEBUFFER,Z.COLOR_ATTACHMENT0,Z.TEXTURE_2D,E,0);const V=Z.checkFramebufferStatus(Z.FRAMEBUFFER)===Z.FRAMEBUFFER_COMPLETE;return Z.bindTexture(Z.TEXTURE_2D,null),Z.bindFramebuffer(Z.FRAMEBUFFER,null),Z.deleteTexture(E),Z.deleteFramebuffer(R),V}function Re(Z,v){Array.isArray(Z)||(Z=[Z]),Z.forEach(E=>{E!=null&&r.Lb.assert(E.dtype!=="complex64",()=>v+" does not support complex64 tensors in the WebGL backend.")})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ae=Object(r.jb)();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function we(Z){const v=new Float32Array(Z.length);for(let E=0;E<Z.length;++E)v[E]=Math.abs(Z[E]);return v}Ae.registerFlag("HAS_WEBGL",()=>Ae.getNumber("WEBGL_VERSION")>0),Ae.registerFlag("WEBGL_VERSION",()=>Te(2)?2:Te(1)?1:0),Ae.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Ae.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ae.get("WEBGL_VERSION")===2),Ae.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Ae.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Ae.registerFlag("WEBGL_PACK",()=>Ae.getBool("HAS_WEBGL")),Ae.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ae.getBool("WEBGL_PACK")),Ae.registerFlag("WEBGL_PACK_CLIP",()=>Ae.getBool("WEBGL_PACK")),Ae.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),Ae.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ae.getBool("WEBGL_PACK")),Ae.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ae.getBool("WEBGL_PACK")),Ae.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ae.getBool("WEBGL_PACK")),Ae.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ae.getBool("WEBGL_PACK")),Ae.registerFlag("WEBGL_PACK_REDUCE",()=>Ae.getBool("WEBGL_PACK")),Ae.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ae.getBool("WEBGL_PACK")),Ae.registerFlag("WEBGL_CONV_IM2COL",()=>Ae.getBool("WEBGL_PACK")),Ae.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(Z){if(te==null){const v=c(Z);te=v.getParameter(v.MAX_TEXTURE_SIZE)}return te}(Ae.getNumber("WEBGL_VERSION"))),Ae.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(Z){if(ce==null){const v=c(Z);ce=v.getParameter(v.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ce)}(Ae.getNumber("WEBGL_VERSION"))),Ae.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const Z=Ae.getNumber("WEBGL_VERSION");return Z===0?0:function(v){if(v===0)return 0;let E;const R=c(v);return E=ue(R,"EXT_disjoint_timer_query_webgl2")&&v===2?2:ue(R,"EXT_disjoint_timer_query")?1:0,E}(Z)}),Ae.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ae.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.fb.isMobile()),Ae.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(Z){if(Z===0)return!1;const v=c(Z);if(Z===1){if(!ue(v,"OES_texture_float"))return!1}else if(!ue(v,"EXT_color_buffer_float"))return!1;return Ne(v)}(Ae.getNumber("WEBGL_VERSION"))),Ae.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Ae.getBool("WEBGL_FORCE_F16_TEXTURES")&&Ae.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Ae.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Ce(Ae.getNumber("WEBGL_VERSION"))),Ae.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return(Z=Ae.getNumber("WEBGL_VERSION"))===2&&c(Z).fenceSync!=null;var Z}),Ae.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ae.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Ae.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,Z=>{if(Z<0&&Z!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${Z}.`)}),r.a;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Le(Z){return(v,E,R,V,W)=>{const K=r.X.assertAndGetBroadcastShape(v,E),re=K.length,ie=r.Lb.computeStrides(K),fe=r.Lb.sizeFromShape(K),Se=r.Lb.getTypedArrayFromDType(W,fe),De=v.length,ke=E.length,Be=r.Lb.computeStrides(v),Ve=r.Lb.computeStrides(E),Me=r.X.getBroadcastDims(v,K),Ue=r.X.getBroadcastDims(E,K);if(Me.length+Ue.length===0)for(let mt=0;mt<Se.length;++mt)Se[mt]=Z(R[mt%R.length],V[mt%V.length]);else for(let mt=0;mt<Se.length;++mt){const kt=r.Lb.indexToLoc(mt,re,ie),Dt=kt.slice(-De);Me.forEach(Wt=>Dt[Wt]=0);const it=r.Lb.locToIndex(Dt,De,Be),St=kt.slice(-ke);Ue.forEach(Wt=>St[Wt]=0);const at=r.Lb.locToIndex(St,ke,Ve);Se[mt]=Z(R[it],V[at])}return[Se,K]}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pe(Z,v){Array.isArray(Z)||(Z=[Z]),Z.forEach(E=>{E!=null&&r.Lb.assert(E.dtype!=="complex64",()=>v+" does not support complex64 tensors in the CPU backend.")})}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B(Z){const{inputs:v,backend:E}=Z,{real:R,imag:V}=v,W=E.data.get(R.dataId).values,K=E.data.get(V.dataId).values,re=E.makeTensorInfo(R.shape,"complex64");return E.data.get(re.dataId).complexTensorInfos={real:E.makeTensorInfo(R.shape,"float32",W),imag:E.makeTensorInfo(V.shape,"float32",K)},re}r.h;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D(Z){const{inputs:v,backend:E}=Z,{x:R}=v;return E.incRef(R.dataId),{dataId:R.dataId,shape:R.shape,dtype:R.dtype}}r.u;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H(Z){const{inputs:v,backend:E}=Z,{input:R}=v,V=E.data.get(R.dataId).complexTensorInfos.real,W=E.data.get(V.dataId).values;return E.makeTensorInfo(V.shape,V.dtype,W)}r.J;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function he(Z){const{inputs:v,backend:E,attrs:R}=Z,{x:V}=v,{dtype:W}=R;if(W==="complex64"){if(V.dtype==="complex64")return D({inputs:{x:V},backend:E});const K=r.Nb(V.shape),re=he({inputs:{x:V},backend:E,attrs:{dtype:"float32"}}),ie=B({inputs:{real:re,imag:K},backend:E});return K.dispose(),E.disposeIntermediateTensorInfo(re),ie}if(V.dtype==="complex64"){const K=H({inputs:{input:V},backend:E}),re=he({inputs:{x:K},backend:E,attrs:{dtype:W}});return E.disposeIntermediateTensorInfo(K),re}if(!r.Lb.hasEncodingLoss(V.dtype,W)){const K=D({inputs:{x:V},backend:E});return{dataId:K.dataId,shape:K.shape,dtype:W}}if(W==="int32"){const K=E.data.get(V.dataId).values,re=Int32Array.from(K);return E.makeTensorInfo(V.shape,"int32",re)}if(W==="bool"){const K=E.data.get(V.dataId).values,re=r.Lb.toTypedArray([0],V.dtype),[ie,fe]=Le((Se,De)=>Se!==De?1:0)(V.shape,[],K,re,"bool");return E.makeTensorInfo(fe,"bool",ie)}throw new Error(`Error in Cast: failed to cast ${V.dtype} to ${W}`)}r.f;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j(Z,v,E,R){return E==null?({inputs:V,backend:W})=>{const{a:K,b:re}=V,ie=W;pe([K,re],Z);const fe=ie.data.get(K.dataId).values,Se=ie.data.get(re.dataId).values,De=R||K.dtype,[ke,Be]=v(K.shape,re.shape,fe,Se,De);return ie.makeTensorInfo(Be,De,ke)}:({inputs:V,backend:W})=>{const{a:K,b:re}=V,ie=W;if(K.dtype==="complex64"||re.dtype==="complex64"){const fe=he({inputs:{x:K},backend:ie,attrs:{dtype:"complex64"}}),Se=ie.data.get(fe.dataId),De=Se.complexTensorInfos.real,ke=Se.complexTensorInfos.imag,Be=ie.data.get(De.dataId).values,Ve=ie.data.get(ke.dataId).values,Me=he({inputs:{x:re},backend:ie,attrs:{dtype:"complex64"}}),Ue=ie.data.get(Me.dataId),mt=Ue.complexTensorInfos.real,kt=Ue.complexTensorInfos.imag,Dt=ie.data.get(mt.dataId).values,it=ie.data.get(kt.dataId).values,[St,at,Wt]=E(K.shape,re.shape,Be,Ve,Dt,it),Ft=ie.makeTensorInfo(Wt,"float32",St),dn=ie.makeTensorInfo(Wt,"float32",at),Vt=B({inputs:{real:Ft,imag:dn},backend:ie});return ie.disposeIntermediateTensorInfo(fe),ie.disposeIntermediateTensorInfo(Me),ie.disposeIntermediateTensorInfo(Ft),ie.disposeIntermediateTensorInfo(dn),Vt}{const fe=ie.data.get(K.dataId).values,Se=ie.data.get(re.dataId).values,De=R||K.dtype,[ke,Be]=v(K.shape,re.shape,fe,Se,De);return ie.makeTensorInfo(Be,De,ke)}}}function ee(Z){return(v,E,R,V,W,K)=>{const re=r.X.assertAndGetBroadcastShape(v,E),ie=r.Lb.sizeFromShape(re),fe=re.length,Se=r.Lb.computeStrides(re),De=r.Lb.getTypedArrayFromDType("float32",ie),ke=r.Lb.getTypedArrayFromDType("float32",ie),Be=r.X.getBroadcastDims(v,re),Ve=r.X.getBroadcastDims(E,re),Me=r.X.mergeRealAndImagArrays(R,V),Ue=r.X.mergeRealAndImagArrays(W,K),mt=v.length,kt=r.Lb.computeStrides(v),Dt=E.length,it=r.Lb.computeStrides(E);if(Be.length+Ve.length===0)for(let St=0;St<De.length;St++){const at=St%Me.length,Wt=St%Ue.length,Ft=Z(Me[2*at],Me[2*at+1],Ue[2*Wt],Ue[2*Wt+1]);De[St]=Ft.real,ke[St]=Ft.imag}else for(let St=0;St<De.length;St++){const at=r.Lb.indexToLoc(St,fe,Se),Wt=at.slice(-mt);Be.forEach(fn=>Wt[fn]=0);const Ft=r.Lb.locToIndex(Wt,mt,kt),dn=at.slice(-Dt);Ve.forEach(fn=>dn[fn]=0);const Vt=r.Lb.locToIndex(dn,Dt,it),vt=Z(Me[2*Ft],Me[2*Ft+1],Ue[2*Vt],Ue[2*Vt+1]);De[St]=vt.real,ke[St]=vt.imag}return[De,ke,re]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ye=Le((Z,v)=>Z+v),Oe=ee((Z,v,E,R)=>({real:Z+E,imag:v+R}));j(r.b,ye,Oe),r.b;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ze(Z){return(v,E,R)=>{const V=r.Lb.getTypedArrayFromDType(E,v.length);for(let W=0;W<v.length;++W)V[W]=Z(v[W],R);return V}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xe(Z,v,E){return({inputs:R,attrs:V,backend:W})=>{const{x:K}=R;if(pe(K,Z),K.dtype==="string"||E==="string")throw new Error("unaryKernelFunc does not support string input/output");const re=W,ie=re.data.get(K.dataId).values,fe=K.dtype,Se=v(ie,fe,V);return re.makeTensorInfo(K.shape,fe,Se)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ot=ze(Z=>Math.ceil(Z)),st=(Xe(r.g,ot),r.g,ze(Z=>Math.exp(Z))),pt=(Xe(r.m,st),r.m,ze(Z=>Math.expm1(Z))),gt=(Xe(r.n,pt),r.n,ze(Z=>Math.floor(Z))),ht=(Xe(r.q,gt),r.q,ze(Z=>Math.log(Z)));Xe(r.x,ht),r.x;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tt(Z,v,E,R){const V=r.Lb.getTypedArrayFromDType(R,r.Lb.sizeFromShape(E));for(let W=0;W<V.length;++W){const K=W*v;let re=Z[K];for(let ie=0;ie<v;++ie){const fe=Z[K+ie];fe>re&&(re=fe)}V[W]=re}return V}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xt=Le((Z,v)=>Z*v),Pt=ee((Z,v,E,R)=>({real:Z*E-v*R,imag:Z*R+v*E})),tn=(j(r.E,xt,Pt),r.E,Le((Z,v)=>Z!==v?1:0)),ln=(j(r.I,tn,null,"bool"),r.I,ze(Z=>1/Math.sqrt(Z)));Xe(r.M,ln),r.M;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function on(Z,v,E,R,V){const W=r.Ab.isSliceContinous(R,v,E),K=r.Lb.sizeFromShape(E),re=r.Lb.computeStrides(R);if(W){const fe=r.Ab.computeFlatOffset(v,re);return Z.subarray(fe,fe+K)}const ie=r.Lb.getTypedArrayFromDType(V,K);for(let fe=0;fe<K;++fe){const Se=E.length,De=r.Lb.computeStrides(E),ke=r.Lb.indexToLoc(fe,Se,De).map((Ve,Me)=>Ve+v[Me]),Be=r.Lb.locToIndex(ke,R.length,re);ie[fe]=Z[Be]}return ie}r.O;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const An=Le((Z,v)=>{const E=Z-v;return E*E}),zn=(j(r.Q,An),r.Q,Le((Z,v)=>Z-v)),Kn=ee((Z,v,E,R)=>({real:Z-E,imag:v-R}));j(r.R,zn,Kn),r.R;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qn(Z,v,E,R,V){const W=v.length,K=r.Lb.sizeFromShape(v),re=r.Lb.computeStrides(v),ie=r.Lb.computeStrides(V),fe=r.Lb.getTypedArrayFromDType(E,r.Lb.sizeFromShape(V));for(let Se=0;Se<K;++Se){const De=r.Lb.indexToLoc(Se,W,re),ke=new Array(De.length);for(let Be=0;Be<ke.length;Be++)ke[Be]=De[R[Be]];fe[r.Lb.locToIndex(ke,W,ie)]=Z[Se]}return fe}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $s(Z,v,E,R){const V=r.Lb.parseAxisParam(v,E)[0],W=[1,E[0],1];for(let Ve=0;Ve<V;Ve++)W[0]*=E[Ve];W[1]=E[V];for(let Ve=V+1;Ve<E.length;Ve++)W[2]*=E[Ve];const K={},re=new Int32Array(E[V]),ie=new r.T(W,R,Z),fe=[],Se=W[0]===1&&W[2]===1;for(let Ve=0;Ve<E[V];Ve++){let Me;if(Se)Me=Z[Ve].toString();else{const Ue=[];for(let mt=0;mt<W[0];mt++)for(let kt=0;kt<W[2];kt++)Ue.push(ie.get(mt,Ve,kt));Me=Ue.join(",")}if(K[Me]!==void 0)re[Ve]=K[Me];else{const Ue=Object.keys(K).length;K[Me]=Ue,re[Ve]=Ue,fe.push(Ve)}}const De=W.slice();De[1]=Object.keys(K).length;const ke=new r.T(De,R);fe.forEach((Ve,Me)=>{for(let Ue=0;Ue<W[0];Ue++)for(let mt=0;mt<W[2];mt++)ke.set(ie.get(Ue,Ve,mt),Ue,Me,mt)});const Be=E.slice();return Be[V]=De[1],{outputValues:ke.values,outputShape:Be,indices:re}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{simpleAbsImpl:Ps,addImpl:Bn,ceilImpl:Rn,expImpl:gr,expm1Impl:qs,floorImpl:yr,logImpl:Mr,maxImpl:ts,multiplyImpl:Gn,rsqrtImpl:_r,sliceImpl:Ws,subImpl:cr,transposeImpl:br,uniqueImpl:ft}=s;/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ze{constructor(v,E){this.outputShape=[],this.outputShape=v,this.variableNames=E.map((W,K)=>"T"+K);const R=[];this.variableNames.forEach(W=>{R.push(`float v${W} = get${W}AtOutCoords();`)});const V=this.variableNames.map(W=>"v"+W).join(" + ");this.userCode=`
      void main() {
        ${R.join(`
        `)}

        float result = ${V};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ct{constructor(v,E){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=v,this.variableNames=E.map((W,K)=>"T"+K);const R=[];this.variableNames.forEach(W=>{R.push(`vec4 v${W} = get${W}AtOutCoords();`)});const V=this.variableNames.map(W=>"v"+W).join(" + ");this.userCode=`
      void main() {
        ${R.join(`
        `)}

        vec4 result = ${V};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ge{constructor(v,E,R){this.variableNames=["A"];const{windowSize:V,batchSize:W,outSize:K}=v;R||this.variableNames.push("bestIndicesA"),this.outputShape=[W,K];const re=E==="max"?">":"<",ie=R?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${V};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${V}; i++) {
          int inIdx = ${ie};
          float candidate = getA(batch, inIdx);
          if (candidate ${re} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jt(Z,v){return["x","y","z","w","u","v"].slice(0,v).map(E=>`${Z}.${E}`)}function sn(Z,v){return v===1?[Z]:jt(Z,v)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hn(){let Z,v,E,R,V,W,K,re,ie,fe;return Object(r.jb)().getNumber("WEBGL_VERSION")===2?(Z="#version 300 es",v="in",E="out",R="in",V="texture",W="outputColor",K="out vec4 outputColor;",re=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,ie="",fe=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(Z="",v="attribute",E="varying",R="varying",V="texture2D",W="gl_FragColor",K="",re=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,ie=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,fe=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:Z,attribute:v,varyingVs:E,varyingFs:R,texture2D:V,output:W,defineOutput:K,defineSpecialNaN:re,defineSpecialInf:ie,defineRound:fe}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jt(Z,v,E="index"){const R=r.Lb.computeStrides(v);return R.map((V,W)=>`${`int ${Z[W]} = ${E} / ${V}`}; ${W===R.length-1?`int ${Z[W+1]} = ${E} - ${Z[W]} * ${V}`:`index -= ${Z[W]} * ${V}`};`).join("")}function In(Z){const v=r.Lb.computeStrides(Z).map(E=>E.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${v[0]} + coords.y * ${v[1]} + coords.z;
  }
`}const Hn=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:me}=r.X;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ie(Z,v,E,R){const V=[];Z.forEach(Be=>{const Ve=r.Lb.sizeFromShape(Be.shapeInfo.logicalShape);Be.shapeInfo.isUniform?V.push(`uniform float ${Be.name}${Ve>1?`[${Ve}]`:""};`):(V.push(`uniform sampler2D ${Be.name};`),V.push(`uniform int offset${Be.name};`))});const W=V.join(`
`),K=Z.map(Be=>function(Ve,Me,Ue=!1){let mt="";mt+=Ue?Ye(Ve):Pe(Ve);const kt=Ve.shapeInfo.logicalShape,Dt=Me.logicalShape;return kt.length<=Dt.length&&(mt+=Ue?function(it,St){const at=it.name,Wt=at.charAt(0).toUpperCase()+at.slice(1),Ft="get"+Wt+"AtOutCoords",dn=it.shapeInfo.logicalShape.length,Vt=St.logicalShape.length,vt=me(it.shapeInfo.logicalShape,St.logicalShape),fn=Gt(Vt),bn=Vt-dn;let Xn;const sr=["x","y","z","w","u","v"];Xn=dn===0?"":Vt<2&&vt.length>=1?"coords = 0;":vt.map(gs=>`coords.${sr[gs+bn]} = 0;`).join(`
`);let Ut="";Ut=Vt<2&&dn>0?"coords":it.shapeInfo.logicalShape.map((gs,rr)=>"coords."+sr[rr+bn]).join(", ");let os="return outputValue;";const Ss=r.Lb.sizeFromShape(it.shapeInfo.logicalShape)===1,Xt=r.Lb.sizeFromShape(St.logicalShape)===1;if(dn!==1||Ss||Xt){if(Ss&&!Xt)os=Vt===1?`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:`
        return vec4(outputValue.x);
      `;else if(vt.length){const gs=dn-2,rr=dn-1;vt.indexOf(gs)>-1&&vt.indexOf(rr)>-1?os="return vec4(outputValue.x);":vt.indexOf(gs)>-1?os="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":vt.indexOf(rr)>-1&&(os="return vec4(outputValue.xx, outputValue.zz);")}}else os=`
      return vec4(outputValue.xy, outputValue.xy);
    `;return`
    vec4 ${Ft}() {
      ${fn} coords = getOutputCoords();
      ${Xn}
      vec4 outputValue = get${Wt}(${Ut});
      ${os}
    }
  `}(Ve,Me):function(it,St){const at=it.name,Wt=at.charAt(0).toUpperCase()+at.slice(1),Ft="get"+Wt+"AtOutCoords",dn=St.texShape,Vt=it.shapeInfo.texShape,vt=it.shapeInfo.logicalShape.length,fn=St.logicalShape.length;if(!it.shapeInfo.isUniform&&vt===fn&&it.shapeInfo.flatOffset==null&&r.Lb.arraysEqual(Vt,dn))return`
      float ${Ft}() {
        return sampleTexture(${at}, resultUV);
      }
    `;const bn=Gt(fn),Xn=me(it.shapeInfo.logicalShape,St.logicalShape),sr=fn-vt;let Ut;const os=["x","y","z","w","u","v"];Ut=vt===0?"":fn<2&&Xn.length>=1?"coords = 0;":Xn.map(Xt=>`coords.${os[Xt+sr]} = 0;`).join(`
`);let Ss="";return Ss=fn<2&&vt>0?"coords":it.shapeInfo.logicalShape.map((Xt,gs)=>"coords."+os[gs+sr]).join(", "),`
    float ${Ft}() {
      ${bn} coords = getOutputCoords();
      ${Ut}
      return get${Wt}(${Ss});
    }
  `}(Ve,Me)),mt}(Be,v,R)).join(`
`),re=v.texShape,ie=hn(),fe=function(Be){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${Be.texture2D}(textureSampler, uv).r;
    }
  `}(ie);let Se,De,ke=function(Be){return`${Be.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${Be.varyingFs} vec2 resultUV;
    ${Be.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${Be.defineSpecialNaN}
    ${Be.defineSpecialInf}
    ${Be.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${yt}
    ${_t}
    ${Bt}
  `}(ie);return v.isPacked?(Se=function(Be,Ve){switch(Be.length){case 0:return un();case 1:return function(Me,Ue){const mt=[Math.ceil(Ue[0]/2),Math.ceil(Ue[1]/2)];return mt[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${mt[1]}.0);
      }
    `:mt[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${mt[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${mt[0]}, ${mt[1]}));
      return 2 * (resTexRC.x * ${mt[1]} + resTexRC.y);
    }
  `}(0,Ve);case 2:return function(Me,Ue){const mt=[Math.ceil(Ue[0]/2),Math.ceil(Ue[1]/2)];if(r.Lb.arraysEqual(Me,Ue))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${mt[0]}, ${mt[1]}));
      }
    `;const kt=Math.ceil(Me[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${mt[0]}, ${mt[1]}));

      int index = resTexRC.x * ${mt[1]} + resTexRC.y;
      int r = 2 * (index / ${kt});
      int c = imod(index, ${kt}) * 2;

      return ivec2(r, c);
    }
  `}(Be,Ve);case 3:return function(Me,Ue){const mt=[Math.ceil(Ue[0]/2),Math.ceil(Ue[1]/2)],kt=Math.ceil(Me[2]/2),Dt=kt*Math.ceil(Me[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${mt[0]}, ${mt[1]}));
      int index = resTexRC.x * ${mt[1]} + resTexRC.y;

      int b = index / ${Dt};
      index -= b * ${Dt};

      int r = 2 * (index / ${kt});
      int c = imod(index, ${kt}) * 2;

      return ivec3(b, r, c);
    }
  `}(Be,Ve);default:return function(Me,Ue){const mt=[Math.ceil(Ue[0]/2),Math.ceil(Ue[1]/2)],kt=Math.ceil(Me[Me.length-1]/2),Dt=kt*Math.ceil(Me[Me.length-2]/2);let it=Dt,St="",at="b, r, c";for(let Wt=2;Wt<Me.length-1;Wt++)it*=Me[Me.length-Wt-1],St=`
      int b${Wt} = index / ${it};
      index -= b${Wt} * ${it};
    `+St,at=`b${Wt}, `+at;return`
    ivec${Me.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${mt[0]}, ${mt[1]}));
      int index = resTexRC.x * ${mt[1]} + resTexRC.y;

      ${St}

      int b = index / ${Dt};
      index -= b * ${Dt};

      int r = 2 * (index / ${kt});
      int c = imod(index, ${kt}) * 2;

      return ivec${Me.length}(${at});
    }
  `}(Be,Ve)}}(v.logicalShape,re),De=function(Be){return`
    void setOutput(vec4 val) {
      ${Be.output} = val;
    }
  `}(ie)):(Se=function(Be,Ve){switch(Be.length){case 0:return un();case 1:return function(Me,Ue){return Ue[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * ${Ue[1]}.0);
      }
    `:Ue[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * ${Ue[0]}.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${Ue[0]}, ${Ue[1]}));
      return resTexRC.x * ${Ue[1]} + resTexRC.y;
    }
  `}(0,Ve);case 2:return function(Me,Ue){return r.Lb.arraysEqual(Me,Ue)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${Ue[0]}, ${Ue[1]}));
      }
    `:Me[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${Ue[0]}, ${Ue[1]}));
        int index = resTexRC.x * ${Ue[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:Me[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${Ue[0]}, ${Ue[1]}));
        int index = resTexRC.x * ${Ue[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${Ue[0]}, ${Ue[1]}));
      int index = resTexRC.x * ${Ue[1]} + resTexRC.y;
      int r = index / ${Me[1]};
      int c = index - r * ${Me[1]};
      return ivec2(r, c);
    }
  `}(Be,Ve);case 3:return function(Me,Ue){const mt=Jt(["r","c","d"],Me);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${Ue[0]}, ${Ue[1]}));
      int index = resTexRC.x * ${Ue[1]} + resTexRC.y;
      ${mt}
      return ivec3(r, c, d);
    }
  `}(Be,Ve);case 4:return function(Me,Ue){const mt=Jt(["r","c","d","d2"],Me);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${Ue[0]}, ${Ue[1]}));
      int index = resTexRC.x * ${Ue[1]} + resTexRC.y;
      ${mt}
      return ivec4(r, c, d, d2);
    }
  `}(Be,Ve);case 5:return function(Me,Ue){const mt=Jt(["r","c","d","d2","d3"],Me);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${Ue[0]},
                             ${Ue[1]}));

      int index = resTexRC.x * ${Ue[1]} + resTexRC.y;

      ${mt}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}(Be,Ve);case 6:return function(Me,Ue){const mt=Jt(["r","c","d","d2","d3","d4"],Me);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${Ue[0]}, ${Ue[1]}));
      int index = resTexRC.x * ${Ue[1]} + resTexRC.y;

      ${mt}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}(Be,Ve);default:throw new Error(Be.length+"-D output sampling is not yet supported")}}(v.logicalShape,re),De=function(Be){return`
    void setOutput(float val) {
      ${Be.output} = vec4(val, 0, 0, 0);
    }
  `}(ie)),R&&(ke+=Zt),[ke,fe,De,W,Se,K,E].join(`
`)}function Pe(Z){const v=Z.shapeInfo.logicalShape;switch(v.length){case 0:return function(E){const R=E.name,V="get"+R.charAt(0).toUpperCase()+R.slice(1);if(E.shapeInfo.isUniform)return`float ${V}() {return ${R};}`;const[W,K]=E.shapeInfo.texShape;if(W===1&&K===1)return`
      float ${V}() {
        return sampleTexture(${R}, halfCR);
      }
    `;const[re,ie]=E.shapeInfo.texShape,fe=pn(R);return`
    float ${V}() {
      vec2 uv = uvFromFlat(${re}, ${ie}, ${fe});
      return sampleTexture(${R}, uv);
    }
  `}(Z);case 1:return function(E){const R=E.name,V="get"+R.charAt(0).toUpperCase()+R.slice(1);if(E.shapeInfo.isUniform)return`
      float ${V}(int index) {
        ${Ht(E)}
      }
    `;const W=E.shapeInfo.texShape,K=W[0],re=W[1];if(re===1&&K===1)return`
      float ${V}(int index) {
        return sampleTexture(${R}, halfCR);
      }
    `;const ie=pn(R);return re===1?`
      float ${V}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${ie}) + 0.5) / ${K}.0);
        return sampleTexture(${R}, uv);
      }
    `:K===1?`
      float ${V}(int index) {
        vec2 uv = vec2((float(index + ${ie}) + 0.5) / ${re}.0, 0.5);
        return sampleTexture(${R}, uv);
      }
    `:`
    float ${V}(int index) {
      vec2 uv = uvFromFlat(${K}, ${re}, index + ${ie});
      return sampleTexture(${R}, uv);
    }
  `}(Z);case 2:return function(E){const R=E.shapeInfo.logicalShape,V=E.name,W="get"+V.charAt(0).toUpperCase()+V.slice(1),K=E.shapeInfo.texShape;if(K!=null&&r.Lb.arraysEqual(R,K)){const Be=K[0],Ve=K[1];return`
    float ${W}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${Ve}.0, ${Be}.0);
      return sampleTexture(${V}, uv);
    }
  `}const{newShape:re,keptDims:ie}=r.Lb.squeezeShape(R),fe=re;if(fe.length<R.length){const Be=Tn(E,fe),Ve=["row","col"];return`
      ${Pe(Be)}
      float ${W}(int row, int col) {
        return ${W}(${ns(Ve,ie)});
      }
    `}if(E.shapeInfo.isUniform)return`
      float ${W}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${R[1]}, 1)));
        ${Ht(E)}
      }
    `;const Se=K[0],De=K[1],ke=pn(V);return De===1?`
    float ${W}(int row, int col) {
      float index = dot(vec3(row, col, ${ke}), vec3(${R[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${Se}.0);
      return sampleTexture(${V}, uv);
    }
  `:Se===1?`
    float ${W}(int row, int col) {
      float index = dot(vec3(row, col, ${ke}), vec3(${R[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${De}.0, 0.5);
      return sampleTexture(${V}, uv);
    }
  `:`
  float ${W}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${R[1]} + col + ${ke};
    vec2 uv = uvFromFlat(${Se}, ${De}, index);
    return sampleTexture(${V}, uv);
  }
`}(Z);case 3:return function(E){const R=E.shapeInfo.logicalShape,V=E.name,W="get"+V.charAt(0).toUpperCase()+V.slice(1),K=R[1]*R[2],re=R[2],{newShape:ie,keptDims:fe}=r.Lb.squeezeShape(R),Se=ie;if(Se.length<R.length){const Ue=Tn(E,Se),mt=["row","col","depth"];return`
        ${Pe(Ue)}
        float ${W}(int row, int col, int depth) {
          return ${W}(${ns(mt,fe)});
        }
      `}if(E.shapeInfo.isUniform)return`
      float ${W}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${K}, ${re}, 1)));
        ${Ht(E)}
      }
    `;const De=E.shapeInfo.texShape,ke=De[0],Be=De[1],Ve=E.shapeInfo.flatOffset;if(Be===K&&Ve==null)return`
        float ${W}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${re}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${Be}.0, ${ke}.0);
          return sampleTexture(${V}, uv);
        }
      `;if(Be===re&&Ve==null)return`
    float ${W}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${R[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${Be}.0, ${ke}.0);
      return sampleTexture(${V}, uv);
    }
  `;const Me=pn(V);return`
      float ${W}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${K} + col * ${re} + depth + ${Me};
        vec2 uv = uvFromFlat(${ke}, ${Be}, index);
        return sampleTexture(${V}, uv);
      }
  `}(Z);case 4:return function(E){const R=E.shapeInfo.logicalShape,V=E.name,W="get"+V.charAt(0).toUpperCase()+V.slice(1),K=R[3],re=R[2]*K,ie=R[1]*re,{newShape:fe,keptDims:Se}=r.Lb.squeezeShape(R);if(fe.length<R.length){const Ue=Tn(E,fe),mt=["row","col","depth","depth2"];return`
      ${Pe(Ue)}
      float ${W}(int row, int col, int depth, int depth2) {
        return ${W}(${ns(mt,Se)});
      }
    `}if(E.shapeInfo.isUniform)return`
      float ${W}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${ie}, ${re}, ${K}, 1)));
        ${Ht(E)}
      }
    `;const De=E.shapeInfo.flatOffset,ke=E.shapeInfo.texShape,Be=ke[0],Ve=ke[1];if(Ve===ie&&De==null)return`
      float ${W}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${re}, ${K}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${Ve}.0, ${Be}.0);
        return sampleTexture(${V}, uv);
      }
    `;if(Ve===K&&De==null)return`
      float ${W}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${R[1]*R[2]}, ${R[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${Ve}.0, ${Be}.0);
        return sampleTexture(${V}, uv);
      }
    `;const Me=pn(V);return`
    float ${W}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${ie} + col * ${re} +
          depth * ${K} + depth2;
      vec2 uv = uvFromFlat(${Be}, ${Ve}, index + ${Me});
      return sampleTexture(${V}, uv);
    }
  `}(Z);case 5:return function(E){const R=E.shapeInfo.logicalShape,V=E.name,W="get"+V.charAt(0).toUpperCase()+V.slice(1),K=R[4],re=R[3]*K,ie=R[2]*re,fe=R[1]*ie,{newShape:Se,keptDims:De}=r.Lb.squeezeShape(R);if(Se.length<R.length){const mt=Tn(E,Se),kt=["row","col","depth","depth2","depth3"];return`
      ${Pe(mt)}
      float ${W}(int row, int col, int depth, int depth2, int depth3) {
        return ${W}(${ns(kt,De)});
      }
    `}if(E.shapeInfo.isUniform)return`
      float ${W}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${fe}, ${ie}, ${re}, ${K})) +
          depth3;
        ${Ht(E)}
      }
    `;const ke=E.shapeInfo.flatOffset,Be=E.shapeInfo.texShape,Ve=Be[0],Me=Be[1];if(Me===fe&&ke==null)return`
      float ${W}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${ie}, ${re}, ${K}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${Me}.0, ${Ve}.0);
        return sampleTexture(${V}, uv);
      }
    `;if(Me===K&&ke==null)return`
      float ${W}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${R[1]*R[2]*R[3]},
               ${R[2]*R[3]}, ${R[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${Me}.0, ${Ve}.0);
        return sampleTexture(${V}, uv);
      }
    `;const Ue=pn(V);return`
    float ${W}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${fe} + col * ${ie} + depth * ${re} +
          depth2 * ${K} + depth3 + ${Ue};
      vec2 uv = uvFromFlat(${Ve}, ${Me}, index);
      return sampleTexture(${V}, uv);
    }
  `}(Z);case 6:return function(E){const R=E.shapeInfo.logicalShape,V=E.name,W="get"+V.charAt(0).toUpperCase()+V.slice(1),{newShape:K,keptDims:re}=r.Lb.squeezeShape(R);if(K.length<R.length){const kt=Tn(E,K),Dt=["row","col","depth","depth2","depth3","depth4"];return`
      ${Pe(kt)}
      float ${W}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${W}(${ns(Dt,re)});
      }
    `}const ie=R[5],fe=R[4]*ie,Se=R[3]*fe,De=R[2]*Se,ke=R[1]*De;if(E.shapeInfo.isUniform)return`
      float ${W}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${ke}, ${De}, ${Se}, ${fe})) +
          dot(
            vec2(depth3, depth4),
            vec2(${ie}, 1)));
        ${Ht(E)}
      }
    `;const Be=E.shapeInfo.flatOffset,Ve=E.shapeInfo.texShape,Me=Ve[0],Ue=Ve[1];if(Ue===ke&&Be==null)return`
      float ${W}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${De}, ${Se}, ${fe}, ${ie})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${Ue}.0, ${Me}.0);
        return sampleTexture(${V}, uv);
      }
    `;if(Ue===ie&&Be==null)return`
      float ${W}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${R[1]*R[2]*R[3]*R[4]},
               ${R[2]*R[3]*R[4]},
               ${R[3]*R[4]},
               ${R[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${Ue}.0, ${Me}.0);
        return sampleTexture(${V}, uv);
      }
    `;const mt=pn(V);return`
    float ${W}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${ke} + col * ${De} + depth * ${Se} +
          depth2 * ${fe} + depth3 * ${ie} + depth4 + ${mt};
      vec2 uv = uvFromFlat(${Me}, ${Ue}, index);
      return sampleTexture(${V}, uv);
    }
  `}(Z);default:throw new Error(v.length+"-D input sampling is not yet supported")}}function Ye(Z){switch(Z.shapeInfo.logicalShape.length){case 0:return function(v){const E=v.name,R="get"+E.charAt(0).toUpperCase()+E.slice(1),V=hn();return`
    vec4 ${R}() {
      return ${V.texture2D}(${E}, halfCR);
    }
  `}(Z);case 1:return function(v){const E=v.name,R="get"+E.charAt(0).toUpperCase()+E.slice(1),V=v.shapeInfo.texShape,W=[Math.ceil(V[0]/2),Math.ceil(V[1]/2)],K=hn();return`
    vec4 ${R}(int index) {
      vec2 uv = packedUVfrom1D(
        ${W[0]}, ${W[1]}, index);
      return ${K.texture2D}(${E}, uv);
    }
  `}(Z);case 2:return function(v){const E=v.shapeInfo.logicalShape,R=v.name,V="get"+R.charAt(0).toUpperCase()+R.slice(1),W=v.shapeInfo.texShape,K=W[0],re=W[1],ie=hn();if(W!=null&&r.Lb.arraysEqual(E,W))return`
      vec4 ${V}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${re}.0, ${K}.0);

        return ${ie.texture2D}(${R}, uv);
      }
    `;const fe=[Math.ceil(W[0]/2),Math.ceil(W[1]/2)],Se=Math.ceil(E[1]/2);return`
    vec4 ${V}(int row, int col) {
      vec2 uv = packedUVfrom2D(${Se}, ${fe[0]}, ${fe[1]}, row, col);
      return ${ie.texture2D}(${R}, uv);
    }
  `}(Z);case 3:return function(v){const E=v.shapeInfo.logicalShape,R=v.name,V="get"+R.charAt(0).toUpperCase()+R.slice(1),W=v.shapeInfo.texShape,K=[Math.ceil(W[0]/2),Math.ceil(W[1]/2)];if(E[0]===1){const ke=E.slice(1),Be=[1,2],Ve=Tn(v,ke),Me=["b","row","col"];return`
        ${Ye(Ve)}
        vec4 ${V}(int b, int row, int col) {
          return ${V}(${ns(Me,Be)});
        }
      `}const re=K[0],ie=K[1],fe=Math.ceil(E[2]/2),Se=fe*Math.ceil(E[1]/2),De=hn();return`
    vec4 ${V}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${re}, ${ie}, ${Se}, ${fe}, b, row, col);
      return ${De.texture2D}(${R}, uv);
    }
  `}(Z);default:return function(v){const E=v.shapeInfo.logicalShape,R=E.length,V=v.name,W="get"+V.charAt(0).toUpperCase()+V.slice(1),K=v.shapeInfo.texShape,re=[Math.ceil(K[0]/2),Math.ceil(K[1]/2)],ie=re[0],fe=re[1],Se=Math.ceil(E[R-1]/2);let De=Se*Math.ceil(E[R-2]/2),ke="int b, int row, int col",Be=`b * ${De} + (row / 2) * ${Se} + (col / 2)`;for(let Me=2;Me<R-1;Me++)ke=`int b${Me}, `+ke,De*=E[R-Me-1],Be=`b${Me} * ${De} + `+Be;const Ve=hn();return`
    vec4 ${W}(${ke}) {
      int index = ${Be};
      int texR = index / ${fe};
      int texC = index - texR * ${fe};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${fe}, ${ie});
      return ${Ve.texture2D}(${V}, uv);
    }
  `}(Z)}}const yt=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,_t=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Bt=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Zt=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function un(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function pn(Z){return"offset"+Z}function Ht(Z){const v=Z.name,E=r.Lb.sizeFromShape(Z.shapeInfo.logicalShape);return E<2?`return ${v};`:`
    for (int i = 0; i < ${E}; i++) {
      if (i == index) {
        return ${v}[i];
      }
    }
  `}function Gt(Z){if(Z<=1)return"int";if(Z===2)return"ivec2";if(Z===3)return"ivec3";if(Z===4)return"ivec4";if(Z===5)return"ivec5";if(Z===6)return"ivec6";throw Error(`GPU for rank ${Z} is not yet supported`)}function Tn(Z,v){const E=JSON.parse(JSON.stringify(Z));return E.shapeInfo.logicalShape=v,E}function ns(Z,v){return v.map(E=>Z[E]).join(", ")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hs{constructor(v,E,R,V){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.Lb.assert(v.length>2,()=>`Packed arg${R.charAt(0).toUpperCase()+R.slice(1)} supports only inputs with rank above 2.`);const W=v[v.length-1],K=Math.ceil(W/E);this.outputShape=v.slice(0,-1),K>1&&this.outputShape.push(K),V||this.variableNames.push("bestIndicesA");const re=this.outputShape,ie=re.length,fe=Gt(ie),Se=sn("coords",ie);let De,ke;if(K===1){ke=ie+1;const Ft=Gt(ke);De=`
        ${Ft} sourceLocR = ${Ft}(${Se.join()}, 0);
        ++${Se[ie-1]};
        ${Ft} sourceLocG = ${Ft}(${Se.join()}, 0);
        ++${Se[ie-2]};
        ${Ft} sourceLocA = ${Ft}(${Se.join()}, 0);
        --${Se[ie-1]};
        ${Ft} sourceLocB = ${Ft}(${Se.join()}, 0);
        --${Se[ie-2]};`}else ke=ie,De=`
        ${fe} sourceLocR = coords;
        ++${Se[ie-1]};
        ${fe} sourceLocG = coords;
        ++${Se[ie-2]};
        ${fe} sourceLocA = coords;
        --${Se[ie-1]};
        ${fe} sourceLocB = coords;
        --${Se[ie-2]};`;const Be=["x","y","z","w","u","v"].slice(0,ke),Ve="."+Be[ke-1],Me=Be.map(Ft=>"int "+Ft),Ue=sn("sourceLocR",ke-1).concat("inIdx.r"),mt=sn("sourceLocG",ke-1).concat("inIdx.g"),kt=sn("sourceLocB",ke-1).concat("inIdx.b"),Dt=sn("sourceLocA",ke-1).concat("inIdx.a"),it=R==="max"?"greaterThan":"lessThan",St=V?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${Ue.join()}),
                             getBestIndicesAChannel(${mt.join()}),
                             getBestIndicesAChannel(${kt.join()}),
                             getBestIndicesAChannel(${Dt.join()})));`,at=`vec4(
            getAChannel(${Ue.join()}),
            hasNextCol ? getAChannel(${mt.join()}) : 0.,
            hasNextRow ? getAChannel(${kt.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${Dt.join()}) : 0.)`,Wt=V?"":`
      float getBestIndicesAChannel(${Me.join()}) {
        return getChannel(getBestIndicesA(${Be.join()}),
                                          vec2(${Be.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${Me.join()}) {
        return getChannel(getA(${Be.join()}),
                               vec2(${Be.slice(-2).join()}));
      }
      ${Wt}
      void main() {
        ${fe} coords = getOutputCoords();
        bool hasNextCol = ${Se[ie-1]} < ${re[ie-1]-1};
        bool hasNextRow = ${Se[ie-2]} < ${re[ie-2]-1};
        ${De}
        ivec4 srcIdx = ivec4(sourceLocR${Ve}, sourceLocG${Ve},
          sourceLocB${Ve}, sourceLocA${Ve}) * ${E};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${at};

        for (int i = 0; i < ${E}; i++) {
          inIdx = srcIdx;
          ${St}
          vec4 candidate = ${at};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${it}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ri{constructor(v){this.variableNames=["dy"],this.outputShape=v.inShape;const E=v.filterHeight,R=v.filterWidth,V=v.strideHeight,W=v.strideWidth,K=v.dilationHeight,re=v.dilationWidth,ie=v.effectiveFilterHeight,fe=v.effectiveFilterWidth,Se=ie-1-v.padInfo.top,De=fe-1-v.padInfo.left,ke=1/(E*R);this.userCode=`
      const ivec2 pads = ivec2(${Se}, ${De});
      const float avgMultiplier = float(${ke});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${ie};
            wR += ${K}) {
          float dyR = float(dyRCorner + wR) / ${V}.0;

          if (dyR < 0.0 || dyR >= ${v.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${fe};
            wC+= ${re}) {
            float dyC = float(dyCCorner + wC) / ${W}.0;

            if (dyC < 0.0 || dyC >= ${v.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class Di{constructor(v){this.variableNames=["dy"],this.outputShape=v.inShape;const E=v.filterDepth,R=v.filterHeight,V=v.filterWidth,W=v.strideDepth,K=v.strideHeight,re=v.strideWidth,ie=v.dilationDepth,fe=v.dilationHeight,Se=v.dilationWidth,De=v.effectiveFilterDepth,ke=v.effectiveFilterHeight,Be=v.effectiveFilterWidth,Ve=De-1-v.padInfo.front,Me=ke-1-v.padInfo.top,Ue=Be-1-v.padInfo.left,mt=1/(E*R*V);this.userCode=`
      const ivec3 pads = ivec3(${Ve}, ${Me}, ${Ue});
      const float avgMultiplier = float(${mt});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${De};
            wD += ${ie}) {
          float dyD = float(dyDCorner + wD) / ${W}.0;

          if (dyD < 0.0 || dyD >= ${v.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${ke};
              wR += ${fe}) {
            float dyR = float(dyRCorner + wR) / ${K}.0;

            if (dyR < 0.0 || dyR >= ${v.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${Be};
                wC += ${Se}) {
              float dyC = float(dyCCorner + wC) / ${re}.0;

              if (dyC < 0.0 || dyC >= ${v.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ks="return (a < 0.) ? b * a : a;";class _s{constructor(v,E,R){this.variableNames=["A","B"],this.outputShape=r.X.assertAndGetBroadcastShape(E,R),this.userCode=`
      float binaryOperation(float a, float b) {
        ${v}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tr=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;class Xs{constructor(v,E,R,V=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.X.assertAndGetBroadcastShape(E,R);const W=this.outputShape.length;let K="";if(V)if(W===0||r.Lb.sizeFromShape(this.outputShape)===1)K=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(K=`
          ${Gt(W)} coords = getOutputCoords();
        `,W===1)K+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const re=sn("coords",W);K+=`
            bool nextRowOutOfBounds =
              (${re[W-2]} + 1) >= ${this.outputShape[W-2]};
            bool nextColOutOfBounds =
              (${re[W-1]} + 1) >= ${this.outputShape[W-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${v}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${K}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ur{constructor(v){this.variableNames=["A"],this.outputShape=v,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}getCustomSetupFunc(v,E){return(R,V)=>{this.minLoc==null&&(this.minLoc=R.getUniformLocationNoThrow(V,"minVal"),this.maxLoc=R.getUniformLocationNoThrow(V,"maxVal")),R.gl.uniform1f(this.minLoc,v),R.gl.uniform1f(this.maxLoc,E)}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ss{constructor(v){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=v,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}getCustomSetupFunc(v,E){return(R,V)=>{this.minLoc==null&&(this.minLoc=R.getUniformLocationNoThrow(V,"minVal"),this.maxLoc=R.getUniformLocationNoThrow(V,"maxVal")),R.gl.uniform1f(this.minLoc,v),R.gl.uniform1f(this.maxLoc,E)}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qo{constructor(v){this.variableNames=["real","imag"],this.outputShape=v,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class po{constructor(v){this.variableNames=["x","dy"],this.outputShape=v.filterShape;const E=v.strideHeight,R=v.strideWidth,V=v.padInfo.top,W=v.padInfo.left,K=v.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${v.batchSize}; b++) {
          for (int yR = 0; yR < ${v.outHeight}; yR++) {
            int xR = wR + yR * ${E} - ${V};

            if (xR < 0 || xR >= ${v.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${v.outWidth}; yC++) {
              int xC = wC + yC * ${R} - ${W};

              if (xC < 0 || xC >= ${v.inWidth}) {
                continue;
              }

              if (${K}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class ii{constructor(v){this.variableNames=["dy","W"],this.outputShape=v.inShape;const E=v.filterHeight,R=v.filterWidth,V=v.strideHeight,W=v.strideWidth,K=v.dataFormat==="channelsLast",re=E-1-v.padInfo.top,ie=R-1-v.padInfo.left,fe=K?1:2,Se=K?2:3,De=K?3:1;this.userCode=`
      const ivec2 pads = ivec2(${re}, ${ie});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${De}];

        ivec2 dyCorner = ivec2(coords[${fe}], coords[${Se}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${E}; wR++) {
          float dyR = float(dyRCorner + wR) / ${V}.0;

          if (dyR < 0.0 || dyR >= ${v.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${E} - 1 - wR;

          for (int wC = 0; wC < ${R}; wC++) {
            float dyC = float(dyCCorner + wC) / ${W}.0;

            if (dyC < 0.0 || dyC >= ${v.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${R} - 1 - wC;

            for (int d2 = 0; d2 < ${v.outChannels}; d2++) {

              if (${K}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class kn{constructor(v){this.variableNames=["x","dy"],this.outputShape=v.filterShape;const E=v.strideDepth,R=v.strideHeight,V=v.strideWidth,W=v.padInfo.front,K=v.padInfo.top,re=v.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${v.batchSize}; b++) {
          for (int yF = 0; yF < ${v.outDepth}; yF++) {
            int xF = wF + yF * ${E} - ${W};

            if (xF < 0 || xF >= ${v.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${v.outHeight}; yR++) {
              int xR = wR + yR * ${R} - ${K};

              if (xR < 0 || xR >= ${v.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${v.outWidth}; yC++) {
                int xC = wC + yC * ${V} - ${re};

                if (xC < 0 || xC >= ${v.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Jn{constructor(v){this.variableNames=["dy","W"],this.outputShape=v.inShape;const E=v.filterDepth,R=v.filterHeight,V=v.filterWidth,W=v.strideDepth,K=v.strideHeight,re=v.strideWidth,ie=E-1-v.padInfo.front,fe=R-1-v.padInfo.top,Se=V-1-v.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${ie}, ${fe}, ${Se});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${E}; wF++) {
          float dyF = float(dyFCorner + wF) / ${W}.0;

          if (dyF < 0.0 || dyF >= ${v.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${E} - 1 - wF;

          for (int wR = 0; wR < ${R}; wR++) {
            float dyR = float(dyRCorner + wR) / ${K}.0;

            if (dyR < 0.0 || dyR >= ${v.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${R} - 1 - wR;

            for (int wC = 0; wC < ${V}; wC++) {
              float dyC = float(dyCCorner + wC) / ${re}.0;

              if (dyC < 0.0 || dyC >= ${v.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${V} - 1 - wC;

              for (int d2 = 0; d2 < ${v.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qr{constructor(v){this.variableNames=["x","dy"],this.outputShape=v.filterShape;const E=v.strideHeight,R=v.strideWidth,V=v.padInfo.top,W=v.padInfo.left,K=v.outChannels/v.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${K} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${v.batchSize}; b++) {
          for (int yR = 0; yR < ${v.outHeight}; yR++) {
            int xR = wR + yR * ${E} - ${V};

            if (xR < 0 || xR >= ${v.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${v.outWidth}; yC++) {
              int xC = wC + yC * ${R} - ${W};

              if (xC < 0 || xC >= ${v.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class jo{constructor(v){this.variableNames=["dy","W"],this.outputShape=v.inShape;const E=v.filterHeight,R=v.filterWidth,V=v.strideHeight,W=v.strideWidth,K=E-1-v.padInfo.top,re=R-1-v.padInfo.left,ie=v.outChannels/v.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${K}, ${re});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${E}; wR++) {
          float dyR = float(dyRCorner + wR) / ${V}.0;

          if (dyR < 0.0 || dyR >= ${v.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${E} - 1 - wR;

          for (int wC = 0; wC < ${R}; wC++) {
            float dyC = float(dyCCorner + wC) / ${W}.0;

            if (dyC < 0.0 || dyC >= ${v.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${R} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${ie}; dm++) {
              int d2 = d1 * ${ie} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ot{constructor(v,E=!1,R=null,V=!1){this.variableNames=["x","W"],this.outputShape=v.outShape;const W=v.padInfo.top,K=v.padInfo.left,re=v.strideHeight,ie=v.strideWidth,fe=v.dilationHeight,Se=v.dilationWidth,De=v.filterHeight,ke=v.filterWidth,Be=4*Math.floor(v.inChannels/4),Ve=v.inChannels%4,Me=v.dataFormat==="channelsLast",Ue=Me?1:2,mt=Me?2:3,kt=Me?3:1;let Dt="",it="";R&&(Dt=V?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${R}
        }`:`
          float activation(float x) {
            ${R}
          }
        `,it="result = activation(result);");const St=E?"result += getBiasAtOutCoords();":"";E&&this.variableNames.push("bias"),V&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      ${Dt}

      const ivec2 strides = ivec2(${re}, ${ie});
      const ivec2 pads = ivec2(${W}, ${K});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${kt}];

        ivec2 xRCCorner =
            ivec2(coords[${Ue}], coords[${mt}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${De}; wR++) {
          int xR = xRCorner + wR * ${fe};

          if (xR < 0 || xR >= ${v.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${ke}; wC++) {
            int xC = xCCorner + wC * ${Se};

            if (xC < 0 || xC >= ${v.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${Be}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${Me}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${Ve===1}) {

              if (${Me}) {
                dotProd +=
                    getX(batch, xR, xC, ${Be}) *
                    getW(wR, wC, ${Be}, d2);
              } else {
                dotProd +=
                    getX(batch, ${Be}, xR, xC) *
                    getW(wR, wC, ${Be}, d2);
              }

            } else if (${Ve===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${Be}, d2),
                getW(wR, wC, ${Be} + 1, d2)
              );

              if (${Me}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${Be}),
                  getX(batch, xR, xC, ${Be} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${Be}, xR, xC),
                  getX(batch, ${Be} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${Ve===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${Be}, d2),
                getW(wR, wC, ${Be} + 1, d2),
                getW(wR, wC, ${Be} + 2, d2)
              );

              if (${Me}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${Be}),
                  getX(batch, xR, xC, ${Be} + 1),
                  getX(batch, xR, xC, ${Be} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${Be}, xR, xC),
                  getX(batch, ${Be} + 1, xR, xC),
                  getX(batch, ${Be} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${St}
        ${it}
        setOutput(result);
      }
    `}}class Pi{constructor(v){this.variableNames=["x","W"],this.outputShape=v.outShape;const E=v.padInfo.front,R=v.padInfo.top,V=v.padInfo.left,W=v.strideDepth,K=v.strideHeight,re=v.strideWidth,ie=v.dilationDepth,fe=v.dilationHeight,Se=v.dilationWidth,De=v.filterDepth,ke=v.filterHeight,Be=v.filterWidth,Ve=4*Math.floor(v.inChannels/4),Me=v.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${W}, ${K}, ${re});
      const ivec3 pads = ivec3(${E}, ${R}, ${V});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${De}; wF++) {
          int xF = xFCorner + wF * ${ie};

          if (xF < 0 || xF >= ${v.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${ke}; wR++) {
            int xR = xRCorner + wR * ${fe};

            if (xR < 0 || xR >= ${v.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${Be}; wC++) {
              int xC = xCCorner + wC * ${Se};

              if (xC < 0 || xC >= ${v.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${Ve}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${Me===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${Ve}) *
                  getW(wF, wR, wC, ${Ve}, d2);
              } else if (${Me===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${Ve}),
                  getX(batch, xF, xR, xC, ${Ve} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${Ve}, d2),
                  getW(wF, wR, wC, ${Ve} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${Me===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${Ve}),
                  getX(batch, xF, xR, xC, ${Ve} + 1),
                  getX(batch, xF, xR, xC, ${Ve} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${Ve}, d2),
                  getW(wF, wR, wC, ${Ve} + 1, d2),
                  getW(wF, wR, wC, ${Ve} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jr{constructor(v,E=!1,R=null,V=!1){this.variableNames=["x","W"],this.outputShape=v.outShape;const W=v.inHeight,K=v.inWidth,re=v.padInfo.top,ie=v.padInfo.left,fe=v.strideHeight,Se=v.strideWidth,De=v.dilationHeight,ke=v.dilationWidth,Be=v.filterHeight,Ve=v.filterWidth,Me=v.outChannels/v.inChannels;let Ue="",mt="";R&&(Ue=V?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${R}
        }`:`
          float activation(float x) {
            ${R}
          }
        `,mt="result = activation(result);");const kt=E?"result += getBiasAtOutCoords();":"";E&&this.variableNames.push("bias"),V&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      ${Ue}

      const ivec2 strides = ivec2(${fe}, ${Se});
      const ivec2 pads = ivec2(${re}, ${ie});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${Me};
        int q = d2 - d1 * ${Me};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${Be}; wR++) {
          int xR = xRCorner + wR * ${De};

          if (xR < 0 || xR >= ${W}) {
            continue;
          }

          for (int wC = 0; wC < ${Ve}; wC++) {
            int xC = xCCorner + wC * ${ke};

            if (xC < 0 || xC >= ${K}) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${kt}
        ${mt}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fi{constructor(v,E=!1,R=null,V=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=v.outShape;const W=v.inHeight,K=v.inWidth,re=v.padInfo.top,ie=v.padInfo.left,fe=v.strideHeight,Se=v.strideWidth,De=v.dilationHeight,ke=v.dilationWidth,Be=v.filterHeight,Ve=v.filterWidth,Me=Ve;let Ue="int xR; int xC; int xCOffset;";for(let it=0;it<Be;it++)for(let St=0;St<Ve;St++)Ue+=`
          vec4 xTexelR${it}C${2*St} = vec4(0.);
          vec4 wR${it}C${St} = vec4(0.);
          vec4 xR${it}C${St} = vec4(0.);`;for(let it=0;it<Be;it++)for(let St=0;St<Me;St++){const at=2*St;if(Ue+=`
          xR = xRCorner + ${it*De};
          xC = xCCorner + ${at*ke};
        `,Se===1){if(at<Ve&&(Ue+=ie%2==1?`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < ${W} && xCOffset >= 0 && xCOffset < ${K}) {
                  xTexelR${it}C${at} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${K}) {
                    xTexelR${it}C${at}.zw = vec2(0.);
                  }
                } else {
                  xTexelR${it}C${at} = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < ${W} && xCOffset >= 0 && xCOffset < ${K}) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= ${K}) {
                    previous.zw = vec2(0.);
                  }

                  xR${it}C${at} = vec4(previous.zw, xTexelR${it}C${at}.xy);
                } else {
                  xR${it}C${at} = vec4(0, 0, xTexelR${it}C${at}.xy);
                }
              `:`
                if(xR >= 0 && xR < ${W} && xC >= 0 && xC < ${K}) {
                  xTexelR${it}C${at} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${it}C${at} = vec4(0.);
                }

                xR${it}C${at} = xTexelR${it}C${at};
              `,at+1<Ve)){const Wt=ie%2==0?r.Lb.nearestLargerEven(ke):ke;ke%2==0&&ie%2==1||ke%2!=0&&ie%2!=1?(Ue+=`
                  xCOffset = xC + ${ie%2} + ${Wt};

                  if(xR >= 0 && xR < ${W} &&
                    xCOffset >= 0 && xCOffset < ${K}) {
                    xTexelR${it}C${at+2} = getX(batch, xR, xCOffset, d1);
                  }
                `,ke>1&&(Ue+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < ${W} &&
                      xCOffset >= 0 && xCOffset < ${K}) {
                      xTexelR${it}C${at} = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR${it}C${at} = vec4(0.);
                    }
                  `),Ue+=`
                  xR${it}C${at+1} = vec4(
                    xTexelR${it}C${at}.zw, xTexelR${it}C${at+2}.xy);
                `):Ue+=`
                  xCOffset = xC + ${Wt};

                  if(xR >= 0 && xR < ${W} &&
                    xCOffset >= 0 && xCOffset < ${K}) {
                    xTexelR${it}C${at+2} = getX(batch, xR, xCOffset, d1);
                  }

                  xR${it}C${at+1} = xTexelR${it}C${at+2};
                `}}else at<Ve&&(Ue+=`
              if(xR >= 0 && xR < ${W}) {
            `,ie%2==1?(Ue+=`
                xCOffset = xC + 1 - ${Se};
                if(xCOffset >= 0 && xCOffset < ${K}) {
                  xTexelR${it}C${at} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${it}C${at} = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < ${K}) {
                  xTexelR${it}C${at+2} = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR${it}C${at+2} = vec4(0.);
                }

                xR${it}C${at} = vec4(
                  xTexelR${it}C${at}.zw, xTexelR${it}C${at+2}.zw);
              `,at+1<Ve&&(Ue+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + ${Se};
                  if(xCOffset >= 0 && xCOffset < ${K}) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR${it}C${at+1} = vec4(xTexelR${it}C${at+2}.xy, final.xy);
                `)):(Ue+=`
                if(xC >= 0 && xC < ${K}) {
                  xTexelR${it}C${at} = getX(batch, xR, xC, d1);
                } else {
                  xTexelR${it}C${at} = vec4(0.);
                }

                xCOffset = xC + ${Se};
                if(xCOffset >= 0 && xCOffset < ${K}) {
                  xTexelR${it}C${at+2} = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR${it}C${at+2} = vec4(0.);
                }

                xR${it}C${at} = vec4(
                  xTexelR${it}C${at}.xy, xTexelR${it}C${at+2}.xy);
              `,at+1<Ve&&(Ue+=`
                  xR${it}C${at+1} = vec4(
                    xTexelR${it}C${at}.zw, xTexelR${it}C${at+2}.zw);
                `)),Ue+="}");at<Ve&&(Ue+=`
            vec4 wTexelR${it}C${at} = getW(${it}, ${at}, d1, q);
            wR${it}C${at} = vec4(wTexelR${it}C${at}.xz, wTexelR${it}C${at}.xz);
          `,at+1<Ve&&(Ue+=`
              vec4 wTexelR${it}C${at+1} = getW(${it}, ${at+1}, d1, q);
              wR${it}C${at+1} =
                vec4(wTexelR${it}C${at+1}.xz, wTexelR${it}C${at+1}.xz);`))}for(let it=0;it<Be;it++)for(let St=0;St<Ve;St++)Ue+=`dotProd += xR${it}C${St} * wR${it}C${St};`;let mt="",kt="";R&&(mt=V?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${R}
        }`:`vec4 activation(vec4 x) {
          ${R}
        }`,kt="result = activation(result);");const Dt=E?"result += getBiasAtOutCoords();":"";E&&this.variableNames.push("bias"),V&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      ${mt}

      const ivec2 strides = ivec2(${fe}, ${Se});
      const ivec2 pads = ivec2(${re}, ${ie});

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        ${Ue}

        vec4 result = dotProd;
        ${Dt}
        ${kt}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mi{constructor(v,E,R,V,W){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[K,re,ie,fe]=v,[Se]=E,[De,ke]=R;this.outputShape=[Se,De,ke,fe];const Be=V==="bilinear"?1:0,[Ve,Me]=[re-1+".0",ie-1+".0"],[Ue,mt,kt]=De>1?[""+(re-1)/(De-1),"(y2-y1) * height_ratio",`y1*${Ve} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+Ve],[Dt,it,St]=ke>1?[""+(ie-1)/(ke-1),"(x2-x1) * width_ratio",`x1*${Me} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+Me];this.userCode=`
      const float height_ratio = float(${Ue});
      const float width_ratio = float(${Dt});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${K}) {
          return;
        }

        float height_scale = ${mt};
        float width_scale = ${it};

        float in_y = ${kt};
        if( in_y < 0.0 || in_y > ${Ve} ) {
          setOutput(float(${W}));
          return;
        }
        float in_x = ${St};
        if( in_x < 0.0 || in_x > ${Me} ) {
          setOutput(float(${W}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${Be} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}class Li{constructor(v,E,R){this.variableNames=["x"],this.outputShape=v;const V=v.length,W=E?"0.0":`getX(${Fs(V,"coords")})`,K=v[v.length-1];let re="",ie="";E?(re=R?"end != "+(K-1):"end != 0",ie=R?"end + 1":"end - 1"):(re=R?"end + pow2 < "+K:"end >= pow2",ie=R?"end + pow2":"end - pow2"),this.userCode=`
      uniform float index;
      void main() {
        ${Gt(V)} coords = getOutputCoords();
        int end = ${Ir(V,"coords")};
        float val = ${W};
        int pow2 = int(pow(2.0, index));
        if (${re}) {
          int idx = ${ie};
          ${Ir(V,"coords")} = idx;
          val += getX(${Fs(V,"coords")});
        }
        setOutput(val);
      }
    `}getCustomSetupFunc(v){return(E,R)=>{this.index==null&&(this.index=E.getUniformLocation(R,"index")),E.gl.uniform1f(this.index,v)}}}function Fs(Z,v){if(Z===1)return""+v;if(Z===2)return`${v}.x, ${v}.y`;if(Z===3)return`${v}.x, ${v}.y, ${v}.z`;if(Z===4)return`${v}.x, ${v}.y, ${v}.z, ${v}.w`;throw Error(`Cumulative sum for rank ${Z} is not yet supported`)}function Ir(Z,v){if(Z===1)return""+v;if(Z===2)return v+".y";if(Z===3)return v+".z";if(Z===4)return v+".w";throw Error(`Cumulative sum for rank ${Z} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xr{constructor(v){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=a.DENSE;const E=y(v),R=hn();this.outputShape=v,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${Jt(["r","c","d"],v)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${E[0]}, ${E[1]}));
        int index = 4 * (resTexRC.x * ${E[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${R.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ms{constructor(v){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=a.DENSE;const E=y(v),R=hn();this.outputShape=v,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${Jt(["r","c","d"],v)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(${E[0]}, ${E[1]}));
        int index = 4 * (resTexRC.x * ${E[1]} + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${R.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uo{constructor(v,E,R){this.variableNames=["x"],this.outputShape=[],this.outputShape=v,this.blockSize=E,this.dataFormat=R,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${E};
      int offset_h = imod(h, ${E});
      int in_w = w / ${E};
      int offset_w = imod(w, ${E});
      int offset_d = (offset_h * ${E} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xn{constructor(v){this.variableNames=["X"],this.outputShape=[v,v],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xs{constructor(v){this.variableNames=["A"],this.outTexUsage=l.DOWNLOAD;const E=hn();this.outputShape=v,this.userCode=`
      ${Hn}

      void main() {
        float x = getAAtOutCoords();
        ${E.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zi{constructor(v){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=l.DOWNLOAD;const E=hn();this.outputShape=v,this.userCode=`
      ${Hn}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${E.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vn{constructor(v,E,R=!1){this.variableNames=["A"];const V=hn(),[W,K]=E;this.outputShape=v;let re="result";R&&(re="floor(result * 255. + 0.5)"),this.userCode=`
      ${In(v)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / ${K};
        int c = imod(flatIndex, ${K});
        vec2 uv = (vec2(c, r) + halfCR) / vec2(${K}.0, ${W}.0);
        vec4 values = ${V.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${V.output} = vec4(${re}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zr{constructor(v,E,R=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const V=hn(),[W,K]=E;this.outputShape=v;let re="",ie="result";R&&(ie="floor(result * 255. + 0.5)");for(let fe=0;fe<=1;fe++)for(let Se=0;Se<=1;Se++){const De=2*fe+Se;re+=`
          localCoords = coords;
          if(localCoords[2] + ${Se} < ${v[2]}) {
            localCoords[2] += ${Se};
            if(localCoords[1] + ${fe} < ${v[1]}) {
              localCoords[1] += ${fe};

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / ${K};
              c = imod(flatIndex, ${K});
              uv = (vec2(c, r) + halfCR) / vec2(${K}.0, ${W}.0);
              values = ${V.texture2D}(A, uv);

              if(offset == 0) {
                result[${De}] = values[0];
              } else if(offset == 1) {
                result[${De}] = values[1];
              } else if(offset == 2) {
                result[${De}] = values[2];
              } else {
                result[${De}] = values[3];
              }
            }
          }
        `}this.userCode=`
      ${In(v)}

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        ${re}

        ${V.output} = ${ie};
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ls{constructor(v,E){this.outputShape=[],this.variableNames=["x"],this.outputShape=v,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}getCustomSetupFunc(v){return(E,R)=>{this.valueLoc==null&&(this.valueLoc=E.getUniformLocationNoThrow(R,"value")),E.gl.uniform1f(this.valueLoc,v)}}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kt{constructor(v,E,R){this.variableNames=["A","indices"];const V=v.slice();V[R]=E,this.outputShape=V,this.rank=V.length;const W=Gt(this.rank),K=function(re,ie){const fe=re.length;if(fe>4)throw Error(`Gather for rank ${fe} is not yet supported`);if(fe===1)return"int(getIndices(resRC))";const Se=["resRC.x","resRC.y","resRC.z","resRC.w"],De=[];for(let ke=0;ke<re.length;ke++)ke===ie?De.push(`int(getIndices(${Se[ke]}))`):De.push(""+Se[ke]);return De.join()}(v,R);this.userCode=`
      void main() {
        ${W} resRC = getOutputCoords();
        setOutput(getA(${K}));
      }
    `}}class eo{constructor(v,E,R){this.sliceDim=v,this.strides=E,this.variableNames=["x","indices"],this.outputShape=R;const V=Gt(E.length),W=Gt(R.length),K=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        ${V} strides = ${V}(${this.strides});
         void main() {
          ${W} coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * ${K};
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Go(Z){const v=hn();return function(E,R){const V=U(E,()=>E.createShader(E.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(g(E,()=>E.shaderSource(V,R)),g(E,()=>E.compileShader(V)),E.getShaderParameter(V,E.COMPILE_STATUS)===!1)throw console.log(E.getShaderInfoLog(V)),new Error("Failed to compile vertex shader.");return V}(Z,`${v.version}
    precision highp float;
    ${v.attribute} vec3 clipSpacePos;
    ${v.attribute} vec2 uv;
    ${v.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`)}function Lr(Z){return function(v,E){const R=U(v,()=>v.createBuffer(),"Unable to create WebGLBuffer");return g(v,()=>v.bindBuffer(v.ARRAY_BUFFER,R)),g(v,()=>v.bufferData(v.ARRAY_BUFFER,E,v.STATIC_DRAW)),R}(Z,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function hs(Z){return function(v,E){const R=U(v,()=>v.createBuffer(),"Unable to create WebGLBuffer");return g(v,()=>v.bindBuffer(v.ELEMENT_ARRAY_BUFFER,R)),g(v,()=>v.bufferData(v.ELEMENT_ARRAY_BUFFER,E,v.STATIC_DRAW)),R}(Z,new Uint16Array([0,1,2,2,1,3]))}function Wn(Z,v,E,R,V,W){(function(ie,fe){const Se=Object(r.jb)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(ie<=0||fe<=0)throw new Error(`Requested texture size [${ie}x${fe}] is invalid.`);if(ie>Se||fe>Se)throw new Error(`Requested texture size [${ie}x${fe}] greater than WebGL maximum on this browser / GPU [${Se}x${Se}].`)})(v,E);const K=function(ie){return U(ie,()=>ie.createTexture(),"Unable to create WebGLTexture.")}(Z),re=Z.TEXTURE_2D;return g(Z,()=>Z.bindTexture(re,K)),g(Z,()=>Z.texParameteri(re,Z.TEXTURE_WRAP_S,Z.CLAMP_TO_EDGE)),g(Z,()=>Z.texParameteri(re,Z.TEXTURE_WRAP_T,Z.CLAMP_TO_EDGE)),g(Z,()=>Z.texParameteri(re,Z.TEXTURE_MIN_FILTER,Z.NEAREST)),g(Z,()=>Z.texParameteri(re,Z.TEXTURE_MAG_FILTER,Z.NEAREST)),g(Z,()=>Z.texImage2D(re,0,R,v,E,0,V,W,null)),g(Z,()=>Z.bindTexture(Z.TEXTURE_2D,null)),K}function lr(Z){return Z.internalFormatFloat}function Dn(Z){return Z.internalFormatHalfFloat}function rs(Z){return Z.downloadTextureFormat}function Wo(Z){return Z.internalFormatPackedFloat}function Zn(Z){return Z.internalFormatPackedHalfFloat}function Bi(Z,v,E,R,V,W,K,re){const ie=Z,fe=new Float32Array(function(Se,De){const[ke,Be]=m(Se,De);return ke*Be*4}(W,K));return ie.bindBuffer(ie.PIXEL_PACK_BUFFER,v),ie.getBufferSubData(ie.PIXEL_PACK_BUFFER,0,fe),ie.bindBuffer(ie.PIXEL_PACK_BUFFER,null),fe}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ma{constructor(v){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const E=Object(r.jb)().getNumber("WEBGL_VERSION");v!=null?(this.gl=v,function(V,W){o[V]=W}(E,v)):this.gl=c(E);let R="WEBGL_color_buffer_float";if(Object(r.jb)().getNumber("WEBGL_VERSION")===1){const V="OES_texture_float",W="OES_texture_half_float";if(this.textureFloatExtension=w(this.gl,V),ue(this.gl,W))this.textureHalfFloatExtension=w(this.gl,W);else if(Object(r.jb)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(R),ue(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=w(this.gl,"EXT_color_buffer_half_float");else if(Object(r.jb)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(R="EXT_color_buffer_float",ue(this.gl,R))this.colorBufferFloatExtension=this.gl.getExtension(R);else{if(!ue(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=Lr(this.gl),this.indexBuffer=hs(this.gl),this.framebuffer=function(V){return U(V,()=>V.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=h(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(r.jb)().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const v=this.gl;g(v,()=>v.finish()),g(v,()=>v.bindFramebuffer(v.FRAMEBUFFER,null)),g(v,()=>v.deleteFramebuffer(this.framebuffer)),g(v,()=>v.bindBuffer(v.ARRAY_BUFFER,null)),g(v,()=>v.bindBuffer(v.ELEMENT_ARRAY_BUFFER,null)),g(v,()=>v.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(v,E){return this.throwIfDisposed(),function(R,V,W,K){const[re,ie]=f(V,W);return Wn(R,re,ie,lr(K),K.textureFormatFloat,R.FLOAT)}(this.gl,v,E,this.textureConfig)}createFloat16MatrixTexture(v,E){return this.throwIfDisposed(),function(R,V,W,K){const[re,ie]=f(V,W);return Wn(R,re,ie,Dn(K),K.textureFormatFloat,K.textureTypeHalfFloat)}(this.gl,v,E,this.textureConfig)}createUnsignedBytesMatrixTexture(v,E){return this.throwIfDisposed(),function(R,V,W,K){const[re,ie]=f(V,W);return Wn(R,re,ie,rs(K),R.RGBA,R.UNSIGNED_BYTE)}(this.gl,v,E,this.textureConfig)}uploadPixelDataToTexture(v,E){this.throwIfDisposed(),function(R,V,W){g(R,()=>R.bindTexture(R.TEXTURE_2D,V)),W.data instanceof Uint8Array?g(R,()=>R.texImage2D(R.TEXTURE_2D,0,R.RGBA,W.width,W.height,0,R.RGBA,R.UNSIGNED_BYTE,W.data)):g(R,()=>R.texImage2D(R.TEXTURE_2D,0,R.RGBA,R.RGBA,R.UNSIGNED_BYTE,W)),g(R,()=>R.bindTexture(R.TEXTURE_2D,null))}(this.gl,v,E)}uploadDenseMatrixToTexture(v,E,R,V){this.throwIfDisposed(),function(W,K,re,ie,fe,Se){let De,ke,Be;g(W,()=>W.bindTexture(W.TEXTURE_2D,K)),fe instanceof Uint8Array?(De=new Uint8Array(re*ie*4),ke=W.UNSIGNED_BYTE,Be=W.RGBA):(De=new Float32Array(re*ie*4),ke=W.FLOAT,Be=Se.internalFormatPackedFloat),De.set(fe),g(W,()=>W.texImage2D(W.TEXTURE_2D,0,Be,re,ie,0,W.RGBA,ke,De)),g(W,()=>W.bindTexture(W.TEXTURE_2D,null))}(this.gl,v,E,R,V,this.textureConfig)}createFloat16PackedMatrixTexture(v,E){return this.throwIfDisposed(),function(R,V,W,K){const[re,ie]=m(V,W);return Wn(R,re,ie,Zn(K),R.RGBA,K.textureTypeHalfFloat)}(this.gl,v,E,this.textureConfig)}createPackedMatrixTexture(v,E){return this.throwIfDisposed(),function(R,V,W,K){const[re,ie]=m(V,W);return Wn(R,re,ie,Wo(K),R.RGBA,R.FLOAT)}(this.gl,v,E,this.textureConfig)}deleteMatrixTexture(v){this.throwIfDisposed(),this.outputTexture===v&&(F(this.gl,this.framebuffer),this.outputTexture=null),g(this.gl,()=>this.gl.deleteTexture(v))}downloadByteEncodedFloatMatrixFromOutputTexture(v,E,R){return this.downloadMatrixDriver(v,()=>function(V,W,K,re){const[ie,fe]=f(W,K),Se=new Uint8Array(W*K*4);return g(V,()=>V.readPixels(0,0,ie,fe,re.downloadTextureFormat,V.UNSIGNED_BYTE,Se)),new Float32Array(Se.buffer)}(this.gl,E,R,this.textureConfig))}downloadPackedMatrixFromBuffer(v,E,R,V,W,K){return Bi(this.gl,v,0,0,0,W,K,this.textureConfig)}downloadFloat32MatrixFromBuffer(v,E){return function(R,V,W){const K=R,re=new Float32Array(W);return K.bindBuffer(K.PIXEL_PACK_BUFFER,V),K.getBufferSubData(K.PIXEL_PACK_BUFFER,0,re),K.bindBuffer(K.PIXEL_PACK_BUFFER,null),re}(this.gl,v,E)}createBufferFromTexture(v,E,R){this.bindTextureToFrameBuffer(v);const V=function(W,K,re,ie){const fe=W.createBuffer();g(W,()=>W.bindBuffer(W.PIXEL_PACK_BUFFER,fe));const Se=16*K*re;return g(W,()=>W.bufferData(W.PIXEL_PACK_BUFFER,Se,W.STREAM_READ)),g(W,()=>W.readPixels(0,0,re,K,W.RGBA,W.FLOAT,0)),g(W,()=>W.bindBuffer(W.PIXEL_PACK_BUFFER,null)),fe}(this.gl,E,R,this.textureConfig);return this.unbindTextureToFrameBuffer(),V}createAndWaitForFence(){const v=this.createFence(this.gl);return this.pollFence(v)}createFence(v){let E,R;if(Object(r.jb)().getBool("WEBGL_FENCE_API_ENABLED")){const V=v,W=V.fenceSync(V.SYNC_GPU_COMMANDS_COMPLETE,0);v.flush(),R=()=>{const K=V.clientWaitSync(W,0,0);return K===V.ALREADY_SIGNALED||K===V.CONDITION_SATISFIED},E=W}else Object(r.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(E=this.beginQuery(),this.endQuery(),R=()=>this.isQueryAvailable(E,Object(r.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):R=()=>!0;return{query:E,isFencePassed:R}}downloadMatrixFromPackedTexture(v,E,R){return this.downloadMatrixDriver(v,()=>function(V,W,K){const re=new Float32Array(W*K*4);return g(V,()=>V.readPixels(0,0,K,W,V.RGBA,V.FLOAT,re)),re}(this.gl,E,R))}createProgram(v){this.throwIfDisposed();const E=this.gl,R=I(E,v),V=Go(E),W=function(K){return U(K,()=>K.createProgram(),"Unable to create WebGLProgram.")}(E);return g(E,()=>E.attachShader(W,V)),g(E,()=>E.attachShader(W,R)),function(K,re){if(g(K,()=>K.linkProgram(re)),K.getProgramParameter(re,K.LINK_STATUS)===!1)throw console.log(K.getProgramInfoLog(re)),new Error("Failed to link vertex and fragment shaders.")}(E,W),this.debug&&A(E,W),this.vertexAttrsAreBound||(this.setProgram(W),this.vertexAttrsAreBound=function(K,re,ie){return g(K,()=>K.bindBuffer(K.ARRAY_BUFFER,ie)),T(K,re,"clipSpacePos",ie,3,20,0)&&T(K,re,"uv",ie,2,20,12)}(E,this.program,this.vertexBuffer)),W}deleteProgram(v){this.throwIfDisposed(),v===this.program&&(this.program=null),v!=null&&g(this.gl,()=>this.gl.deleteProgram(v))}setProgram(v){this.throwIfDisposed(),this.program=v,this.program!=null&&this.debug&&A(this.gl,this.program),g(this.gl,()=>this.gl.useProgram(v))}getUniformLocation(v,E,R=!0){return this.throwIfDisposed(),R?function(V,W,K){return U(V,()=>V.getUniformLocation(W,K),'uniform "'+K+'" not present in program.')}(this.gl,v,E):function(V,W,K){return V.getUniformLocation(W,K)}(this.gl,v,E)}getAttributeLocation(v,E){return this.throwIfDisposed(),g(this.gl,()=>this.gl.getAttribLocation(v,E))}getUniformLocationNoThrow(v,E){return this.throwIfDisposed(),this.gl.getUniformLocation(v,E)}setInputMatrixTexture(v,E,R){this.throwIfDisposed(),this.throwIfNoProgram(),P(this.gl,v,E,R)}setOutputMatrixTexture(v,E,R){this.setOutputMatrixTextureDriver(v,R,E)}setOutputPackedMatrixTexture(v,E,R){this.throwIfDisposed();const[V,W]=m(E,R);this.setOutputMatrixTextureDriver(v,V,W)}setOutputMatrixWriteRegion(v,E,R,V){this.setOutputMatrixWriteRegionDriver(R,v,V,E)}setOutputPackedMatrixWriteRegion(v,E,R,V){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&A(this.gl,this.program),G(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const v=this.gl;this.debug&&this.debugValidate(),g(v,()=>v.drawElements(v.TRIANGLES,6,v.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),g(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=w(this.gl,Object(r.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Object(r.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const R=this.gl,V=this.getQueryTimerExtensionWebGL2(),W=R.createQuery();return R.beginQuery(V.TIME_ELAPSED_EXT,W),W}const v=this.getQueryTimerExtensionWebGL1(),E=v.createQueryEXT();return v.beginQueryEXT(v.TIME_ELAPSED_EXT,E),E}endQuery(){if(Object(r.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const E=this.gl,R=this.getQueryTimerExtensionWebGL2();return void E.endQuery(R.TIME_ELAPSED_EXT)}const v=this.getQueryTimerExtensionWebGL1();v.endQueryEXT(v.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(v){return await r.Lb.repeatedTry(()=>this.disposed||this.isQueryAvailable(v,Object(r.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(v,Object(r.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(v,E){if(E===0)return null;if(E===2){const R=this.gl;return R.getQueryParameter(v,R.QUERY_RESULT)/1e6}{const R=this.getQueryTimerExtensionWebGL1();return R.getQueryObjectEXT(v,R.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(v,E){if(E===0)return!0;if(E===2){const R=this.gl,V=this.getQueryTimerExtensionWebGL2(),W=R.getQueryParameter(v,R.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(V.GPU_DISJOINT_EXT)),W&&!this.disjoint}{const R=this.getQueryTimerExtensionWebGL1(),V=R.getQueryObjectEXT(v,R.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(R.GPU_DISJOINT_EXT)),V&&!this.disjoint}}pollFence(v){return new Promise(E=>{this.addItemToPoll(()=>v.isFencePassed(),()=>E())})}pollItems(){const v=function(E){let R=0;for(;R<E.length&&E[R]();++R);return R-1}(this.itemsToPoll.map(E=>E.isDoneFn));for(let E=0;E<=v;++E){const{resolveFn:R}=this.itemsToPoll[E];R()}this.itemsToPoll=this.itemsToPoll.slice(v+1)}addItemToPoll(v,E){this.itemsToPoll.push({isDoneFn:v,resolveFn:E}),this.itemsToPoll.length>1||r.Lb.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(v){this.throwIfDisposed(),O(this.gl,v,this.framebuffer),this.debug&&G(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(O(this.gl,this.outputTexture,this.framebuffer),this.debug&&G(this.gl)):F(this.gl,this.framebuffer)}downloadMatrixDriver(v,E){this.bindTextureToFrameBuffer(v);const R=E();return this.unbindTextureToFrameBuffer(),R}setOutputMatrixTextureDriver(v,E,R){this.throwIfDisposed();const V=this.gl;O(V,v,this.framebuffer),this.debug&&G(V),this.outputTexture=v,g(V,()=>V.viewport(0,0,E,R)),g(V,()=>V.scissor(0,0,E,R))}setOutputMatrixWriteRegionDriver(v,E,R,V){this.throwIfDisposed(),g(this.gl,()=>this.gl.scissor(v,E,R,V))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function ai(Z,v){if(Z.length!==v.length)throw Error(`Binary was compiled with ${Z.length} inputs, but was executed with ${v.length} inputs`);Z.forEach((E,R)=>{const V=E.logicalShape,W=v[R],K=W.shape;if(!r.Lb.arraysEqual(V,K))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${V} and ${K} must match`);if(E.isUniform&&W.isUniform)return;const re=E.texShape,ie=W.isUniform?null:W.texData.texShape;if(!r.Lb.arraysEqual(re,ie))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${re} and ${ie} must match`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ho{constructor(v,E,R){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=v;const{filterWidth:V,inChannels:W,strideWidth:K,strideHeight:re,padInfo:ie,outWidth:fe,dilationWidth:Se,dilationHeight:De,dataFormat:ke}=R,{left:Be,top:Ve}=ie,Me=W*V,Ue=hn(),mt=ke==="channelsLast",kt=mt?0:1,Dt=mt?1:2;let it="";for(let St=0;St<=1;St++)for(let at=0;at<=1;at++)it+=`
          blockIndex = rc.y + ${at};
          pos = rc.x + ${St};

          if(blockIndex < ${v[1]} && pos < ${v[0]}) {
            offsetY = int(blockIndex / (${fe})) * ${re} - ${Ve};
            d0 = offsetY + ${De} * (pos / ${Me});

            if(d0 < ${E[kt]} && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), ${fe}.) * ${K}. - ${Be}.);
              d1 = offsetX + ${Se} * (int(mod(float(pos), ${Me}.) / ${W}.));

              if(d1 < ${E[Dt]} && d1 >= 0) {

                ch = int(mod(float(pos), ${W}.));

                if (${mt}) {
                  innerDims = vec2(d1, ch);
                  result[${2*St+at}] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${2*St+at}] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${it}

        ${Ue.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ga{constructor(v,E,R,V,W){this.variableNames=["x"],this.outputShape=[];const K=E,re=v[3]-1;let ie;this.outputShape=v;const fe=`float(${R}) + float(${V}) * sum`;ie=W===.5?`inversesqrt(${fe})`:W===1?`1.0/(${fe})`:`exp(log(${fe}) * float(-${W}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${K}; j <= ${K}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${re}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${ie};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vi{constructor(v,E,R,V,W){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=v,this.depth=v[3],this.depthRadius=E,this.bias=R,this.alpha=V,this.beta=W,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${E})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${E} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${V}) * norm + float(${R});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${V})
                * float(${W})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${W});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ma{constructor(v,E,R,V,W){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const K=E,re=v[3]-1;let ie;this.outputShape=v;const fe=`float(${R}) + float(${V}) * sum`;ie=W===.5?`inversesqrt(${fe})`:W===1?`1.0/(${fe})`:`exp(log(${fe}) * float(-${W}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${K};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${K}; j <= ${K}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${re}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${ie};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qi{constructor(v){this.variableNames=["dy","maxPos"],this.outputShape=v.inShape;const E=v.strideHeight,R=v.strideWidth,V=v.dilationHeight,W=v.effectiveFilterHeight,K=v.effectiveFilterWidth,re=W-1-v.padInfo.top,ie=K-1-v.padInfo.left,fe=W*K-1;this.userCode=`
      const ivec2 pads = ivec2(${re}, ${ie});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${W};
          wR += ${V}) {
          float dyR = float(dyRCorner + wR) / ${E}.0;

          if (dyR < 0.0 || dyR >= ${v.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${K}; wC++) {
            float dyC = float(dyCCorner + wC) / ${R}.0;

            if (dyC < 0.0 || dyC >= ${v.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${fe} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${K} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class ci{constructor(v){this.variableNames=["dy","maxPos"],this.outputShape=v.inShape;const E=v.strideDepth,R=v.strideHeight,V=v.strideWidth,W=v.dilationDepth,K=v.dilationHeight,re=v.dilationWidth,ie=v.effectiveFilterDepth,fe=v.effectiveFilterHeight,Se=v.effectiveFilterWidth,De=ie-1-v.padInfo.front,ke=fe-1-v.padInfo.top,Be=Se-1-v.padInfo.left,Ve=ie*fe*Se-1;this.userCode=`
      const ivec3 pads = ivec3(${De}, ${ke}, ${Be});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${ie};
           wD += ${W}) {
          float dyD = float(dyDCorner + wD) / ${E}.0;

          if (dyD < 0.0 || dyD >= ${v.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${fe};
              wR += ${K}) {
            float dyR = float(dyRCorner + wR) / ${R}.0;

            if (dyR < 0.0 || dyR >= ${v.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${Se};
                wC += ${re}) {
              float dyC = float(dyCCorner + wC) / ${V}.0;

              if (dyC < 0.0 || dyC >= ${v.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${Ve} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${fe} * ${Se} +
                  wR * ${Se} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vr{constructor(v,E,R,V=!1,W=!1,K=!1,re=null,ie=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=R;const fe=V?v[1]:v[2],Se=Math.ceil(fe/2),De=V?"i * 2, rc.y":"rc.y, i * 2",ke=W?"rc.z, i * 2":"i * 2, rc.z",Be=V?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],Ve=W?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let Me="",Ue="";re&&(Me=ie?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${re}
        }`:`vec4 activation(vec4 x) {
          ${re}
        }`,Ue="result = activation(result);");const mt=K?"result += getBiasAtOutCoords();":"";K&&this.variableNames.push("bias"),ie&&this.variableNames.push("preluActivationWeights");let kt="rc.x",Dt="rc.x";v[0]<E[0]?kt=`int(min(float(rc.x), ${v[0]-1}.))`:E[0]<v[0]&&(Dt=`int(min(float(rc.x), ${E[0]-1}.))`),this.userCode=`
      ${Me}

      const float sharedDimension = ${Se}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${Se}; i++) {
          int batchA = ${kt};
          int batchB = ${Dt};
          vec4 a = getMatrixA(batchA, ${De});
          vec4 b = getMatrixB(batchB, ${ke});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${Be[0]} * ${Ve[0]});
          result += (${Be[1]} * ${Ve[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${mt}

        ${Ue}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fo{constructor(v,E,R){this.variableNames=["probs"],this.outputShape=[v,R],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${E-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${E-1}));
      }
    `}getCustomSetupFunc(v){return(E,R)=>{this.seedLoc==null&&(this.seedLoc=E.getUniformLocation(R,"seed")),E.gl.uniform1f(this.seedLoc,v)}}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zr{constructor(v,E,R,V){this.variableNames=["indices"],this.outputShape=[v,E],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${V}), float(${R}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kc{constructor(v){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=v;const E=v.length;if(E===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const R=sn("rc",E),V=Gt(E),W=function(ie,fe,Se){if(ie===1)return"rc > "+fe[0];let De="";for(let ke=ie-2;ke<ie;ke++)De+=`${Se[ke]} >= ${fe[ke]}`,ke<ie-1&&(De+="||");return De}(E,v,R),K=function(ie,fe,Se,De){if(ie===1)return"";const ke=De.slice(-2);return`
    int r = ${ke[0]};
    int c = ${ke[1]};
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= ${fe};
    bool rEdge = rp1 >= ${Se};
  `}(E,v[v.length-1],v[v.length-2],R),re=function(ie,fe){const Se=ie.length,De=function(ke,Be){const Ve=[];for(let Me=0;Me<=1;Me++)for(let Ue=0;Ue<=1;Ue++){let mt=`${Me===0?"r":"rp1"}, ${Ue===0?"c":"cp1"}`;for(let kt=2;kt<ke;kt++)mt=Be[Be.length-1-kt]+","+mt;Ve.push(mt)}return Ve}(Se,fe);return Se===1?`getA(rc),
            rc + 1 >= ${ie[0]} ? 0. : getA(rc + 1),
            0, 0`:`getA(${De[0]}),
          cEdge ? 0. : getA(${De[1]}),
          rEdge ? 0. : getA(${De[2]}),
          rEdge || cEdge ? 0. : getA(${De[3]})`}(v,R);this.userCode=`
        void main() {
          ${V} rc = getOutputCoords();

          if(${W}) {
            setOutput(vec4(0));
          } else {
            ${K}

            setOutput(vec4(${re}));
          }
        }
      `}}}class kr{constructor(v,E,R){this.variableNames=["x"],this.outputShape=E.map((fe,Se)=>fe[0]+v[Se]+fe[1]);const V=v.length,W=Gt(V),K=E.map(fe=>fe[0]).join(","),re=E.map((fe,Se)=>fe[0]+v[Se]).join(","),ie=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,V);this.userCode=V!==1?`
      ${W} start = ${W}(${K});
      ${W} end = ${W}(${re});

      void main() {
        ${W} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(float(${R}));
        } else {
          ${W} coords = outC - start;
          setOutput(getX(${ie}));
        }
      }
    `:`
        int start = ${K};
        int end = ${re};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(float(${R}));
          } else {
            setOutput(getX(outC - start));
          }
        }
      `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class La{constructor(v,E,R){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=E.map((Me,Ue)=>Me[0]+v[Ue]+Me[1]);const V=v.length,W=Gt(V),K=E.map(Me=>Me[0]).join(","),re=E.map((Me,Ue)=>Me[0]+v[Ue]).join(","),ie=sn("rc",V),fe=sn("source",V),Se=`${ie[V-1]} < ${this.outputShape[V-1]}`,De=V===1?"source":`vec2(${fe.slice(-2).join()})`,ke=[W+" rc = outputLoc;",`${ie[V-1]} += 1;
       if(${Se}) {
      `,V===1?"":`}
       rc = outputLoc;
       ${ie[V-2]} += 1;
       if(${ie[V-2]} < ${this.outputShape[V-2]}) {`,V===1?"":`  ${ie[V-1]} += 1;
         if(${Se}) {`],Be=V===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let Ve="";for(let Me=0,Ue=V===1?2:4;Me<Ue;Me++)Ve+=`
        ${ke[Me]}
        if (${Be}) {
          result[${Me}] = float(${R});
        } else {
          ${W} source = rc - start;
          result[${Me}] = getChannel(getX(${fe.join()}), ${De});
        }
      `;Ve+=V===1?"} ":"}}",this.userCode=`
      const ${W} start = ${W}(${K});
      const ${W} end = ${W}(${re});

      void main() {
        ${W} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${Ve}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ui{constructor(v,E,R,V=!1,W=!1){if(this.variableNames=["x"],E==="avg"&&R)throw new Error("Cannot compute positions for average pool.");const K=v.filterWidth,re=v.strideHeight,ie=v.strideWidth,fe=v.dilationHeight,Se=v.dilationWidth,De=v.effectiveFilterHeight,ke=v.effectiveFilterWidth,Be=v.padInfo.top,Ve=v.padInfo.left;this.outputShape=v.outShape;const Me=E==="avg",Ue=`((batch  * ${v.inHeight} + xR) * ${v.inWidth} + xC) * ${v.inChannels} + d`,mt=`(xR * ${v.inWidth} + xC) * ${v.inChannels} + d`;let kt="0.0";if(Me||(kt="-1.0 / 1e-20"),R){const Wt=">=";return void(this.userCode=`
        const ivec2 strides = ivec2(${re}, ${ie});
        const ivec2 pads = ivec2(${Be}, ${Ve});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${De};
              wR += ${fe}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${v.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${ke};
                wC += ${Se}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${v.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${Wt} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${V?W?Ue:mt:`wR * ${ke} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `)}let Dt=`${E}(${E}(${E}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;E==="avg"&&(Dt="avgValue / count");const it=4*Math.floor(K/4),St=K%4,at=`
      if (${Me}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${re}, ${ie});
      const ivec2 pads = ivec2(${Be}, ${Ve});
      const float initializationValue = ${kt};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${v.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${kt});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${De};
            wR += ${fe}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${v.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${it}; wC += 4) {
            int xC = xCCorner + wC * ${Se};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${Se}, d),
              getValue(batch, xR, xC + 2 * ${Se}, d),
              getValue(batch, xR, xC + 3 * ${Se}, d)
            );

            ${at}
          }

          int xC = xCCorner + ${it};
          if (${St===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${at}
          } else if (${St===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${Se}, d),
              initializationValue,
              initializationValue
            );

            ${at}
          } else if (${St===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${Se}, d),
              getValue(batch, xR, xC + 2 * ${Se}, d),
              initializationValue
            );

            ${at}
          }
        }
        setOutput(${Dt});
      }
    `}}class li{constructor(v,E,R,V=!1,W=!1){if(this.variableNames=["x"],E==="avg"&&R)throw new Error("Cannot compute positions for average pool.");const K=v.filterWidth,re=v.strideDepth,ie=v.strideHeight,fe=v.strideWidth,Se=v.dilationDepth,De=v.dilationHeight,ke=v.dilationWidth,Be=v.effectiveFilterDepth,Ve=v.effectiveFilterHeight,Me=v.effectiveFilterWidth,Ue=v.padInfo.front,mt=v.padInfo.top,kt=v.padInfo.left;this.outputShape=v.outShape;const Dt=E==="avg";let it="0.0";if(Dt||(it="-1.0 / 1e-20"),R){const dn=">=";return void(this.userCode=`
        const ivec3 strides =
            ivec3(${re}, ${ie}, ${fe});
        const ivec3 pads = ivec3(${Ue}, ${mt}, ${kt});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${Be};
              wD += ${Se}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${v.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${Ve};
                wR += ${De}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${v.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${Me};
                  wC += ${ke}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${v.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${dn} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${V?W?`(((batch * ${v.inDepth} + xD) * ${v.inHeight} + xR) * ${v.inWidth} + xC) * ${v.inChannels} + ch`:`((xD * ${v.inHeight} + xR) * ${v.inWidth} + xC) * ${v.inChannels} + ch`:`wD * ${Ve} * ${Me} +
                      wR * ${Me} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `)}let St=`${E}(${E}(${E}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;E==="avg"&&(St="avgValue / count");const at=4*Math.floor(K/4),Wt=K%4,Ft=`
      if (${Dt}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${re}, ${ie}, ${fe});
      const ivec3 pads = ivec3(${Ue}, ${mt}, ${kt});
      const float initializationValue = ${it};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${v.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${it});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${Be};
            wD += ${Se}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${v.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${Ve};
            wR += ${De}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${v.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${at}; wC += 4) {
              int xC = xCCorner + wC * ${ke};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${ke}, ch),
                getValue(batch, xD, xR, xC + 2 * ${ke}, ch),
                getValue(batch, xD, xR, xC + 3 * ${ke}, ch)
              );

              ${Ft}
            }

            int xC = xCCorner + ${at};
            if (${Wt===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${Ft}
            } else if (${Wt===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${ke}, ch),
                initializationValue,
                initializationValue
              );

              ${Ft}
            } else if (${Wt===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${ke}, ch),
                getValue(batch, xD, xR, xC + 2 * ${ke}, ch),
                initializationValue
              );

              ${Ft}
            }
          }
          setOutput(${St});
        }
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class za{constructor(v,E){this.variableNames=["x"];const{windowSize:R,batchSize:V,inSize:W,outSize:K}=v;this.outputShape=[V,K];let re="0.0",ie="";E==="prod"?re="1.0":E==="min"?(re="1.0 / 1e-20",ie="min"):E==="max"&&(re="-1.0 / 1e-20",ie="max");let fe=`${E}(${E}(${E}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;E==="sum"?fe="sumValue":E==="prod"?fe="prodValue":E==="all"?fe="allValue":E==="any"&&(fe="anyValue");const Se=4*Math.floor(R/4),De=R%4;let ke=`
      if (${E==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${E==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${ie}(values, minMaxValue);
      }
    `,Be="vec4";E==="all"?(re="1.0",ke=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,Be="bvec4"):E==="any"&&(re="0.0",ke=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,Be="bvec4");let Ve="";W%R>0&&(Ve=`
        if (inIdx < 0 || inIdx >= ${W}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${re};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${Ve}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${R};

        vec4 minMaxValue = vec4(${re});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${Se}; i += 4) {
          int inIdx = inOffset + i;
          ${Be} values = ${Be}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${ke}
        }

        int inIdx = inOffset + ${Se};
        if (${De===1}) {
          ${Be} values = ${Be}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${ke}
        } else if (${De===2}) {
          ${Be} values = ${Be}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${ke}
        } else if (${De===3}) {
          ${Be} values = ${Be}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${ke}
        }
        setOutput(${fe});
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mo{constructor(v,E){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=v;let R="";for(let W=0;W<4;W++){let K="thisRC = rc;";W%2==1&&(K+="thisRC.z += 1;"),W>1&&(K+="thisRC.y += 1;"),R+=`
        ${K}
        ${W>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${W}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${W>0?"}":""}
      `}var V;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */this.userCode=`
      ${V=E,`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${Jt(["r","c","d"],V)}
      return ivec3(r, c, d);
    }
  `}
      ${In(v)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${v[1]};
        int cols = ${v[2]};

        ${R}

        setOutput(result);
      }
    `}}class Ba{constructor(v,E,R){this.variableNames=["dy"],this.outputShape=[],this.outputShape=E.shape;const[,V,W]=E.shape,[,K,re]=v.shape,ie=[R&&K>1?V-1:V,R&&re>1?W-1:W],fe=[R&&K>1?K-1:K,R&&re>1?re-1:re],Se=ie[0]/fe[0],De=ie[1]/fe[1],ke=1/Se,Be=1/De,Ve=2*Math.ceil(ke)+2,Me=2*Math.ceil(Be)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${Se});
        const float widthScale = float(${De});

        const float invHeightScale = float(${ke});
        const float invWidthScale = float(${Be});

        const int winHeight = int(${Ve});
        const int winWidth = int(${Me});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${K}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${re}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${V-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${W-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class go{constructor(v,E,R,V){this.variableNames=["A"],this.outputShape=[];const[W,K,re,ie]=v;this.outputShape=[W,E,R,ie];const fe=[V&&E>1?K-1:K,V&&R>1?re-1:re],Se=[V&&E>1?E-1:E,V&&R>1?R-1:R];this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${fe[0]/Se[0]},
          ${fe[1]/Se[1]});
      const vec2 inputShapeRC = vec2(${K}.0, ${re}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ec{constructor(v,E,R,V){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[W,K,re,ie]=v;this.outputShape=[W,E,R,ie];const fe=[V&&E>1?K-1:K,V&&R>1?re-1:re],Se=[V&&E>1?E-1:E,V&&R>1?R-1:R];this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${fe[0]/Se[0]},
          ${fe[1]/Se[1]},
          ${fe[1]/Se[1]});
      const vec3 inputShapeRC = vec3(${K}.0, ${re}.0,
                                     ${re}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${ie-1};
        bool hasNextRow = coords.z < ${R-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hr{constructor(v,E,R){this.variableNames=["dy"],this.outputShape=[],this.outputShape=E.shape;const[,V,W]=E.shape,[,K,re]=v.shape,ie=[R&&K>1?V-1:V,R&&re>1?W-1:W],fe=[R&&K>1?K-1:K,R&&re>1?re-1:re],Se=ie[0]/fe[0],De=ie[1]/fe[1],ke=1/Se,Be=1/De,Ve=2*Math.ceil(ke)+2,Me=2*Math.ceil(Be)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${Se});
        const float widthScale = float(${De});

        const float invHeightScale = float(${ke});
        const float invWidthScale = float(${Be});

        const int winHeight = int(${Ve});
        const int winWidth = int(${Me});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${K}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${re}) {
              continue;
            }

            float sourceFracRow =
              float(${ie[0]}) *
                (float(dyR) / float(${fe[0]}));

            float sourceFracCol =
                float(${ie[1]}) *
                  (float(dyC) / float(${fe[1]}));

            int sourceNearestRow = int(min(
                float(int(${V}) - 1),
                ${R} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${W}) - 1),
                ${R} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ko{constructor(v,E,R,V){this.variableNames=["A"],this.outputShape=[];const[W,K,re,ie]=v;this.outputShape=[W,E,R,ie];const fe=[V&&E>1?K-1:K,V&&R>1?re-1:re],Se=[V&&E>1?E-1:E,V&&R>1?R-1:R],De=V?"0.5":"0.0";this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${fe[0]/Se[0]},
          ${fe[1]/Se[1]});
      const vec2 inputShapeRC = vec2(${K}.0, ${re}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${De})));

        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xo{constructor(v,E){this.variableNames=["x"];const R=v.length;if(R>4)throw new Error(`WebGL backend: Reverse of rank-${R} tensor is not yet supported`);if(this.outputShape=v,R===1)return void(this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${v[0]} - coord - 1));
        }
      `);const V=v.map((K,re)=>(ie=>E.indexOf(ie)!==-1&&v[ie]!==1?`${v[ie]} - coords[${ie}] - 1`:`coords[${ie}]`)(re)).join(","),W=Gt(R);this.userCode=`
      void main() {
        ${W} coords = getOutputCoords();
        setOutput(getX(${V}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Br{constructor(v,E){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const R=v.length;if(R>4)throw new Error(`WebGL backend: Reverse of rank-${R} tensor is not yet supported`);this.outputShape=v;const V=sn("rc",R),W=`${V[R-1]} + 1 < ${this.outputShape[R-1]}`,K=`${V[R-2]} + 1 < ${this.outputShape[R-2]}`,re=Gt(R);function ie(fe){const Se=v.map((De,ke)=>function(Be,Ve){return E.indexOf(Be)!==-1&&v[Be]!==1?`${v[Be]} - ${Ve[Be]} - 1`:""+Ve[Be]}(ke,fe));return`getChannel(getX(${Se.join(",")}), vec2(${Se.slice(-2).join(",")}))`}this.userCode=R===1?`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${v[0]} - rc - 1),
            ${v[0]} - rc - 1);
          if(${W}){
              result.g = getChannel(getX(${v[0]} - (rc  + 1) - 1),
                ${v[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:`
        void main() {
          ${re} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${function(fe){return ie(fe)}(V.slice())};
          if(${W}){
            result.g = ${function(fe){return fe[R-1]="("+fe[R-1]+" + 1)",ie(fe)}(V.slice())};
          }
          if(${K}) {
            result.b = ${function(fe){return fe[R-2]="("+fe[R-2]+" + 1)",ie(fe)}(V.slice())};
            if(${W}) {
              result.a = ${function(fe){return fe[R-1]="("+fe[R-1]+" + 1)",fe[R-2]="("+fe[R-2]+" + 1)",ie(fe)}(V.slice())};
            }
          }
          setOutput(result);
        }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ko{constructor(v,E,R,V,W,K,re=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=K;const ie=Gt(W.length),fe=Gt(K.length);let Se="";R===1?Se="i":R===2&&(Se="i, j");const De=`getIndices(${Se})`;let ke="";V===1?ke="i":V===2&&(ke="i, coords[1]");const Be=`getUpdates(${ke})`,Ve=E>1?"strides[j]":"strides";this.userCode=`
        ${ie} strides = ${ie}(${W});

        void main() {
          ${fe} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${v}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${E}; j++) {
              int index = round(${De});
              flattenedIndex += index * ${Ve};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${Be};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ya{constructor(v,E){this.variableNames=["x","segmentIds"];const R=v.windowSize,V=v.batchSize,W=v.inSize,K=v.numSegments,re=K*Math.ceil(W/R);this.outputShape=[V,re];const ie=4*Math.floor(R/4),fe=R%4,Se=`
        sumValue += dot(values, segFilter);
    `;let De="";W%R>0&&(De=`
        if (inIdx < 0 || inIdx >= ${W}) {
          return initializationValue;
        }
      `);let ke="";W%R>0&&(ke=`
        if (inIdx < 0 || inIdx >= ${W}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        ${De}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${ke}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${K})) * float(${R}));
        int currentSeg = int(mod(float(outIdx), float(${K})));

        float sumValue = 0.0;

        for (int i = 0; i < ${ie}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${Se}
        }

        int inIdx = inOffset + ${ie};
        if (${fe===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${Se}
        } else if (${fe===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${Se}
        } else if (${fe===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${Se}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ms{constructor(v,E,R){let V,W;if(this.variableNames=["c","a","b"],this.outputShape=E,R>4)throw Error(`Where for rank ${R} is not yet supported`);if(R===1)W="resRC",V="resRC";else{const re=["resRC.x","resRC.y","resRC.z","resRC.w"],ie=[],fe=[];for(let Se=0;Se<E.length;Se++)fe.push(""+re[Se]),Se<v&&ie.push(""+re[Se]);V=ie.join(),W=fe.join()}const K=Gt(R);this.userCode=`
      void main() {
        ${K} resRC = getOutputCoords();
        float cVal = getC(${V});
        if (cVal >= 1.0) {
          setOutput(getA(${W}));
        } else {
          setOutput(getB(${W}));
        }
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ba{constructor(v){this.variableNames=["source"],this.outputShape=v,this.rank=v.length;const E=Gt(this.rank),R=`uniform int start[${this.rank}];`,V=function(K){if(K===1)return"sourceLoc";if(K<=6)return Vr.slice(0,K).map(re=>"sourceLoc."+re).join(",");throw Error(`Slicing for rank ${K} is not yet supported`)}(this.rank);let W;W=`
        ${E} sourceLoc;
        ${E} coords = getOutputCoords();
        ${v.map((K,re)=>`sourceLoc.${Vr[re]} = start[${re}] + coords.${Vr[re]};`).join(`
`)}
      `,this.userCode=`
      ${R}
      void main() {
        ${W}
        setOutput(getSource(${V}));
      }
    `}getCustomSetupFunc(v){if(v.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${v.length})`);return(E,R)=>{this.startLoc==null&&(this.startLoc=E.getUniformLocationNoThrow(R,"start"),this.startLoc==null)||E.gl.uniform1iv(this.startLoc,v)}}}const Vr=["x","y","z","w","u","v"];class vs{constructor(v){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=v,this.rank=v.length;const E=Gt(this.rank),R=sn("coords",this.rank),V=sn("sourceLoc",this.rank),W=this.rank===1?"sourceLoc":`vec2(${V.slice(-2).join()})`,K=`getChannel(getSource(${V.join()}), ${W})`,re=`
      result.x = ${K};
      if (++${R[this.rank-1]} < ${v[this.rank-1]}) {
        ++${V[this.rank-1]};
        result.y = ${K};
        --${V[this.rank-1]};
      }
    `,ie=this.rank===1?"":`
      --${R[this.rank-1]};
      if (++${R[this.rank-2]} < ${v[this.rank-2]}) {
        ++${V[this.rank-2]};
        result.z = ${K};
        if (++${R[this.rank-1]} < ${v[this.rank-1]}) {
          ++${V[this.rank-1]};
          result.w = ${K};
        }
      }
    `,fe=this.rank<=4?`sourceLoc = coords +
            ${E}(${v.map((Se,De)=>`start[${De}]`).join()});`:v.map((Se,De)=>`${V[De]} = ${R[De]} + start[${De}];`).join(`
`);this.userCode=`
      uniform int start[${this.rank}];
      void main() {
        ${E} coords = getOutputCoords();
        ${E} sourceLoc;
        ${fe}
        vec4 result = vec4(0.);
        ${re}
        ${ie}
        setOutput(result);
      }
    `}getCustomSetupFunc(v){if(v.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${v.length})`);return(E,R)=>{this.startLoc==null&&(this.startLoc=E.getUniformLocationNoThrow(R,"start"),this.startLoc==null)||E.gl.uniform1iv(this.startLoc,v)}}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vn{constructor(v,E,R){this.variableNames=["x"],this.outputShape=R;const V=R.length,W=Gt(R.length),K=Gt(R.length);let re="";if(V===1)re="coords * strides + begin";else{let ie=0;re=R.map((fe,Se)=>(ie++,R.length===1?`coords * strides[${Se}] + begin[${Se}]`:`coords[${ie-1}] * strides[${Se}] + begin[${Se}]`)).join(",")}this.userCode=`
      ${W} begin = ${W}(${v});
      ${W} strides = ${W}(${E});

      void main() {
        ${K} coords = getOutputCoords();
        setOutput(getX(${re}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xa{constructor(v){this.gpgpu=v,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(v,E,R){const V=Va(E,R),W=va(v,V,R);W in this.freeTextures||(this.freeTextures[W]=[]),W in this.usedTextures||(this.usedTextures[W]=[]);const K=Es(v,V,this.gpgpu.gl,this.gpgpu.textureConfig,R);if(this.freeTextures[W].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=K,this.log();const ie=this.freeTextures[W].shift();return this.usedTextures[W].push(ie),ie}let re;return V===d.PACKED_2X2_FLOAT32?re=this.gpgpu.createPackedMatrixTexture(v[0],v[1]):V===d.PACKED_2X2_FLOAT16?re=this.gpgpu.createFloat16PackedMatrixTexture(v[0],v[1]):V===d.UNPACKED_FLOAT32?re=this.gpgpu.createFloat32MatrixTexture(v[0],v[1]):V===d.UNPACKED_FLOAT16?re=this.gpgpu.createFloat16MatrixTexture(v[0],v[1]):V===d.PACKED_4X1_UNSIGNED_BYTE&&(re=this.gpgpu.createUnsignedBytesMatrixTexture(v[0],v[1])),this.usedTextures[W].push(re),this.numUsedTextures++,this._numBytesAllocated+=K,this.log(),re}releaseTexture(v,E,R,V){if(this.freeTextures==null)return;const W=Va(R,V),K=va(E,W,V);K in this.freeTextures||(this.freeTextures[K]=[]);const re=Es(E,W,this.gpgpu.gl,this.gpgpu.textureConfig,V),ie=Object(r.jb)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");ie!==-1&&this._numBytesAllocated>ie?(this.gpgpu.deleteMatrixTexture(v),this._numBytesAllocated-=re):(this.freeTextures[K].push(v),this.numFreeTextures++,this._numBytesFree+=re),this.numUsedTextures--;const fe=this.usedTextures[K],Se=fe.indexOf(v);if(Se<0)throw new Error("Cannot release a texture that was never provided by this texture manager");fe.splice(Se,1),this.log()}log(){if(!this.logEnabled)return;const v=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${v})`);const E=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*E)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const v in this.freeTextures)this.freeTextures[v].forEach(E=>{this.gpgpu.deleteMatrixTexture(E)});for(const v in this.usedTextures)this.usedTextures[v].forEach(E=>{this.gpgpu.deleteMatrixTexture(E)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Es(Z,v,E,R,V){const W=function(re,ie){switch(re){case d.PACKED_2X2_FLOAT32:return Wo(ie);case d.PACKED_2X2_FLOAT16:return Zn(ie);case d.UNPACKED_FLOAT32:return lr(ie);case d.UNPACKED_FLOAT16:return Dn(ie);case d.PACKED_4X1_UNSIGNED_BYTE:return rs(ie);default:throw new Error("Unknown physical texture type "+re)}}(v,R);let K;if(V){const[re,ie]=m(Z[0],Z[1]);K=re*ie}else{const[re,ie]=f(Z[0],Z[1]);K=re*ie}return K*function(re,ie){const fe=re;if(ie===fe.R32F)return 4;if(ie===fe.R16F)return 2;if(ie===fe.RGBA32F||ie===re.RGBA)return 16;if(ie===fe.RGBA16F)return 8;throw new Error("Unknown internal format "+ie)}(E,W)}function Va(Z,v){if(Z===l.UPLOAD)return d.PACKED_2X2_FLOAT32;if(Z===l.RENDER||Z==null)return function(E){return Object(r.jb)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?E?d.PACKED_2X2_FLOAT32:d.UNPACKED_FLOAT32:E?d.PACKED_2X2_FLOAT16:d.UNPACKED_FLOAT16}(v);if(Z===l.DOWNLOAD||Z===l.PIXELS)return d.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+Z)}function va(Z,v,E){return`${Z[0]}_${Z[1]}_${v}_${E}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qa{constructor(v,E){this.variableNames=["A"];const R=new Array(v.length);for(let K=0;K<R.length;K++)R[K]=v[K]*E[K];this.outputShape=R,this.rank=R.length;const V=Gt(this.rank),W=function(K){const re=K.length;if(re>5)throw Error(`Tile for rank ${re} is not yet supported`);if(re===1)return`imod(resRC, ${K[0]})`;const ie=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],fe=[];for(let Se=0;Se<K.length;Se++)fe.push(`imod(${ie[Se]}, ${K[Se]})`);return fe.join()}(v);this.userCode=`
      void main() {
        ${V} resRC = getOutputCoords();
        setOutput(getA(${W}));
      }
    `}}class _n{constructor(v,E){this.variableNames=["A"],this.outputShape=v,this.userCode=`
      float unaryOperation(float x) {
        ${E}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const ja="return abs(x);",yo=`if (isnan(x)) return x;
  return (x < 0.0) ? 0.0 : x;
`,ws=`if (isnan(x)) return x;
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Yo="return (x >= 0.0) ? x : (exp(x) - 1.0);",Ys=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${r.X.SELU_SCALEALPHA};
  float scale = ${r.X.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,ji="return -x;",Qo="return ceil(x);",wa="return floor(x);",hi="return exp(x);",to="return exp(x) - 1.0;",di=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${r.X.ERF_P};
  float a1 = ${r.X.ERF_A1};
  float a2 = ${r.X.ERF_A2};
  float a3 = ${r.X.ERF_A3};
  float a4 = ${r.X.ERF_A4};
  float a5 = ${r.X.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Jo="return x;",Eo=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,pi=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Er=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`;class no{constructor(v,E){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=v,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${E}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ua{constructor(v){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=v;const E=v.length,R=sn("rc",E),V=Gt(E),W=function(ie,fe){if(ie===1)return"rc";let Se="";for(let De=0;De<ie;De++)Se+=fe[De],De<ie-1&&(Se+=",");return Se}(E,R),K=R.slice(-2),re=E<=1?"rc":`vec2(${K.join(",")})`;this.userCode=`
      void main() {
        ${V} rc = getOutputCoords();
        vec4 packedInput = getA(${W});

        setOutput(getChannel(packedInput, ${re}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{segment_util:Ui}=r.X,Nc=r.lb.split,Ga=r.lb.tile,Wa=r.lb.topkImpl,Ha=r.lb.whereImpl,No={};function fi(Z,v=!1){if(Z==="linear")return"return x;";if(Z==="relu")return v?Eo:yo;if(Z==="elu")return v?Er:Yo;if(Z==="relu6")return v?pi:ws;if(Z==="prelu")return v?tr:Ks;throw new Error(`Activation ${Z} has not been implemented for the WebGL backend.`)}class Ac extends r.w{constructor(v){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Object(r.jb)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(v==null){const R=c(Object(r.jb)().getNumber("WEBGL_VERSION"));this.binaryCache=((E=Object(r.jb)().getNumber("WEBGL_VERSION"))in No||(No[E]={}),No[E]),this.gpgpu=new ma(R),this.canvas=R.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=v,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=v.gl.canvas;var E;this.textureManager=new xa(this.gpgpu),this.numMBBeforeWarning=Object(r.jb)().global.screen==null?1024:Object(r.jb)().global.screen.height*Object(r.jb)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new r.k(this,Object(r.ib)())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(v,E,R){if((Object(r.jb)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(r.jb)().getBool("DEBUG"))&&this.checkNumericalProblems(v),R==="complex64"&&v!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const V={};return this.texData.set(V,{shape:E,dtype:R,values:v,usage:l.UPLOAD,refCount:1,complexParentRefCount:0}),V}incRef(v){this.texData.get(v).refCount++}decRef(v){this.texData.has(v)&&this.texData.get(v).refCount--}move(v,E,R,V){if(Object(r.jb)().getBool("DEBUG")&&this.checkNumericalProblems(E),V==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(v,{shape:R,dtype:V,values:E,usage:l.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(v){const E=v.dataId;if(this.texData.has(E)){const R=this.texData.get(E);R.refCount--,R.refCount<1&&this.disposeData(E)}}readSync(v){const E=this.texData.get(v),{values:R,dtype:V,complexTensorInfos:W,slice:K,shape:re,isPacked:ie}=E;if(K!=null){let ke;ke=ie?new no(re,Jo):new _n(re,Jo);const Be=this.runWebGLProgram(ke,[{dataId:v,shape:re,dtype:V}],V),Ve=this.readSync(Be.dataId);return this.disposeIntermediateTensorInfo(Be),Ve}if(R!=null)return this.convertAndCacheOnCPU(v);if(V==="string")return R;const fe=this.activeTimers!=null;let Se,De;if(fe&&(Se=r.Lb.now()),V==="complex64"){const ke=this.readSync(W.real.dataId),Be=this.readSync(W.imag.dataId);De=r.X.mergeRealAndImagArrays(ke,Be)}else De=this.getValuesFromTexture(v);return fe&&(this.downloadWaitMs+=r.Lb.now()-Se),this.convertAndCacheOnCPU(v,De)}async read(v){if(this.pendingRead.has(v)){const Ve=this.pendingRead.get(v);return new Promise(Me=>Ve.push(Me))}const E=this.texData.get(v),{values:R,shape:V,slice:W,dtype:K,complexTensorInfos:re,isPacked:ie}=E;if(W!=null){let Ve;Ve=ie?new no(V,Jo):new _n(V,Jo);const Me=this.runWebGLProgram(Ve,[{dataId:v,shape:V,dtype:K}],K),Ue=this.read(Me.dataId);return this.disposeIntermediateTensorInfo(Me),Ue}if(R!=null)return this.convertAndCacheOnCPU(v);if(!Object(r.jb)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Object(r.jb)().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let fe,Se,De=null;if(K!=="complex64"&&Object(r.jb)().get("WEBGL_BUFFER_SUPPORTED")){fe=this.decode(v);const Ve=this.texData.get(fe.dataId);De=this.gpgpu.createBufferFromTexture(Ve.texture,...y(V))}if(this.pendingRead.set(v,[]),K!=="complex64"&&await this.gpgpu.createAndWaitForFence(),K==="complex64"){const Ve=await Promise.all([this.read(re.real.dataId),this.read(re.imag.dataId)]),Me=Ve[0],Ue=Ve[1];Se=r.X.mergeRealAndImagArrays(Me,Ue)}else if(De==null)Se=this.getValuesFromTexture(v);else{const Ve=r.Lb.sizeFromShape(V);Se=this.gpgpu.downloadFloat32MatrixFromBuffer(De,Ve)}fe!=null&&this.disposeIntermediateTensorInfo(fe);const ke=this.convertAndCacheOnCPU(v,Se),Be=this.pendingRead.get(v);return this.pendingRead.delete(v),Be.forEach(Ve=>Ve(ke)),this.pendingDisposal.has(v)&&(this.pendingDisposal.delete(v),this.disposeData(v),this.pendingDeletes--),ke}checkNumericalProblems(v){if(v!=null)for(let E=0;E<v.length;E++){const R=v[E];if(!x(R))throw Object(r.jb)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${R} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${R} cannot be represented on this device.`)}}getValuesFromTexture(v){const{shape:E,dtype:R,isPacked:V}=this.texData.get(v),W=r.Lb.sizeFromShape(E);if(Object(r.jb)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const ke=this.decode(v),Be=this.texData.get(ke.dataId),Ve=this.gpgpu.downloadMatrixFromPackedTexture(Be.texture,...y(E)).subarray(0,W);return this.disposeIntermediateTensorInfo(ke),Ve}const K=Object(r.jb)().getBool("WEBGL_PACK")&&V===!0,re=K?oe(E):E,ie=K?new zi(re):new xs(re),fe=this.runWebGLProgram(ie,[{shape:re,dtype:R,dataId:v}],"float32"),Se=this.texData.get(fe.dataId),De=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(Se.texture,Se.texShape[0],Se.texShape[1]).subarray(0,W);return this.disposeIntermediateTensorInfo(fe),De}async time(v){const E=this.activeTimers,R=[];let V=!1;this.programTimersStack==null?(this.programTimersStack=R,V=!0):this.activeTimers.push(R),this.activeTimers=R,v();const W=r.Lb.flatten(this.activeTimers.map(ie=>ie.query)).filter(ie=>ie!=null),K=r.Lb.flatten(this.activeTimers.map(ie=>ie.name)).filter(ie=>ie!=null);this.activeTimers=E,V&&(this.programTimersStack=null);const re={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(r.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const ie=await Promise.all(W);re.kernelMs=r.Lb.sum(ie),re.getExtraProfileInfo=()=>ie.map((fe,Se)=>({name:K[Se],ms:fe})).map(fe=>`${fe.name}: ${fe.ms}`).join(", ")}else re.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,re}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(r.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.Lb.now(),endMs:null}}endTimer(v){return Object(r.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),v):(v.endMs=r.Lb.now(),v)}async getQueryTime(v){if(Object(r.jb)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(v);const E=v;return E.endMs-E.startMs}disposeData(v){if(this.pendingDisposal.has(v))return;if(this.pendingRead.has(v))return this.pendingDisposal.add(v),void this.pendingDeletes++;if(!this.texData.has(v))return;if(this.texData.get(v).complexParentRefCount>0)return void this.texData.get(v).refCount--;this.releaseGPUData(v);const{complexTensorInfos:E}=this.texData.get(v);E!=null&&(this.texData.get(E.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(E.real),this.texData.get(E.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(E.imag)),this.texData.delete(v)}releaseGPUData(v){const{texture:E,dtype:R,texShape:V,usage:W,isPacked:K,slice:re}=this.texData.get(v),ie=re&&re.origDataId||v,fe=this.dataRefCount.get(ie);fe>1?this.dataRefCount.set(ie,fe-1):(this.dataRefCount.delete(ie),E!=null&&(this.numBytesInGPU-=this.computeBytes(V,R),this.textureManager.releaseTexture(E,V,W,K)));const Se=this.texData.get(v);Se.texture=null,Se.texShape=null,Se.isPacked=!1,Se.slice=null}getTexture(v){return this.uploadToGPU(v),this.texData.get(v).texture}getDataInfo(v){return this.texData.get(v)}getCPUBackend(){return Object(r.jb)().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=Object(r.ib)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(v,E=128){const R=this.getCPUBackend();return this.warnedAboutCPUBackend||R!=null||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),R!=null&&v.every(V=>this.texData.get(V.dataId).texture==null&&r.Lb.sizeFromShape(V.shape)<E)}getGPGPUContext(){return this.gpgpu}slice(v,E,R){if(this.shouldExecuteOnCPU([v])){const K=Ws(this.texData.get(v.dataId).values,E,R,v.shape,v.dtype);return this.makeOutput(R,v.dtype,K)}if(r.Lb.sizeFromShape(R)===0)return Object(r.Gb)([],R,v.dtype);const{isPacked:V}=this.texData.get(v.dataId),W=r.Ab.isSliceContinous(v.shape,E,R);if(V||!W){const K=Object(r.jb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vs(R):new ba(R),re=K.getCustomSetupFunc(E);return this.compileAndRun(K,[v],null,re)}return this.uploadToGPU(v.dataId),this.shallowSlice(v,E,R)}shallowSlice(v,E,R){const V=this.texData.get(v.dataId),W=this.makeOutput(R,v.dtype),K=this.texData.get(W.dataId);Object.assign(K,V),K.shape=R,K.dtype=v.dtype;let re=r.Ab.computeFlatOffset(E,v.strides);V.slice&&(re+=V.slice.flatOffset),K.slice={flatOffset:re,origDataId:V.slice&&V.slice.origDataId||v.dataId};const ie=this.dataRefCount.get(K.slice.origDataId)||1;return this.dataRefCount.set(K.slice.origDataId,ie+1),W}stridedSlice(v,E,R,V){const W=this.tryRunOnCpuOrThrow([v],()=>this.cpuBackend.stridedSlice(v,E,R,V));if(W)return W;const K=r.Ab.computeOutShape(E,R,V);if(K.some(ie=>ie===0))return Object(r.Gb)([],K);const re=new vn(E,V,K);return this.compileAndRun(re,[v])}reverse(v,E){const R=Object(r.jb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Br(v.shape,E):new Xo(v.shape,E);return this.compileAndRun(R,[v])}neg(v){const E=this.tryRunOnCpuOrThrow([v],()=>this.cpuBackend.neg(v));if(E)return E;if(Object(r.jb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(v,ji,v.dtype);const R=new _n(v.shape,ji);return this.compileAndRun(R,[v])}batchMatMul(v,E,R,V){const W=R?v.shape[2]:v.shape[1],K=V?E.shape[1]:E.shape[2],re=R?v.shape[1]:v.shape[2],ie=Math.max(v.shape[0],E.shape[0]);if((W===1||K===1)&&re>1e3){R&&(v=Object(r.Jb)(v,[0,2,1])),V&&(E=Object(r.Jb)(E,[0,2,1]));const De=K===1?v:v.as3D(ie,re,1),ke=K===1?2:1,Be=K===1?E.as3D(ie,1,re):E;return r.pb(De,Be).sum(ke,!0)}const fe=Object(r.Kb)(v.dtype,E.dtype),Se=new vr(v.shape,E.shape,[ie,W,K],R,V);return this.compileAndRun(Se,[v,E],fe)}fusedBatchMatMul({a:v,b:E,transposeA:R,transposeB:V,bias:W,activation:K,preluActivationWeights:re}){const ie=R?v.shape[2]:v.shape[1],fe=V?E.shape[1]:E.shape[2],Se=Math.max(v.shape[0],E.shape[0]),De=Object(r.Kb)(v.dtype,E.dtype),ke=W!=null,Be=re!=null,Ve=K?fi(K,!0):null,Me=new vr(v.shape,E.shape,[Se,ie,fe],R,V,ke,Ve,Be),Ue=[v,E];return W&&Ue.push(W),re&&Ue.push(re),this.compileAndRun(Me,Ue,De)}localResponseNormalization4D(v,E,R,V,W){const K=Object(r.jb)().getBool("WEBGL_PACK_NORMALIZATION")?new Ma(v.shape,E,R,V,W):new ga(v.shape,E,R,V,W);return this.compileAndRun(K,[v])}LRNGrad(v,E,R,V,W,K,re){const ie=new Vi(E.shape,V,W,K,re);return this.compileAndRun(ie,[E,R,v])}tile(v,E){if(v.dtype==="string"){const V=this.readSync(v.dataId).map(K=>r.Lb.decodeString(K)),W=Object(r.Z)(v.shape,v.dtype,V);return Ga(W,E)}const R=new qa(v.shape,E);return this.compileAndRun(R,[v])}pad(v,E,R){const V=Object(r.jb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new La(v.shape,E,R):new kr(v.shape,E,R);return this.compileAndRun(V,[v])}gather(v,E,R){const V=this.tryRunOnCpuOrThrow([v,E],()=>this.cpuBackend.gather(v,E,R));if(V)return V;const W=new Kt(v.shape,E.size,R);return this.compileAndRun(W,[v,E])}batchToSpaceND(v,E,R){r.Lb.assert(v.rank<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const V=E.reduce((Se,De)=>Se*De),W=r.X.getReshaped(v.shape,E,V),K=r.X.getPermuted(W.length,E.length),re=r.X.getReshapedPermuted(v.shape,E,V),ie=r.X.getSliceBeginCoords(R,E.length),fe=r.X.getSliceSize(re,R,E.length);return Object(r.Jb)(v.reshape(W),K).reshape(re).slice(ie,fe)}spaceToBatchND(v,E,R){r.Lb.assert(v.rank<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const V=E.reduce((De,ke)=>De*ke),W=[[0,0]];W.push(...R);for(let De=1+E.length;De<v.shape.length;++De)W.push([0,0]);const K=v.pad(W),re=r.X.getReshaped(K.shape,E,V,!1),ie=r.X.getPermuted(re.length,E.length,!1),fe=r.X.getReshapedPermuted(K.shape,E,V,!1),Se=Object(r.Jb)(K.reshape(re),ie);return Object(r.xb)(Se,fe)}reduce(v,E,R){const V=v.shape[0],W=v.shape[1],K=r.X.computeOptimalWindowSize(W),re=Math.ceil(W/K),ie=new za({windowSize:K,inSize:W,batchSize:V,outSize:re},E),fe=this.compileAndRun(ie,[v],R);return fe.shape[1]===1?fe:this.reduce(fe,E,R)}argReduce(v,E,R=null){let V=v.shape[0],W=v.shape[1];R!=null&&(V=R.shape[0],W=R.shape[1]);const K=r.X.computeOptimalWindowSize(W),re={windowSize:K,inSize:W,batchSize:V,outSize:Math.ceil(W/K)},ie=new Ge(re,E,R==null),fe=[v];R!=null&&fe.push(R);const Se=this.compileAndRun(ie,fe,"int32");return Se.shape[1]===1?Se:this.argReduce(v,E,Se)}argReducePacked(v,E,R=null){const V=R!=null?R.shape:v.shape,W=V[V.length-1],K=r.X.computeOptimalWindowSize(W),re=new Hs(V,K,E,R==null),ie=R==null?[v]:[v,R],fe=this.compileAndRun(re,ie,"int32");return fe.rank===v.rank?this.argReducePacked(v,E,fe):fe}sum(v,E){r.X.assertAxesAreInnerMostDims("sum",E,v.rank);const[R,V]=r.X.computeOutAndReduceShapes(v.shape,E),W=r.Lb.sizeFromShape(V),K=v.as2D(-1,W),re=r.Fb(v.dtype);return this.reduce(K,"sum",re).reshape(R)}prod(v,E){const R=this.tryRunOnCpuOrThrow([v],()=>this.cpuBackend.prod(v,E));if(R)return R;const[V,W]=r.X.computeOutAndReduceShapes(v.shape,E),K=r.Lb.sizeFromShape(W),re=v.as2D(-1,K),ie=r.Fb(v.dtype);return this.reduce(re,"prod",ie).reshape(V)}unsortedSegmentSum(v,E,R){let V=0;const W=r.X.getAxesPermutation([V],v.rank);let K=v;W!=null&&(K=Object(r.Jb)(v,W),V=r.X.getInnerMostAxes(1,v.rank)[0]);const re=Ui.computeOutShape(K.shape,V,R),ie=r.Lb.sizeFromShape([K.shape[V]]),fe=K.as2D(-1,ie),Se=r.Fb(v.dtype);let De=this.segOpCompute(fe,"unsortedSegmentSum",E,Se,R).reshape(re);return W!=null&&(De=Object(r.Jb)(De,r.X.getUndoAxesPermutation(W))),De}segOpCompute(v,E,R,V,W){const K=v.shape[0],re=v.shape[1],ie=Ui.segOpComputeOptimalWindowSize(re,W),fe=new ya({windowSize:ie,inSize:re,batchSize:K,numSegments:W},E),Se=this.compileAndRun(fe,[v,R],V);return Se.shape[1]===W?Se:(R=Object(r.ub)(0,W).tile([re/ie]),this.segOpCompute(Se,E,R,V,W))}argMinMaxReduce(v,E,R){const V=[E];if(r.X.assertAxesAreInnerMostDims("arg"+R.charAt(0).toUpperCase()+R.slice(1),V,v.rank),!Object(r.jb)().getBool("WEBGL_PACK_REDUCE")||v.rank<=2){const[W,K]=r.X.computeOutAndReduceShapes(v.shape,V),re=r.Lb.sizeFromShape(K),ie=v.as2D(-1,re);return this.argReduce(ie,R).reshape(W)}return this.argReducePacked(v,R)}argMin(v,E){return this.argMinMaxReduce(v,E,"min")}argMax(v,E){return this.argMinMaxReduce(v,E,"max")}cumsum(v,E,R,V){if(E!==v.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${v.rank-1} but got axis=`+E);const W=v.shape[E];let K=v;for(let re=0;re<=Math.ceil(Math.log2(W))-1;re++){const ie=new Li(v.shape,!1,V),fe=ie.getCustomSetupFunc(re),Se=K;K=this.compileAndRun(ie,[K],K.dtype,fe),Se.dispose()}if(R){const re=new Li(v.shape,R,V),ie=K;K=this.compileAndRun(re,[K]),ie.dispose()}return K}equal(v,E){if(Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(v,E,`
  return vec4(equal(a, b));
`,"bool");const R=new _s("return float(a == b);",v.shape,E.shape);return this.compileAndRun(R,[v,E],"bool")}less(v,E){const R=this.tryRunOnCpuOrThrow([v,E],()=>this.cpuBackend.less(v,E));if(R)return R;if(Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(v,E,`
  return vec4(lessThan(a, b));
`,"bool");const V=new _s("return float(a < b);",v.shape,E.shape);return this.compileAndRun(V,[v,E],"bool")}lessEqual(v,E){if(Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(v,E,`
  return vec4(lessThanEqual(a, b));
`,"bool");const R=new _s("return float(a <= b);",v.shape,E.shape);return this.compileAndRun(R,[v,E],"bool")}greater(v,E){const R=this.tryRunOnCpuOrThrow([v,E],()=>this.cpuBackend.greater(v,E));if(R)return R;if(Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(v,E,`
  return vec4(greaterThan(a, b));
`,"bool");const V=new _s("return float(a > b);",v.shape,E.shape);return this.compileAndRun(V,[v,E],"bool")}greaterEqual(v,E){if(Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(v,E,`
  return vec4(greaterThanEqual(a, b));
`,"bool");const R=new _s("return float(a >= b);",v.shape,E.shape);return this.compileAndRun(R,[v,E],"bool")}logicalNot(v){const E=new _n(v.shape,"return float(!(x >= 1.0));");return this.compileAndRun(E,[v])}logicalAnd(v,E){if(Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(v,E,`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,"bool");const R=new _s("return float(a >= 1.0 && b >= 1.0);",v.shape,E.shape);return this.compileAndRun(R,[v,E],"bool")}logicalOr(v,E){if(Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(v,E,`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,"bool");const R=new _s("return float(a >= 1.0 || b >= 1.0);",v.shape,E.shape);return this.compileAndRun(R,[v,E],"bool")}select(v,E,R){const V=new Ms(v.rank,E.shape,E.rank);return this.compileAndRun(V,[v,E,R],Object(r.Kb)(E.dtype,R.dtype))}where(v){r.X.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const E=v.dataSync();return Ha(v.shape,E)}topk(v,E,R){const V=v.dataSync();return Wa(V,v.shape,v.dtype,E,R)}min(v,E){r.X.assertAxesAreInnerMostDims("min",E,v.rank);const[R,V]=r.X.computeOutAndReduceShapes(v.shape,E),W=r.Lb.sizeFromShape(V),K=v.as2D(-1,W);return this.reduce(K,"min",K.dtype).reshape(R)}minimum(v,E){const R=this.tryRunOnCpuOrThrow([v,E],()=>this.cpuBackend.minimum(v,E));if(R)return R;const V=Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Xs(`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,v.shape,E.shape):new _s(`
  if (isnan(a)) return a;
  if (isnan(b)) return b;

  return min(a, b);
`,v.shape,E.shape);return this.compileAndRun(V,[v,E])}mod(v,E){const R=Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Xs(`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,v.shape,E.shape):new _s(`if (b == 0.0) return NAN;
  return mod(a, b);`,v.shape,E.shape);return this.compileAndRun(R,[v,E])}maximum(v,E){const R=this.tryRunOnCpuOrThrow([v,E],()=>this.cpuBackend.maximum(v,E));if(R)return R;const V=Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Xs(`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,v.shape,E.shape):new _s(`
  if (isnan(a)) return a;
  if (isnan(b)) return b;

  return max(a, b);
`,v.shape,E.shape);return this.compileAndRun(V,[v,E])}all(v,E){r.X.assertAxesAreInnerMostDims("all",E,v.rank);const[R,V]=r.X.computeOutAndReduceShapes(v.shape,E),W=r.Lb.sizeFromShape(V),K=v.as2D(-1,W);return this.reduce(K,"all",K.dtype).reshape(R)}any(v,E){r.X.assertAxesAreInnerMostDims("any",E,v.rank);const[R,V]=r.X.computeOutAndReduceShapes(v.shape,E),W=r.Lb.sizeFromShape(V),K=v.as2D(-1,W);return this.reduce(K,"any",K.dtype).reshape(R)}floorDiv(v,E){if(Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(v,E,`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,"int32");const R=new _s(`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,v.shape,E.shape);return this.compileAndRun(R,[v,E],"int32")}packedUnaryOp(v,E,R){const V=new no(v.shape,E);return this.compileAndRun(V,[v],R)}packedBinaryOp(v,E,R,V,W=!1){const K=new Xs(R,v.shape,E.shape,W);return this.compileAndRun(K,[v,E],V)}makeComplexComponentTensorInfo(v,E){return{dataId:E.dataId,dtype:E.dtype,shape:v.shape}}addN(v){if(v.length===1)return v[0];if(v.length>Object(r.jb)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const W=Math.floor(v.length/2),K=this.addN(v.slice(0,W)),re=this.addN(v.slice(W));return this.addN([K,re])}const E=v.map(W=>W.dtype).reduce((W,K)=>Object(r.Kb)(W,K)),R=v.map(W=>W.shape),V=Object(r.jb)().getBool("WEBGL_PACK")?new Ct(v[0].shape,R):new Ze(v[0].shape,R);return this.compileAndRun(V,v,E)}pow(v,E){const R=Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Xs(`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,v.shape,E.shape):new _s(`
if(a < 0.0 && floor(b) < b){
  return NAN;
}
if (b == 0.0) {
  return 1.0;
}
return (round(mod(b, 2.0)) != 1) ?
    pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,v.shape,E.shape),V=Object(r.Kb)(v.dtype,E.dtype);return this.compileAndRun(R,[v,E],V)}ceil(v){if(this.shouldExecuteOnCPU([v])){const R=Rn(this.texData.get(v.dataId).values,v.dtype);return this.makeOutput(v.shape,v.dtype,R)}if(Object(r.jb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(v,Qo,v.dtype);const E=new _n(v.shape,Qo);return this.compileAndRun(E,[v])}floor(v){if(this.shouldExecuteOnCPU([v])){const R=yr(this.texData.get(v.dataId).values,v.dtype);return this.makeOutput(v.shape,v.dtype,R)}if(Object(r.jb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(v,wa,v.dtype);const E=new _n(v.shape,wa);return this.compileAndRun(E,[v])}sign(v){const E=new _n(v.shape,`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`);return this.compileAndRun(E,[v])}isNaN(v){const E=new _n(v.shape,"return float(isnan(x));");return this.compileAndRun(E,[v],"bool")}isInf(v){const E=new _n(v.shape,"return float(isinf(x));");return this.compileAndRun(E,[v],"bool")}isFinite(v){const E=new _n(v.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(E,[v],"bool")}round(v){const E=new _n(v.shape,`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`);return this.compileAndRun(E,[v])}exp(v){if(this.shouldExecuteOnCPU([v])){const R=gr(this.texData.get(v.dataId).values,v.dtype);return this.makeOutput(v.shape,v.dtype,R)}if(Object(r.jb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(v,hi,v.dtype);const E=new _n(v.shape,hi);return this.compileAndRun(E,[v])}expm1(v){if(this.shouldExecuteOnCPU([v])){const R=qs(this.texData.get(v.dataId).values,v.dtype);return this.makeOutput(v.shape,v.dtype,R)}if(Object(r.jb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(v,to,v.dtype);const E=new _n(v.shape,to);return this.compileAndRun(E,[v])}softmax(v,E){const R=r.Lb.parseAxisParam([E],v.shape),V=Object(r.nb)(v,R),W=r.X.expandShapeToKeepDim(V.shape,R),K=r.Eb(v,V.reshape(W)),re=this.exp(K),ie=this.sum(re,R).reshape(W);return Object(r.hb)(re,ie)}log(v){if(this.shouldExecuteOnCPU([v])){const R=Mr(this.texData.get(v.dataId).values,v.dtype);return this.makeOutput(v.shape,v.dtype,R)}if(Object(r.jb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(v,`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,v.dtype);const E=new _n(v.shape,`if (x < 0.0) return NAN;
  return log(x);`);return this.compileAndRun(E,[v])}log1p(v){const E=new _n(v.shape,"return log(1.0 + x);");return this.compileAndRun(E,[v])}sqrt(v){const E=new _n(v.shape,"return sqrt(x);");return this.compileAndRun(E,[v])}rsqrt(v){if(this.shouldExecuteOnCPU([v])){const R=_r(this.texData.get(v.dataId).values,v.dtype);return this.makeOutput(v.shape,v.dtype,R)}const E=new _n(v.shape,"return inversesqrt(x);");return this.compileAndRun(E,[v])}reciprocal(v){const E=new _n(v.shape,"return 1.0 / x;");return this.compileAndRun(E,[v])}relu(v){let E;return E=Object(r.jb)().getBool("WEBGL_PACK")?new no(v.shape,Eo):new _n(v.shape,yo),this.compileAndRun(E,[v])}relu6(v){let E;return E=Object(r.jb)().getBool("WEBGL_PACK")?new no(v.shape,pi):new _n(v.shape,ws),this.compileAndRun(E,[v])}prelu(v,E){const R=Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Xs(tr,v.shape,E.shape):new _s(Ks,v.shape,E.shape);return this.compileAndRun(R,[v,E])}elu(v){if(Object(r.jb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(v,Er,v.dtype);const E=new _n(v.shape,Yo);return this.compileAndRun(E,[v])}eluDer(v,E){const R=Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Xs(`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,v.shape,E.shape):new _s("return (b >= 1.0) ? a : a * (b + 1.0);",v.shape,E.shape);return this.compileAndRun(R,[v,E])}selu(v){const E=new _n(v.shape,Ys);return this.compileAndRun(E,[v])}clip(v,E,R){let V;V=Object(r.jb)().getBool("WEBGL_PACK_CLIP")?new ss(v.shape):new ur(v.shape);const W=V.getCustomSetupFunc(E,R);return this.compileAndRun(V,[v],null,W)}abs(v){if(this.shouldExecuteOnCPU([v])&&v.dtype!=="complex64"){const R=Ps(this.texData.get(v.dataId).values);return this.makeOutput(v.shape,v.dtype,R)}if(Object(r.jb)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(v,ja,v.dtype);const E=new _n(v.shape,ja);return this.compileAndRun(E,[v])}complexAbs(v){const E=this.texData.get(v.dataId),R=new qo(v.shape),V=[this.makeComplexComponentTensorInfo(v,E.complexTensorInfos.real),this.makeComplexComponentTensorInfo(v,E.complexTensorInfos.imag)];return this.compileAndRun(R,V)}sigmoid(v){const E=new _n(v.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(E,[v])}softplus(v){const E=new _n(v.shape,`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`);return this.compileAndRun(E,[v])}asin(v){const E=new _n(v.shape,`if (isnan(x)) return x;
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`);return this.compileAndRun(E,[v])}acos(v){const E=new _n(v.shape,`if (isnan(x)) return x;
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`);return this.compileAndRun(E,[v])}atan(v){const E=new _n(v.shape,`if (isnan(x)) return x;
  return atan(x);
`);return this.compileAndRun(E,[v])}sinh(v){const E=new _n(v.shape,`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`);return this.compileAndRun(E,[v])}cosh(v){const E=new _n(v.shape,`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`);return this.compileAndRun(E,[v])}tanh(v){const E=new _n(v.shape,`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`);return this.compileAndRun(E,[v])}asinh(v){const E=new _n(v.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(E,[v])}acosh(v){const E=new _n(v.shape,`if (isnan(x)) return x;
  if (x < 1.0) return NAN;
  return log(x + sqrt(x * x - 1.0));`);return this.compileAndRun(E,[v])}atanh(v){const E=new _n(v.shape,`if (isnan(x)) return x;
  if ((x < -1.0) || (x > 1.0)) return NAN;
  return (log(1.0 + x) - log(1.0 - x)) / 2.0;`);return this.compileAndRun(E,[v])}erf(v){const E=new _n(v.shape,di);return this.compileAndRun(E,[v])}step(v,E){const R=new _n(v.shape,function(V=0){return`if (isnan(x)) return x;
    return x > 0.0 ? 1.0 : float(${V});
  `}(E));return this.compileAndRun(R,[v])}conv2dByMatMul(v,E,R,V,W,K){const re=v.shape,ie=this.texData.get(v.dataId),fe=R.inChannels,Se=re[0]*re[1]*re[2],De=R.outChannels,ke=R.dataFormat==="channelsLast",Be=(Se===1||De===1)&&fe>1e3,Ve=re[2]%2!=0&&!!ie.isPacked;if(Be||!Object(r.jb)().getBool("WEBGL_LAZILY_UNPACK")||!Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!Ve){const St=ke?re[0]*re[1]*re[2]:re[0]*re[2]*re[3],at=Object(r.xb)(v,[1,St,R.inChannels]),Wt=Object(r.xb)(E,[1,R.inChannels,R.outChannels]),Ft=this.fusedBatchMatMul({a:at,b:Wt,transposeA:!1,transposeB:!1,bias:V,activation:W,preluActivationWeights:K});return Object(r.xb)(Ft,R.outShape)}const Me=ke?re[0]*re[1]*(re[2]+1):re[0]*re[2]*(re[3]+1),Ue={dataId:v.dataId,shape:[1,Me,R.inChannels],dtype:v.dtype},mt=ie.shape;ie.shape=ie.shape.slice(),ie.shape[ie.shape.length-2]++,r.Lb.assert(ge(ie.shape,Ue.shape),()=>`packed reshape ${ie.shape} to ${Ue.shape} isn't free`);const kt=Object(r.xb)(E,[1,R.inChannels,R.outChannels]),Dt=this.fusedBatchMatMul({a:Ue,b:kt,transposeA:!1,transposeB:!1,bias:V,activation:W,preluActivationWeights:K}),it=this.texData.get(Dt.dataId);return r.Lb.assert(it.isPacked,()=>"batchMatMul result is expected to be packed"),ie.shape=mt,it.shape=R.outShape,Object(r.ib)().makeTensorFromDataId(Dt.dataId,R.outShape,Dt.dtype)}conv2dWithIm2Row(v,E,R,V,W,K){const{filterWidth:re,filterHeight:ie,inChannels:fe,outWidth:Se,outHeight:De,dataFormat:ke}=R,Be=ke==="channelsLast",Ve=re*ie*fe,Me=De*Se,Ue=[Ve,Me],mt=v.squeeze([0]),kt=E.reshape([1,Ve,-1]),Dt=new Ho(Ue,mt.shape,R),it=this.compileAndRun(Dt,[mt]).reshape([1,Ue[0],Ue[1]]),St=V!=null,at=K!=null,Wt=W?fi(W,!0):null,Ft=new vr(it.shape,kt.shape,[1,Me,R.outChannels],!0,!1,St,Wt,at),dn=[it,kt];V&&dn.push(V),at&&dn.push(K);const Vt=this.compileAndRun(Ft,dn);return Be?Vt.reshape([1,De,Se,R.outChannels]):Vt.reshape([1,R.outChannels,De,Se])}fusedConv2d({input:v,filter:E,convInfo:R,bias:V,activation:W,preluActivationWeights:K}){if(R.filterHeight===1&&R.filterWidth===1&&R.dilationHeight===1&&R.dilationWidth===1&&R.strideHeight===1&&R.strideWidth===1&&(R.padInfo.type==="SAME"||R.padInfo.type==="VALID"))return this.conv2dByMatMul(v,E,R,V,W,K);if(Object(r.jb)().getBool("WEBGL_CONV_IM2COL")&&v.shape[0]===1)return this.conv2dWithIm2Row(v,E,R,V,W,K);const re=V!=null,ie=K!=null,fe=W?fi(W,!1):null,Se=new Ot(R,re,fe,ie),De=[v,E];return V&&De.push(V),K&&De.push(K),this.compileAndRun(Se,De)}conv2d(v,E,R){if(R.filterHeight===1&&R.filterWidth===1&&R.dilationHeight===1&&R.dilationWidth===1&&R.strideHeight===1&&R.strideWidth===1&&(R.padInfo.type==="SAME"||R.padInfo.type==="VALID"))return this.conv2dByMatMul(v,E,R);if(Object(r.jb)().getBool("WEBGL_CONV_IM2COL")&&v.shape[0]===1)return this.conv2dWithIm2Row(v,E,R);const V=new Ot(R);return this.compileAndRun(V,[v,E])}conv2dDerInput(v,E,R){const V=new ii(R);return this.compileAndRun(V,[v,E])}conv2dDerFilter(v,E,R){const V=new po(R);return this.compileAndRun(V,[v,E])}fusedDepthwiseConv2D({input:v,filter:E,convInfo:R,bias:V,activation:W,preluActivationWeights:K}){const re=Object(r.jb)().getBool("WEBGL_PACK_DEPTHWISECONV")&&R.strideWidth<=2&&R.outChannels/R.inChannels==1,ie=W?fi(W,re):null,fe=[v,E],Se=V!=null,De=K!=null;let ke;return Se&&fe.push(V),De&&fe.push(K),re?(ke=new Fi(R,Se,ie,De),this.compileAndRun(ke,fe)):(ke=new Jr(R,Se,ie,De),this.compileAndRun(ke,fe))}depthwiseConv2D(v,E,R){let V;return Object(r.jb)().getBool("WEBGL_PACK_DEPTHWISECONV")&&R.strideWidth<=2&&R.outChannels/R.inChannels==1?(V=new Fi(R),this.compileAndRun(V,[v,E])):(V=new Jr(R),this.compileAndRun(V,[v,E]))}depthwiseConv2DDerInput(v,E,R){const V=new jo(R);return this.compileAndRun(V,[v,E])}depthwiseConv2DDerFilter(v,E,R){const V=new Qr(R);return this.compileAndRun(V,[v,E])}conv3d(v,E,R){const V=new Pi(R);return this.compileAndRun(V,[v,E])}conv3dDerInput(v,E,R){const V=new Jn(R);return this.compileAndRun(V,[v,E])}conv3dDerFilter(v,E,R){const V=new kn(R);return this.compileAndRun(V,[v,E])}unstack(v,E){const R=v.shape[E],V=new Array(v.rank-1);let W=0;for(let fe=0;fe<v.rank;fe++)fe!==E&&(V[W++]=v.shape[fe]);const K=new Array(v.rank).fill(0),re=v.shape.slice();re[E]=1;const ie=new Array(R);for(let fe=0;fe<ie.length;fe++)K[E]=fe,ie[fe]=this.slice(v,K,re).reshape(V);return ie}avgPool3d(v,E){const R=new li(E,"avg",!1);return this.compileAndRun(R,[v],"float32")}avgPool3dBackprop(v,E,R){const V=new Di(R);return this.compileAndRun(V,[v],E.dtype)}maxPool3d(v,E){const R=new li(E,"max",!1);return this.compileAndRun(R,[v],"float32")}maxPool3dBackprop(v,E,R,V){const W=new li(V,"max",!0),K=this.compileAndRun(W,[E]),re=new ci(V),ie=this.compileAndRun(re,[v,K],E.dtype);return K.dispose(),ie}resizeBilinear(v,E,R,V){const W=Object(r.jb)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ec(v.shape,E,R,V):new go(v.shape,E,R,V);return this.compileAndRun(W,[v],"float32")}resizeBilinearBackprop(v,E,R){const V=new Ba(v,E,R);return this.compileAndRun(V,[v])}resizeNearestNeighbor(v,E,R,V){const W=new Ko(v.shape,E,R,V);return this.compileAndRun(W,[v])}resizeNearestNeighborBackprop(v,E,R){const V=new hr(v,E,R);return this.compileAndRun(V,[v])}multinomial(v,E,R,V){const W=E?v:Object(r.Bb)(v),K=W.shape[0],re=W.shape[1],ie=new fo(K,re,R),fe=ie.getCustomSetupFunc(V);return this.compileAndRun(ie,[W],"int32",fe)}oneHot(v,E,R,V){const W=new zr(v.size,E,R,V);return this.compileAndRun(W,[v])}diag(v){const E=new xn(v.size);return this.compileAndRun(E,[v])}cropAndResize(v,E,R,V,W,K){const re=new Mi(v.shape,E.shape,V,W,K);return this.compileAndRun(re,[v,E,R],"float32")}depthToSpace(v,E,R){r.Lb.assert(E>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+E);const V=v.shape[0],W=R==="NHWC"?v.shape[1]:v.shape[2],K=R==="NHWC"?v.shape[2]:v.shape[3],re=R==="NHWC"?v.shape[3]:v.shape[1],ie=W*E,fe=K*E,Se=re/(E*E),De=new Uo(R==="NHWC"?[V,ie,fe,Se]:[V,Se,ie,fe],E,R);return this.compileAndRun(De,[v])}split(v,E,R){return Nc(v,E,R)}scatterND(v,E,R){const{sliceRank:V,numUpdates:W,sliceSize:K,strides:re,outputSize:ie}=r.X.calculateShapes(E,v,R),fe=[ie/K,K],Se=v.reshape([W,V]),De=E.reshape([W,K]);if(ie===0)return r.X.reshapeTensor(Object(r.Gb)([]),R);const ke=Object(r.yb)(0),Be=new ko(W,V,Se.rank,De.rank,re,fe);return this.compileAndRun(Be,[De,Se,ke]).reshape(R)}sparseToDense(v,E,R,V){const{sliceRank:W,numUpdates:K,strides:re,outputSize:ie}=r.X.calculateShapes(E,v,R),fe=new ko(K,W,v.rank,E.rank,re,[ie,1],!1);return this.compileAndRun(fe,[E,v,V]).reshape(R)}gatherND(v,E){const R=E.shape,V=R[R.length-1],[W,K,re,ie]=r.X.prepareAndValidate(v,E),fe=E.reshape([K,V]),Se=v.reshape([v.size/re,re]),De=new eo(V,ie,[K,re]);return this.compileAndRun(De,[Se,fe]).reshape(W)}fill(v,E,R){if((R=R||r.Lb.inferDtype(E))==="string"){const V=r.Lb.getArrayFromDType(R,r.Lb.sizeFromShape(v));return V.fill(E),Object(r.ib)().makeTensor(V,v,R,this)}{const V=new ls(v,E),W=V.getCustomSetupFunc(E);return this.compileAndRun(V,[],R,W)}}onesLike(v){if(v.dtype==="string")throw new Error("onesLike is not supported under string dtype");return this.fill(v.shape,1,v.dtype)}zerosLike(v){return this.fill(v.shape,v.dtype==="string"?"":0,v.dtype)}linspace(v,E,R){return r.X.linspaceImpl(v,E,R)}makeTensorInfo(v,E,R){const V=this.write(R,v,E);return this.texData.get(V).usage=null,{dataId:V,shape:v,dtype:E}}makeOutput(v,E,R){const{dataId:V}=this.makeTensorInfo(v,E,R);return Object(r.ib)().makeTensorFromDataId(V,v,E,this)}unpackTensor(v){const E=new Ua(v.shape);return this.runWebGLProgram(E,[v],v.dtype)}packTensor(v){const E=new kc(v.shape);return this.runWebGLProgram(E,[v],v.dtype,null,!0)}packedReshape(v,E){const R=[ne(v.shape),...J(v.shape)],V={dtype:v.dtype,shape:R,dataId:v.dataId},W=[ne(E),...J(E)],K=new mo(W,R),re=this.runWebGLProgram(K,[V],v.dtype,null,!0);return{dataId:re.dataId,shape:E,dtype:re.dtype}}decode(v){const E=this.texData.get(v),{isPacked:R,shape:V,dtype:W}=E,K=oe(V);let re;return re=R?new ms(K):new xr(K),{dtype:W,shape:V,dataId:this.runWebGLProgram(re,[{shape:K,dtype:W,dataId:v}],W,null,!0).dataId}}runWebGLProgram(v,E,R,V,W=!1){const K=this.makeTensorInfo(v.outputShape,R),re=this.texData.get(K.dataId);if(v.packedOutput&&(re.isPacked=!0),v.outPackingScheme===a.DENSE){const Me=y(v.outputShape);re.texShape=Me.map(Ue=>2*Ue)}if(v.outTexUsage!=null&&(re.usage=v.outTexUsage),r.Lb.sizeFromShape(K.shape)===0)return re.values=r.Lb.getTypedArrayFromDType(K.dtype,0),K;const ie=[],fe=E.map(Me=>{if(Me.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let Ue=this.texData.get(Me.dataId);if(Ue.texture==null){if(!v.packedInputs&&r.Lb.sizeFromShape(Me.shape)<=Object(r.jb)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:Me.shape,texData:null,isUniform:!0,uniformValues:Ue.values};v.packedInputs&&(Ue.isPacked=!0,Ue.shape=Me.shape)}else if(!!Ue.isPacked!=!!v.packedInputs)Me=Ue.isPacked?this.unpackTensor(Me):this.packTensor(Me),ie.push(Me),Ue=this.texData.get(Me.dataId);else if(Ue.isPacked&&!ge(Ue.shape,Me.shape)){const mt=Me,kt=Me.shape;Me.shape=Ue.shape,Me=this.packedReshape(Me,kt),ie.push(Me),Ue=this.texData.get(Me.dataId),mt.shape=kt}return this.uploadToGPU(Me.dataId),{shape:Me.shape,texData:Ue,isUniform:!1}});this.uploadToGPU(K.dataId);const Se={shape:K.shape,texData:re,isUniform:!1},De=function(Me,Ue,mt){let kt="";Ue.concat(mt).forEach(St=>{const at=St.texData!=null&&St.texData.slice!=null&&St.texData.slice.flatOffset>0,Wt=St.isUniform?"uniform":St.texData.texShape;kt+=`${St.shape}_${Wt}_${at}`});const Dt=Me.userCode;let it=Me.constructor.name;return it+="_"+kt+"_"+Dt,it}(v,fe,Se),ke=this.getAndSaveBinary(De,()=>function(Me,Ue,mt,kt){const Dt=Ue.userCode,it=mt.map((fn,bn)=>{const Xn={logicalShape:fn.shape,texShape:fn.isUniform?null:fn.texData.texShape,isUniform:fn.isUniform,isPacked:!fn.isUniform&&fn.texData.isPacked,flatOffset:null};return fn.texData!=null&&fn.texData.slice!=null&&fn.texData.slice.flatOffset>0&&(Xn.flatOffset=fn.texData.slice.flatOffset),{name:Ue.variableNames[bn],shapeInfo:Xn}}),St=it.map(fn=>fn.shapeInfo),at={logicalShape:kt.shape,texShape:kt.texData.texShape,isUniform:!1,isPacked:kt.texData.isPacked,flatOffset:null},Wt=Ie(it,at,Dt,Ue.packedInputs),Ft=Me.createProgram(Wt);let dn=null;const Vt=Me.getUniformLocation(Ft,"NAN",!1);Object(r.jb)().getNumber("WEBGL_VERSION")===1&&(dn=Me.getUniformLocation(Ft,"INFINITY",!1));const vt={};for(let fn=0;fn<Ue.variableNames.length;fn++){const bn=Ue.variableNames[fn],Xn=!1;vt[bn]=Me.getUniformLocation(Ft,bn,Xn),vt["offset"+bn]=Me.getUniformLocation(Ft,"offset"+bn,Xn)}return{program:Ue,source:Wt,webGLProgram:Ft,uniformLocations:vt,inShapeInfos:St,outShapeInfo:at,infLoc:dn,nanLoc:Vt}}(this.gpgpu,v,fe,Se)),Be=this.activeTimers!=null;let Ve;if(Be&&(Ve=this.startTimer()),function(Me,Ue,mt,kt,Dt){ai(Ue.inShapeInfos,mt),ai([Ue.outShapeInfo],[kt]);const it=kt.texData.texture,St=kt.texData.texShape;kt.texData.isPacked?Me.setOutputPackedMatrixTexture(it,St[0],St[1]):Me.setOutputMatrixTexture(it,St[0],St[1]),Me.setProgram(Ue.webGLProgram),Object(r.jb)().getNumber("WEBGL_VERSION")===1&&Ue.infLoc!==null&&Me.gl.uniform1f(Ue.infLoc,1/0),Ue.nanLoc!==null&&Me.gl.uniform1f(Ue.nanLoc,NaN),mt.forEach((at,Wt)=>{const Ft=Ue.program.variableNames[Wt],dn=Ue.uniformLocations[Ft],Vt=Ue.uniformLocations["offset"+Ft];if(dn!=null)if(at.isUniform)if(r.Lb.sizeFromShape(at.shape)<2)Me.gl.uniform1f(dn,at.uniformValues[0]);else{let vt=at.uniformValues;vt instanceof Float32Array||(vt=new Float32Array(vt)),Me.gl.uniform1fv(dn,vt)}else at.texData.slice!=null&&Vt!=null&&Me.gl.uniform1i(Vt,at.texData.slice.flatOffset),Me.setInputMatrixTexture(at.texData.texture,dn,Wt)}),Dt!=null&&Dt(Me,Ue.webGLProgram),Me.executeProgram()}(this.gpgpu,ke,fe,Se,V),ie.forEach(Me=>this.disposeIntermediateTensorInfo(Me)),Be&&(Ve=this.endTimer(Ve),this.activeTimers.push({name:v.constructor.name,query:this.getQueryTime(Ve)})),!Object(r.jb)().getBool("WEBGL_LAZILY_UNPACK")&&re.isPacked&&W===!1){const Me=this.unpackTensor(K);return this.disposeIntermediateTensorInfo(K),Me}return K}compileAndRun(v,E,R,V,W=!1){R=R||E[0].dtype;const K=this.runWebGLProgram(v,E,R,V,W);return Object(r.ib)().makeTensorFromDataId(K.dataId,K.shape,K.dtype)}getAndSaveBinary(v,E){return v in this.binaryCache||(this.binaryCache[v]=E()),this.binaryCache[v]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Object(r.jb)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(v=>{this.gpgpu.deleteProgram(this.binaryCache[v].webGLProgram),delete this.binaryCache[v]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Object(r.Hb)(()=>{if(!Object(r.jb)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const v=Object(r.jb)().getBool("DEBUG");Object(r.jb)().set("DEBUG",!1);const E=this.abs(Object(r.yb)(1e-8)).dataSync()[0];if(Object(r.jb)().set("DEBUG",v),E>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}uploadToGPU(v){const E=this.texData.get(v),{shape:R,dtype:V,values:W,texture:K,usage:re,isPacked:ie}=E;if(K!=null)return;const fe=this.activeTimers!=null;let Se;fe&&(Se=r.Lb.now());let De=E.texShape;if(De==null&&(De=function(ke,Be=!1){let Ve=Object(r.jb)().getNumber("WEBGL_MAX_TEXTURE_SIZE");Be&&(Ve*=2,(ke=ke.map((Ue,mt)=>mt>=ke.length-2?r.Lb.nearestLargerEven(ke[mt]):ke[mt])).length===1&&(ke=[2,ke[0]])),ke.length!==2&&(ke=r.Lb.squeezeShape(ke).newShape);let Me=r.Lb.sizeFromShape(ke);if(ke.length<=1&&Me<=Ve)return[1,Me];if(ke.length===2&&ke[0]<=Ve&&ke[1]<=Ve)return ke;if(ke.length===3&&ke[0]*ke[1]<=Ve&&ke[2]<=Ve)return[ke[0]*ke[1],ke[2]];if(ke.length===3&&ke[0]<=Ve&&ke[1]*ke[2]<=Ve)return[ke[0],ke[1]*ke[2]];if(ke.length===4&&ke[0]*ke[1]*ke[2]<=Ve&&ke[3]<=Ve)return[ke[0]*ke[1]*ke[2],ke[3]];if(ke.length===4&&ke[0]<=Ve&&ke[1]*ke[2]*ke[3]<=Ve)return[ke[0],ke[1]*ke[2]*ke[3]];if(Be){const Ue=ne(ke);let mt=2,kt=2;return ke.length&&([mt,kt]=J(ke)),Me=Ue*(mt/2)*(kt/2),r.Lb.sizeToSquarishShape(Me).map(Dt=>2*Dt)}return r.Lb.sizeToSquarishShape(Me)}(R,ie),E.texShape=De),W!=null){const ke=oe(R);let Be,Ve=De[1],Me=De[0];const Ue=W instanceof Uint8Array;ie?([Ve,Me]=m(De[0],De[1]),Be=new Zr(ke,[Me,Ve],Ue)):Be=new Vn(ke,[Me,Ve],Ue);const mt=this.makeTensorInfo([Me,Ve],V);this.texData.get(mt.dataId).usage=Ue?l.PIXELS:l.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(mt.dataId),Ve,Me,W);const kt=!0,Dt=this.runWebGLProgram(Be,[mt],V,null,kt),it=this.texData.get(Dt.dataId);E.texture=it.texture,E.texShape=it.texShape,E.isPacked=it.isPacked,E.usage=it.usage,this.disposeIntermediateTensorInfo(mt),this.texData.delete(Dt.dataId),E.values=null,fe&&(this.uploadWaitMs+=r.Lb.now()-Se)}else{const ke=this.acquireTexture(De,re,V,ie);E.texture=ke}}convertAndCacheOnCPU(v,E){const R=this.texData.get(v),{dtype:V}=R;return this.releaseGPUData(v),E!=null&&(R.values=function(W,K){if(K==="float32"||K==="complex64")return W;if(K==="int32"||K==="bool"){const re=K==="int32"?new Int32Array(W.length):new Uint8Array(W.length);for(let ie=0;ie<re.length;++ie)re[ie]=Math.round(W[ie]);return re}throw new Error("Unknown dtype "+K)}(E,V)),R.values}acquireTexture(v,E,R,V){if(this.numBytesInGPU+=this.computeBytes(v,R),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const W=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${W} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(v,E,V)}computeBytes(v,E){return v[0]*v[1]*r.Lb.bytesPerElement(E)}tryRunOnCpuOrThrow(v,E){if(this.shouldExecuteOnCPU(v))try{return E()}catch{if(Object(r.jb)().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */r.fb.isBrowser()&&Object(r.vb)("webgl",()=>new Ac,2);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function so(Z){const{inputs:v,backend:E}=Z,{x:R}=v;return E.incRef(R.dataId),{dataId:R.dataId,shape:R.shape,dtype:R.dtype}}const Oc={kernelName:r.u,backendName:"webgl",kernelFunc:so};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bo(Z){const{inputs:v,backend:E}=Z,{real:R,imag:V}=v,W=E.makeTensorInfo(R.shape,"complex64"),K=E.texData.get(W.dataId),re=so({inputs:{x:R},backend:E});E.texData.get(re.dataId).complexParentRefCount++;const ie=so({inputs:{x:V},backend:E});return E.texData.get(ie.dataId).complexParentRefCount++,K.complexTensorInfos={real:re,imag:ie},W}const Ka={kernelName:r.h,backendName:"webgl",kernelFunc:bo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zo(Z){return({inputs:v,backend:E})=>{const{x:R}=v,V=E,W=new _n(R.shape,Z);return V.runWebGLProgram(W,[R],R.dtype)}}function Ao({opSnippet:Z,packedOpSnippet:v,checkOutOfBounds:E=!1,supportsComplex:R=!1,cpuKernelImpl:V,dtype:W}){return({inputs:K,backend:re})=>{const{a:ie,b:fe}=K,Se=re;if(R&&ie.dtype==="complex64"){const Be=Se.texData.get(ie.dataId),Ve=Se.texData.get(fe.dataId),[Me,Ue]=[[Be.complexTensorInfos.real,Ve.complexTensorInfos.real],[Be.complexTensorInfos.imag,Ve.complexTensorInfos.imag]].map(kt=>{const[Dt,it]=kt,St={dataId:Dt.dataId,dtype:Dt.dtype,shape:ie.shape},at={dataId:it.dataId,dtype:it.dtype,shape:fe.shape},Wt=new _s(Z,ie.shape,fe.shape);return Se.runWebGLProgram(Wt,[St,at],Object(r.Kb)(Dt.dtype,it.dtype))}),mt=bo({inputs:{real:Me,imag:Ue},backend:Se});return Se.disposeIntermediateTensorInfo(Me),Se.disposeIntermediateTensorInfo(Ue),mt}const De=W||Object(r.Kb)(ie.dtype,fe.dtype);if(Se.shouldExecuteOnCPU([ie,fe])&&V!=null){const Be=Se.texData.get(ie.dataId),Ve=Se.texData.get(fe.dataId),[Me,Ue]=V(ie.shape,fe.shape,Be.values,Ve.values,De),mt=Se.makeTensorInfo(Ue,De);return Se.texData.get(mt.dataId).values=Me,mt}let ke;return ke=Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&v!=null?new Xs(v,ie.shape,fe.shape,E):new _s(Z,ie.shape,fe.shape),Se.runWebGLProgram(ke,[ie,fe],De)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xa="return a + b;",Rc=Ao({opSnippet:Xa,packedOpSnippet:Xa,supportsComplex:!0,cpuKernelImpl:Bn}),Dc={kernelName:r.b,backendName:"webgl",kernelFunc:Rc},Pc=Ao({opSnippet:`
  if (isnan(a)) return a;
  if (isnan(b)) return b;

  return atan(a, b);
`,packedOpSnippet:`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`}),Ya={kernelName:r.c,backendName:"webgl",kernelFunc:Pc},Qa={kernelName:r.d,backendName:"webgl",kernelFunc:function(Z){const{inputs:v,backend:E,attrs:R}=Z,{x:V}=v;Re(V,"avgPool");const{filterSize:W,strides:K,pad:re,dimRoundingMode:ie}=R;r.Lb.assert(r.X.eitherStridesOrDilationsAreOne(K,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${K} and dilations '1'`);const fe=r.X.computePool2DInfo(V.shape,W,K,1,re,ie);if(fe.filterWidth===1&&fe.filterHeight===1&&r.Lb.arraysEqual(fe.inShape,fe.outShape))return so({inputs:{x:V},backend:E});const Se=new ui(fe,"avg",!1);return E.runWebGLProgram(Se,[V],"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fc={kernelName:r.e,backendName:"webgl",kernelFunc:function(Z){const{inputs:v,backend:E,attrs:R}=Z,{dy:V,input:W}=v,K=W;Re([V,W],"avgPoolBackprop");const{filterSize:re,strides:ie,pad:fe}=R,Se=r.X.computePool2DInfo(K.shape,re,ie,1,fe),De=new Ri(Se);return E.runWebGLProgram(De,[V],K.dtype)}};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mc{constructor(v,E,R,V,W,K){this.outputShape=[],this.variableNames=["x","mean","variance"],r.X.assertAndGetBroadcastShape(v,E),r.X.assertAndGetBroadcastShape(v,R);let re="0.0";V!=null&&(r.X.assertAndGetBroadcastShape(v,V),this.variableNames.push("offset"),re="getOffsetAtOutCoords()");let ie="1.0";W!=null&&(r.X.assertAndGetBroadcastShape(v,W),this.variableNames.push("scale"),ie="getScaleAtOutCoords()"),this.outputShape=v,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${re};
        float scale = ${ie};
        float inv = scale * inversesqrt(variance + float(${K}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ja{constructor(v,E,R,V,W,K){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],r.X.assertAndGetBroadcastShape(v,E),r.X.assertAndGetBroadcastShape(v,R);let re="vec4(0.0)";V!=null&&(r.X.assertAndGetBroadcastShape(v,V),this.variableNames.push("offset"),re="getOffsetAtOutCoords()");let ie="vec4(1.0)";W!=null&&(r.X.assertAndGetBroadcastShape(v,W),this.variableNames.push("scale"),ie="getScaleAtOutCoords()"),this.outputShape=v,this.userCode=`
      void main() {
        vec4 offset = ${re};
        vec4 scale = ${ie};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${K}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Za={kernelName:r.s,backendName:"webgl",kernelFunc:({inputs:Z,backend:v,attrs:E})=>{const{x:R,mean:V,variance:W,offset:K,scale:re}=Z;r.Lb.assert(V.shape.length===W.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r.Lb.assert(K==null||V.shape.length===K.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r.Lb.assert(re==null||V.shape.length===re.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:ie}=E;ie==null&&(ie=.001);const fe=[R,V,W];let Se=null;K!=null&&(Se=K.shape,fe.push(K));let De=null;re!=null&&(De=re.shape,fe.push(re));const ke=Object(r.jb)().getBool("WEBGL_PACK_NORMALIZATION")?new Ja(R.shape,V.shape,W.shape,Se,De,ie):new Mc(R.shape,V.shape,W.shape,Se,De,ie);return v.runWebGLProgram(ke,fe,fe[0].dtype)}},ec=Ao({opSnippet:"return float(a != b);",dtype:"bool"}),Sa={kernelName:r.I,backendName:"webgl",kernelFunc:ec};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ta(Z){const{inputs:v,backend:E}=Z,{input:R}=v;return so({inputs:{x:E.texData.get(R.dataId).complexTensorInfos.real},backend:E})}const tc={kernelName:r.J,backendName:"webgl",kernelFunc:Ta};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lc={kernelName:r.f,backendName:"webgl",kernelFunc:function Z(v){const{inputs:E,backend:R,attrs:V}=v,{x:W}=E,{dtype:K}=V;if(K==="complex64"){if(W.dtype==="complex64")return so({inputs:{x:W},backend:R});const re=r.Nb(W.shape),ie=Z({inputs:{x:W},backend:R,attrs:{dtype:"float32"}}),fe=bo({inputs:{real:ie,imag:re},backend:R});return re.dispose(),R.disposeIntermediateTensorInfo(ie),fe}if(W.dtype==="complex64"){const re=Ta({inputs:{input:W},backend:R}),ie=Z({inputs:{x:re},backend:R,attrs:{dtype:K}});return R.disposeIntermediateTensorInfo(re),ie}if(!r.Lb.hasEncodingLoss(W.dtype,K)){const re=so({inputs:{x:W},backend:R});return{dataId:re.dataId,shape:re.shape,dtype:K}}if(K==="int32")return function(re,ie){const fe=new _n(re.shape,"return float(int(x));"),Se=ie.runWebGLProgram(fe,[re],"int32");return{dataId:Se.dataId,shape:Se.shape,dtype:Se.dtype}}(W,R);if(K==="bool"){const re=R.makeTensorInfo([],"bool",r.Lb.getTypedArrayFromDType("bool",1)),ie=ec({inputs:{a:W,b:re},backend:R});return R.disposeIntermediateTensorInfo(re),ie}throw new Error(`Error in Cast: failed to cast ${W.dtype} to ${K}`)}};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nc{constructor(v){this.outputShape=[],this.outputShape=r.X.computeOutShape(v,1),this.variableNames=v.map((K,re)=>"T"+re);const E=new Array(v.length-1);E[0]=v[0][1];for(let K=1;K<E.length;K++)E[K]=E[K-1]+v[K][1];const R=[`if (yC < ${E[0]}) setOutput(getT0(yR, yC));`];for(let K=1;K<E.length;K++){const re=E[K-1];R.push(`else if (yC < ${E[K]}) setOutput(getT${K}(yR, yC-${re}));`)}const V=E.length,W=E[E.length-1];R.push(`else setOutput(getT${V}(yR, yC-${W}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${R.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sc{constructor(v,E){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=r.X.computeOutShape(v,E);const R=this.outputShape,V=R.length,W=Gt(V),K=sn("coords",V),re=["x","y","z","w","u","v"].slice(0,V);this.variableNames=v.map((Me,Ue)=>"T"+Ue);const ie=new Array(v.length-1);ie[0]=v[0][E];for(let Me=1;Me<ie.length;Me++)ie[Me]=ie[Me-1]+v[Me][E];const fe=re[E],Se=re.slice(-2),De=re.join();let ke=`if (${fe} < ${ie[0]}) {
        return getChannel(
            getT0(${De}), vec2(${Se.join()}));
        }`;for(let Me=1;Me<ie.length;Me++){const Ue=ie[Me-1];ke+=`
        if (${fe} < ${ie[Me]}  && ${fe} >= ${ie[Me-1]}) {
          return getChannel(
            getT${Me}(${Gi(re,fe,Ue)}),
            vec2(${Gi(Se,fe,Ue)}));
        }`}const Be=ie.length,Ve=ie[ie.length-1];ke+=`
        return getChannel(
          getT${Be}(${Gi(re,fe,Ve)}),
          vec2(${Gi(Se,fe,Ve)}));`,this.userCode=`
      float getValue(${re.map(Me=>"int "+Me)}) {
        ${ke}
      }

      void main() {
        ${W} coords = getOutputCoords();
        vec4 result = vec4(getValue(${K}), 0., 0., 0.);

        ${K[V-1]} = ${K[V-1]} + 1;
        if (${K[V-1]} < ${R[V-1]}) {
          result.g = getValue(${K});
        }

        ${K[V-2]} = ${K[V-2]} + 1;
        if (${K[V-2]} < ${R[V-2]}) {
          result.a = getValue(${K});
        }

        ${K[V-1]} = ${K[V-1]} - 1;
        if (${K[V-2]} < ${R[V-2]} &&
            ${K[V-1]} < ${R[V-1]}) {
          result.b = getValue(${K});
        }
        setOutput(result);
      }
    `}}function Gi(Z,v,E){const R=Z.indexOf(v);return Z.map((V,W)=>W===R?`${V} - ${E}`:V).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rc(Z){const{inputs:v,backend:E}=Z,{input:R}=v;return so({inputs:{x:E.texData.get(R.dataId).complexTensorInfos.imag},backend:E})}const zc={kernelName:r.v,backendName:"webgl",kernelFunc:rc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ro(Z){const{inputs:v,backend:E,attrs:R}=Z,{x:V}=v,{shape:W}=R,K=E,re=r.Lb.sizeFromShape(V.shape),ie=r.Lb.inferFromImplicitShape(W,re),fe=r.Lb.sizeFromShape(ie);r.Lb.assert(re===fe,()=>`The new shape (${ie}) has ${fe} elements and the old shape (${V.shape}) has ${re} elements. The new shape and old shape must have the same number of elements.`);const Se=K.texData.get(V.dataId);return!Se.isPacked||ge(V.shape,ie)||Se.texture!==null&&ge(Se.shape,ie)?(K.incRef(V.dataId),{dataId:V.dataId,shape:ie,dtype:V.dtype}):function(De,ke,Be){const Ve=[ne(De.shape),...J(De.shape)],Me={dtype:De.dtype,shape:Ve,dataId:De.dataId},Ue=[ne(ke),...J(ke)],mt=new mo(Ue,Ve),kt=Be.runWebGLProgram(mt,[Me],De.dtype,null,!0);return{dataId:kt.dataId,shape:ke,dtype:kt.dtype}}(V,ie,K)}const Bc={kernelName:r.K,backendName:"webgl",kernelFunc:ro};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vc={kernelName:r.i,backendName:"webgl",kernelFunc:function(Z){const{inputs:v,backend:E,attrs:R}=Z,{axis:V}=R,W=r.Lb.parseAxisParam(V,v[0].shape)[0],K=r.X.computeOutShape(v.map(fe=>fe.shape),W);if(r.Lb.sizeFromShape(K)===0)return E.makeTensorInfo(K,v[0].dtype,[]);const re=v.filter(fe=>r.Lb.sizeFromShape(fe.shape)>0);if(re.length===1)return re[0];const ie=re.map(fe=>fe.shape);return r.X.assertParamsConsistent(ie,W),function fe(Se,De,ke){const Be=Se[0].dtype;if(Be==="complex64"){const Dt=Se.map(Ft=>Ta({inputs:{input:Ft},backend:ke})),it=Se.map(Ft=>rc({inputs:{input:Ft},backend:ke})),St=fe(Dt,De,ke),at=fe(it,De,ke),Wt=bo({inputs:{real:St,imag:at},backend:ke});return Dt.forEach(Ft=>ke.disposeIntermediateTensorInfo(Ft)),it.forEach(Ft=>ke.disposeIntermediateTensorInfo(Ft)),ke.disposeIntermediateTensorInfo(St),ke.disposeIntermediateTensorInfo(at),Wt}if(Se.length>Object(r.jb)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const Dt=Math.floor(Se.length/2),it=fe(Se.slice(0,Dt),De,ke),St=fe(Se.slice(Dt),De,ke),at=fe([it,St],De,ke);return ke.disposeIntermediateTensorInfo(it),ke.disposeIntermediateTensorInfo(St),at}if(Object(r.jb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&Se[0].shape.length>1){const Dt=new sc(Se.map(it=>it.shape),De);return ke.runWebGLProgram(Dt,Se,Be)}const Ve=r.X.computeOutShape(Se.map(Dt=>Dt.shape),De),Me=Se.map(Dt=>ro({inputs:{x:Dt},attrs:{shape:[-1,r.Lb.sizeFromShape(Dt.shape.slice(De))]},backend:ke})),Ue=new nc(Me.map(Dt=>Dt.shape)),mt=ke.runWebGLProgram(Ue,Me,Be);Me.forEach(Dt=>ke.disposeIntermediateTensorInfo(Dt));const kt=ro({inputs:{x:mt},attrs:{shape:Ve},backend:ke});return ke.disposeIntermediateTensorInfo(mt),kt}(re,W,E)}},oc=Zo(`if (isnan(x)) return x;
  return cos(x);
`),qc={kernelName:r.j,backendName:"webgl",kernelFunc:oc},jc=Ao({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),Uc={kernelName:r.l,backendName:"webgl",kernelFunc:jc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ic{constructor(v,E,R){this.variableNames=["real","imag"];const V=E[1];this.outputShape=E;const W=R?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,K=R?V+".0":"1.0";let re;if(v==="real")re="return real * expR - imag * expI;";else{if(v!=="imag")throw new Error(`FFT component must be either "real" or "imag", got ${v}.`);re="return real * expI + imag * expR;"}this.userCode=`
      const float exponentMultiplier = ${W};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${re}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${V});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${V}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${K};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ca(Z,v,E){const R=E.texData.get(Z.dataId),V=r.Lb.sizeFromShape(Z.shape),W=Z.shape[Z.shape.length-1],K=ro({inputs:{x:Z},backend:E,attrs:{shape:[V/W,W]}}).shape,re=new ic("real",K,v),ie=new ic("imag",K,v),fe=[{dataId:R.complexTensorInfos.real.dataId,dtype:R.complexTensorInfos.real.dtype,shape:K},{dataId:R.complexTensorInfos.imag.dataId,dtype:R.complexTensorInfos.imag.dtype,shape:K}],Se=E.runWebGLProgram(re,fe,"float32"),De=E.runWebGLProgram(ie,fe,"float32"),ke=bo({inputs:{real:Se,imag:De},backend:E});E.disposeIntermediateTensorInfo(Se),E.disposeIntermediateTensorInfo(De);const Be=ro({inputs:{x:ke},backend:E,attrs:{shape:Z.shape}});return E.disposeIntermediateTensorInfo(Be),Be}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gc={kernelName:r.o,backendName:"webgl",kernelFunc:function(Z){const{inputs:v,backend:E}=Z,{input:R}=v;return Ca(R,!1,E)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wc{constructor(v){this.variableNames=["Image"],this.outputShape=[];const E=v[2];this.outputShape=v,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${E} - x;
          float outputValue;
          if(coordX >= 0 && coordX < ${E}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hc={kernelName:r.p,backendName:"webgl",kernelFunc:({inputs:Z,backend:v})=>{const{image:E}=Z,R=v,V=new Wc(E.shape);return R.runWebGLProgram(V,[E],E.dtype)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nr{constructor(v){this.variableNames=["A"];const E=hn(),[R,V]=v;this.outputShape=v,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${V}.0, ${R}.0);

        vec4 values = ${E.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wn{constructor(v){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const E=hn(),[R,V]=v;this.outputShape=v,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${V}.0, ${R}.0);
            vec4 values = ${E.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${E.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ac={kernelName:r.r,backendName:"webgl",kernelFunc:function(Z){const{inputs:v,backend:E,attrs:R}=Z;let{pixels:V}=v;const{numChannels:W}=R,K=typeof HTMLVideoElement<"u"&&V instanceof HTMLVideoElement,re=typeof HTMLImageElement<"u"&&V instanceof HTMLImageElement,[ie,fe]=K?[V.videoWidth,V.videoHeight]:[V.width,V.height],Se=[fe,ie],De=[fe,ie,W];(re||K)&&(Ns==null&&(Ns=document.createElement("canvas").getContext("2d")),Ns.canvas.width=ie,Ns.canvas.height=fe,Ns.drawImage(V,0,0,ie,fe),V=Ns.canvas);const ke=E.makeTensorInfo(Se,"int32");E.texData.get(ke.dataId).usage=l.PIXELS,E.gpgpu.uploadPixelDataToTexture(E.getTexture(ke.dataId),V);const Be=Object(r.jb)().getBool("WEBGL_PACK")?new wn(De):new nr(De),Ve=E.runWebGLProgram(Be,[ke],"int32");return E.disposeData(ke.dataId),Ve}};let Ns;const oo={kernelName:r.t,backendName:"webgl",kernelFunc:function(Z){const{inputs:v,backend:E}=Z,{input:R}=v;return Ca(R,!0,E)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mi{constructor(v,E){this.variableNames=["x"];const{windowSize:R,batchSize:V,inSize:W,outSize:K}=v;this.outputShape=[V,K];const re=4*Math.floor(R/4),ie=R%4;let fe="sumValue += dot(values, ones);";if(E!=null){const De=1/E;fe=`sumValue += dot(values * ${r.Lb.isInt(De)?De.toPrecision(2):De}, ones);`}let Se="";W%R>0&&(Se=`
        if (inIdx < 0 || inIdx >= ${W}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${Se}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${R};

        float sumValue = 0.0;

        for (int i = 0; i < ${re}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${fe}
        }

        int inIdx = inOffset + ${re};
        if (${ie===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${fe}
        } else if (${ie===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${fe}
        } else if (${ie===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${fe}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function As(Z,v,E,R){const V=function(K){const re=[];for(;re.length===0||re[re.length-1].outSize!==1;){const ie=re.length?re[re.length-1].outSize:K[1],fe=r.X.computeOptimalWindowSize(ie);re.push({inSize:ie,windowSize:fe,outSize:Math.ceil(ie/fe)})}return re}(Z.shape);let W=Z;for(let K=0;K<V.length;K++){const{inSize:re,windowSize:ie,outSize:fe}=V[K];let Se,De;Se=E==="mean"?K===0?new mi({windowSize:ie,inSize:re,batchSize:Z.shape[0],outSize:fe},re):new mi({windowSize:ie,inSize:re,batchSize:Z.shape[0],outSize:fe}):new za({windowSize:ie,inSize:re,batchSize:Z.shape[0],outSize:fe},E),De=W,W=R.runWebGLProgram(Se,[W],v),De.dataId!==Z.dataId&&R.disposeIntermediateTensorInfo(De)}return W}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nr{constructor(v,E){this.variableNames=["A"];const R=new Array(v.length);for(let K=0;K<R.length;K++)R[K]=v[E[K]];this.outputShape=R,this.rank=R.length;const V=Gt(this.rank),W=function(K){const re=K.length;if(re>6)throw Error(`Transpose for rank ${re} is not yet supported`);const ie=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],fe=new Array(re);for(let Se=0;Se<K.length;Se++)fe[K[Se]]=ie[Se];return fe.join()}(E);this.userCode=`
    void main() {
      ${V} resRC = getOutputCoords();
      setOutput(getA(${W}));
    }
    `}}class gi{constructor(v,E){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const R=new Array(v.length);for(let Se=0;Se<R.length;Se++)R[Se]=v[E[Se]];if(this.outputShape=R,this.rank=R.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const V=Gt(this.rank),W=jt("rc",this.rank),K=new Array(this.rank);for(let Se=0;Se<E.length;Se++)K[E[Se]]=W[Se];const re=`vec2(${K.slice(-2).join()})`,ie=`++${W[this.rank-1]} < ${R[this.rank-1]}`,fe=`getChannel(getA(${K.join()}), ${re})`;this.userCode=`
    void main() {
      ${V} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${fe};
      if(${ie}) {
        result[1] = ${fe};
      }
      --${W[this.rank-1]};
      if(++${W[this.rank-2]} < ${R[this.rank-2]}) {
        result[2] = ${fe};
        if(${ie}) {
          result[3] = ${fe};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function en(Z,v,E){const R=Object(r.jb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gi(Z.shape,v):new Nr(Z.shape,v);return E.runWebGLProgram(R,[Z],Z.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ls={kernelName:r.y,backendName:"webgl",kernelFunc:({inputs:Z,attrs:v,backend:E})=>{const{x:R}=Z,{reductionIndices:V,keepDims:W}=v,K=E,re=R.shape.length,ie=r.Lb.parseAxisParam(V,R.shape);let fe=ie;const Se=r.X.getAxesPermutation(fe,re),De=Se!=null,ke=K.shouldExecuteOnCPU([R]);let Be=R;if(De){if(ke){const kt=K.texData.get(Be.dataId).values,Dt=new Array(re);for(let St=0;St<Dt.length;St++)Dt[St]=R.shape[Se[St]];const it=br(kt,R.shape,R.dtype,Se,Dt);Be=K.makeTensorInfo(Dt,R.dtype),K.texData.get(Be.dataId).values=it}else Be=en(R,Se,K);fe=r.X.getInnerMostAxes(fe.length,re)}r.X.assertAxesAreInnerMostDims("max",fe,re);const[Ve,Me]=r.X.computeOutAndReduceShapes(Be.shape,fe);let Ue,mt=Ve;if(W&&(mt=r.X.expandShapeToKeepDim(Ve,ie)),ke){const kt=K.texData.get(Be.dataId).values,Dt=ts(kt,r.Lb.sizeFromShape(Me),mt,R.dtype);Ue=K.makeTensorInfo(mt,R.dtype),K.texData.get(Ue.dataId).values=Dt}else Ue=function(kt,Dt,it,St){const at=r.Lb.sizeFromShape(Dt),Wt=ro({inputs:{x:kt},attrs:{shape:[r.Lb.sizeFromShape(kt.shape)/at,at]},backend:St}),Ft=As(Wt,kt.dtype,"max",St),dn=ro({inputs:{x:Ft},attrs:{shape:it},backend:St});return St.disposeIntermediateTensorInfo(Wt),St.disposeIntermediateTensorInfo(Ft),dn}(Be,Me,mt,K);return De&&K.disposeIntermediateTensorInfo(Be),Ue}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $a={kernelName:r.z,backendName:"webgl",kernelFunc:function(Z){const{inputs:v,backend:E,attrs:R}=Z,{x:V}=v;Re(V,"maxPool");const{filterSize:W,strides:K,pad:re,dimRoundingMode:ie}=R;r.Lb.assert(r.X.eitherStridesOrDilationsAreOne(K,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${K} and dilations '1'`);const fe=r.X.computePool2DInfo(V.shape,W,K,1,re,ie);if(fe.filterWidth===1&&fe.filterHeight===1&&r.Lb.arraysEqual(fe.inShape,fe.outShape))return so({inputs:{x:V},backend:E});const Se=new ui(fe,"max",!1);return E.runWebGLProgram(Se,[V],V.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cc={kernelName:r.A,backendName:"webgl",kernelFunc:function(Z){const{inputs:v,backend:E,attrs:R}=Z,{dy:V,input:W,output:K}=v,re=W;Re([W,K],"maxPoolBackprop");const{filterSize:ie,strides:fe,pad:Se,dimRoundingMode:De}=R,ke=r.X.computePool2DInfo(re.shape,ie,fe,1,Se,De),Be=new ui(ke,"max",!0),Ve=E.runWebGLProgram(Be,[re],re.dtype),Me=new qi(ke),Ue=E.runWebGLProgram(Me,[V,Ve],re.dtype);return E.disposeIntermediateTensorInfo(Ve),Ue}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uc={kernelName:r.B,backendName:"webgl",kernelFunc:({inputs:Z,attrs:v,backend:E})=>{const{x:R}=Z,{filterSize:V,strides:W,pad:K,includeBatchInIndex:re}=v,ie=E;r.Lb.assert(R.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${R.shape.length}.`);const fe=[1,1];r.Lb.assert(r.X.eitherStridesOrDilationsAreOne(W,fe),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${W} and dilations '${fe}'`);const Se=r.X.computePool2DInfo(R.shape,V,W,fe,K),[De,ke]=function(Be,Ve,Me,Ue){let mt=new ui(Me,"max",!1);const kt=Ue.runWebGLProgram(mt,[Be],"float32");return mt=new ui(Me,"max",!0,!0,Ve),[kt,Ue.runWebGLProgram(mt,[Be],"float32")]}(R,re,Se,ie);return[De,ke]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _a={kernelName:r.C,backendName:"webgl",kernelFunc:({inputs:Z,attrs:v,backend:E})=>{const{x:R}=Z,{keepDims:V,axis:W}=v,K=E,re=R.shape.length,ie=r.Lb.parseAxisParam(W,R.shape);let fe=ie;const Se=r.X.getAxesPermutation(fe,re),De=Se!=null,ke=K.shouldExecuteOnCPU([R]),Be=[];let Ve=R;if(De){if(ke){const Dt=K.texData.get(Ve.dataId).values,it=new Array(re);for(let at=0;at<it.length;at++)it[at]=R.shape[Se[at]];const St=br(Dt,R.shape,R.dtype,Se,it);Ve=K.makeTensorInfo(it,R.dtype),K.texData.get(Ve.dataId).values=St}else Ve=en(R,Se,K);Be.push(Ve),fe=r.X.getInnerMostAxes(fe.length,re)}r.X.assertAxesAreInnerMostDims("sum",fe,re);const[Me,Ue]=r.X.computeOutAndReduceShapes(Ve.shape,fe);let mt=Me;V&&(mt=r.X.expandShapeToKeepDim(Me,ie));const kt=function(Dt,it,St,at){const Wt=r.Lb.sizeFromShape(it),Ft=ro({inputs:{x:Dt},attrs:{shape:[r.Lb.sizeFromShape(Dt.shape)/Wt,Wt]},backend:at}),dn=As(Ft,"float32","mean",at),Vt=ro({inputs:{x:dn},attrs:{shape:St},backend:at});return at.disposeIntermediateTensorInfo(Ft),at.disposeIntermediateTensorInfo(dn),Vt}(Ve,Ue,mt,K);for(const Dt of Be)K.disposeIntermediateTensorInfo(Dt);return kt}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lc{constructor(v,E,R){this.variableNames=["x"],this.outputShape=E.map((Se,De)=>Se[0]+v[De]+Se[1]);const V=v.length,W=Gt(V),K=E.map(Se=>Se[0]).join(","),re=E.map((Se,De)=>Se[0]+v[De]).join(","),ie=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,V),fe=R==="reflect"?0:1;this.userCode=V!==1?`
      ${W} start = ${W}(${K});
      ${W} end = ${W}(${re});

      void main() {
        ${W} outC = getOutputCoords();
        for (int i = 0; i < ${V}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${fe};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${fe};
          }
        }
        ${W} coords = outC - start;
        setOutput(getX(${ie}));
      }
    `:`
        int start = ${K};
        int end = ${re};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${fe};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${fe};
          }
          setOutput(getX(outC - start));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ia{constructor(v,E,R){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=E.map((Ve,Me)=>Ve[0]+v[Me]+Ve[1]);const V=v.length,W=Gt(V),K=E.map(Ve=>Ve[0]).join(","),re=E.map((Ve,Me)=>Ve[0]+v[Me]).join(","),ie=sn("rc",V),fe=sn("source",V),Se=`${ie[V-1]} < ${this.outputShape[V-1]}`,De=V===1?"source":`vec2(${fe.slice(-2).join()})`,ke=R==="reflect"?0:1;let Be="";if(V===1){const Ve=`
        ${W} source = rc;
        if (source < start) {
          source = start * 2 - source - ${ke};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${ke};
        }
        source -= start;
      `;Be=`
        ${W} rc = outputLoc;
        ${Ve}
        result[0] = getChannel(getX(${fe.join()}), ${De});
        ${ie[V-1]} += 1;
        if(${Se}) {
          ${Ve}
          result[1] = getChannel(getX(${fe.join()}), ${De});
        }
      `}else{const Ve=`
        ${W} source = rc;
        ${W} lt = ${W}(lessThan(source, start));
        ${W} gte = ${W}(greaterThanEqual(source, end));
        ${W} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${ke}) +
                gte * ((end - 1) * 2 - source + ${ke});
        source -= start;
      `;Be=`
        ${W} rc = outputLoc;
        ${Ve}
        result[0] = getChannel(getX(${fe.join()}), ${De});
        ${ie[V-1]} += 1;
        if(${Se}) {
          ${Ve}
          result[1] = getChannel(getX(${fe.join()}), ${De});
        }
        rc = outputLoc;
        ${ie[V-2]} += 1;
        if(${ie[V-2]} < ${this.outputShape[V-2]}) {
          ${Ve}
          result[2] = getChannel(getX(${fe.join()}), ${De});
          ${ie[V-1]} += 1;
          if(${Se}) {
            ${Ve}
            result[3] = getChannel(getX(${fe.join()}), ${De});
          }
        }
      `}this.userCode=`
      const ${W} start = ${W}(${K});
      const ${W} end = ${W}(${re});

      void main() {
        ${W} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${Be}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kc={kernelName:r.D,backendName:"webgl",kernelFunc:({inputs:Z,backend:v,attrs:E})=>{const{x:R}=Z,{paddings:V,mode:W}=E,K=Object(r.jb)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ia(R.shape,V,W):new lc(R.shape,V,W);return v.runWebGLProgram(K,[R],R.dtype)}},hc="return areal * breal - aimag * bimag;",ei="return areal * bimag + aimag * breal;";class jr{constructor(v,E,R){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=r.X.assertAndGetBroadcastShape(E,R),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${v}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dc="return a * b;",Ar={kernelName:r.E,backendName:"webgl",kernelFunc:function(Z){const{inputs:v,backend:E}=Z,{a:R,b:V}=v,W=r.X.upcastType(R.dtype,V.dtype);if(R.dtype==="complex64"){const re=E.texData.get(R.dataId),ie=E.texData.get(V.dataId),fe=new jr(hc,R.shape,V.shape),Se=new jr(ei,R.shape,V.shape),De=[{dataId:re.complexTensorInfos.real.dataId,dtype:re.complexTensorInfos.real.dtype,shape:R.shape},{dataId:re.complexTensorInfos.imag.dataId,dtype:re.complexTensorInfos.imag.dtype,shape:R.shape},{dataId:ie.complexTensorInfos.real.dataId,dtype:ie.complexTensorInfos.real.dtype,shape:V.shape},{dataId:ie.complexTensorInfos.imag.dataId,dtype:ie.complexTensorInfos.imag.dtype,shape:V.shape}],ke=E.runWebGLProgram(fe,De,"float32"),Be=E.runWebGLProgram(Se,De,"float32"),Ve=bo({inputs:{real:ke,imag:Be},backend:E});return E.disposeIntermediateTensorInfo(ke),E.disposeIntermediateTensorInfo(Be),Ve}if(E.shouldExecuteOnCPU([R,V])){const re=E.texData.get(R.dataId),ie=E.texData.get(V.dataId),[fe,Se]=Gn(R.shape,V.shape,re.values,ie.values,W),De=E.makeTensorInfo(Se,W);return E.texData.get(De.dataId).values=fe,De}let K;return K=Object(r.jb)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Xs(dc,R.shape,V.shape):new _s(dc,R.shape,V.shape),E.runWebGLProgram(K,[R,V],W)}},qn={kernelName:r.F,backendName:"webgl",kernelFunc:({inputs:Z,backend:v,attrs:E})=>{r.X.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:R,scores:V}=Z,{maxOutputSize:W,iouThreshold:K,scoreThreshold:re}=E,ie=v,fe=ie.readSync(R.dataId),Se=ie.readSync(V.dataId),De=W,ke=K,Be=re;return r.lb.nonMaxSuppressionV3Impl(fe,Se,De,ke,Be)}},Xc=r.lb.nonMaxSuppressionV4Impl,Oo={kernelName:r.G,backendName:"webgl",kernelFunc:({inputs:Z,backend:v,attrs:E})=>{r.X.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:R,scores:V}=Z,{maxOutputSize:W,iouThreshold:K,scoreThreshold:re,padToMaxOutputSize:ie}=E,fe=v,Se=fe.readSync(R.dataId),De=fe.readSync(V.dataId),{selectedIndices:ke,validOutputs:Be}=Xc(Se,De,W,K,re,ie);return[ke,Be]}},xo=r.lb.nonMaxSuppressionV5Impl,Wi={kernelName:r.H,backendName:"webgl",kernelFunc:({inputs:Z,backend:v,attrs:E})=>{r.X.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:R,scores:V}=Z,{maxOutputSize:W,iouThreshold:K,scoreThreshold:re,softNmsSigma:ie}=E,fe=v,Se=fe.readSync(R.dataId),De=fe.readSync(V.dataId),ke=W,Be=K,Ve=re,Me=ie,{selectedIndices:Ue,selectedScores:mt}=xo(Se,De,ke,Be,Ve,Me);return[Ue,mt]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ti{constructor(v,E,R,V){this.variableNames=["Image"],this.outputShape=[];const W=v[1],K=v[2],re=Math.sin(E).toFixed(3),ie=Math.cos(E).toFixed(3);this.outputShape=v;const[fe,Se]=r.X.getImageCenter(V,W,K),De=fe.toFixed(3),ke=Se.toFixed(3);let Be="";Be=typeof R=="number"?`float outputValue = ${R.toFixed(2)};`:`
        vec3 fill = vec3(${R.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - ${De}) * ${ie} - (float(y) - ${ke}) * ${re};
          float coordYFloat = (float(x) - ${De}) * ${re} + (float(y) - ${ke}) * ${ie};
          int coordX = int(round(coordXFloat + ${De}));
          int coordY = int(round(coordYFloat + ${ke}));
          ${Be}
          if(coordX >= 0 && coordX < ${K} && coordY >= 0 && coordY < ${W}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yc={kernelName:r.L,backendName:"webgl",kernelFunc:({inputs:Z,attrs:v,backend:E})=>{const{image:R}=Z,{radians:V,fillValue:W,center:K}=v,re=E,ie=new ti(R.shape,V,W,K);return re.runWebGLProgram(ie,[R],R.dtype)}},dr=Zo(`if (isnan(x)) return x;
  return sin(x);
`),We={kernelName:r.N,backendName:"webgl",kernelFunc:dr},wr=Zo("return x * x;"),zs={kernelName:r.P,backendName:"webgl",kernelFunc:wr},ao=Ao({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"}),ka={kernelName:r.Q,backendName:"webgl",kernelFunc:ao},Ro="return a - b;",Hi=Ao({opSnippet:Ro,packedOpSnippet:Ro,supportsComplex:!0,cpuKernelImpl:cr}),Ki={kernelName:r.R,backendName:"webgl",kernelFunc:Hi},Sr=Zo("return tan(x);");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Do=[Dc,Ya,Qa,Fc,Za,Lc,Ka,Vc,qc,Uc,Gc,Hc,ac,Oc,oo,zc,Ls,$a,cc,uc,_a,Kc,Ar,qn,Oo,Wi,Sa,tc,Bc,Yc,We,zs,Ki,ka,{kernelName:r.S,backendName:"webgl",kernelFunc:Sr},{kernelName:r.U,backendName:"webgl",kernelFunc:({inputs:Z,attrs:v,backend:E})=>{const{x:R}=Z,{perm:V}=v,W=E,K=R.shape.length,re=new Array(K);for(let fe=0;fe<re.length;fe++)re[fe]=R.shape[V[fe]];let ie;if(W.shouldExecuteOnCPU([R])){const fe=W.texData.get(R.dataId).values,Se=br(fe,R.shape,R.dtype,V,re);ie=W.makeTensorInfo(re,R.dtype),W.texData.get(ie.dataId).values=Se}else ie=en(R,V,W);return ie}},{kernelName:r.V,backendName:"webgl",kernelFunc:function(Z){const{inputs:v,attrs:E,backend:R}=Z,{axis:V}=E,{x:W}=v;Re(W,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const K=R.readSync(W.dataId),{outputValues:re,outputShape:ie,indices:fe}=ft(K,V,W.shape,W.dtype);return[R.makeTensorInfo(ie,W.dtype,re),R.makeTensorInfo([fe.length],"int32",fe)]}}];/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */for(const Z of Do)Object(r.wb)(Z);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Cn=t(2),vo=t(9),yi=t(20),Xi=t(42),Po=t(25);const Fo=(Z,v,E)=>{const R=Z.createBuffer(1,v.length,E);return R.copyToChannel(v,0),R};function Ea(Z,v,E,R,V){return new Promise(W=>{const K={loudness_db:[0],f0_hz:[0]};let re=0;for(let ie=v;ie<E;ie++)R&&ie>=V?(K.loudness_db[re]=-120,K.f0_hz[re]=-1):(K.loudness_db[re]=Z.loudness_db[ie],K.f0_hz[re]=Z.f0_hz[ie]),re+=1;W(K)})}function Mo(Z){return Z*Po.b}function cn(Z){return Z/Po.b}class bi{constructor(v,E){this.checkpointUrl=v,E&&(this.settings=E)}async initialize(){let v;Cn.registerOp("Roll",E=>{const R=Cn.split(E.inputs[0],2,2),V=Cn.concat([R[1],R[0]],2);return R.forEach(W=>W.dispose()),V}),Cn.env().set("WEBGL_PACK",!1),Cn.env().set("WEBGL_CONV_IM2COL",!1),Cn.env().set("WEBGL_DELETE_TEXTURE_THRESHOLD",104857600),this.model=await async function(E){return await Cn.loadGraphModel(E)}(this.checkpointUrl+"/model.json");try{v=await fetch(this.checkpointUrl+"/settings.json").then(E=>E.json())}finally{if(this.settings===null)throw new Error("Passing settings is required if you do not have a settings.json file.")}this.settings={...v,...this.settings},this.initialized=!0}dispose(){this.initialized&&(this.model.dispose(),this.checkpointUrl=null,this.initialized=!1)}isInitialized(){return this.initialized}async memCheck(){return await async function(){const v=window.screen.availWidth*window.screen.availHeight,E=window.devicePixelRatio,R=Math.round(v*E*600/1048576);if(!isNaN(R)&&R<50)throw new Error(`Insufficient memory! Your device has ${R} and recommended memory is 50`);try{if(await Cn.ready(),Cn.getBackend()!=="webgl")throw new Error("It looks like your browser does not support webgl.")}catch(V){throw new Error("insufficient memory - "+V)}return!0}()}async synthesize(v,E){E!==null&&(this.settings={...this.settings,...E});const{f0_hz:R,loudness_db:V,confidences:W}=v,K=Object(Xi.c)(R,V.length,this.settings.modelMaxFrameLength),re=Object(Xi.c)(W,V.length,this.settings.modelMaxFrameLength),ie=await async function(it,St){const at=St.averageMaxLoudness,Wt=St.meanLoudness,Ft=St.loudnessThreshold,dn=St.meanPitch;let Vt,vt=[];if(it.loudness_db.length>0){const bn=Cn.tidy(()=>{const Qs=Cn.tensor1d(it.loudness_db,"float32"),Is=Qs.max(),Js=Cn.sub(at,Is),Bs=Cn.add(Qs,Js);return Qs.dispose(),Is.dispose(),Js.dispose(),Bs}),Xn=bn.greater(Ft),sr=await Cn.booleanMaskAsync(bn,Xn),Ut=await sr.array(),os=Cn.tidy(()=>{const Qs=Ut>0?sr.mean():bn.mean(),Is=Cn.sub(Wt,Qs),Js=bn.add(Is).add(0).clipByValue(-120,at),Bs=Js.min(),Qc=Qs.sub(Bs);return Js.sub(Bs).div(Qc).mul(Wt- -120).add(-120)}),Ss=Cn.reshape(it.confidences,[-1,1,1]),Xt=Cn.pool(Ss,[100,1],"avg","same"),gs=Xt.reshape([-1]),rr=Cn.lessEqual(gs,.7);Vt=Cn.tidy(()=>{const Qs=rr.mul(-25),Is=os.add(Qs),Js=Cn.maximum(Is,-120);return Qs.dispose(),Is.dispose(),Js}),vt=await Vt.array(),Xn.dispose(),bn.dispose(),os.dispose(),sr.dispose(),Xt.dispose(),gs.dispose(),Ss.dispose(),rr.dispose()}let fn=[];if(it.f0_hz.length>0){const bn=await Object(yi.c)(it.f0_hz),Xn=Cn.tidy(()=>{for(let Is=0,Js=bn.length;Is<Js;++Is)bn[Is]===-1/0&&(bn[Is]=0);return bn}),sr=Cn.lessEqual(it.confidences,.7),Ut=Vt.greater(Ft),os=Cn.logicalOr(sr,Ut),Ss=await Cn.booleanMaskAsync(Xn,os),Xt=Ss.mean(),gs=await Cn.sub(dn,Xt),rr=await gs.array(),Qs=Cn.tidy(()=>{let Is=rr/12;return Is=Math.round(Is),Object(Xi.b)(it.f0_hz,Is)});fn=await Qs.array(),Vt.dispose(),Xt.dispose(),Ss.dispose(),gs.dispose(),Qs.dispose(),Ut.dispose(),os.dispose(),sr.dispose()}return{f0_hz:fn,loudness_db:vt}}({f0_hz:K,loudness_db:V,confidences:re},this.settings),fe=[],Se=ie.loudness_db.length,De=cn(Se);let ke=!1;const Be=cn(this.settings.modelMaxFrameLength);let Ve;const Me=1*Po.c;for(let it=0;it<De;it+=Be-1){const St=Math.floor(Mo(it)),at=Mo(it+Be);at>Se&&(ke=!0);const{f0_hz:Wt,loudness_db:Ft}=await Ea(ie,St,at,ke,Se),dn=Cn.tensor1d(Wt,"float32"),Vt=Cn.tensor1d(Ft,"float32"),vt=await this.model.predict({f0_hz:dn,loudness_db:Vt}),fn=await vt.data();fe.push(fn),vt.dispose(),dn.dispose(),Vt.dispose()}if(De<=Be)Ve=fe[0];else{const it=[];for(let St=0;St<fe.length;St++){const at=fe[St];it.push(at)}Ve=function(St,at){const Wt=St.reduce((bn,Xn)=>bn+Xn.length,0),Ft=new Float32Array(Wt);let dn=0;for(let bn=0;bn<St.length;bn++){const Xn=St[bn],sr=bn<St.length-1;if(bn===0&&(Ft.set(Xn,dn),dn+=Xn.length),sr){const Ut=St[bn+1],os=dn-at;for(let Ss=os,Xt=0,gs=Xn.length-at;Ss<dn&&Xt<Ut.length;Ss++,Xt++,gs++){const rr=(Ss-os)/(dn-os);Ft[Ss]=(Vt=Xn[gs],vt=Ut[Xt],Vt*(1-(fn=rr))+vt*fn)}Ft.set(Ut.slice(at),dn),dn+=Ut.slice(at).length}}var Vt,vt,fn;return Ft}(it,Me)}const Ue=Ve.slice(0,v.originalRecordedBufferLength).map(it=>it*(this.settings.postGain||1)),mt=new vo.Context,kt=Fo(mt,Ue,Po.c),Dt=await Object(yi.j)(kt,48e3);return await async function({audioCtx:it,arrayBuffer:St,sampleRate:at}){let Wt;vo.setContext(it);let Ft=Fo(it,St,at);Wt=await vo.Offline(()=>{const vt=new vo.Compressor({attack:.001,release:.001,threshold:-6}).toDestination(),fn=new vo.Reverb({wet:.3,decay:3}).connect(vt),bn=new vo.Filter(8e3,"lowpass",-24).connect(fn);return new vo.Player({url:Ft}).connect(bn).start(),fn.ready},St.length/at);const Vt=Wt.getChannelData(0);return Ft=null,Wt.dispose(),Wt=null,Vt}({audioCtx:mt,arrayBuffer:Dt,sampleRate:48e3})}}},function(n,e,t){t.r(e),t.d(e,"GANSynth",function(){return A});var s=t(2),r=t(12),o=t(15),i=t(43),c=t(20);const a=[[1,1,1.0087615084725814],[2,1,.029087889211125567],[2,2,.958243896036208],[3,2,.5326346877272624],[3,3,.45988057223186607],[4,3,1.0072850129664943],[5,4,1.0050894259864507],[6,4,.016233689242197466],[6,5,.9763230964529687],[7,5,.5149287456976357],[7,6,.48299891928441196],[8,6,1.0020339883784544],[9,7,1.0013940582804204],[10,7,.004285414445239434],[10,8,.9936677765505681],[11,8,.4979349533263788],[11,9,.5020647178266697],[12,9,.9896782321684733],[12,10,.006967080931645349],[13,10,1.0022486641537054],[14,11,1.0033233953996759],[15,11,.4782757843614299],[15,12,.5183887055972138],[16,12,.9736767011426267],[16,13,.01804416217807709],[17,13,1.0056329663266226],[18,14,1.00808642668908],[19,14,.4576416347984229],[19,15,.5340800956534676],[20,15,.9582897445862256],[20,16,.028988367857957848],[21,16,1.008754652772106],[22,17,1.0122552436937966],[23,17,.4380796830853842],[23,18,.5491738237632201],[24,18,.9434838949694413],[24,19,.039794474296176746],[25,19,1.0116287566447584],[26,20,1.0158945544322868],[27,20,.41952402212367873],[27,21,.5637020154076856],[28,21,.9292283399303117],[28,22,.05045785324282485],[29,22,1.0142694870195312],[30,23,1.0190617246342517],[31,23,.40191289323704393],[31,24,.5776942788784806],[32,24,.915494649120402],[32,25,.060974426459003916],[33,25,1.016690283888679],[34,26,1.0218076651124588],[35,26,.3851885348435194],[35,27,.5911779611807773],[36,27,.9022565352474414],[36,28,.07134062388959171],[37,28,1.0189038677945517],[38,29,1.0241776077147466],[39,29,.369297000124277],[39,30,.6041783722578726],[40,30,.8894896443111251],[40,31,.08155334505527755],[41,31,1.0209222848386956],[42,32,1.0262117836546005],[43,32,.35418795675261777],[43,33,.6167189821271176],[44,33,.87717137085618],[44,34,.09160992335204851],[45,34,1.0227569476841007],[46,35,1.0279460165329002],[47,35,.3398144781420294],[47,36,.628821594757742],[48,36,.8652806947525041],[48,37,.10150809298528844],[49,37,1.0244186730654867],[50,38,1.029412240942602],[51,38,.32613283297317347],[51,39,.6405065019041107],[52,39,.8537980365619783],[52,40,.11124595830527892],[53,40,1.0259177162406141],[54,41,1.030638956235277],[55,41,.3131022777355948],[55,42,.6517926196031543],[56,42,.8427051290118196],[56,43,.12082196533877268],[57,43,1.0272638027474759],[58,44,1.031651623831845],[59,44,.3006848555240512],[59,45,.6626976096262132],[60,45,.8319849024715039],[60,46,.13023487533380312],[61,46,1.0284661577762764],[62,47,1.0324730153919173],[63,47,.28884520321029805],[63,48,.6732379878311283],[64,48,.821621382643116],[64,49,.1394837401591093],[65,49,1.0295335334192939],[66,50,1.0331235182054521],[67,50,.27755036829985363],[67,51,.68342922107227],[68,51,.8115995989355603],[68,52,.148567879414825],[69,52,1.0304742340231496],[70,53,1.0336214033370148],[71,53,.2667696361817086],[71,54,.6932858140884962],[72,54,.8019055022130549],[72,55,.1574868591255191],[73,55,1.031296139836255],[74,56,1.0339830613212895],[75,56,.2564743680536822],[75,57,.7028213875855097],[76,57,.7925258907912134],[76,58,.16624047189958738],[77,58,1.032006729117501],[78,59,1.0342232095724524],[79,59,.24663784949713183],[79,60,.7120487485622758],[80,60,.7834483437084975],[80,61,.17482871845079165],[81,61,1.032613098850059],[82,62,1.0343550751159198],[83,62,.2372351494674972],[83,63,.7209799537859948],[84,63,.7746611604312031],[84,64,.18325179038711914],[85,64,1.0331219841851924],[86,65,1.0343905557724016],[87,65,.22824298931879333],[87,66,.7296263672031092],[88,66,.7661533062642226],[88,67,.19151005417692718],[89,67,1.0335397767254908],[90,68,1.0343403625078313],[91,68,.21963962139622123],[91,69,.7379987119645334],[92,69,.7579143628308538],[92,70,.19960403621540457],[93,70,1.0338725417430177],[94,71,1.0342141453043734],[95,71,.21140471667072153],[95,72,.746107117663542],[96,72,.7499344830670268],[96,73,.20753440891552338],[97,73,1.0341260344172454],[98,74,1.034020604597683],[99,74,.20351926086574523],[99,75,.7539611633021215],[100,75,.7422043502477234],[100,76,.2153019777561019],[101,76,1.0343057151671131],[102,77,1.0337675900563705],[103,77,.19596545852169872],[103,78,.7615699164421695],[104,78,.734715140616724],[104,79,.22290766922455862],[105,79,1.034416764143981],[106,80,1.03346218824938],[107,80,.1887266444456389],[107,81,.7689419689404797],[108,81,.7274584892496355],[108,82,.23035251959385997],[109,82,1.0344640949448594],[110,83,1.0331108005456808],[111,83,.18178720201436843],[111,84,.7760854696185804],[112,84,.7204264588178948],[112,85,.23763766448199494],[113,85,1.0344523675990727],[114,86,1.032719212418228],[115,86,.1751324878193402],[115,87,.7830081541774375],[116,87,.7136115109646374],[116,88,.2447643291417676],[117,88,1.0343860008764458],[118,89,1.0322926551739824],[119,89,.16874876216974247],[119,90,.789717372631832],[120,90,.7070064800338803],[120,91,.2517338194331562],[121,91,1.0342691839607763],[122,92,1.0318358610025598],[123,92,.16262312499771858],[123,93,.7962201145052664],[124,93,.7006045489251309],[124,94,.25854751343650967],[125,94,1.0341058875275075],[126,95,1.0313531121234998],[127,95,.15674345673841866],[127,96,.8025230320033012],[128,96,.6943992268713032],[128,97,.2652068536620191],[129,97,1.033899874262366],[130,98,1.030848284714744],[131,98,.1510983637896712],[131,99,.8086324613545763],[132,99,.6883843289574696],[132,100,.2717133398209474],[133,100,1.033654708853177],[134,101,1.0303248882205327],[135,101,.14567712818173575],[135,102,.8145544424922615],[136,102,.6825539572209546],[136,103,.2780685221191216],[137,103,1.033373767485838],[138,104,1.0297861005632643],[139,104,.14046966111762169],[139,105,.8202947372282664],[140,105,.6769024831869065],[140,106,.28427399504058354],[141,106,1.0330602468722847],[142,107,1.029234799720434],[143,107,.13546646006984392],[143,108,.8258588460540109],[144,108,.671424531713726],[144,109,.290331391589362],[145,109,1.0327171728357682],[146,110,1.0286735920712562],[147,110,.13065856914309196],[147,111,.8312520236957351],[148,111,.6661149660273628],[148,112,.2962423779602388],[149,112,1.03234740847843],[150,113,1.0281048378703825],[151,113,.12603754244145],[151,114,.8364792935255917],[152,114,.6609688738465388],[152,115,.30200864860954885],[153,115,1.0319536619522978],[154,116,1.0275306741623285],[155,116,.12159541018943322],[155,117,.8415454609370665],[156,117,.655981554500098],[156,118,.3076319217011811],[157,118,1.031538493855763],[158,119,1.0269530354146845],[159,119,.11732464738966399],[159,120,.846455125764718],[160,120,.6511485069565366],[160,121,.3131139349019227],[161,121,1.0311043242739946],[162,122,1.0263736721146446],[163,122,.11321814480714538],[163,123,.851212693834753],[164,123,.6464654186857061],[164,124,.3184564415055735],[165,124,1.0306534394819706],[166,125,1.0257941675461106],[167,125,.10926918209624069],[167,126,.8558223877141483],[168,126,.6419281552876014],[168,127,.32366120686047056],[169,127,1.0301879983273805],[170,128,1.0252159529388847],[171,128,.10547140289367021],[171,129,.8602882567276612],[172,129,.6375327508240597],[172,130,.32873000508360367],[173,130,1.0297100383091813],[174,131,1.0246403211604227],[175,131,.10181879172477112],[175,132,.8646141862987496],[176,132,.6332753987956673],[176,133,.33366461604209907],[177,133,1.0292214813668379],[178,134,1.0240684391009978],[179,134,.09830565257411007],[179,135,.8688039066707689],[180,135,.6291524437169539],[180,136,.3384668225808326],[181,136,1.0287241393952773],[182,137,1.0235013588866442],[183,137,.0949265889928822],[183,138,.8728610010546515],[184,138,.6251603732380943],[184,139,.3431384079843332],[185,139,1.0282197194980238],[186,140,1.0229400280388043],[187,140,.09167648561647405],[187,141,.8767889132518744],[188,141,.6212958107744541],[188,142,.3476811536535296],[189,142,1.0277098289923983],[190,143,1.0223852986877378],[191,143,.08855049098843445],[191,144,.8805909547856343],[192,144,.6175555086043407],[192,145,.35209683698566024],[193,145,1.0271959801772084],[194,146,1.021837935933431],[195,146,.08554400158179727],[195,147,.8842703115872171],[196,147,.6139363413989273],[196,148,.35638722943949186],[197,148,1.026679594876984],[198,149,1.0212986254395027],[199,149,.082652646931321],[199,150,.8878300502607867],[200,150,.6104353001536761],[200,151,.3605540947783916],[201,151,1.0261620087703698],[202,152,1.020767980334856],[203,152,.07987227578640096],[203,153,.8912731239662092],[204,153,.6070494864912312],[204,154,.364599187472458],[205,154,1.025644475516362],[206,155,1.0202465474911722],[207,155,.07719894321045902],[207,156,.8946023779404728],[208,156,.6037761073076129],[208,157,.36852425125748506],[209,157,1.0251281706842847],[210,158,1.0197348132361097],[211,158,.07462889855138014],[211,159,.8978205546916732],[212,159,.6006124697383151],[212,160,.3723310178292769],[213,160,1.0246141955013988],[214,161,1.0192332085569418],[215,161,.07215857422040488],[215,162,.9009302988805],[216,162,.5975559764226185],[216,163,.37602120567284064],[217,163,1.024103580422386],[218,164,1.018742113842709],[219,164,.06978457521665815],[219,165,.9039341619174114],[220,165,.5946041210439893],[220,166,.3795965190111676],[221,166,1.0235972885322195],[222,167,1.0182618632088625],[223,167,.0675036693443592],[223,168,.9068346062921914],[224,168,.5917544841265701],[224,169,.3830586468674795],[225,169,1.0230962187892327],[226,170,1.0177927484431766],[227,170,.06531277806896706],[227,171,.9096340096561174],[228,171,.5890047290713193],[228,172,.38640926223293437],[229,172,1.0226012091159231],[230,173,1.017335022608167],[231,173,.0632089679653424],[231,174,.9123346686734497],[232,174,.586352598418078],[232,175,.3896500213288084],[233,175,1.0221130393455482],[234,176,1.0168889033326205],[235,176,.06118944272087777],[235,177,.914938802652698],[236,177,.5837959103122896],[236,178,.39278256296329067],[237,178,1.0216324340290364],[238,179,1.0164545758191],[239,179,.05925153564332089],[239,180,.9174485569826359],[240,180,.5813325551691159],[240,181,.3958085079669357],[241,181,1.0211600651125134],[242,182,1.01603219559476],[243,182,.05739270264601734],[243,183,.919866006375456],[244,183,.578960492519135],[244,184,.39872945870775167],[245,184,1.020696554488055],[246,185,1.0156218910279706],[247,185,.055610515672866775],[247,186,.9221931579354511],[248,186,.5766777480237313],[248,187,.4015469986761612],[249,187,1.0202424764259312],[250,188,1.0152237656316911],[251,188,.05390265653168126],[251,189,.9244319540637365],[252,189,.5744824106486663],[252,190,.4042626921377848],[253,190,1.0197983598926021],[254,191,1.0148379001729047],[255,191,.052266911108559244],[255,192,.9265842752073952],[256,192,.5723726299899468],[256,193,.40687808384383367],[257,193,1.0193646907609162],[258,194,1.0144643546050645],[259,194,.05070116393653833],[259,195,.9286519424651887],[260,195,.5703466137364466],[260,196,.4093946987997115],[261,196,1.0189419139168765],[262,197,1.014103169839173],[263,197,.04920339309393266],[263,198,.9306367200572258],[264,198,.5684026252644323],[264,199,.41181404208517797],[265,199,1.0185304352678317],[266,200,1.0137543693675302],[267,200,.04777166540942449],[267,201,.9325403176671191],[268,201,.5665389813575877],[268,202,.4141375987198434],[269,202,1.0181306236573189],[270,203,1.0134179607527265],[271,203,.04640413195303674],[271,204,.934364392667829],[272,204,.5647540500383554],[272,205,.4163668335733731],[273,205,1.017742812691386],[274,206,1.0130939369942324],[275,206,.04509902379599986],[275,207,.9361105522297561],[276,207,.5630462485124229],[276,208,.4185031913161667],[277,208,1.0173673024779883],[278,209,1.0127822777820206],[279,209,.043854648017688035],[279,210,.9377803553285139],[280,210,.5614140412123577],[280,211,.42054809640522234],[281,211,1.0170043612872055],[282,212,1.0124829506474082],[283,212,.042669383945431606],[283,213,.9393753146522579],[284,213,.5598559379382144],[284,214,.42250295310432634],[285,214,1.016654227133528],[286,215,1.0121959120202477],[287,215,.04154167961383383],[287,216,.9408968984130733],[288,216,.5583704920894111],[288,217,.42436914553372207],[289,217,1.0163171092845467],[290,218,1.0119211081990869],[291,218,.04047004842376173],[291,219,.9423465320743504],[292,219,.5569562989809166],[292,220,.4261480377490578],[293,220,1.0159931896995795],[294,221,1.0116584762427925],[295,221,.03945306599345366],[295,222,.9437255999933521],[296,222,.5556119942410062],[296,223,.4278409738424421],[297,223,1.0156826244024533],[298,224,1.0114079447897668],[299,224,.038489367187566605],[299,225,.9450354469842541],[300,225,.5543362522836106],[300,226,.42944927807097044],[301,226,1.015385544788648],[302,227,1.0111694348102989],[303,227,.03757764331096192],[303,228,.9462773798108762],[304,228,.5531277848528364],[304,229,.4309742550012965],[305,229,1.0151020588742643],[306,230,1.010942860298229],[307,230,.036716639459590646],[307,231,.9474526686068676],[308,231,.5519853396352962],[308,232,.4324171896758833],[309,232,1.0148322524854105],[310,233,1.0107281289063446],[311,233,.03590515201636021],[311,234,.9485625482321702],[312,234,.5509076989367998],[312,235,.43377934779319954],[313,235,1.0145761903940136],[314,236,1.0105251425307091],[315,236,.03514202628559325],[315,237,.9496082195647421],[316,237,.5498936784177629],[316,238,.4350619759070698],[317,238,1.014333917399279],[318,239,1.0103337978471305],[319,239,.03442615425358563],[319,240,.9505908507379167],[320,240,.5489421258861396],[320,241,.43626630163460317],[321,241,1.0141054593619083],[322,242,1.01015398680447],[323,242,.03375647247069698],[323,243,.9515115783174108],[324,243,.5480519201477565],[324,244,.43739353387882146],[325,244,1.0138908241879996],[326,245,1.0099855970782285],[327,245,.033131960048180864],[327,246,.9523715084281075],[328,246,.5472219699015581],[328,247,.438444863061944],[329,247,1.013690002769195],[330,248,1.009828512486449],[331,248,.0325516367573507],[331,249,.9531717178331495],[332,249,.5464512126887197],[332,250,.43942146136466664],[333,250,1.0135029698801676],[334,251,1.0096826133725936],[335,251,.03201456123217285],[335,252,.9539132549610332],[336,252,.5457386138858732],[336,253,.4403244829779182],[337,253,1.0133296850325435],[338,254,1.009547776957031],[339,254,.03151982926510845],[339,255,.9545971408911784],[340,255,.5450831657405287],[340,256,.44115506435778573],[341,256,1.0131700932920482],[342,257,1.0094238776594737],[343,257,.031066572189892106],[343,258,.9552243702967873],[344,258,.5444838864501296],[344,259,.44191432448690826],[345,259,1.013024126057376],[346,260,1.0093107873949636],[347,260,.030653955347715485],[347,261,.9557959123477745],[348,261,.5439398192781751],[348,262,.44260336514265247],[349,262,1.01289170180302],[350,263,1.0092083758457435],[351,263,.03028117663272106],[351,264,.956312711573757],[352,264,.5434500317097861],[352,265,.44322327116676213],[353,265,1.012772726788603],[354,266,1.0091165107105933],[355,266,.029947465111254432],[355,267,.9567756886915669],[356,267,.5430136146404813],[356,268,.443775110739594],[357,268,1.0126670957357586],[358,269,1.0090350579329337],[359,269,.02965207970869547],[359,270,.9571857414000476],[360,270,.5426296815994802],[360,271,.44425993565630856],[361,271,1.012574692474406],[362,272,1.0089638819102829],[363,272,.029394307963707546],[363,273,.9575437451393404],[364,273,.5422973680058967],[364,274,.4446787816043237],[365,274,1.0124953905592755],[366,275,1.0089028456858484],[367,275,.029173464843693937],[367,276,.9578505538209541],[368,276,.5420158304528419],[368,277,.44503266844280676],[369,277,1.0124290538587923],[370,278,1.0088518111235036],[371,278,.028988891617224174],[371,279,.9581070005279474],[372,279,.5417842460227992],[372,280,.4453226004830567],[373,280,1.012375537116488],[374,281,1.0088106390682976],[375,281,.028839954783933083],[375,282,.9583138981860433],[376,282,.5416018116287169],[376,283,.4455495667668758],[377,283,1.0123346864882432],[378,284,1.008779189492711],[379,284,.02872604505481853],[379,285,.9584720402070429],[380,285,.5414677433849261],[380,286,.44571454134485444],[381,286,1.0123063400541175],[382,287,1.008757321629678],[383,287,.028646576380597488],[383,288,.9585822011116006],[384,288,.5413812759956369],[384,289,.4458184835568685],[385,289,1.0122903283078832],[386,290,1.0087448940943453],[387,290,.028600985028178233],[387,291,.9586451371206854],[388,291,.541341662177547],[388,292,.44586233830592226],[389,292,1.0122864746237836],[390,293,1.0087417649949195],[391,293,.028588728701898054],[391,294,.9586615867284015],[392,294,.5413481720936798],[392,295,.44584703633543826],[393,295,1.0122945957030358],[394,296,1.0087477920325896],[395,296,.028609285702619672],[395,297,.958632271251788],[396,297,.5414000928186515],[396,298,.44577349450072723],[397,298,1.0123145019997328],[398,299,1.0087628325926643],[399,299,.028662154128659946],[399,300,.9585578953591529],[400,300,.5414967278190544],[400,301,.4456426160405528],[401,301,1.0123459981276965],[402,302,1.0087867438270437],[403,302,.028746851113718195],[403,303,.9584391475775814],[404,303,.5416373964555454],[404,304,.4454552908447334],[405,304,1.0123888832492127],[406,305,1.0088193827286074],[407,305,.02886291209986826],[407,306,.9582767007831089],[408,306,.541821433501071],[408,307,.44521239571891796],[409,307,1.0124429514472502],[410,308,1.0088606061980132],[411,308,.029009890142771087],[411,309,.9580712126699451],[412,309,.5420481886827784],[412,310,.4449147946460895],[413,310,1.01250799207953],[414,311,1.0089102711038211],[415,311,.029187355249536997],[415,312,.9578233262044412],[416,312,.5423170262339921],[416,313,.44456333904778883],[417,313,1.0125837901172945],[418,314,1.0089682343360202],[419,314,.02939489374516595],[419,315,.9575336700623188],[420,315,.5426273244683578],[420,316,.4441588680360723],[421,316,1.0126701264704934],[422,317,1.0090343528545804],[423,317,.029632107670909735],[423,318,.9572028590461733],[424,318,.5429784753662162],[424,319,.44370220866623333],[425,319,1.0127667782967882],[426,320,1.0091084837312583],[427,320,.02989861420426184],[427,321,.9568314944924141],[428,321,.5433698841780775],[428,322,.44319417618582607],[429,322,1.0128735192969558],[430,323,1.0091904841873789],[431,323,.03019404510848359],[431,324,.9564201646615609],[432,324,.5438009690392793],[432,325,.442635574278337],[433,325,1.0129901199984148],[434,326,1.0092802116265451],[435,326,.030518046204357472],[435,327,.9559694451142186],[436,327,.5442711606026257],[436,328,.4420271953022404],[437,328,1.013116348025554],[438,329,1.0093775236632159],[439,329,.030870276865616747],[439,330,.9554798990737882],[440,330,.5447799016825403],[440,331,.4413698205263152],[441,331,1.0132519683584005],[442,332,1.009482278147551],[443,332,.03125040953717358],[443,333,.9549520777754482],[444,333,.5453266469100869],[444,334,.4406642203630321],[445,334,1.0133967435791398],[446,335,1.009594333186143],[447,335,.031658129272365214],[447,336,.9543865208053518],[448,336,.5459108623998897],[448,337,.43991115459682073],[449,337,1.0135504341086077],[450,338,1.0097135471594447],[451,338,.03209313328990995],[451,339,.9537837564264052],[452,339,.5465320254328632],[452,340,.4391113726049666],[453,340,1.013712798432744],[454,341,1.009839778736762],[455,341,.03255513055252836],[455,342,.9531443018899375],[456,342,.5471896241467579],[456,343,.43826561357805704],[457,343,1.0138835933177033],[458,344,1.0099728868869051],[459,344,.033043841357819334],[459,345,.9524686637453139],[460,345,.5478831572348231],[460,346,.437374606734874],[461,346,1.0140625740178375],[462,347,1.0101127308880269],[463,347,.03355899695286791],[463,348,.9517573381261256],[464,348,.5486121336621822],[464,349,.436439071532636],[465,349,1.0142494944714182],[466,350,1.0102591703335964],[467,350,.03410033916008615],[467,351,.9510108110386514],[468,351,.5493760723833191],[468,352,.4354597178717026],[469,352,1.0144441074918717],[470,353,1.0104120651366326],[471,353,.03466762001996195],[471,354,.9502295586328896],[472,354,.5501745020753853],[472,355,.43443724629963687],[473,355,1.0146461649465606],[474,356,1.0105712755316636],[475,356,.035260601448092795],[475,357,.9494140474694148],[476,357,.5510069608761691],[476,358,.43337234820709825],[477,358,1.0148554179311553],[478,359,1.0107366620751033],[479,359,.035879054907258415],[479,360,.9485647347731454],[480,360,.5518729961339426],[480,361,.4322657060211073],[481,361,1.0150716169344107],[482,362,1.0109080856433987],[483,362,.036522761091017805],[483,363,.9476820686815849],[484,363,.5527721641646695],[484,364,.4311179933933358],[485,364,1.0152945119966836],[486,365,1.011085407429963],[487,365,.037191509621709105],[487,366,.9467664884832998],[488,366,.5537040300164661],[488,367,.42992987538427074],[489,367,1.0155238528614574],[490,368,1.0112684889404733],[491,368,.03788509876006132],[491,369,.945818424848663],[492,369,.5546681672409077],[492,370,.42870200864543534],[493,370,1.015759389119438],[494,371,1.0114571919861517],[495,371,.038603335123549486],[495,372,.9448383000574974],[496,372,.5556641576735553],[496,373,.42743504159139284],[497,373,1.016000870349307],[498,374,1.0116513786769457],[499,374,.03934603342038135],[499,375,.9438265282100843],[500,375,.556691591222498],[500,376,.42612961457530607],[501,376,1.0162480462474877],[502,377,1.011850911412824],[503,377,.0401130161915153],[503,378,.9427835154401112],[504,378,.5577500656591832],[504,379,.42478636005357434],[505,379,1.0165006667574357],[506,380,1.012055652873517],[507,380,.04090411356002747],[507,381,.9417096601187289],[508,381,.5588391864205529],[508,382,.4234059027505881],[509,382,1.016758482190165],[510,383,1.0122654660085202],[511,383,.04171916299559172],[511,384,.940605353048487],[512,384,.5599585664146272],[512,385,.4219888598177451],[513,385,1.0170212433404524],[514,386,1.0124802140252198],[515,386,.04255800908365318],[515,387,.9394709776545362],[516,387,.5611078258344457],[516,388,.42053584098827806],[517,388,1.0172887015980372],[518,389,1.0126997603766286],[519,389,.04342050330548295],[519,390,.9383069101697904],[520,390,.5622865919744513],[520,391,.4190474487280153],[521,391,1.0175606090547666],[522,392,1.0129239687479124],[523,392,.044306503823998804],[523,393,.9371135198133816],[524,393,.5634944990567509],[524,394,.41752427838399275],[525,394,1.017836718605313],[526,395,1.0131527030429122],[527,395,.04521587528078427],[527,396,.9358911689630978],[528,396,.5647311880602439],[528,397,.4159669183258934],[529,397,1.0181167840454461],[530,398,1.013385827369556],[531,398,.04614848859869256],[531,399,.9346402133241121],[532,399,.5659963065530312],[532,400,.41437595008823225],[533,400,1.0184005601646522],[534,401,1.0136232060250132],[535,401,.04710422079259773],[535,402,.9333610020906034],[536,402,.5672895085344858],[536,403,.41275194850334485],[537,403,1.0186878028359048],[538,404,1.0138647034793364],[539,404,.048082954782625906],[539,405,.9320538781067357],[540,405,.5686104542795039],[540,406,.4110954818363832],[541,406,1.0189782691001303],[542,407,1.0141101843606544],[543,407,.04908457922335384],[543,408,.9307191780153855],[544,408,.5699588101870642],[544,409,.40940711191046436],[545,409,1.0192717172488233],[546,410,1.0143595134378742],[547,410,.05010898832967291],[547,411,.9293572324099554],[548,411,.571334248633412],[548,412,.4076873942350095],[549,412,1.0195679069010588],[550,413,1.014612555604275],[551,413,.05115608171422347],[551,414,.9279683659767549],[552,414,.5727364478324755],[552,415,.4059368781231612],[553,415,1.0198665990790994],[554,416,1.0148691758602966],[555,416,.05222576422885553],[555,417,.9265528976348417],[556,417,.5741650916958022],[556,418,.40415610681371494],[557,418,1.0201675562784311],[558,419,1.0151292392959954],[559,419,.05331794581129548],[559,420,.9251111406735011],[560,420,.575619869698764],[560,421,.40234561758289383],[561,421,1.020470542537326],[562,422,1.0153926110734461],[563,422,.05443254133751677],[563,423,.9236434028815992],[564,423,.577100476753225],[564,424,.40050594185671334],[565,424,1.0207753235006762],[566,425,1.0156591564087798],[567,425,.05556947047932675],[567,426,.9221499866777003],[568,426,.5786066130792553],[568,427,.3986376053171075],[569,427,1.021081666483685],[570,428,1.0159287405542117],[571,428,.056728657567230105],[571,429,.9206311892316345],[572,429,.5801379840824749],[572,430,.3967411280111777],[573,430,1.0213893405291132],[574,431,1.016201228779567],[575,431,.057910031456259455],[575,432,.9190873025878152],[576,432,.5816943002369833],[576,433,.39481702444623007],[577,433,1.021698116466727],[578,434,1.0164764863538518],[579,434,.05911352539724152],[579,435,.9175186137811212],[580,435,.5832752769689779],[580,436,.3928658036922941],[581,436,1.0220077669657777],[582,437,1.0167543785266802],[583,437,.06033907691219022],[583,438,.9159254049505173],[584,438,.5848806345442068],[584,439,.3908879694785636],[585,439,1.022318066586335],[586,440,1.017034770509633],[587,440,.061586627674206584],[587,441,.914307953451257],[588,441,.58651009795775],[588,442,.3888840202832941],[589,442,1.0226287918300547],[590,443,1.017317527457434],[591,443,.06285612338957339],[591,444,.9126665319603182],[592,444,.5881633968320044],[592,445,.3868544494242516],[593,445,1.0229397211858324],[594,446,1.0176025144493452],[595,446,.06414751368695158],[595,447,.9110014085827639],[596,447,.5898402653081352],[596,448,.3847997451452973],[597,448,1.0232506351759092],[598,449,1.0178895964699735],[599,449,.06546075200505637],[599,450,.9093128469516464],[600,450,.5915404419502857],[600,451,.38272039070347513],[601,451,1.0235613163962847],[602,452,1.018178638390636],[603,452,.06679579548876291],[603,453,.9076011063291527],[604,453,.5932636696450677],[604,454,.3806168644453139],[605,454,1.0238715495601471],[606,455,1.0184695049504477],[607,455,.06815260488510425],[607,456,.9058664416991429],[608,456,.5950096955107654],[608,457,.37848963988927037],[609,457,1.024181121533852],[610,458,1.0187620607370533],[611,458,.06953114444294146],[611,459,.9041091038666588],[612,459,.5967782707982764],[612,460,.3763391858013562],[613,460,1.0244898213757605],[614,461,1.0190561701684775],[615,461,.07093138181829654],[615,462,.9023293395404434],[616,462,.5985691508103589],[616,463,.37416596626748977],[617,463,1.0247974403689852],[618,464,1.0193516974735164],[619,464,.07235328797779521],[619,465,.9005273914292568],[620,465,.6003820948062436],[620,466,.37197044076689306],[621,466,1.0251037720559506],[622,467,1.0196485066733956],[623,467,.07379683710904351],[623,468,.8987034983230944],[624,468,.6022168659211814],[624,469,.3697530642404009],[625,469,1.025408612268551],[626,470,1.01994646156273],[627,470,.07526200653052777],[627,471,.8968578951803935],[628,471,.6040732310832857],[628,472,.36751428715382667],[629,472,1.0257117591594511],[630,473,1.0202454256910738],[631,473,.07674877660715493],[631,474,.8949908132065928],[632,474,.6059509609308075],[632,475,.3652545555682938],[633,475,1.0260130132278693],[634,476,1.0205452623441595],[635,476,.07825713066499564],[635,477,.8931024799348216],[636,477,.6078498297369068],[636,478,.36297431119783957],[637,478,1.026312177347325],[638,479,1.0208458345252258],[639,479,.07978705490923481],[639,480,.8911931193041005],[640,480,.6097696153313106],[640,481,.360673991471839],[641,481,1.0266090567901067],[642,482,1.021147004936792],[643,482,.08133853834681559],[643,483,.8892629517341233],[644,483,.6117100990244927],[644,484,.3583540295921792],[645,484,1.0269034592511874],[646,485,1.0214486359623245],[647,485,.08291157270803175],[647,486,.8873121941972261],[648,486,.6136710655396947],[648,487,.35601485458732646],[649,487,1.0271951948700204],[650,488,1.0217505896477503],[651,488,.08450615237016054],[651,489,.885341060291742],[652,489,.6156523029400911],[652,490,.3536568913681695],[653,490,1.0274840762511013],[654,491,1.022052727683594],[655,491,.08612227428601159],[655,492,.8833497603088218],[656,492,.6176536025590085],[656,493,.3512805607832744],[657,493,1.02776991848203],[658,494,1.0223549113867765],[659,494,.08775993791161714],[659,495,.8813385013049766],[660,495,.6196747589336273],[660,496,.34888627966024516],[661,496,1.028052539155018],[662,497,1.0226570016825074],[663,497,.08941914513388247],[663,498,.8793074871648813],[664,498,.621715569739104],[664,499,.346474460866357],[665,499,1.0283317583791294],[666,500,1.0229588590871557],[667,500,.09109990020637701],[667,501,.8772569186645972],[668,501,.6237758357289777],[668,502,.34404551334349676],[669,502,1.0286073987990987],[670,503,1.023260343690056],[671,503,.09280220968027517],[671,504,.8751869935378795],[672,504,.6258553606671395],[672,505,.3415998421603758],[673,505,1.0288792856085094],[674,506,1.0235613151361742],[675,506,.09452608233896752],[675,507,.8730979065358732],[676,507,.6279539512706841],[676,508,.33913784855416224],[677,508,1.0291472465628844],[678,509,1.0238616326091752],[679,509,.09627152913686766],[679,510,.8709898494841083],[680,510,.6300714171530707],[680,511,.3366599299694516],[681,511,1.0294111119920568],[682,512,1.0241611548135297],[683,512,.09803856313307117],[683,513,.8688630113461538],[684,513,.6322075707612916],[684,514,.3341664801038121],[685,514,1.0296707148107829],[686,515,1.0244597399582411],[687,515,.09982719943517422],[687,516,.8667175782751595],[688,516,.6343622273238361],[688,517,.33165788894132453],[689,517,1.029925890529174],[690,518,1.024757245739534],[691,518,.10163745513498708],[691,519,.864553733672022],[692,519,.6365352047963319],[692,520,.32913454279236454],[693,520,1.0301764772610114],[694,521,1.0250535293244536],[695,521,.10346934925456013],[695,522,.8623716582378126],[696,522,.6387263238040831],[696,523,.32659682433041565],[697,523,1.0304223157317631],[698,524,1.0253484473338592],[699,524,.10532290268142636],[699,525,.8601715300305955],[700,525,.6409354075949926],[700,526,.32404511262442137],[701,526,1.0306632492858765],[702,527,1.0256418558269649],[703,527,.10719813812199533],[703,528,.8579535245094766],[704,528,.6431622819855923],[704,529,.3214797831731655],[705,529,1.0308991238920382],[706,530,1.0259336102845216],[707,530,.10909508003982304],[707,531,.855717814591042],[708,531,.6454067753119441],[708,532,.3189012079363341],[709,532,1.03112978814904],[710,533,1.0262235655929648],[711,533,.11101375459950885],[711,534,.8534645706974212],[712,534,.6476687183847731],[712,535,.31630975536452444],[713,535,1.0313550932895121],[714,536,1.0265115760290215],[715,536,.11295418962138112],[715,537,.8511939607995829],[716,537,.6499479444348513],[716,538,.3137057904341974],[717,538,1.0315748931821125],[718,539,1.0267974952437684],[719,539,.11491641452111552],[719,540,.8489061504692988],[720,540,.6522442890739327],[720,541,.3110896746693046],[721,541,1.0317890443354898],[722,542,1.027081176247435],[723,542,.11690046026072583],[723,543,.8466013029223681],[724,543,.6545575902471419],[724,544,.3084617661720711],[725,544,1.0319974058989068],[726,545,1.0273624713942857],[727,545,.11890635929917114],[727,546,.8442795790631381],[728,546,.6568876881880987],[728,547,.3058224196480645],[729,547,1.0321998396634169],[730,548,1.0276412323675237],[731,548,.12093414553884717],[731,549,.8419411375296247],[732,549,.6592344253774453],[732,550,.3031719864317822],[733,550,1.0323962100616533],[734,551,1.027917310164898],[735,551,.12298385427920393],[735,552,.8395861347312832],[736,552,.661597646501151],[736,553,.30051081451364153],[737,553,1.0325863841657408],[738,554,1.028190555083932],[739,554,.12505552216817234],[739,555,.8372147248951822],[740,555,.6639771984076539],[740,556,.2978392485576317],[741,556,1.0327702316879357],[742,557,1.0284608167076257],[743,557,.12714918714905468],[743,558,.8348270601054527],[744,558,.6663729300704698],[744,559,.2951576299293991],[745,559,1.0329476249762861],[746,560,1.0287279438905246],[747,560,.12926488841857217],[747,561,.8324232903405301],[748,561,.6687846925454237],[748,562,.2924662967182933],[749,562,1.0331184390116956],[750,563,1.0289917847447467],[751,563,.13140266637549056],[751,564,.8300035635173267],[752,564,.6712123389365675],[752,565,.28976558374944045],[753,565,1.033282551406384],[754,566,1.0292521866268258],[755,566,.13356256257828694],[755,567,.8275680255195722],[756,567,.6736557243576808],[756,568,.28705582261488644],[757,568,1.0334398423957492],[758,569,1.0295089961237516],[759,569,.1357446196959754],[759,570,.8251168202441111],[760,570,.6761147058925864],[760,571,.2843373416864493],[761,571,1.0335901948361186],[762,572,1.0297620590403478],[763,572,.13794888146102224],[763,573,.822650089632257],[764,573,.6785891425651428],[764,574,.2816104661359854],[765,574,1.0337334941973482],[766,575,1.0300112203862977],[767,575,.1401753926301894],[767,576,.8201679737037143],[768,576,.6810788952992894],[768,577,.278875517953921],[769,577,1.0338696285566522],[770,578,1.0302563243634062],[771,578,.14242419893016717],[771,579,.8176706105975015],[772,579,.6835838268889712],[772,580,.2761328159639002],[773,580,1.0339984885922306],[774,581,1.0304972143534852],[775,581,.14469534702456693],[775,582,.8151581365963325],[776,582,.6861038019600981],[776,583,.2733826758448351],[777,583,1.0341199675739228],[778,584,1.0307337329063364],[779,584,.14698888445850505],[779,585,.8126306861670012],[780,585,.6886386869453004],[780,586,.2706254101402667],[781,586,1.0342339613562985],[782,587,1.0309657217274584],[783,587,.14930485962229872],[783,588,.810088391991206],[784,588,.6911883500416512],[784,589,.267861328280309],[785,589,1.0343403683692496],[786,590,1.0311930216672842],[787,590,.1516433217043255],[787,591,.80753138499415],[788,591,.6937526611907388],[788,592,.2650907365900638],[789,592,1.0344390896084676],[790,593,1.0314154727094134],[791,593,.1540043206504027],[791,594,.8049597943767033],[792,594,.6963314920402311],[792,595,.2623139383094437],[793,595,1.034530028625162],[794,596,1.0316329139598897],[795,596,.1563879071152346],[795,597,.8023737476471726],[796,597,.6989247159176777],[796,598,.25953123360660696],[797,598,1.0346130915153564],[798,599,1.0318451836365417],[799,599,.15879413242528773],[799,600,.799773370648628],[800,600,.7015322078013413],[800,601,.256742919587031],[801,601,1.0346881869094755],[802,602,1.0320521190584917],[803,602,.16122304853347555],[803,603,.7971587875884961],[804,603,.7041538442893039],[804,604,.2539492903120581],[805,604,1.0347552259598483],[806,605,1.032253556636297],[807,605,.16367470797552194],[807,606,.7945301210672343],[808,606,.7067895035746306],[808,607,.2511506368077842],[809,607,1.0348141223290412],[810,608,1.0324493318619021],[811,608,.16614916382632547],[811,609,.7918874921076472],[812,609,.709439065413448],[812,610,.24834724708249672],[813,610,1.0348647921767888],[814,611,1.032639279299876],[815,611,.1686464696616927],[815,612,.7892310201754584],[816,612,.7121024111062217],[816,613,.24553940613187852],[817,613,1.0349071541468273],[818,614,1.0328232325774014],[819,614,.17116667951302045],[819,615,.7865608232133336],[820,615,.7147794234616441],[820,616,.24272739595679857],[821,616,1.0349411293537],[822,617,1.0330010243763053],[823,617,.17370984782335191],[823,618,.7838770176637189],[824,618,.7174699867799718],[824,619,.23991149556876706],[825,619,1.0349666413686411],[826,620,1.033172486424039],[827,620,.17627602940857415],[827,621,.7811797184924586],[828,621,.720173986819918],[828,622,.23709198101021747],[829,622,1.0349836162040225],[830,623,1.0333374494861536],[831,623,.1788652794118951],[831,624,.7784690392157592],[832,624,.7228913107823544],[832,625,.234269125354749],[833,625,1.0349919822996723],[834,626,1.0334957433581187],[835,626,.18147765326305537],[835,627,.7757450919251534],[836,627,.7256218472813651],[836,628,.23144319872166874],[837,628,1.0349916705072433],[838,629,1.033647196858036],[839,629,.1841132066386375],[839,630,.773007987305413],[840,630,.7283654863202004],[840,631,.22861446829229304],[841,631,1.0349826140730403],[842,632,1.033791637819688],[843,632,.1867719954109858],[843,633,.7702578346682248],[844,633,.7311221192693971],[844,634,.2257831983137577],[845,634,1.0349647486235953],[846,635,1.0339288930859631],[847,635,.18945407561392777],[847,636,.7674947419659374],[848,636,.7338916388459672],[848,637,.22294965011006523],[849,637,1.0349380121480094],[850,638,1.0342420464149167],[851,638,.1924281237940313],[851,639,.5378425839134362],[852,639,.5202524171708031],[852,640,.4568109772775498],[852,641,.05199677850209752],[853,640,.24351254102567055],[853,641,.5225687624093359],[853,642,.2921493228893563],[854,642,.25538328243481595],[854,643,.5241438210153896],[854,644,.23257172527298814],[855,643,.011987787701546808],[855,644,.3172219958151092],[855,645,.4868674616302827],[855,646,.176468024136203],[856,645,.07357769424953754],[856,646,.38294232266815553],[856,647,.4259205416014665],[856,648,.11753224171517974],[857,647,.13246196705929972],[857,648,.4398303708699065],[857,649,.36708371923835004],[857,650,.06067586883292038],[858,649,.18926719214302565],[858,650,.4946697651421086],[858,651,.3040061179704405],[858,652,.005602736230038195],[859,651,.23906249586178907],[859,652,.5231149368578739],[859,653,.2495840468006932],[860,653,.2897970473112013],[860,654,.5026442283960142],[860,655,.20274559579570214],[861,654,.04664315619110009],[861,655,.3473240465998149],[861,656,.4526192727121032],[861,657,.1523595035438806],[862,656,.09766699822939251],[862,657,.3969699779916487],[862,658,.40188113292822186],[862,659,.1034820659161816],[863,658,.14649823031506354],[863,659,.44395391725661004],[863,660,.3530826952522148],[863,661,.056517279244449437],[864,660,.193417537810633],[864,661,.48905272813711814],[864,662,.30196784607077015],[864,663,.011088189502860925],[865,662,.235165441654809],[865,663,.5161755064939912],[865,664,.25593745749264785],[866,664,.27598857145168865],[866,665,.5055165820237347],[866,666,.21733399798014585],[867,665,.03142691535889764],[867,666,.321995701601107],[867,667,.4677769922252197],[867,668,.17692400337387545],[868,667,.07312870986769164],[868,668,.3630952451007391],[868,669,.4264378437134144],[868,670,.13731285791147696],[869,669,.11270032695167025],[869,670,.4009509624326517],[869,671,.38688927555227676],[869,672,.09946833663506985],[870,671,.15050630725355646],[870,672,.43706477714430675],[870,673,.34910378546507886],[870,674,.06336347754327785],[871,673,.1865736616624162],[871,674,.4714631653468664],[871,675,.3125696686315781],[871,676,.028869775846049314],[872,675,.22058655357283705],[872,676,.502393455771382],[872,677,.27458473006488804],[873,677,.24983886475629993],[873,678,.5137748593109537],[873,679,.24315322539257223],[874,678,.0036240101488931717],[874,679,.2812413419420975],[874,680,.49584386088869215],[874,681,.2153614227018543],[875,680,.034735500335029305],[875,681,.3144060917430617],[875,682,.46485314373790926],[875,683,.18595981453922283],[876,682,.0641063484572785],[876,683,.34219859962945964],[876,684,.43549740951782173],[876,685,.15817234633893226],[877,684,.091864261548934],[877,685,.3683988258245694],[877,686,.407752916631107],[877,687,.13197572785525458],[878,686,.11803256264694018],[878,687,.3930296465168421],[878,688,.3815964769154389],[878,689,.10734720976073055],[879,688,.1426340315995158],[879,689,.4161134070872291],[879,690,.35700543857338174],[879,691,.08426456699687354],[880,690,.16569092182506315],[880,691,.43767193845249674],[880,692,.33395766972405766],[880,693,.06270608273067858],[881,692,.1872249764612122],[881,693,.457726572814142],[881,694,.3124315425508366],[881,695,.04265053289025597],[882,694,.20725744392861123],[882,695,.47629815883858434],[882,696,.29240591801936916],[882,697,.024077171256560802],[883,696,.22580909293436022],[883,697,.49340707629100294],[883,698,.272739666255128],[883,699,.006906252371233933],[884,698,.24190643067177103],[884,699,.5047275543873398],[884,700,.2549459812508028],[885,700,.2567100539467806],[885,701,.5031577036963546],[885,702,.24065881914660317],[886,701,.008634717813202674],[886,702,.27224949572145724],[886,703,.49094674236787206],[886,704,.22719544196570912],[887,703,.02292373131969297],[887,704,.28597629401801355],[887,705,.47672398599653515],[887,706,.2143533208320832],[888,705,.035751602096786475],[888,706,.29743237559552355],[888,707,.46390276826706217],[888,708,.20289630196958544],[889,707,.04719579903029385],[889,708,.3075210742305127],[889,709,.45246460115847775],[889,710,.19280622955805915],[890,709,.057274491299496445],[890,710,.3162602301176305],[890,711,.4423913913890736],[890,712,.18406533389761395],[891,711,.0660054606502899],[891,712,.3236673045470217],[891,713,.43366542899845073],[891,714,.17665622026124392],[892,713,.07340611260620647],[892,714,.3297593908476435],[892,715,.4262693763198494],[892,716,.17056185812791913],[893,715,.07949348729590157],[893,716,.33455322495703466],[893,717,.42018625732795906],[893,718,.16576557078065143],[894,717,.0842842699121286],[894,718,.3380651956328206],[894,719,.41539944734620887],[894,720,.16225102525634236],[895,719,.0877948008176482],[895,720,.3403113543186734],[895,721,.41189266310148215],[895,722,.1600022226324315],[896,721,.09004108530992379],[896,722,.3413074246800344],[896,723,.4096499531105413],[896,724,.15900348863810745],[897,723,.0910388030604564],[897,724,.341068811820455],[897,725,.4086556883871424],[897,726,.15923946457791555],[898,725,.09080331723824445],[898,726,.33961061119156805],[898,727,.40889455345709996],[898,728,.16069509855546693],[899,727,.08934968333179105],[899,728,.33694761720865024],[899,729,.41035153766953336],[899,730,.1633556369851302],[900,729,.08669265767999552],[900,730,.33309433158306806],[900,731,.41301192679237225],[900,732,.16720661638248935],[901,731,.08284670572359325],[901,732,.32806497138102175],[901,733,.41686129488304347],[901,734,.17223385542154263],[902,733,.0778260099865808],[902,734,.3218734768206457],[902,735,.421885496422382],[902,736,.17842344724960524],[903,735,.07164447779930824],[903,736,.31453351881588426],[903,737,.42807065870301164],[903,738,.185761752049803],[904,737,.06431574877136567],[904,738,.3060585062772846],[904,739,.435403174462235],[904,740,.19423538984244326],[905,739,.05585320202451507],[905,740,.29646159317816856],[905,741,.4438696947508069],[905,742,.20383123351642937],[906,741,.04626996319383157],[906,742,.2857556853951481],[906,743,.4534571220289279],[906,744,.21453640208174513],[907,743,.03557891120608933],[907,744,.27395344733160587],[907,745,.4640838862781736],[907,746,.2259711147745072],[908,745,.02378916236694485],[908,746,.26064383557298154],[908,747,.4744097020055178],[908,748,.23741469023048611],[908,749,.0029874664482454345],[909,747,.010888485342882084],[909,748,.24524012825579347],[909,749,.47705262348683797],[909,750,.25146343127990345],[909,751,.018030374036361534],[910,750,.23051594568994063],[910,751,.4659638155007443],[910,752,.26789265476733026],[910,753,.034103962104678205],[911,752,.2157780537828917],[911,753,.4490488012027463],[911,754,.28394240197843773],[911,755,.051207169174446954],[912,754,.19869680451466967],[912,755,.4309201309554197],[912,756,.3010279740476113],[912,757,.06933596927309439],[913,756,.18059146729117878],[913,757,.4117775174928008],[913,758,.3191380672559441],[913,759,.08847923890660256],[914,758,.16147315955443303],[914,759,.3916318997027402],[914,760,.33826157637971177],[914,761,.10862604895508292],[915,760,.14135280401108383],[915,761,.37049402581791996],[915,762,.35838758963377015],[915,763,.12976565972904766],[916,762,.12024113359574008],[916,763,.34837445826725],[916,764,.3795053837685538],[916,765,.15188751617588445],[917,764,.0981486962833266],[917,765,.32528357838026745],[917,766,.40160441931520835],[917,767,.17498124323033803],[918,766,.07508585975635881],[918,767,.30123159095005636],[918,768,.42467433597326765],[918,769,.19903664130457108],[919,768,.05106281593203439],[919,769,.2762285286588279],[919,770,.4480441892579001],[919,771,.22091817857346802],[920,770,.02605116606412028],[920,771,.24679268601046497],[920,772,.4613333588465915],[920,773,.24636316696152993],[920,774,.026661594315488448],[921,772,.00017143112777602207],[921,773,.22016507993495968],[921,774,.4450006731455823],[921,775,.27654268563105877],[921,776,.05450703342817279],[922,775,.19537707282293476],[922,776,.4169980825615683],[922,777,.3043455873211709],[922,778,.08322496813649063],[923,777,.16671893224886847],[923,778,.3873911007134449],[923,779,.333032487802997],[923,780,.11284587069811512],[924,779,.1371380798307044],[924,780,.3568813039463011],[924,781,.36262258254682433],[924,782,.14336176762117853],[925,781,.10666365535341012],[925,782,.32548606626333626],[925,783,.39310680323983005],[925,784,.17476372572452537],[926,783,.07530458232966944],[926,784,.2932141772790525],[926,785,.4235343782302751],[926,786,.20429957725699868],[927,785,.04297407877416276],[927,786,.2566282342451322],[927,787,.44609730979381396],[927,788,.23600300007995265],[927,789,.023774697332874434],[928,787,.00973561058609779],[928,788,.22213324067090034],[928,789,.4366882593279592],[928,790,.27231575108916795],[928,791,.058813271383982776],[929,790,.1899112794795718],[929,791,.4051174305988943],[929,792,.3087329260703045],[929,793,.09459113946159277],[930,792,.15536737862587172],[930,793,.36909687837539557],[930,794,.3443998634306182],[930,795,.13113054742980831],[931,794,.11887833690004168],[931,795,.3317399346424034],[931,796,.3809015150071346],[931,797,.1684974582828263],[932,796,.08156315084174257],[932,797,.29356399783457987],[932,798,.4168389957384664],[932,799,.2027189344423823],[933,798,.043285265762028874],[933,799,.2496929999720567],[933,800,.44089395742648096],[933,801,.24052352812737388],[933,802,.03507425254057242],[934,800,.0043335535351657515],[934,801,.21027601904641954],[934,802,.42143856683278325],[934,803,.2844016743443022],[934,804,.07585590645285804],[935,803,.17353832434253885],[935,804,.38262846297038483],[935,805,.3257498632562316],[935,806,.11730189433403454],[936,805,.13268775789077444],[936,806,.3407519309130924],[936,807,.3670972990020704],[936,808,.15947396875496164],[937,807,.09057464650490143],[937,808,.2978183751219168],[937,809,.40749895190525254],[937,810,.19795010289674397],[938,809,.0474866463063797],[938,810,.24850494279526708],[938,811,.4346436181876547],[938,812,.2403211224239381],[938,813,.04014881320170647],[939,811,.003878639500178961],[939,812,.2047038150773143],[939,813,.41157455841171137],[939,814,.28957529821809164],[939,815,.08560320920592149],[940,814,.16385621221760913],[940,815,.36828320787286745],[940,816,.33550406688664397],[940,817,.13164677712134118],[941,816,.11836297424309958],[941,817,.32185871977911545],[941,818,.3799973298161782],[941,819,.17581896778117206],[942,818,.07143918326167292],[942,819,.2705029465809176],[942,820,.4180894904987747],[942,821,.22040151023922497],[942,822,.023261093492508676],[943,820,.023754358875460287],[943,821,.22082957274806367],[943,822,.41735892037093947],[943,823,.26975946681527463],[943,824,.07244459405934162],[944,823,.17462856886910824],[944,824,.376380003235797],[944,825,.32258384746152186],[944,826,.12234695850241085],[945,825,.12764964491952732],[945,826,.32754202842781277],[945,827,.3705351976091778],[945,828,.17002290467196218],[946,827,.07705703864783364],[946,828,.27228373423426855],[946,829,.4119493110954956],[946,830,.21796235075295245],[946,831,.024608216085607083],[947,829,.025780053026113373],[947,830,.2190518649272109],[947,831,.41169318411556594],[947,832,.27077590916361477],[947,833,.07732052594065236],[948,832,.1695115580680664],[948,833,.36773423672329814],[948,834,.3275311475162098],[948,835,.13077893984001213],[949,834,.11922966876699366],[949,835,.31565346594837984],[949,836,.37813100062036553],[949,837,.17991281790206778],[950,836,.06510103041600655],[950,837,.25463712967072577],[950,838,.4162975451493948],[950,839,.23222690463246418],[950,840,.043347365043106205],[951,838,.010682336294089382],[951,839,.20025854636251755],[951,840,.3947874901107556],[951,841,.2917173663646273],[951,842,.09950708368621437],[952,841,.14911244770443477],[952,842,.3431424199239878],[952,843,.3480530442639449],[952,844,.15411315971947762],[953,843,.0934299055238343],[953,844,.2830893937829872],[953,845,.3971235804951196],[953,846,.20716078374370134],[953,847,.020137203526012115],[954,845,.036025540013401365],[954,846,.22261124110739972],[954,847,.40630997808531094],[954,848,.2648205963423913],[954,849,.07872881878459281],[955,848,.16692727676480973],[955,849,.35954874836594064],[955,850,.328443108696204],[955,851,.13751082396144756],[956,850,.11152248261980105],[956,851,.3006327942159715],[956,852,.3829521945790107],[956,853,.1916328343080391],[956,854,.0076262937092498664],[957,852,.0514953905500914],[957,853,.2343500090068106],[957,854,.41021535649217705],[957,855,.25030428726128284],[957,856,.06835964516566889],[958,855,.17563114080501685],[958,856,.3667504924135684],[958,857,.31835263030310357],[958,858,.1299663000321827],[959,857,.11940718803292909],[959,858,.3065438045294419],[959,859,.37569491987401304],[959,860,.18605528589059708],[959,861,.004834820768368334],[960,859,.05684866493974193],[960,860,.2366688077210537],[960,861,.4085057240274029],[960,862,.24678375999468344],[960,863,.06783571840441664],[961,862,.17558642045742334],[961,863,.36451985113857055],[961,864,.3173137388508224],[961,865,.13129392160626782],[962,864,.11725721455632943],[962,865,.3008194332920608],[962,866,.37580301677160466],[962,867,.19024874552861262],[962,868,.011245575393110812],[963,866,.05231298976932004],[963,867,.23017401181136463],[963,868,.40175554736854613],[963,869,.2536595659979476],[963,870,.07679940668774121],[964,869,.16706057585212106],[964,870,.35303258747063304],[964,871,.3251768586309606],[964,872,.14116418004635392],[965,871,.10550294433561781],[965,872,.28424844668945237],[965,873,.38249269088982873],[965,874,.2036626805762719],[965,875,.02684871916582402],[966,873,.03836058116912999],[966,874,.21480488879977247],[966,875,.389260042863657],[966,876,.27095452974310497],[966,877,.09504101254228686],[967,876,.1502807743955375],[967,877,.3328577086192332],[967,878,.3421239629983485],[967,879,.15918522100542254],[968,878,.08474515454977341],[968,879,.25820758590913884],[968,880,.3938397310124852],[968,881,.22523159171338067],[968,882,.05190695217080459],[969,880,.015820211753405387],[969,881,.19007905592596833],[969,882,.36921246833932636],[969,883,.2980889913883655],[969,884,.12132017371569158],[970,883,.1247775639085626],[970,884,.3015570552958629],[970,885,.36552163552482225],[970,886,.18684713857492927],[970,887,.014284415706242481],[971,885,.055013622481818666],[971,886,.2263705108609403],[971,887,.39186593267986564],[971,888,.2561333080985603],[971,889,.08592049273991473],[972,888,.1575841200944441],[972,889,.3370827060887002],[972,890,.33284859953655166],[972,891,.15390042438231766],[973,890,.08972988049108406],[973,891,.2590326783958039],[973,892,.38812639016604245],[973,893,.22348813860080616],[973,894,.054161074977768404],[974,892,.017081968749935856],[974,893,.18740927170107446],[974,894,.3625874079443392],[974,895,.2990263270079478],[974,896,.12613079428882987],[975,895,.11819045745461297],[975,896,.28905735771716573],[975,897,.36789499357104777],[975,898,.19628130377264577],[975,899,.02735424128922767],[976,897,.04494375361325131],[976,898,.21330043570426716],[976,899,.37902147922066165],[976,900,.2697531768133337],[976,901,.10241904377888808],[977,900,.14130067843136315],[977,901,.3150246804904708],[977,902,.3480110183643501],[977,903,.1725701388645175],[977,904,.005966983373903607],[978,902,.06884101502859519],[978,903,.23351128359258333],[978,904,.3898863909020141],[978,905,.24593198700119934],[978,906,.08224765045066],[979,905,.1597942440306211],[979,906,.3346851109670727],[979,907,.3285973743088808],[979,908,.15444027476874822],[980,907,.08792661347585409],[980,908,.2508895640647832],[980,909,.38533070676895603],[980,910,.22893712756876922],[980,911,.06583953763953361],[981,909,.01060737785460527],[981,910,.17530908392596897],[981,911,.34707093920704996],[981,912,.3101853041457825],[981,913,.1404924603408273],[982,912,.1016482122325276],[982,913,.2640331008343238],[982,914,.3757885914855772],[982,915,.21658719088481612],[982,916,.05379076081392352],[983,914,.023321537452804155],[983,915,.1869789080592518],[983,916,.35433193126746176],[983,917,.2960976478285003],[983,918,.13047091456929613],[984,917,.11086010315035294],[984,918,.272590889791831],[984,919,.3683410258652817],[984,920,.20801518542415245],[984,921,.04616290894518408],[985,919,.03202626907959427],[985,920,.1942489952348069],[985,921,.35801621736570555],[985,922,.2871844809716754],[985,923,.12448425960359358],[986,922,.11614980664040801],[986,923,.2769245860037902],[986,924,.3634503371272694],[986,925,.20337777894188264],[986,926,.04278533591281287],[987,924,.036633170664026604],[987,925,.19735437260885233],[987,926,.3585975660673821],[987,927,.28298312203941667],[987,928,.12237172260813765],[988,927,.11761764880185657],[988,928,.2769347836061358],[988,929,.3613222869658947],[988,930,.20269252495682932],[988,931,.04352084243134597],[989,929,.03715658569409518],[989,930,.19646584076452728],[989,931,.3563193376763676],[989,932,.28325914825402143],[989,933,.12401877287718965],[990,932,.11535841088563661],[990,933,.2726772185957825],[990,934,.36193002492598775],[990,935,.2058724789923987],[990,936,.04828585408934835],[991,934,.03368059076582972],[991,935,.19166681871807822],[991,936,.35120102320155516],[991,937,.2879669101334489],[991,938,.12934311950798513],[992,937,.10947528483272252],[992,938,.2643619456949593],[992,939,.36503164238003943],[992,940,.21273290367631378],[992,941,.05704255868679827],[993,939,.026351338857843194],[993,940,.18296002570453515],[993,941,.3430562989307297],[993,942,.29724916938947604],[993,943,.13830626997954892],[994,942,.10006782116457263],[994,943,.2523219642979947],[994,944,.3701807952606593],[994,945,.22297333198451888],[994,946,.06976592160365215],[995,944,.015392306252147629],[995,945,.17030051412165803],[995,946,.33152253946088156],[995,947,.31147369956054877],[995,948,.1509473916728322],[996,947,.087196881644584],[996,948,.2369586950063475],[996,949,.376718339613223],[996,950,.2345765114615184],[996,951,.08521591343298078],[997,949,.0011357385555340561],[997,950,.15263475001807864],[997,951,.311827742306229],[997,952,.32860504822914505],[997,953,.16942021655341175],[997,954,.016626147439510436],[998,952,.07024774813594223],[998,953,.2212622403680772],[998,954,.36621398307130515],[998,955,.2523140266095425],[998,956,.10329850546808812],[999,955,.13345393361930616],[999,956,.2868146645965228],[999,957,.3438149621043634],[999,958,.19052159754051476],[999,959,.038598535306774456],[1e3,957,.04874340776161587],[1e3,958,.20027433884645776],[1e3,959,.35045072214288214],[1e3,960,.2752172040116266],[1e3,961,.1246081801436533],[1001,960,.11153410463061227],[1001,961,.25968030157128735],[1001,962,.3589611456155988],[1001,963,.21376355164890676],[1001,964,.06462574300561937],[1002,962,.024112239164856285],[1002,963,.1744379670887302],[1002,964,.32884307142135794],[1002,965,.3038963549633426],[1002,966,.14989396525089382],[1002,967,.002787631885767016],[1003,965,.08652179776851913],[1003,966,.23158274748299973],[1003,967,.37014802862444746],[1003,968,.23660182809114255],[1003,969,.09233857620429504],[1004,968,.14320871996140178],[1004,969,.2949268298641504],[1004,970,.33370967770704096],[1004,971,.1821563205430922],[1004,972,.03341416685633306],[1005,970,.05691996613850173],[1005,971,.2048164607341282],[1005,972,.34996958396767003],[1005,973,.26846185022737096],[1005,974,.12203613352843197],[1006,973,.11270360292617912],[1006,974,.2573174820670815],[1006,975,.35551075517876596],[1006,976,.21342439841857963],[1006,977,.06808655521031844],[1007,975,.02300584415020569],[1007,976,.1693741701851818],[1007,977,.31909197071849676],[1007,978,.3064750144925845],[1007,979,.1569666027177789],[1007,980,.01237576860780718],[1008,978,.07918600624195261],[1008,979,.22224585329482],[1008,980,.36060022658704466],[1008,981,.24542280629144228],[1008,982,.10372340547250797],[1009,981,.13025049048804305],[1009,982,.2755544084078468],[1009,983,.34173289952302016],[1009,984,.19757209548510224],[1009,985,.052414383405106256],[1010,983,.04055057399599624],[1010,984,.18602861646793578],[1010,985,.3325126760154172],[1010,986,.28836807114447566],[1010,987,.1417402962688462],[1010,988,.0007268068329768394],[1011,986,.0921230324039655],[1011,987,.23132424535108578],[1011,988,.3651955312519228],[1011,989,.23251096307120944],[1011,990,.09383068210249161],[1012,989,.1395300348660987],[1012,990,.2846106560560243],[1012,991,.33325384799782276],[1012,992,.18901293891606955],[1012,993,.045352651706964286],[1013,991,.0492531143811913],[1013,992,.19272260635298227],[1013,993,.33561458168523745],[1013,994,.27986377343343843],[1013,995,.13637852619084528],[1014,994,.09650852938196901],[1014,995,.2338020594070448],[1014,996,.36193613166585775],[1014,997,.22898317334607854],[1014,998,.09193468643195023],[1015,996,.002457496874436509],[1015,997,.14093777570167637],[1015,998,.28368384860268375],[1015,999,.33027760738271117],[1015,1e3,.1884400273628213],[1015,1001,.046968846655108074],[1016,999,.04899295849310335],[1016,1e3,.19034003312195327],[1016,1001,.3313219755276299],[1016,1002,.28105052006571385],[1016,1003,.13948843868730657],[1016,1004,.0023949943264103815],[1017,1002,.09296476581718328],[1017,1003,.22852898102309294],[1017,1004,.35981389159869226],[1017,1005,.23289594529521537],[1017,1006,.09793041579114306],[1018,1005,.13381394889325862],[1018,1006,.27358691892030107],[1018,1007,.33460745416509985],[1018,1008,.1955825556102765],[1018,1009,.05665143264068217],[1019,1007,.040361378819567154],[1019,1008,.17925977203170015],[1019,1009,.31806447498945245],[1019,1010,.2909077306146313],[1019,1011,.1516962543781077],[1019,1012,.01525050343287846],[1020,1010,.08150854362929537],[1020,1011,.21698349128246774],[1020,1012,.3497669475500838],[1020,1013,.24583808157633427],[1020,1014,.11136370502634059],[1021,1013,.1194990282921764],[1021,1014,.25479878825131264],[1021,1015,.34346022054644576],[1021,1016,.20933239464254857],[1021,1017,.07400664151417581],[1022,1015,.023670383811016393],[1022,1016,.1594303860158249],[1022,1017,.29640289279632487],[1022,1018,.3088876485347881],[1022,1019,.17249814489158258],[1022,1020,.03643709112995095],[1023,1018,.062217701784737935],[1023,1019,.19815982330648652],[1023,1020,.3337745723213922],[1023,1021,.3700921432339217],[1023,1022,.3700921432339217]];function l(){const T=s.buffer([1024,1024]);for(let P=0;P<a.length;P++){const O=a[P];T.set(O[2],O[0],O[1])}return T.toTensor()}function d(T,P,O){return s.div(s.sub(T,O),P)}async function f(T){return function(P,O){const F=P.length,G=P[0].length/2,U=O.winLength||G,Q=O.hopLength;let ne=Object(c.b)(U);for(let te=0;te<ne.length;te++)ne[te]=ne[te]/1.5;ne=Object(c.h)(ne,G);const J=G+Q*(F-1),oe=new Float32Array(J);for(let te=0;te<F;te++){const ce=te*Q;let ue=m(P[te]);ue=Object(c.a)(ue,ne),ue=h(ue,oe.slice(ce,ce+G)),oe.set(ue,ce)}let le=0,ge=J;return le=J-64e3,ge=oe.length-le,oe.slice(le,ge)}(T,{winLength:2048,hopLength:512})}async function y(T){const P=s.tidy(()=>{const G=s.slice(T,[0,0,0,0],[1,-1,-1,1]).reshape([1,128,1024]),U=(Q=G,s.tidy(()=>{const te=l().expandDims(0),ce=d(Q,.0661371661726,.113718730221),ue=s.exp(ce),Te=s.matMul(ue,te);return s.sqrt(Te)}));var Q;const ne=function(te){return s.tidy(()=>{const ce=l().expandDims(0),ue=d(te,.8,0),Te=s.cumsum(s.mul(ue,Math.PI),1);return s.matMul(Te,ce)})}(s.slice(T,[0,0,0,1],[1,-1,-1,1]).reshape([1,128,1024]));let J=U.mul(s.cos(ne));const oe=s.reverse(J.slice([0,0,0],[1,128,1023]),2);J=s.concat([J,oe],2);let le=U.mul(s.sin(ne));const ge=s.reverse(le.slice([0,0,0],[1,128,1023]),2);return le=s.concat([le,s.mul(ge,-1)],2),[J,le]}),O=await function(G,U){const Q=s.tidy(()=>{let oe=s.concat([G,U],0).expandDims(3);return oe=s.pad(oe,[[0,0],[0,0],[1,0],[0,0]]),s.batchToSpaceND(oe,[1,2],[[0,0],[0,0]]).reshape([128,4096])}),ne=Q.dataSync(),J=[];for(let oe=0;oe<128;oe++)J[oe]=ne.slice(4096*oe,4096*(oe+1));return Q.dispose(),J}(P[0],P[1]),F=await f(O);return P.forEach(G=>G.dispose()),F}function m(T){const P=T.length/2,O=new i(P),F=O.createComplexArray();return O.inverseTransform(F,T),O.fromComplexArray(F)}function h(T,P){if(T.length!==P.length)return console.error(`Array lengths must be equal to add: ${T.length}, ${T.length}`),null;const O=new Float32Array(T.length);for(let F=0;F<T.length;F++)O[F]=T[F]+P[F];return O}class g extends s.layers.Layer{constructor(P=1e-8,O={}){super(O),this.epsilon=P,this.layerConfig=O,this.supportsMasking=!0}computeOutputShape(P){return[P[0],P[1],P[2],P[3]]}call(P){return s.tidy(()=>{let O=P;Array.isArray(O)&&(O=O[0]);const F=s.mean(s.square(O),[3],!0);return s.mul(O,s.rsqrt(s.add(F,this.epsilon)))})}getClassName(){return"PixelNorm"}}function x(T=1e-8,P={}){return new g(T,P)}class w extends s.layers.Layer{constructor(P=2,O=16,F={}){super(F),this.kernelH=P,this.kernelW=O,this.layerConfig=F,this.supportsMasking=!0}computeOutputShape(P){return[P[0],2*(this.kernelH-1)+P[1],2*(this.kernelW-1)+P[2],P[3]]}call(P){let O=P;Array.isArray(O)&&(O=O[0]);const F=this.kernelH-1,G=this.kernelW-1;return s.pad(O,[[0,0],[F,F],[G,G],[0,0]])}getClassName(){return"InitialPad"}}class I extends s.layers.Layer{constructor(P=2){super({}),this.scale=P,this.supportsMasking=!0}computeOutputShape(P){return[P[0],this.scale*P[1],this.scale*P[2],P[3]]}call(P){return s.tidy(()=>{let O=P;Array.isArray(O)&&(O=O[0]);const F=s.tile(O,[this.scale**2,1,1,1]);return s.batchToSpaceND(F,[this.scale,this.scale],[[0,0],[0,0]])})}getClassName(){return"BoxUpscale"}}function N(T=2){return new I(T)}class A{constructor(P){this.nn=s.sequential(),this.nLatents=256,this.nPitches=61,this.minMidiPitch=24,this.maxMidiPitch=84,this.midiPitches=this.maxMidiPitch-this.minMidiPitch+1,this.checkpointURL=P}async initialize(){const P=o.d.now(),O=await Object(o.a)(this.checkpointURL+"/weights_manifest.json").then(F=>F.json()).then(F=>s.io.loadWeights(F,this.checkpointURL));s.tidy(()=>{for(const F in O)if(F.includes("kernel")){const G=O[F].shape[0]*O[F].shape[1]*O[F].shape[2],U=O[F];O[F]=s.mul(U,s.sqrt(2/G)),U.dispose()}this.build(O),this.initialized=!0,r.logWithDuration("Initialized model",P,"GANSynth")}),Object.keys(O).map(F=>O[F].dispose())}dispose(){this.initialized&&(this.nn.dispose(),this.initialized=!1)}isInitialized(){return this.initialized}build(P){s.tidy(()=>{const O={filters:256,kernelSize:[2,16],strides:[1,1],activation:"linear",useBias:!0,padding:"valid",dilationRate:[1,1],trainable:!1},F={inputShape:[1,1,this.nLatents+this.nPitches]};this.nn.add(x(1e-8,F)),this.nn.add(function(U=2,Q=16,ne={}){return new w(U,Q,ne)}(2,16)),this.nn.add(s.layers.conv2d(O)),this.nn.add(s.layers.leakyReLU({alpha:.2})),this.nn.add(x()),O.padding="same",O.kernelSize=[3,3],this.nn.add(s.layers.conv2d(O)),this.nn.add(s.layers.leakyReLU({alpha:.2})),this.nn.add(x());const G=[256,256,256,128,64,32];for(let U=0;U<G.length;U++)this.nn.add(N(2)),O.filters=G[U],this.nn.add(s.layers.conv2d(O)),this.nn.add(s.layers.leakyReLU({alpha:.2})),this.nn.add(x()),this.nn.add(s.layers.conv2d(O)),this.nn.add(s.layers.leakyReLU({alpha:.2})),this.nn.add(x());O.filters=2,O.kernelSize=[1,1],O.activation="tanh",this.nn.add(s.layers.conv2d(O)),this.setWeights(P)})}setWeights(P){function O(U){const Q=P[U];if(Q===void 0)throw Error("Variable not found: "+U);return Q}const F="Generator/progressive_gan_generator/progressive_gan_block_",G=[O(F+"1/conv0/conv2d/kernel/ExponentialMovingAverage"),O(F+"1/conv0/bias/ExponentialMovingAverage"),O(F+"1/conv1/conv2d/kernel/ExponentialMovingAverage"),O(F+"1/conv1/bias/ExponentialMovingAverage"),O(F+"2/conv0/conv2d/kernel/ExponentialMovingAverage"),O(F+"2/conv0/bias/ExponentialMovingAverage"),O(F+"2/conv1/conv2d/kernel/ExponentialMovingAverage"),O(F+"2/conv1/bias/ExponentialMovingAverage"),O(F+"3/conv0/conv2d/kernel/ExponentialMovingAverage"),O(F+"3/conv0/bias/ExponentialMovingAverage"),O(F+"3/conv1/conv2d/kernel/ExponentialMovingAverage"),O(F+"3/conv1/bias/ExponentialMovingAverage"),O(F+"4/conv0/conv2d/kernel/ExponentialMovingAverage"),O(F+"4/conv0/bias/ExponentialMovingAverage"),O(F+"4/conv1/conv2d/kernel/ExponentialMovingAverage"),O(F+"4/conv1/bias/ExponentialMovingAverage"),O(F+"5/conv0/conv2d/kernel/ExponentialMovingAverage"),O(F+"5/conv0/bias/ExponentialMovingAverage"),O(F+"5/conv1/conv2d/kernel/ExponentialMovingAverage"),O(F+"5/conv1/bias/ExponentialMovingAverage"),O(F+"6/conv0/conv2d/kernel/ExponentialMovingAverage"),O(F+"6/conv0/bias/ExponentialMovingAverage"),O(F+"6/conv1/conv2d/kernel/ExponentialMovingAverage"),O(F+"6/conv1/bias/ExponentialMovingAverage"),O(F+"7/conv0/conv2d/kernel/ExponentialMovingAverage"),O(F+"7/conv0/bias/ExponentialMovingAverage"),O(F+"7/conv1/conv2d/kernel/ExponentialMovingAverage"),O(F+"7/conv1/bias/ExponentialMovingAverage"),O(F+"7/to_rgb/conv2d/kernel/ExponentialMovingAverage"),O(F+"7/to_rgb/bias/ExponentialMovingAverage")];this.nn.setWeights(G)}predict(P,O){return this.nn.predict(P,{batchSize:O})}randomSample(P){return s.tidy(()=>{const O=s.randomNormal([1,this.nLatents],0,1,"float32"),F=s.tensor1d([P-this.minMidiPitch],"int32"),G=s.oneHot(F,this.midiPitches),U=s.concat([O,G],1).expandDims(1).expandDims(1);return this.predict(U,1)})}specgramsToAudio(P){return y(P)}}},function(n,e,t){t.r(e),t.d(e,"OnsetsAndFrames",function(){return l});var s=t(2),r=t(20),o=t(12),i=t(15),c=t(10);function a(y,m,h){return y.shape[0]===1?y:s.tidy(()=>{const g=y.slice([0,0],[1,m]);let x=h%m;x<=3&&(x+=m);const w=y.slice([y.shape[0]-1,y.shape[1]-x],[-1,-1]);let I=[g,w];if(y.shape[0]>2){const N=y.shape[0]-2;I=[g,y.slice([1,3],[N,m]).as3D(1,N*m,-1),w]}return s.concat(I,1)})}class l{constructor(m,h=250){this.checkpointURL=m,this.chunkLength=h}async initialize(){this.dispose();const m=i.d.now(),h=await Object(i.a)(this.checkpointURL+"/weights_manifest.json").then(g=>g.json()).then(g=>s.io.loadWeights(g,this.checkpointURL));this.build(h),Object.keys(h).map(g=>h[g].dispose()),this.initialized=!0,o.logWithDuration("Initialized model",m,"O&F")}dispose(){this.initialized&&(this.onsetsCnn.dispose(),this.onsetsRnn.dispose(),this.activationCnn.dispose(),this.frameRnn.dispose(),this.velocityCnn.dispose(),this.initialized=!1)}isInitialized(){return this.initialized}async transcribeFromMelSpec(m,h=4){this.isInitialized()||this.initialize();const g=i.d.now();o.log("Computing onsets, frames, and velocities...","O&F",20);const[x,w,I]=s.tidy(()=>{const A=function(T,P){let O=Math.ceil(T.length/P),F=T.length%P,G=0;if(O>1&&F>0&&F<=3&&(O-=1,G=F,F=0),O===1)return s.tensor2d(T).expandDims(0);const U=P+6,Q=s.tensor2d(T.slice(0,U)).expandDims(0),ne=s.tensor2d(T.slice(T.length-U)).expandDims(0);if(O===2)return s.concat([Q,ne],0);let J;J=F?s.tensor2d(T).pad([[0,P-F],[0,0]]).as3D(O,P,-1):s.tensor2d(T.slice(0,T.length-G)).as3D(O,P,-1);const oe=s.slice(J,[0,P-3],[O-2,-1]),le=s.slice(J,[2,0],[-1,3]),ge=s.concat([oe,J.slice(1,O-2),le],1);return s.concat([Q,ge,ne],0)}(m,this.chunkLength);return this.processBatches(A,this.chunkLength,m.length,h)});o.log("Converting to NoteSequence...","O&F",20);const N=async function(A,T,P,O=.5,F=.5){const G=c.a.create(),U=new Uint32Array(88),Q=new Uint8Array(88);let ne=new Uint8Array(88);function J(Te,Ce){G.notes.push(c.a.Note.create({pitch:Te+21,startTime:.032*(U[Te]-1),endTime:.032*Ce,velocity:Q[Te]})),U[Te]=0}function oe(Te,Ce,Ne){U[Te]?ne[Te]||(J(Te,Ce),U[Te]=Ce+1,Q[Te]=Ne):(U[Te]=Ce+1,Q[Te]=Ne)}const le=s.tidy(()=>{let Te=s.greater(T,O),Ce=s.greater(A,F);return Te=Te.pad([[0,1],[0,0]]),Ce=Ce.pad([[0,1],[0,0]]),P=P.pad([[0,1],[0,0]]),Ce=s.logicalOr(Ce,Te),[Ce,Te,P]}),[ge,te,ce]=await Promise.all(le.map(Te=>Te.data()));le.forEach(Te=>Te.dispose());const ue=A.shape[0];for(let Te=0;Te<ue+1;++Te){for(let Ce=0;Ce<88;++Ce){const Ne=88*Te+Ce;te[Ne]?oe(Ce,Te,ce[Ne]):!ge[Ne]&&U[Ce]&&J(Ce,Te)}ne=te.slice(88*Te,88*(Te+1))}return G.totalTime=.032*ue,G}(x,w,I);return N.then(()=>{x.dispose(),w.dispose(),I.dispose(),o.logWithDuration("Transcribed from mel spec",g,"O&F")}),N}async transcribeFromAudioBuffer(m,h=4){const g=i.d.now(),x=async function(w){const I=await Object(r.j)(w);return Object(r.i)(Object(r.f)(I,{sampleRate:16e3,hopLength:512,nMels:229,nFft:2048,fMin:30}))}(m);return x.then(()=>o.logWithDuration("Converted audio to mel spec",g,"O&F",20)),x.then(w=>this.transcribeFromMelSpec(w.map(I=>Array.from(I),h)))}async transcribeFromAudioFile(m){const h=await Object(r.d)(m);return this.transcribeFromAudioBuffer(h)}async transcribeFromAudioURL(m){const h=await Object(r.e)(m);return this.transcribeFromAudioBuffer(h)}processBatches(m,h,g,x){const w=G=>[this.onsetsCnn.predict(G,x),this.activationCnn.predict(G,x),this.velocityCnn.predict(G,x)];let I,N,A;if(m.shape[0]===1)[I,N,A]=w(m.expandDims(-1));else{const G=w(m.expandDims(-1)),U=[];for(let Q=0;Q<3;++Q)U.push(a(G[Q],h,g));[I,N,A]=U}const T=this.onsetsRnn.predict(I,this.chunkLength);I.dispose();const P=s.concat3d([T,N],-1);N.dispose();const O=this.frameRnn.predict(P,this.chunkLength),F=s.clipByValue(A,0,1).mul(s.scalar(80)).add(s.scalar(10)).toInt();return A.dispose(),[O.squeeze(),T.squeeze(),F.squeeze()]}build(m){s.tidy(()=>{this.onsetsCnn=new d,this.onsetsCnn.setWeights(m,"onsets"),this.onsetsRnn=new f([null,this.onsetsCnn.outputShape[2]]),this.onsetsRnn.setWeights(m,"onsets","onset_probs"),this.activationCnn=new d("sigmoid"),this.activationCnn.setWeights(m,"frame","activation_probs"),this.frameRnn=new f([null,176]),this.frameRnn.setWeights(m,"frame","frame_probs"),this.velocityCnn=new d("linear"),this.velocityCnn.setWeights(m,"velocity","onset_velocities")})}}class d{constructor(m){this.nn=s.sequential();const h={filters:48,kernelSize:[3,3],activation:"linear",useBias:!1,padding:"same",dilationRate:[1,1],inputShape:[null,229,1],trainable:!1},g={scale:!1,trainable:!1};this.nn.add(s.layers.conv2d(h)),this.nn.add(s.layers.batchNormalization(g)),this.nn.add(s.layers.activation({activation:"relu"})),h.inputShape=null,this.nn.add(s.layers.conv2d(h)),this.nn.add(s.layers.batchNormalization(g)),this.nn.add(s.layers.activation({activation:"relu"})),this.nn.add(s.layers.maxPooling2d({poolSize:[1,2],strides:[1,2]})),h.filters=96,this.nn.add(s.layers.conv2d(h)),this.nn.add(s.layers.batchNormalization(g)),this.nn.add(s.layers.activation({activation:"relu"})),this.nn.add(s.layers.maxPooling2d({poolSize:[1,2],strides:[1,2]}));const x=this.nn.outputShape;this.nn.add(s.layers.reshape({targetShape:[x[1],x[2]*x[3]]})),this.nn.add(s.layers.dense({units:768,activation:"relu",trainable:!1})),m&&this.nn.add(s.layers.dense({units:88,activation:m,trainable:!1})),this.outputShape=this.nn.outputShape}dispose(){this.nn.dispose()}predict(m,h){return this.nn.predict(m,{batchSize:h})}setWeights(m,h,g){function x(I){const N=m[I];if(N===void 0)throw Error("Variable not found: "+I);return N}let w=[x(h+"/conv0/weights"),x(h+"/conv0/BatchNorm/beta"),x(h+"/conv0/BatchNorm/moving_mean"),x(h+"/conv0/BatchNorm/moving_variance"),x(h+"/conv1/weights"),x(h+"/conv1/BatchNorm/beta"),x(h+"/conv1/BatchNorm/moving_mean"),x(h+"/conv1/BatchNorm/moving_variance"),x(h+"/conv2/weights"),x(h+"/conv2/BatchNorm/beta"),x(h+"/conv2/BatchNorm/moving_mean"),x(h+"/conv2/BatchNorm/moving_variance"),x(h+"/fc_end/weights"),x(h+"/fc_end/biases")];g&&(w=w.concat([x(`${h}/${g}/weights`),x(`${h}/${g}/biases`)])),this.nn.setWeights(w)}}class f{constructor(m,h=384){this.dense=s.sequential(),this.units=h,this.lstm=function(){const g=s.layers.lstm({inputShape:m,units:h,returnSequences:!0,recurrentActivation:"sigmoid",returnState:!0,kernelInitializer:"zeros",recurrentInitializer:"zeros",biasInitializer:"zeros",trainable:!1}),x=[s.input({shape:m}),s.input({shape:[h]}),s.input({shape:[h]})],w=g.apply(x);return s.model({inputs:x,outputs:w})}(),this.dense.add(s.layers.dense({inputShape:[null,h],units:88,activation:"sigmoid",trainable:!1}))}dispose(){this.lstm.dispose(),this.dense.dispose()}setWeights(m,h,g){function x(A){const T=m[A];if(T===void 0)throw Error("Variable not found: "+A);return T}const w=(A,T=0)=>{const[P,O,F,G]=s.split(A,4,-1);return s.concat([P,F.add(s.scalar(T)),O,G],-1)},I=A=>s.split(w(A),[A.shape[0]-this.units,this.units]),N="cudnn_lstm/rnn/multi_rnn_cell/cell_0/cudnn_compatible_lstm_cell";this.lstm.setWeights(I(x(`${h}/${N}/kernel`)).concat(w(x(`${h}/${N}/bias`),1))),this.dense.setWeights([x(`${h}/${g}/weights`),x(`${h}/${g}/biases`)])}predict(m,h){return s.tidy(()=>this.predictImpl(m,h))}predictImpl(m,h){const g=m.shape[1],x=Math.ceil(g/h);let w=[s.zeros([1,this.units]),s.zeros([1,this.units])];const I=[];for(let N=0;N<x;++N){const A=m.slice([0,N*h],[-1,N<x-1?h:-1]),T=this.lstm.predict([A,w[0],w[1]]);I.push(this.dense.predict(T[0])),w=T.slice(1)}return I.length===1?I[0]:s.concat3d(I,1)}}},function(n,e,t){t.r(e),t.d(e,"Coconet",function(){return f});var s=t(0),r=t(15),o=t(12),i=t(13),c=t(10);const a=/iPad|iPhone|iPod/.test(navigator.userAgent),l={useSoftmaxLoss:!0,batchNormVarianceEpsilon:1e-7,numInstruments:4,numFilters:128,numLayers:33,numRegularConvLayers:0,dilation:[[1,1],[2,2],[4,4],[8,8],[16,16],[16,32],[1,1],[2,2],[4,4],[8,8],[16,16],[16,32],[1,1],[2,2],[4,4],[8,8],[16,16],[16,32],[1,1],[2,2],[4,4],[8,8],[16,16],[16,32],[1,1],[2,2],[4,4],[8,8],[16,16],[16,32]],layers:null,interleaveSplitEveryNLayers:16,numPointwiseSplits:4};class d{constructor(m,h){this.residualPeriod=2,this.outputForResidual=null,this.residualCounter=-1,this.rawVars=null,this.spec=m,this.rawVars=h}dispose(){this.rawVars!==null&&s.gb(this.rawVars),this.outputForResidual&&this.outputForResidual.dispose()}predictFromPianoroll(m,h){return s.Hb(()=>{let g=this.getConvnetInput(m,h);const x=this.spec.layers.length;for(let w=0;w<x;w++){this.residualCounter+=1,this.residualSave(g);let I=null;this.spec.interleaveSplitEveryNLayers&&w>0&&w<x-2&&w%(this.spec.interleaveSplitEveryNLayers+1)==0&&(I=this.spec.numPointwiseSplits),g=this.applyConvolution(g,this.spec.layers[w],w,w>=this.spec.numRegularConvLayers,I),g=this.applyResidual(g,w===0,w===x-1,w),g=this.applyActivation(g,this.spec.layers[w],w),g=this.applyPooling(g,this.spec.layers[w],w)}return this.computePredictions(g)})}computePredictions(m){return this.spec.useSoftmaxLoss?m.transpose([0,1,3,2]).softmax().transpose([0,1,3,2]):m.sigmoid()}residualReset(){this.outputForResidual=null,this.residualCounter=0}residualSave(m){this.residualCounter%this.residualPeriod==1&&(this.outputForResidual=m)}applyResidual(m,h,g,x){return this.outputForResidual==null?m:this.outputForResidual.shape[this.outputForResidual.shape.length-1]!==m.shape[m.shape.length-1]?(this.residualReset(),m):(this.residualCounter%this.residualPeriod==0&&(h||g||(m=m.add(this.outputForResidual))),m)}getVar(m,h){const g=`model/conv${h}/${m}`;return this.rawVars[g]}getSepConvVar(m,h){const g=`model/conv${h}/SeparableConv2d/${m}`;return this.rawVars[g]}getPointwiseSplitVar(m,h,g){const x=`model/conv${h}/split_${h}_${g}/${m}`;return this.rawVars[x]}applyConvolution(m,h,g,x,w){if(h.filters==null)return m;const I=h.filters,N=h.convStride||1,A=h.convPad?h.convPad.toLowerCase():"same";let T=null;if(x){const P=this.getSepConvVar("depthwise_weights",g);if(w){T=s.eb(m,P,[N,N],A,"NHWC",h.dilation);const O=s.Cb(T,w,T.rank-1),F=[];for(let G=0;G<w;G++){const U=I[3]/w,Q=this.getPointwiseSplitVar("kernel",g,G),ne=this.getPointwiseSplitVar("bias",g,G),J=s.mb(O[G].reshape([-1,U]),Q,!1,!1),oe=s.W(J,ne);F.push(oe.reshape([O[G].shape[0],O[G].shape[1],O[G].shape[2],U]))}T=s.bb(F,T.rank-1)}else{const O=this.getSepConvVar("pointwise_weights",g),F=this.getSepConvVar("biases",g);T=s.zb(m,P,O,[N,N],A,h.dilation,"NHWC").add(F)}}else{const P=this.getVar("weights",g),O=h.convStride||1,F=h.convPad?h.convPad.toLowerCase():"same";T=s.cb(m,P,[O,O],F,"NHWC",[1,1])}return this.applyBatchnorm(T,g)}applyBatchnorm(m,h){const g=this.getVar("gamma",h),x=this.getVar("beta",h),w=this.getVar("popmean",h),I=this.getVar("popvariance",h);if(a){const N=I.arraySync()[0][0][0],A=s.Gb(N.map(T=>Math.sqrt(T+this.spec.batchNormVarianceEpsilon)));return m.sub(w).mul(g.div(A)).add(x)}return s.Y(m,s.Db(w),s.Db(I),s.Db(x),s.Db(g),this.spec.batchNormVarianceEpsilon)}applyActivation(m,h,g){return h.activation==="identity"?m:m.relu()}applyPooling(m,h,g){if(h.pooling==null)return m;const x=h.pooling,w=h.poolPad?h.poolPad.toLowerCase():"same";return s.ob(m,[x[0],x[1]],[x[0],x[1]],w)}getConvnetInput(m,h){return m=s.yb(1,"float32").sub(h).mul(m),h=s.yb(1,"float32").sub(h),m.concat(h,3)}}class f{constructor(m){this.spec=null,this.initialized=!1,this.checkpointURL=m,this.spec=l}async initialize(){this.dispose();const m=r.d.now();this.instantiateFromSpec();const h=await Object(r.a)(this.checkpointURL+"/weights_manifest.json").then(g=>g.json()).then(g=>s.kb.loadWeights(g,this.checkpointURL));this.convnet=new d(this.spec,h),this.initialized=!0,o.logWithDuration("Initialized model",m,"Coconet")}dispose(){this.convnet&&this.convnet.dispose(),this.initialized=!1}isInitialized(){return this.initialized}instantiateFromSpec(){this.spec.layers=[],this.spec.layers.push({filters:[3,3,2*this.spec.numInstruments,this.spec.numFilters]});for(let m=0;m<this.spec.numLayers-3;m++)this.spec.layers.push({filters:[3,3,this.spec.numFilters,this.spec.numFilters],dilation:this.spec.dilation?this.spec.dilation[m]:null});this.spec.layers.push({filters:[2,2,this.spec.numFilters,this.spec.numFilters]}),this.spec.layers.push({filters:[2,2,this.spec.numFilters,this.spec.numInstruments],activation:"identity"})}async infill(m,h){if(i.assertIsRelativeQuantizedSequence(m),m.notes.length===0)throw new Error(`NoteSequence ${m.id} does not have any notes to infill.`);const g=m.totalQuantizedSteps||m.notes[m.notes.length-1].quantizedEndStep,x=function(P,O){const F=s.Hb(()=>s.Nb([O,46,4]).arraySync());return P.notes.forEach(G=>{const U=G.pitch-36,Q=G.quantizedStartStep,ne=G.quantizedEndStep-G.quantizedStartStep,J=G.instrument;if(J<0||J>=4)o.log(`Found invalid voice ${J}. Skipping.`,"Coconet",5);else{if(Q+ne>O)throw new Error(`NoteSequence ${P.id} has notes that are longer than the sequence's
          totalQuantizedSteps.`);for(let oe=Q;oe<Q+ne;oe++)F[oe][U][J]=1}}),s.Gb([F])}(m,g);let w,I=.99,N=96;h?(N=h.numIterations||N,I=h.temperature||I,w=this.getCompletionMaskFromInput(h.infillMask,x)):w=this.getCompletionMask(x);const A=await this.run(x,N,I,w),T=function(P,O){const F=s.Hb(()=>P.reshape([O,46,4]).arraySync()),G=c.a.create(),U=[];for(let Q=0;Q<O;Q++)for(let ne=0;ne<46;ne++)for(let J=0;J<4;J++)if(F[Q][ne][J]===1){const oe=c.a.Note.create({pitch:ne+36,instrument:J,quantizedStartStep:Q,quantizedEndStep:Q+1});U.push(oe)}return G.notes=U,G.totalQuantizedSteps=U[U.length-1].quantizedEndStep,G.quantizationInfo={stepsPerQuarter:4},G}(A,g);return x.dispose(),A.dispose(),w.dispose(),T}async run(m,h,g,x){return this.gibbs(m,h,g,x)}getCompletionMaskFromInput(m,h){if(m){const g=s.Z([h.shape[1],4]);for(let x=0;x<m.length;x++)g.set(1,m[x].step,m[x].voice);return s.Hb(()=>g.toTensor().expandDims(1).tile([1,46,1]).expandDims(0))}return this.getCompletionMask(h)}getCompletionMask(m){return s.Hb(()=>{const h=m.sum(2,!0).equal(s.yb(0,"float32"));return s.ab(h,"float32").add(s.Ob(m))})}async gibbs(m,h,g,x){const w=s.yb(h,"float32");let I=m.clone();for(let N=0;N<h;N++){const A=this.yaoSchedule(N,w),T=this.bernoulliMask(I.shape,A,x);await s.qb();const P=s.Hb(()=>this.convnet.predictFromPianoroll(I,T));await s.qb(),I=s.Hb(()=>{const O=this.samplePredictions(P,g),F=s.Mb(s.ab(T,"bool"),O,I);return I.dispose(),P.dispose(),T.dispose(),A.dispose(),F}),await s.qb()}return w.dispose(),I}yaoSchedule(m,h){return s.Hb(()=>{const g=s.yb(.1,"float32"),x=s.yb(.9,"float32"),w=s.yb(.7,"float32"),I=x.sub(g).mul(s.yb(m,"float32")).div(h),N=x.sub(I).div(w);return g.reshape([1]).concat(N.reshape([1])).max()})}bernoulliMask(m,h,g){return s.Hb(()=>{const[x,w,I,N]=m,A=s.Ib(s.tb([x,w,1,N],0,1,"float32"),[1,1,I,1]).less(h);return s.ab(A,"float32").mul(g)})}samplePredictions(m,h){return s.Hb(()=>{m=s.sb(m,s.yb(1/h,"float32"));const g=s.db(m,2,!1,!1),x=g.slice([0,0,g.shape[2]-1,0],[g.shape[0],g.shape[1],1,g.shape[3]]),w=s.tb(x.shape,0,1,"float32").mul(x).less(g).argMax(2);return s.rb(w.flatten(),m.shape[2],1,0).reshape([m.shape[0],m.shape[1],m.shape[3],m.shape[2]]).transpose([0,1,3,2])})}}},function(n,e,t){t.r(e),t.d(e,"MusicRNN",function(){return f});var s=t(2),r=t(48),o=t(37),i=t(36),c=t(15),a=t(12),l=t(13);class d{constructor(m,h,g){this.cells=m,this.attnLength=h,this.attnSize=g}static isWrapped(m){return"rnn/attention_cell_wrapper/kernel"in m}initialize(m){const h="rnn/attention_cell_wrapper/";this.attnInputMatrix=m[h+"kernel"],this.attnInputBias=m[h+"bias"],this.attnW=m[h+"attention/attn_w"],this.attnV=m[h+"attention/attn_v"],this.attnMatrix=m[h+"attention/kernel"],this.attnBias=m[h+"attention/bias"],this.attnOutputMatrix=m[h+"attention_output_projection/kernel"],this.attnOutputBias=m[h+"attention_output_projection/bias"]}initState(){return{attention:s.zeros([this.attnSize]),attentionState:s.zeros([1,this.attnSize*this.attnLength])}}call(m,h,g,x){const w=s.concat([m,x.attention.as2D(1,-1)],1),I=s.add(s.matMul(w,this.attnInputMatrix),this.attnInputBias.as2D(1,-1));[h,g]=s.multiRNNCell(this.cells,I,h,g);const N=s.reshape(x.attentionState,[-1,this.attnLength,1,this.attnSize]),A=s.conv2d(N,this.attnW,[1,1],"same"),T=[];for(let ge=0;ge<h.length;ge++)T.push(h[ge]),T.push(g[ge]);const P=s.concat(T,1),O=s.matMul(P,this.attnMatrix).reshape([-1,1,1,this.attnSize]),F=s.sum(s.mul(this.attnV,s.tanh(s.add(A,O))),[2,3]),G=s.softmax(F),U=s.sum(s.mul(s.reshape(G,[-1,this.attnLength,1,1]),N),[1,2]).reshape([-1,this.attnSize]),Q=x.attentionState.reshape([-1,this.attnLength,this.attnSize]),ne=s.slice(Q,[0,1,0],[Q.shape[0],Q.shape[1]-1,Q.shape[2]]),J=s.add(s.matMul(s.concat([g[2],U],1),this.attnOutputMatrix),this.attnOutputBias),oe=U.flatten(),le=s.concat([ne,J.as3D(J.shape[0],1,J.shape[1])],1).reshape([-1,this.attnLength*this.attnSize]);return{output:J,c:h,h:g,attentionState:{attention:oe,attentionState:le}}}}class f{constructor(m,h){this.checkpointURL=m,this.spec=h,this.initialized=!1,this.rawVars={},this.biasShapes=[],this.lstmCells=[]}isInitialized(){return this.initialized}instantiateFromSpec(){this.dataConverter=i.converterFromSpec(this.spec.dataConverter),this.attentionLength=this.spec.attentionLength,this.chordEncoder=this.spec.chordEncoder?o.chordEncoderFromType(this.spec.chordEncoder):void 0,this.auxInputs=this.spec.auxInputs?this.spec.auxInputs.map(m=>r.auxiliaryInputFromSpec(m)):void 0}async initialize(){this.dispose();const m=c.d.now();this.spec||await Object(c.a)(this.checkpointURL+"/config.json").then(I=>I.json()).then(I=>{if(I.type!=="MusicRNN")throw new Error(`Attempted to instantiate MusicRNN model with incorrect type:
                  `+I.type);this.spec=I}),this.instantiateFromSpec();const h=await Object(c.a)(this.checkpointURL+"/weights_manifest.json").then(I=>I.json()).then(I=>s.io.loadWeights(I,this.checkpointURL)),g=d.isWrapped(h),x=g?"rnn/attention_cell_wrapper/":"rnn/";this.forgetBias=s.scalar(1),this.lstmCells.length=0,this.biasShapes.length=0;let w=0;for(;;){const I=x+"multi_rnn_cell/cell_%d/basic_lstm_cell/".replace("%d",w.toString());if(!(I+"kernel"in h))break;this.lstmCells.push((N,A,T)=>s.basicLSTMCell(this.forgetBias,h[I+"kernel"],h[I+"bias"],N,A,T)),this.biasShapes.push(h[I+"bias"].shape[0]),++w}this.lstmFcW=h["fully_connected/weights"],this.lstmFcB=h["fully_connected/biases"],g&&(this.attentionWrapper=new d(this.lstmCells,this.attentionLength,this.biasShapes[0]/4),this.attentionWrapper.initialize(h)),this.rawVars=h,this.initialized=!0,a.logWithDuration("Initialized model",m,"MusicRNN")}dispose(){Object.keys(this.rawVars).forEach(m=>this.rawVars[m].dispose()),this.rawVars={},this.forgetBias&&(this.forgetBias.dispose(),this.forgetBias=void 0),this.initialized=!1}async continueSequence(m,h,g,x){return(await this.continueSequenceImpl(m,h,g,x,!1)).sequence}async continueSequenceAndReturnProbabilities(m,h,g,x){return this.continueSequenceImpl(m,h,g,x,!0)}async continueSequenceImpl(m,h,g,x,w){if(l.assertIsRelativeQuantizedSequence(m),this.chordEncoder&&!x)throw new Error("Chord progression expected but not provided.");if(!this.chordEncoder&&x)throw new Error("Unexpected chord progression provided.");this.initialized||await this.initialize();const I=c.d.now(),N=s.tidy(()=>{const O=this.dataConverter.toTensor(m),F=O.shape[0],G=O.shape[1],U=this.chordEncoder?this.chordEncoder.encodeProgression(x,F+h):void 0,Q=this.auxInputs?s.concat(this.auxInputs.map(oe=>oe.getTensors(F+h)),1):void 0,ne=this.sampleRnn(O,h,g,U,Q,w),J=ne.samples;return{samples:s.stack(J).as2D(J.length,G),probs:ne.probs}}),A=await N,T=this.dataConverter.toNoteSequence(A.samples,m.quantizationInfo.stepsPerQuarter),P=[];if(w)for(let O=0;O<A.probs.length;O++)P.push(await A.probs[O].data()),A.probs[O].dispose();return N.samples.dispose(),T.then(()=>a.logWithDuration("Continuation completed",I,"MusicRNN",20)),{sequence:T,probs:P}}sampleRnn(m,h,g,x,w,I){const N=m.shape[0],A=m.shape[1];let T=[],P=[];for(let oe=0;oe<this.biasShapes.length;oe++)T.push(s.zeros([1,this.biasShapes[oe]/4])),P.push(s.zeros([1,this.biasShapes[oe]/4]));let O,F=this.attentionWrapper?this.attentionWrapper.initState():null;m=m.toFloat();const G=[],U=[],Q=s.split(m.toFloat(),N),ne=x?s.split(x,x.shape[0]):void 0,J=w?s.split(w,w.shape[0]):void 0;for(let oe=0;oe<N+h;oe++){let le;if(oe<N)le=Q[oe];else{let te,ce=O.matMul(this.lstmFcW).add(this.lstmFcB).as1D();g?(ce=ce.div(s.scalar(g)),te=s.multinomial(ce,1).as1D()):te=ce.argMax().as1D(),I&&U.push(s.softmax(ce)),le=s.oneHot(te,A).toFloat(),G.push(le.as1D())}if(oe===N+h-1)break;const ge=[];if(ne&&ge.push(ne[oe+1]),ge.push(le),J&&ge.push(J[oe]),le=s.concat(ge,1),this.attentionWrapper){const te=this.attentionWrapper.call(le,T,P,F);T=te.c,P=te.h,F=te.attentionState,O=te.output}else[T,P]=s.multiRNNCell(this.lstmCells,le,T,P),O=P[P.length-1]}return{samples:G,probs:U}}}},function(n,e,t){t.r(e),t.d(e,"MidiMe",function(){return c}),t.d(e,"Decoder",function(){return I}),t.d(e,"Encoder",function(){return m}),t.d(e,"MusicVAE",function(){return Q});var s=t(2),r=t(12),o=t(15);class i extends s.layers.Layer{constructor(){super({})}computeOutputShape(J){return J[0]}call(J){return s.tidy(()=>{const[oe,le]=J;return s.add(s.mul(s.randomNormal(le.shape),le),oe)})}getClassName(){return"SamplingLayer"}}class c{constructor(J={}){this.trained=!1,this.initialized=!1,this.config={encoder_layers:J.encoder_layers||[1024,256,64],decoder_layers:J.decoder_layers||[64,256,1024],input_size:J.input_size||256,latent_size:J.latent_size||4,beta:J.beta||1,epochs:J.epochs||10}}dispose(){this.initialized&&(this.encoder.dispose(),this.decoder.dispose(),this.vae.dispose(),this.initialized=!1)}initialize(){this.dispose();const J=o.d.now(),oe=s.input({shape:[this.config.input_size]});this.encoder=this.getEncoder(oe);const[le,,]=this.encoder.apply(oe);this.decoder=this.getDecoder(le.shape.slice(1));const ge=this.decoder.apply(le);this.vae=s.model({inputs:oe,outputs:ge,name:"vae"}),this.initialized=!0,r.logWithDuration("Initialized model",J,"MidiMe")}async train(J,oe){const le=o.d.now();this.trained=!1;let ge=.001;s.ENV.get("WEBGL_RENDER_FLOAT32_ENABLED")===!1&&s.ENV.get("WEBGL_DOWNLOAD_FLOAT_ENABLED")===!1&&s.ENV.get("WEBGL_VERSION")===1&&(ge=5e-5);const te=s.train.adam(ge);for(let ce=0;ce<this.config.epochs;ce++)await s.nextFrame(),await te.minimize(()=>s.tidy(()=>{const[,ue,Te]=this.encoder.predict(J),Ce=this.vae.predict(J),Ne=this.loss(ue,Te,Ce,J);return oe&&oe(ce,{y:Ce,total:Ne.totalLoss.arraySync(),losses:[Ne.reconLoss.arraySync(),Ne.latentLoss.arraySync()]}),Ne.totalLoss})),await s.nextFrame();r.logWithDuration("Training finished",le,"MidiMe"),this.trained=!0,te.dispose()}async sample(J=1){return this.initialized||await this.initialize(),s.tidy(()=>{const oe=s.randomNormal([J,this.config.latent_size]);return this.decoder.predict(oe)})}async decode(J){return this.initialized||await this.initialize(),this.decoder.predict(J)}async encode(J){this.initialized||await this.initialize();const[oe,,]=this.encoder.predict(J);return oe}predict(J){return this.vae.predict(J)}getEncoder(J){let oe=J;for(let ce=0;ce<this.config.encoder_layers.length;ce++)oe=s.layers.dense({units:this.config.encoder_layers[ce],activation:"relu"}).apply(oe);const le=this.getAffineLayers(oe,this.config.latent_size,J,!1),ge=this.getAffineLayers(oe,this.config.latent_size,J,!0),te=new i().apply([le,ge]);return s.model({inputs:J,outputs:[te,le,ge],name:"encoder"})}getDecoder(J){const oe=s.input({shape:J});let le=oe;for(let te=0;te<this.config.decoder_layers.length;te++)le=s.layers.dense({units:this.config.decoder_layers[te],activation:"relu"}).apply(le);const ge=this.getAffineLayers(le,this.config.input_size,oe,!1);return s.model({inputs:oe,outputs:ge,name:"decoder"})}loss(J,oe,le,ge){return s.tidy(()=>{const te=this.klLoss(J,oe),ce=this.reconstructionLoss(ge,le);return{latentLoss:te,reconLoss:ce,totalLoss:s.add(ce,s.mul(te,this.config.beta))}})}reconstructionLoss(J,oe){return s.tidy(()=>{const le=s.pow(s.sub(J,oe),2),ge=s.div(le,s.mul(2,s.pow(s.ones([1]),2)));return s.mean(s.sum(ge,-1))})}klLoss(J,oe){return s.tidy(()=>{const le=s.pow(J,2),ge=s.pow(oe,2),te=s.add(1,s.log(ge)),ce=s.add(le,ge),ue=s.sub(te,ce),Te=s.div(s.mean(s.sum(ue,-1)),2);return s.mul(-1,Te)})}getAffineLayers(J,oe,le,ge){const te=s.layers.dense({units:oe}).apply(J);return ge?s.layers.activation({activation:"softplus"}).apply(te):te}}var a=t(37),l=t(8),d=t(36);class f{constructor(J,oe){if(J===void 0)throw Error("`kernel` is undefined.");if(oe===void 0)throw Error("`bias` is undefined.");this.kernel=J,this.bias=oe}}function y(ne,J){return J.matMul(ne.kernel).add(ne.bias)}class m{}class h{constructor(J,oe){this.lstmFwVars=J,this.lstmBwVars=oe}process(J){return s.tidy(()=>[this.singleDirection(J,!0),this.singleDirection(J,!1)])}singleDirection(J,oe){const le=J.shape[0],ge=J.shape[1],te=oe?this.lstmFwVars:this.lstmBwVars;let ce=[s.zeros([le,te.bias.shape[0]/4]),s.zeros([le,te.bias.shape[0]/4])];const ue=s.scalar(1),Te=(Re,Ae)=>s.basicLSTMCell(ue,te.kernel,te.bias,Re,Ae[0],Ae[1]),Ce=s.split(J.toFloat(),ge,1),Ne=[];for(const Re of oe?Ce:Ce.reverse())ce=Te(Re.squeeze([1]),ce),Ne.push(ce[1]);return oe?Ne:Ne.reverse()}}class g extends m{constructor(J,oe,le){super(),this.bidirectionalLstm=new h(J,oe),this.muVars=le,this.zDims=le?this.muVars.bias.shape[0]:null}encode(J,oe){if(oe)throw new Error("Variable-length segments not supported in flat encoder");return s.tidy(()=>{const[le,ge]=this.bidirectionalLstm.process(J),te=s.concat([le[le.length-1],ge[0]],1);return this.muVars?y(this.muVars,te):te})}}class x extends m{constructor(J,oe,le){super(),this.baseEncoders=J,this.numSteps=oe,this.muVars=le,this.zDims=this.muVars.bias.shape[0]}encode(J,oe){if(oe){if(J.shape[0]!==1)throw new Error("When using variable-length segments, batch size must be 1.");if(oe.length!==this.numSteps[0])throw new Error("Must provide length for all variable-length segments.")}return s.tidy(()=>{let le=J;for(let ge=0;ge<this.baseEncoders.length;++ge){const te=this.numSteps[ge],ce=s.split(le,te,1),ue=[];for(let Te=0;Te<te;++Te)ue.push(this.baseEncoders[ge].encode(ge===0&&oe?s.slice3d(ce[Te],[0,0,0],[1,oe[Te],-1]):ce[Te]));le=s.stack(ue,1)}return y(this.muVars,le.squeeze([1]))})}}function w(ne,J,oe){const le=[],ge=[],te=[],ce=s.split(y(oe,ne).tanh(),2*J.length,1);for(let ue=0;ue<J.length;++ue){const Te=J[ue],Ce=s.scalar(1);le.push((Ne,Re,Ae)=>s.basicLSTMCell(Ce,Te.kernel,Te.bias,Ne,Re,Ae)),ge.push(ce[2*ue]),te.push(ce[2*ue+1])}return{cell:le,c:ge,h:te}}class I{}class N extends I{constructor(J,oe,le,ge,te,ce){super(),this.lstmCellVars=J,this.zToInitStateVars=oe,this.outputProjectVars=le,this.zDims=this.zToInitStateVars.kernel.shape[0],this.outputDims=ge||le.bias.shape[0],te&&ce&&(this.controlBidirectionalLstm=new h(te,ce))}decode(J,oe,le,ge,te){const ce=J.shape[0];return s.tidy(()=>{const ue=w(J,this.lstmCellVars,this.zToInitStateVars);let Te=te?s.expandDims(te,0):void 0;const Ce=[];let Ne=le||s.zeros([ce,this.outputDims]);if(this.controlBidirectionalLstm){const[Ae,we]=this.controlBidirectionalLstm.process(Te);Te=s.concat([s.stack(Ae,1),s.stack(we,1)],2)}const Re=Te?s.split(s.tile(Te,[ce,1,1]),te.shape[0],1):void 0;for(let Ae=0;Ae<oe;++Ae){const we=Re?[Ne,J,s.squeeze(Re[Ae],[1])]:[Ne,J];[ue.c,ue.h]=s.multiRNNCell(ue.cell,s.concat(we,1),ue.c,ue.h);const Le=y(this.outputProjectVars,ue.h[ue.h.length-1]);Ne=this.sample(Le,ge),Ce.push(Ne)}return s.stack(Ce,1)})}}class A extends N{sample(J,oe){const le=J;return(oe?s.greaterEqual(s.sigmoid(le.div(s.scalar(oe))),s.randomUniform(le.shape)):s.greaterEqual(le,0)).toFloat()}}class T extends N{sample(J,oe){const le=J,ge=oe?s.multinomial(le.div(s.scalar(oe)),1).as1D():le.argMax(1).as1D();return s.oneHot(ge,this.outputDims).toFloat()}}class P extends N{constructor(J,oe,le,ge,te,ce){super(J,oe,le,ge.numDims,te,ce),this.nade=ge}sample(J,oe){const[le,ge]=s.split(J,[this.nade.numHidden,this.nade.numDims],1);return this.nade.sample(le,ge)}}class O extends N{sample(J,oe){let[le,ge,te]=s.split(J,3,1);if(ge=s.sigmoid(ge),te=s.tanh(te),oe){le=s.sigmoid(le.div(s.scalar(oe)));const ce=s.randomUniform(le.shape,0,1);le=s.greater(le,ce).toFloat()}else le=s.greater(s.sigmoid(le),.5).toFloat();return s.concat([le,ge,te],1)}}class F extends I{constructor(J){super(),this.coreDecoders=J,this.numDecoders=this.coreDecoders.length,this.zDims=this.coreDecoders[0].zDims,this.outputDims=this.coreDecoders.reduce((oe,le)=>oe+le.outputDims,0)}decodeSeparately(J,oe,le,ge,te){const ce=[];for(let ue=0;ue<this.coreDecoders.length;++ue)ce.push(this.coreDecoders[ue].decode(J,oe,le[ue],ge,te));return ce}decode(J,oe,le,ge,te){return s.tidy(()=>{const ce=this.decodeSeparately(J,oe,this.coreDecoders.map(ue=>le),ge,te);return s.concat(ce,-1)})}}class G extends I{constructor(J,oe,le,ge){super(),this.splitDecoder=new F(J),this.lstmCellVars=oe,this.zToInitStateVars=le,this.numSteps=ge,this.zDims=this.zToInitStateVars.kernel.shape[0],this.outputDims=this.splitDecoder.outputDims}decode(J,oe,le,ge,te){const ce=J.shape[0];return s.tidy(()=>{const ue=w(J,this.lstmCellVars,this.zToInitStateVars),Te=[];let Ce=new Array(this.splitDecoder.numDecoders).fill(void 0);const Ne=s.zeros([ce,1]),Re=te?s.split(te,this.numSteps):void 0;for(let Ae=0;Ae<this.numSteps;++Ae){[ue.c,ue.h]=s.multiRNNCell(ue.cell,Ne,ue.c,ue.h);const we=this.splitDecoder.decodeSeparately(ue.h[ue.h.length-1],oe/this.numSteps,Ce,ge,Re?Re[Ae]:void 0);Te.push(s.concat(we,-1)),Ce=we.map(Le=>Le.slice([0,Le.shape[1]-1,0],[ce,1,Le.shape[Le.rank-1]]).squeeze([1]).toFloat())}return s.concat(Te,1)})}}class U{constructor(J,oe){this.numDims=J.shape[0],this.numHidden=J.shape[2],this.encWeights=J.as2D(this.numDims,this.numHidden),this.decWeightsT=oe.as2D(this.numDims,this.numHidden)}sample(J,oe){const le=J.shape[0];return s.tidy(()=>{const ge=[];let te=J.clone();for(let ce=0;ce<this.numDims;ce++){const ue=s.sigmoid(te),Te=this.encWeights.slice([ce,0],[1,this.numHidden]).as1D(),Ce=this.decWeightsT.slice([ce,0],[1,this.numHidden]),Ne=oe.slice([0,ce],[le,1]).add(s.matMul(ue,Ce,!1,!0)).sigmoid().greaterEqual(s.scalar(.5)).toFloat().as1D();ce<this.numDims-1&&(te=te.add(s.outerProduct(Ne.toFloat(),Te))),ge.push(Ne)}return s.stack(ge,1)})}}class Q{constructor(J,oe){this.initialized=!1,this.checkpointURL=J,this.spec=oe}instantiateFromSpec(){this.dataConverter=d.converterFromSpec(this.spec.dataConverter),this.chordEncoder=this.spec.chordEncoder?a.chordEncoderFromType(this.spec.chordEncoder):void 0}dispose(){this.rawVars!==void 0&&Object.keys(this.rawVars).forEach(J=>this.rawVars[J].dispose()),this.encoder=void 0,this.decoder=void 0,this.initialized=!1}getLstmLayers(J,oe){const le=[];let ge=0;for(;;){const te=J.replace("%d",ge.toString());if(!(te+"kernel"in oe))break;le.push(new f(oe[te+"kernel"],oe[te+"bias"])),++ge}return le}async initialize(){this.dispose();const J=o.d.now();this.spec||await Object(o.a)(this.checkpointURL+"/config.json").then(Le=>Le.json()).then(Le=>{if(Le.type!=="MusicVAE")throw new Error(`Attempted to instantiate MusicVAE model with incorrect type:
                  `+Le.type);this.spec=Le}),this.instantiateFromSpec();const oe="cell_%d/bidirectional_rnn/%s/multi_rnn_cell/cell_0/lstm_cell/",le="encoder/"+oe,ge="encoder/hierarchical_level_%d/"+oe.replace("%d","0"),te="control_preprocessing/"+oe,ce=await Object(o.a)(this.checkpointURL+"/weights_manifest.json").then(Le=>Le.json()).then(Le=>s.io.loadWeights(Le,this.checkpointURL));this.rawVars=ce;const ue=new f(ce["encoder/mu/kernel"],ce["encoder/mu/bias"]);if(this.dataConverter.numSegments){const Le=this.getLstmLayers(ge.replace("%s","fw"),ce),pe=this.getLstmLayers(ge.replace("%s","bw"),ce);if(Le.length!==pe.length||Le.length!==2)throw Error(`Only 2 hierarchical encoder levels are supported. Got ${Le.length} forward and ${pe.length} backward.`);const B=[0,1].map(D=>new g(Le[D],pe[D]));this.encoder=new x(B,[this.dataConverter.numSegments,1],ue)}else{const Le=this.getLstmLayers(le.replace("%s","fw"),ce),pe=this.getLstmLayers(le.replace("%s","bw"),ce);if(Le.length!==pe.length||Le.length!==1)throw Error(`Only single-layer bidirectional encoders are supported. Got ${Le.length} forward and ${pe.length} backward.`);this.encoder=new g(Le[0],pe[0],ue)}const Te=te.replace("%s","fw").replace("%d","0")+"kernel"in ce,Ce=this.dataConverter.numSegments?"core_decoder/":"",Ne=[];if(this.dataConverter.NUM_SPLITS)for(let Le=0;Le<this.dataConverter.NUM_SPLITS;++Le)Ne.push(`${Ce}core_decoder_${Le}/decoder/`);else Ne.push(Ce+"decoder/");let Re=[null],Ae=[null];if(Te&&(Re=this.getLstmLayers(te.replace("%s","fw"),ce),Ae=this.getLstmLayers(te.replace("%s","bw"),ce),Re.length!==Ae.length||Re.length!==1))throw Error(`Only single-layer bidirectional control preprocessing is supported. Got ${Re.length} forward and ${Ae.length} backward.`);const we=Ne.map(Le=>{const pe=this.getLstmLayers(Le+"multi_rnn_cell/cell_%d/lstm_cell/",ce),B=new f(ce[Le+"z_to_initial_state/kernel"],ce[Le+"z_to_initial_state/bias"]),D=new f(ce[Le+"output_projection/kernel"],ce[Le+"output_projection/bias"]);return Le+"nade/w_enc"in ce?new P(pe,B,D,new U(ce[Le+"nade/w_enc"],ce[Le+"nade/w_dec_t"]),Re[0],Ae[0]):this.spec.dataConverter.type==="GrooveConverter"?new O(pe,B,D,void 0,Re[0],Ae[0]):this.spec.useBooleanDecoder?new A(pe,B,D,void 0,Re[0],Ae[0]):new T(pe,B,D,void 0,Re[0],Ae[0])});if(this.dataConverter.numSegments){const Le=this.getLstmLayers("decoder/hierarchical_level_0/cell_%d/lstm_cell/",ce),pe=new f(ce["decoder/hierarchical_level_0/initial_state/kernel"],ce["decoder/hierarchical_level_0/initial_state/bias"]);this.decoder=new G(we,Le,pe,this.dataConverter.numSegments)}else we.length===1?this.decoder=we[0]:this.decoder=new F(we);this.zDims=this.decoder.zDims,this.initialized=!0,r.logWithDuration("Initialized model",J,"MusicVAE")}isInitialized(){return this.initialized}checkControlArgs(J){const oe=(J=J||{}).extraControls||{};if(this.chordEncoder&&!J.chordProgression)throw new Error("Chord progression expected but not provided.");if(!this.chordEncoder&&J.chordProgression)throw new Error("Unexpected chord progression provided.");if(this.chordEncoder&&this.dataConverter.endTensor&&J.chordProgression.length>1)throw new Error("Multiple chords not supported when using variable-length segments.");if(this.spec.conditionOnKey&&J.key==null)throw new Error("Key expected but not provided.");if(!this.spec.conditionOnKey&&J.key!=null)throw new Error("Unexpected key provided.");if(this.spec.extraControls)for(const ge of this.spec.extraControls){if(!(ge.name in oe))throw new Error("Missing control signal: "+ge.name);if(oe[ge.name].shape[1]!==ge.depth)throw new Error(`Control signal ${ge.name} has invalid depth: ${oe[ge.name].shape[1]} != ${ge.depth}`)}const le=this.spec.extraControls?new Set(this.spec.extraControls.map(ge=>ge.name)):new Set;for(const ge in oe)le.has(ge)||r.log("Unspecified control signal provided: "+ge,"MusicVAE",5)}controlArgsToTensor(J){return J=J||{},s.tidy(()=>{const oe=[];if(J.chordProgression){const le=this.encodeChordProgression(J.chordProgression);oe.push(le)}if(J.key!=null){const le=s.oneHot(s.fill([this.dataConverter.numSteps],J.key,"int32"),12);oe.push(le)}if(J.extraControls)for(const le of this.spec.extraControls)oe.push(J.extraControls[le.name]);return oe.length?s.concat2d(oe,1):void 0})}async interpolateTensors(J,oe,le,ge){this.initialized||await this.initialize();const te=await this.encodeTensors(J,ge),ce=s.tidy(()=>this.getInterpolatedZs(te,oe));te.dispose();const ue=await this.decodeTensors(ce,le,ge);return ce.dispose(),ue}async interpolate(J,oe,le,ge){this.checkControlArgs(ge),this.initialized||await this.initialize();const te=await this.encode(J,ge),ce=s.tidy(()=>this.getInterpolatedZs(te,oe));te.dispose();const ue=this.decode(ce,le,ge);return ce.dispose(),ue.then(()=>r.logWithDuration("Interpolation completed",0,"MusicVAE",20)),ue}async getSegmentLengths(J){if(J.shape[0]>1)throw new Error("Variable-length segments not supported for batch size > 1.");const oe=this.dataConverter.numSteps,le=this.dataConverter.numSegments,ge=s.tidy(()=>s.min(s.equal(J.squeeze([0]),this.dataConverter.endTensor.expandDims(0)),1)),te=await ge.data();ge.dispose();const ce=oe/le,ue=[];let Te=0,Ce=te.indexOf(1);for(;Ce!==-1;)ue.push(Ce-Te+1),Te+=ce,Ce=te.indexOf(1,Te);if(ue.length!==le)throw new Error(`Incorrect number of segments: ${ue.length} != ${le}`);return ue}encodeChordProgression(J){const oe=this.dataConverter.numSteps,le=this.dataConverter.numSegments,ge=this.dataConverter.SEGMENTED_BY_TRACK?oe/le:oe,te=this.dataConverter.SEGMENTED_BY_TRACK?s.concat2d([this.chordEncoder.encode(l.NO_CHORD).expandDims(0),this.chordEncoder.encodeProgression(J,ge-1)],0):this.chordEncoder.encodeProgression(J,ge);return this.dataConverter.SEGMENTED_BY_TRACK?s.tile(te,[le,1]):te}async encodeTensors(J,oe){this.checkControlArgs(oe),this.initialized||await this.initialize();const le=this.dataConverter.endTensor?await this.getSegmentLengths(J):void 0;return s.tidy(()=>{const ge=this.controlArgsToTensor(oe),te=[J];if(ge){const ue=s.tile(s.expandDims(ge,0),[J.shape[0],1,1]);te.push(ue)}const ce=s.concat3d(te,2);return this.encoder.encode(ce,le)})}async encode(J,oe){this.initialized||await this.initialize();const le=o.d.now(),ge=s.tidy(()=>s.stack(J.map(ce=>this.dataConverter.toTensor(ce)))),te=await this.encodeTensors(ge,oe);return ge.dispose(),r.logWithDuration("Encoding completed",le,"MusicVAE",20),te}async decodeTensors(J,oe,le){return this.checkControlArgs(le),this.initialized||await this.initialize(),s.tidy(()=>{const ge=this.controlArgsToTensor(le);return this.decoder.decode(J,this.dataConverter.numSteps,void 0,oe,ge)})}async decode(J,oe,le,ge=l.DEFAULT_STEPS_PER_QUARTER,te=l.DEFAULT_QUARTERS_PER_MINUTE){this.initialized||await this.initialize();const ce=o.d.now(),ue=await this.decodeTensors(J,oe,le),Te=s.tidy(()=>s.split(ue,ue.shape[0]).map(Ne=>Ne.squeeze([0]))),Ce=[];for(const Ne of Te)Ce.push(await this.dataConverter.toNoteSequence(Ne,ge,te)),Ne.dispose();return ue.dispose(),r.logWithDuration("Decoding completed",ce,"MusicVAE",20),Ce}getInterpolatedZs(J,oe){if(typeof oe=="number"&&(oe=[oe]),J.shape[0]!==2&&J.shape[0]!==4)throw new Error("Invalid number of input sequences. Requires length 2, or 4");if(oe.length!==1&&oe.length!==2)throw new Error("Invalid number of dimensions. Requires length 1, or 2.");const le=oe[0],ge=oe.length===2?oe[1]:le;return s.tidy(()=>{const te=s.linspace(0,1,le),ce=J.slice([0,0],[1,J.shape[1]]).as1D(),ue=J.slice([1,0],[1,J.shape[1]]).as1D();if(J.shape[0]===2){const Te=ue.sub(ce);return s.outerProduct(te,Te).add(ce)}if(J.shape[0]===4){const Te=s.linspace(0,1,ge),Ce=J.slice([2,0],[1,J.shape[1]]).as1D(),Ne=J.slice([3,0],[1,J.shape[1]]).as1D(),Re=s.scalar(1).sub(te),Ae=s.scalar(1).sub(Te);let we=ce.mul(s.outerProduct(Ae,Re).as3D(ge,le,1));return we=s.addStrict(we,ue.mul(s.outerProduct(Te,Re).as3D(ge,le,1))),we=s.addStrict(we,Ce.mul(s.outerProduct(Ae,te).as3D(ge,le,1))),we=s.addStrict(we,Ne.mul(s.outerProduct(Te,te).as3D(ge,le,1))),we.as2D(le*ge,J.shape[1])}throw new Error("Invalid number of note sequences. Requires length 2, or 4")})}async sampleTensors(J,oe=.5,le){this.checkControlArgs(le),this.initialized||await this.initialize();const ge=s.tidy(()=>s.randomNormal([J,this.decoder.zDims])),te=await this.decodeTensors(ge,oe,le);return ge.dispose(),te}async sample(J,oe=.5,le,ge=l.DEFAULT_STEPS_PER_QUARTER,te=l.DEFAULT_QUARTERS_PER_MINUTE){this.checkControlArgs(le),this.initialized||await this.initialize();const ce=o.d.now(),ue=s.tidy(()=>s.randomNormal([J,this.decoder.zDims])),Te=this.decode(ue,oe,le,ge,te);return ue.dispose(),Te.then(()=>r.logWithDuration("Sampling completed",ce,"MusicVAE",20)),Te}async similarTensors(J,oe,le,ge,te){if(le<0||le>1)throw new Error("Similarity must be between 0 and 1.");this.initialized||await this.initialize();const ce=s.expandDims(J,0),ue=await this.encodeTensors(ce,te);ce.dispose();const Te=s.tidy(()=>{const Ne=s.randomNormal([oe,this.decoder.zDims]);return s.add(ue.mul(le),Ne.mul(1-le))});ue.dispose();const Ce=await this.decodeTensors(Te,ge,te);return Te.dispose(),Ce}async similar(J,oe,le,ge,te){if(this.checkControlArgs(te),le<0||le>1)throw new Error("Similarity must be between 0 and 1.");this.initialized||await this.initialize();const ce=await this.encode([J],te),ue=s.tidy(()=>{const Ce=s.randomNormal([oe,this.decoder.zDims]);return s.add(ce.mul(le),Ce.mul(1-le))});ce.dispose();const Te=this.decode(ue,ge,te);return ue.dispose(),Te.then(()=>r.logWithDuration("Similar sequence generation completed",0,"MusicVAE",20)),Te}}},function(n,e,t){t.r(e),t.d(e,"PianoGenie",function(){return g}),t.d(e,"PianoGenieKeysig",function(){return w}),t.d(e,"PianoGenieChord",function(){return x}),t.d(e,"PianoGenieKeysigChordFamily",function(){return N}),t.d(e,"PianoGenieKeysigChord",function(){return I});var s=t(2),r=t(15),o=t(73);function i(A){for(let T=0;T<2;++T)A.c[T].dispose(),A.h[T].dispose()}function c(A,T,P){if((T=T!==void 0?T:1)<0||T>1)throw new Error("Invalid temperature specified");let O;if(T===0)O=s.argMax(A,0);else{T<1&&(A=s.div(A,s.scalar(T,"float32")));const F=s.reshape(s.softmax(A,0),[1,-1]),G=s.multinomial(F,1,P,!0);O=s.reshape(G,[])}return O}class a extends class{constructor(T){this.checkpointURL=T,this.initialized=!1}isInitialized(){return this.initialized}async initialize(T){if(this.initialized&&this.dispose(),this.checkpointURL===void 0&&T===void 0)throw new Error("Need to specify either URI or static variables");if(T===void 0){const P=await Object(r.a)(this.checkpointURL+"/weights_manifest.json").then(O=>O.json()).then(O=>s.io.loadWeights(O,this.checkpointURL));this.modelVars=P}else this.modelVars=T;this.decLSTMCells=[],this.decForgetBias=s.scalar(1,"float32");for(let P=0;P<2;++P){const O=`phero_model/decoder/rnn/rnn/multi_rnn_cell/cell_${P}/lstm_cell/`;this.decLSTMCells.push((F,G,U)=>s.basicLSTMCell(this.decForgetBias,this.modelVars[O+"kernel"],this.modelVars[O+"bias"],F,G,U))}this.resetState(),this.initialized=!0,this.next(0),this.resetState()}getRnnInputFeats(){return s.tidy(()=>{const T=s.tensor1d([this.button],"float32");return s.sub(s.mul(2,s.div(T,7)),1).as1D()})}next(T,P,O){return this.nextWithCustomSamplingFunction(T,F=>c(F,P,O))}nextFromKeyList(T,P,O,F){return this.nextWithCustomSamplingFunction(T,G=>{const U=s.tensor1d(P,"int32");let Q=c(G=s.gather(G,U),O,F);const ne=s.gather(U,s.reshape(Q,[1]));return Q=s.reshape(ne,[]),Q})}nextFromKeyWhitelist(T,P,O,F){return o.logging.log("nextFromKeyWhitelist() is deprecated, and will be removed in a future          version. Please use nextFromKeyList() instead","PianoGenie",5),this.nextFromKeyList(T,P,O,F)}nextWithCustomSamplingFunction(T,P){const O=this.lastState;this.button=T;const F=this.getRnnInputFeats(),[G,U]=this.evaluateModelAndSample(F,O,P);return F.dispose(),i(this.lastState),this.lastState=G,U}evaluateModelAndSample(T,P,O){if(!this.initialized)throw new Error("Model is not initialized.");const[F,G]=s.tidy(()=>{let U=s.matMul(s.expandDims(T,0),this.modelVars["phero_model/decoder/rnn_input/dense/kernel"]);U=s.add(U,this.modelVars["phero_model/decoder/rnn_input/dense/bias"]);const[Q,ne]=s.multiRNNCell(this.decLSTMCells,U,P.c,P.h),J={c:Q,h:ne};let oe=s.matMul(ne[1],this.modelVars["phero_model/decoder/pitches/dense/kernel"]);oe=s.add(oe,this.modelVars["phero_model/decoder/pitches/dense/bias"]);const le=s.reshape(oe,[88]);return[J,O(le).dataSync()[0]]});return[F,G]}resetState(){this.lastState!==void 0&&i(this.lastState),this.lastState=function(){const T={c:[],h:[]};for(let P=0;P<2;++P)T.c.push(s.zeros([1,128],"float32")),T.h.push(s.zeros([1,128],"float32"));return T}()}dispose(){this.initialized&&(Object.keys(this.modelVars).forEach(T=>this.modelVars[T].dispose()),this.decForgetBias.dispose(),i(this.lastState),this.initialized=!1)}}{getRnnInputFeats(){return s.tidy(()=>{const T=[super.getRnnInputFeats()],P=this.lastOutput,O=this.lastTime,F=this.time;let G;this.deltaTimeOverride===void 0?G=(F.getTime()-O.getTime())/1e3:(G=this.deltaTimeOverride,this.deltaTimeOverride=void 0);const U=s.scalar(P,"int32"),Q=s.addStrict(U,s.scalar(1,"int32")),ne=s.cast(s.oneHot(Q,89),"float32");T.push(ne);const J=s.scalar(G,"float32"),oe=s.round(s.mul(J,31.25)),le=s.minimum(oe,32),ge=s.cast(s.add(le,1e-4),"int32"),te=s.oneHot(ge,33),ce=s.cast(te,"float32");return T.push(ce),this.lastTime=F,s.concat1d(T)})}nextWithCustomSamplingFunction(T,P){this.time=new Date;const O=super.nextWithCustomSamplingFunction(T,P);return this.lastOutput=O,this.lastTime=this.time,O}overrideLastOutput(T){this.lastOutput=T}overrideDeltaTime(T){this.deltaTimeOverride=T}resetState(){super.resetState(),this.lastOutput=-1,this.lastTime=new Date,this.lastTime.setSeconds(this.lastTime.getSeconds()-1e5),this.time=new Date}}var l,d;(function(A){A[A.None=0]="None",A[A.C=1]="C",A[A.Cs=2]="Cs",A[A.D=3]="D",A[A.Eb=4]="Eb",A[A.E=5]="E",A[A.F=6]="F",A[A.Fs=7]="Fs",A[A.G=8]="G",A[A.Ab=9]="Ab",A[A.A=10]="A",A[A.Bb=11]="Bb",A[A.B=12]="B"})(l||(l={})),function(A){A[A.None=0]="None",A[A.Maj=1]="Maj",A[A.Min=2]="Min",A[A.Aug=3]="Aug",A[A.Dim=4]="Dim",A[A.Seven=5]="Seven",A[A.Maj7=6]="Maj7",A[A.Min7=7]="Min7",A[A.Min7b5=8]="Min7b5"}(d||(d={}));class f extends a{getRnnInputFeats(){return s.tidy(()=>{const T=[super.getRnnInputFeats()],P=s.scalar(this.chordRoot,"int32"),O=s.subStrict(P,s.scalar(1,"int32")),F=s.cast(s.oneHot(O,12),"float32");T.push(F);const G=s.scalar(this.chordFamily,"int32"),U=s.subStrict(G,s.scalar(1,"int32")),Q=s.cast(s.oneHot(U,8),"float32");return T.push(Q),s.concat1d(T)})}setChordRoot(T){this.chordRoot=T}setChordFamily(T){this.chordFamily=T}resetState(){super.resetState(),this.chordRoot=l.None,this.chordFamily=d.None}}class y extends a{getRnnInputFeats(){return s.tidy(()=>{const T=[super.getRnnInputFeats()],P=s.scalar(this.keySignature,"int32"),O=s.subStrict(P,s.scalar(1,"int32")),F=s.cast(s.oneHot(O,12),"float32");return T.push(F),s.concat1d(T)})}setKeySignature(T){this.keySignature=T}resetState(){super.resetState(),this.keySignature=l.None}}class m extends y{getRnnInputFeats(){return s.tidy(()=>{const T=[super.getRnnInputFeats()],P=s.scalar(this.chordRoot,"int32"),O=s.subStrict(P,s.scalar(1,"int32")),F=s.cast(s.oneHot(O,12),"float32");T.push(F);const G=s.scalar(this.chordFamily,"int32"),U=s.subStrict(G,s.scalar(1,"int32")),Q=s.cast(s.oneHot(U,8),"float32");return T.push(Q),s.concat1d(T)})}setChordRoot(T){this.chordRoot=T}setChordFamily(T){this.chordFamily=T}resetState(){super.resetState(),this.chordRoot=l.None,this.chordFamily=d.None}}class h extends y{getRnnInputFeats(){return s.tidy(()=>{const T=[super.getRnnInputFeats()],P=s.scalar(this.chordFamily,"int32"),O=s.subStrict(P,s.scalar(1,"int32")),F=s.cast(s.oneHot(O,8),"float32");return T.push(F),s.concat1d(T)})}setChordFamily(T){this.chordFamily=T}resetState(){super.resetState(),this.chordFamily=d.None}}class g extends a{}class x extends f{}class w extends y{}class I extends m{}class N extends h{}},,function(n,e,t){t.r(e),t.d(e,"tf",function(){return s}),t.d(e,"aux_inputs",function(){return r.aux_inputs}),t.d(e,"chords",function(){return r.chords}),t.d(e,"constants",function(){return r.constants}),t.d(e,"data",function(){return r.data}),t.d(e,"logging",function(){return r.logging}),t.d(e,"melodies",function(){return r.melodies}),t.d(e,"performance",function(){return r.performance}),t.d(e,"sequences",function(){return r.sequences}),t.d(e,"MetronomeCallbackObject",function(){return r.MetronomeCallbackObject}),t.d(e,"Metronome",function(){return r.Metronome}),t.d(e,"MidiConversionError",function(){return r.MidiConversionError}),t.d(e,"midiToSequenceProto",function(){return r.midiToSequenceProto}),t.d(e,"sequenceProtoToMidi",function(){return r.sequenceProtoToMidi}),t.d(e,"urlToBlob",function(){return r.urlToBlob}),t.d(e,"blobToNoteSequence",function(){return r.blobToNoteSequence}),t.d(e,"urlToNoteSequence",function(){return r.urlToNoteSequence}),t.d(e,"BasePlayerCallback",function(){return r.BasePlayerCallback}),t.d(e,"BasePlayer",function(){return r.BasePlayer}),t.d(e,"Player",function(){return r.Player}),t.d(e,"SoundFontPlayer",function(){return r.SoundFontPlayer}),t.d(e,"PlayerWithClick",function(){return r.PlayerWithClick}),t.d(e,"MIDIPlayer",function(){return r.MIDIPlayer}),t.d(e,"BaseRecorderCallback",function(){return r.BaseRecorderCallback}),t.d(e,"Recorder",function(){return r.Recorder}),t.d(e,"BaseVisualizer",function(){return r.BaseVisualizer}),t.d(e,"PianoRollCanvasVisualizer",function(){return r.PianoRollCanvasVisualizer}),t.d(e,"Visualizer",function(){return r.Visualizer}),t.d(e,"BaseSVGVisualizer",function(){return r.BaseSVGVisualizer}),t.d(e,"PianoRollSVGVisualizer",function(){return r.PianoRollSVGVisualizer}),t.d(e,"WaterfallSVGVisualizer",function(){return r.WaterfallSVGVisualizer}),t.d(e,"ScrollType",function(){return r.ScrollType}),t.d(e,"StaffSVGVisualizer",function(){return r.StaffSVGVisualizer}),t.d(e,"Coconet",function(){return o.Coconet}),t.d(e,"MusicRNN",function(){return i.MusicRNN}),t.d(e,"MidiMe",function(){return c.MidiMe}),t.d(e,"Decoder",function(){return c.Decoder}),t.d(e,"Encoder",function(){return c.Encoder}),t.d(e,"MusicVAE",function(){return c.MusicVAE}),t.d(e,"PianoGenie",function(){return a.PianoGenie}),t.d(e,"PianoGenieKeysig",function(){return a.PianoGenieKeysig}),t.d(e,"PianoGenieChord",function(){return a.PianoGenieChord}),t.d(e,"PianoGenieKeysigChordFamily",function(){return a.PianoGenieKeysigChordFamily}),t.d(e,"PianoGenieKeysigChord",function(){return a.PianoGenieKeysigChord}),t.d(e,"NoteSequence",function(){return l.NoteSequence}),t.d(e,"OnsetsAndFrames",function(){return d.OnsetsAndFrames}),t.d(e,"GANSynth",function(){return f.GANSynth}),t.d(e,"SPICE",function(){return m}),t.d(e,"DDSP",function(){return h.DDSP});var s=t(2),r=t(73),o=t(185),i=t(186),c=t(187),a=t(188),l=t(181),d=t(184),f=t(183),y=t(25);class m{constructor(x){this.modelUrl=x||"https://tfhub.dev/google/tfjs-model/spice/2/default/1"}async initialize(){this.spiceModel=await Object(y.h)(this.modelUrl),this.initialized=!0}async getAudioFeatures(x,w){return await Object(y.g)(x,this.spiceModel,w)}dispose(){this.initialized&&(this.spiceModel.dispose(),this.initialized=!1)}isInitialized(){return this.initialized}}var h=t(182)}])})}(es6)),es6.exports}var es6Exports=requireEs6();const _hoisted_1={class:"options"},_hoisted_2={class:"card"},_hoisted_3=["disabled"],_sfc_main=defineComponent({__name:"App",setup(n){let e,t,s={handler:-1,timestamp:-1};const r=new es6Exports.Player,o=ref(),i=ref(""),c=ref(-1),a=()=>{r.isPlaying()?(Date.now()-s.timestamp>200&&(c.value++,i.value=" "+"\\|/-"[c.value%4],s.timestamp=Date.now()),s.handler=requestAnimationFrame(a)):(i.value="",cancelAnimationFrame(s.handler))},l=f=>{o.value=f},d=async()=>{if(r.isPlaying())r.stop();else{switch(o.value){case"twinkle":r.start(TWINKLE_TWINKLE);break;case"drums":r.start(DRUMS);break;case"rnn":const f=es6Exports.sequences.quantizeNoteSequence(TWINKLE_TWINKLE,4),y=await e.continueSequence(f,20,1.5);r.start(y);break;case"vae":const[m]=await t.sample(1,1.5);r.start(m);break}s.timestamp=Date.now(),a()}};return onMounted(()=>{e=new es6Exports.MusicRNN("https://storage.googleapis.com/magentadata/js/checkpoints/music_rnn/basic_rnn"),t=new es6Exports.MusicVAE("https://storage.googleapis.com/magentadata/js/checkpoints/music_vae/mel_4bar_small_q2"),e.initialize(),t.initialize()}),(f,y)=>(openBlock(),createElementBlock(Fragment,null,[y[8]||(y[8]=createBaseVNode("div",null,[createBaseVNode("a",{href:"https://vite.dev",target:"_blank"},[createBaseVNode("img",{src:_imports_0,class:"logo"})])],-1)),createBaseVNode("div",_hoisted_1,[createBaseVNode("label",null,[createBaseVNode("input",{type:"radio",name:"sequences",onChange:y[0]||(y[0]=m=>l("twinkle"))},null,32),y[4]||(y[4]=createTextVNode(" Twinkle Twinkle"))]),createBaseVNode("label",null,[createBaseVNode("input",{type:"radio",name:"sequences",onChange:y[1]||(y[1]=m=>l("drums"))},null,32),y[5]||(y[5]=createTextVNode(" Drums"))]),createBaseVNode("label",null,[createBaseVNode("input",{type:"radio",name:"sequences",onChange:y[2]||(y[2]=m=>l("rnn"))},null,32),y[6]||(y[6]=createTextVNode(" RNN"))]),createBaseVNode("label",null,[createBaseVNode("input",{type:"radio",name:"sequences",onChange:y[3]||(y[3]=m=>l("vae"))},null,32),y[7]||(y[7]=createTextVNode(" VAE"))])]),createBaseVNode("div",_hoisted_2,[createBaseVNode("button",{onClick:d,disabled:!o.value},toDisplayString(unref(r).isPlaying()?"Stop":"Play")+toDisplayString(i.value),9,_hoisted_3)])],64))}}),_export_sfc=(n,e)=>{const t=n.__vccOpts||n;for(const[s,r]of e)t[s]=r;return t},App=_export_sfc(_sfc_main,[["__scopeId","data-v-f9868159"]]);createApp(App).mount("#app");
